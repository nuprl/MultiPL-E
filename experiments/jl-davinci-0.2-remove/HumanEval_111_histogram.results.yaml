language: jl
name: HumanEval_111_histogram
results:
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if c in keys(hist)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpa1adbm6e.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpa1adbm6e.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpa1adbm6e.jl:23\ntest set: Error During Test at
    /tmp/tmpa1adbm6e.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict(\"a\"=>1,\"b\"=>1,\"c\"=>1,\"d\"=>1,\"e\"=>1,\"f\"=>1)\n\
    \    >>> histogram(\"a a b b c c d d e e f f\")\n    Dict(\"a\"=>2,\"b\"=>2,\"\
    c\"=>2,\"d\"=>2,\"e\"=>2,\"f\"=>2)\n    >>> histogram(\"a a b b c c d d e e f\
    \ f a a b b c c d d e e f f\")\n    Dict(\"a\"=>4,\"b\"=>4,\"c\"=>4,\"d\"=>4,\"\
    e\"=>4,\"f\"=>4)\n    \"\"\"\n    # your code here\n    return Dict(\"a\"=>1,\"\
    b\"=>1,\"c\"=>1,\"d\"=>1,\"e\"=>1,\"f\"=>1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.\nin expression starting at /tmp/tmpts143fzc.jl:22\n'''
  stdout: 'b''test set: Test Failed at /tmp/tmpts143fzc.jl:25\n  Expression: candidate("a
    b b a") == Dict("a" => 2, "b" => 2)\n   Evaluated: Dict("f" => 1, "c" => 1, "e"
    => 1, "b" => 1, "a" => 1, "d" => 1) == Dict("b" => 2, "a" => 2)\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpts143fzc.jl:25 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpts143fzc.jl:24\ntest set: Test Failed
    at /tmp/tmpts143fzc.jl:26\n  Expression: candidate("a b c a b") == Dict("a" =>
    2, "b" => 2)\n   Evaluated: Dict("f" => 1, "c" => 1, "e" => 1, "b" => 1, "a" =>
    1, "d" => 1) == Dict("b" => 2, "a" => 2)\nStacktrace:\n [1] macro expansion\n   @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n
    [2] macro expansion\n   @ /tmp/tmpts143fzc.jl:26 [inlined]\n [3] macro expansion\n   @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n
    [4] top-level scope\n   @ /tmp/tmpts143fzc.jl:24\ntest set: Test Failed at /tmp/tmpts143fzc.jl:27\n  Expression:
    candidate("a b c d g") == Dict("a" => 1, "b" => 1, "c" => 1, "d" => 1, "g" =>
    1)\n   Evaluated: Dict("f" => 1, "c" => 1, "e" => 1, "b" => 1, "a" => 1, "d" =>
    1) == Dict("g" => 1, "c" => 1, "b" => 1, "a" => 1, "d" => 1)\nStacktrace:\n [1]
    macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpts143fzc.jl:27 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpts143fzc.jl:24\ntest set: Test Failed
    at /tmp/tmpts143fzc.jl:28\n  Expression: candidate("r t g") == Dict("r" => 1,
    "t" => 1, "g" => 1)\n   Evaluated: Dict("f" => 1, "c" => 1, "e" => 1, "b" => 1,
    "a" => 1, "d" => 1) == Dict("g" => 1, "t" => 1, "r" => 1)\nStacktrace:\n [1] macro
    expansion\n '
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b c d e f\")\n    Dict{String, Int64} with 6\
    \ entries:\n      \"a\" => 2\n      \"b\" => 1\n      \"c\" => 1\n      \"d\"\
    \ => 1\n      \"e\" => 1\n      \"f\" => 1\n    >>> histogram(\"a a b c d e f\
    \ f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 2\n      \"b\"\
    \ => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 2\n\
    \    >>> histogram(\"a a b c d e f f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 2\n      \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n    \
    \  \"e\" => 1\n      \"f\" => 3\n    >>> histogram(\"a a b c d e f f f f\")\n\
    \    Dict{String, Int64} with 6 entries:\n      \"a\" => 2\n      \"b\" => 1\n\
    \      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 4\n    >>>\
    \ histogram(\"a a b c d e f f f f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 2\n      \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n    \
    \  \"e\" => 1\n      \"f\" => 5\n    >>> histogram(\"a a b c d e f f f f f f\"\
    )\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 2\n      \"b\" => 1\n\
    \      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 6\n    >>>\
    \ histogram\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq3eqhijp.jl:1\nin expression starting at /tmp/tmpq3eqhijp.jl:1\n"
  stdout: ''
  timestamp: 1659748920
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize a dictionary\n\
    \    hist = Dict{String, Int64}()\n    # Iterate over the string\n    for c in\
    \ test\n        # If the letter is not in the dictionary, add it\n        if !haskey(hist,\
    \ c)\n            hist[c] = 1\n        # Otherwise increment the count\n     \
    \   else\n            hist[c] += 1\n        end\n    end\n    # Return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp91pif_f0.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp91pif_f0.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp91pif_f0.jl:29 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp91pif_f0.jl:28\ntest set: Error During Test at
    /tmp/tmp91pif_f0.jl:30\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp91pif_f0.jl:15\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu7ca3sul.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpu7ca3sul.jl:15\ntest set: Error During Test at
    /tmp/tmpu7ca3sul.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = split(test)\n\
    \    counts = Dict{String, Int64}()\n    for letter in letters\n        if haskey(counts,\
    \ letter)\n            counts[letter] += 1\n        else\n            counts[letter]\
    \ = 1\n        end\n    end\n    return counts\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpngfevwja.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpngfevwja.jl:26\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngfevwja.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngfevwja.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpngfevwja.jl:29\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngfevwja.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngfevwja.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748922
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n      \"a\" => 1\n    >>>\
    \ histogram(\"a b c d e f a\")\n    Dict{String, Int64} with 2 entries:\n    \
    \  \"a\" => 2\n      \"b\" => 1\n    >>> histogram(\"a b c d e f a b\")\n    Dict{String,\
    \ Int64} with 3 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 1\n\
    \    >>> histogram(\"a b c d e f a b c\")\n    Dict{String, Int64} with 4 entries:\n\
    \      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n      \"d\" => 1\n    >>>\
    \ histogram(\"a b c d e f a b c d\")\n    Dict{String, Int64} with 5 entries:\n\
    \      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n      \"d\" => 2\n    \
    \  \"e\" => 1\n    >>> histogram(\"a b c d e f a b c d e\")\n    Dict{String,\
    \ Int64} with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n\
    \      \"d\" => 2\n      \"e\" => 2\n      \"f\" => 1\n    >>> histogram(\"a b\
    \ c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\"\
    \ => 2\n      \"b\" => 2\n      \"c\" => 2\n      \"d\" => 2\n      \"e\" => 2\n\
    \      \"f\" => 2\n    \"\"\"\n    # YOUR CODE HERE\n    #raise NotImplementedError()\n\
    \    d = Dict{String, Int64}()\n    for i in split(test)\n        if haskey(d,\
    \ i)\n            d[i] += 1\n        else\n            d[i] = 1\n        end\n\
    \    end\n    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq8f6042u.jl:66

    '
  stdout: "test set: Test Failed at /tmp/tmpq8f6042u.jl:70\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8f6042u.jl:70 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8f6042u.jl:68\ntest set: Test\
    \ Failed at /tmp/tmpq8f6042u.jl:73\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq8f6042u.jl:73 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq8f6042u.jl:68\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748922
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Split the string into\
    \ an array of characters\n    letters = split(test, \"\")\n    # Initialize an\
    \ empty dictionary\n    hist = Dict{String, Int64}()\n    # Loop through the array\
    \ of characters\n    for letter in letters\n        # If the letter is not in\
    \ the dictionary, add it\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # If the letter is already in the dictionary, increment the count\n\
    \        else\n            hist[letter] += 1\n        end\n    end\n    # Return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvxxteb5w.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpvxxteb5w.jl:31\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\" \" => 3, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvxxteb5w.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvxxteb5w.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvxxteb5w.jl:32\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \" \" => 4, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvxxteb5w.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvxxteb5w.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvxxteb5w.jl:33\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict(\"g\" => 1, \"c\" => 1, \" \" => 4, \"b\" => 1, \"a\" => 1, \"d\" => 1)\
    \ == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1, \"d\" => 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvxxteb5w.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvxxteb5w.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvxxteb5w.jl:34\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict(\"g\" => 1, \" \" => 2,\
    \ \"t\" => 1, \"r\" => 1) == Dict(\"g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ "
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if c in keys(hist)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpa1adbm6e.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpa1adbm6e.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpa1adbm6e.jl:23\ntest set: Error During Test at
    /tmp/tmpa1adbm6e.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize a dictionary\
    \ to store the letter and its count\n    hist = Dict{String, Int64}()\n    # Split\
    \ the string into a vector of characters\n    letters = split(test)\n    # Iterate\
    \ over the vector of characters\n    for letter in letters\n        # If the letter\
    \ is not in the dictionary, add it with a count of 1\n        if !haskey(hist,\
    \ letter)\n            hist[letter] = 1\n        # Otherwise, increment the count\n\
    \        else\n            hist[letter] += 1\n        end\n    end\n    # Return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpersv3k7x.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpersv3k7x.jl:32\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpersv3k7x.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpersv3k7x.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpersv3k7x.jl:35\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpersv3k7x.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpersv3k7x.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748922
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n     \"a\" => 1\n   \
    \  \"b\" => 1\n     \"c\" => 1\n     \"d\" => 1\n     \"e\" => 1\n     \"f\" =>\
    \ 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64} with\
    \ 6 entries:\n     \"a\" => 2\n     \"b\" => 2\n     \"c\" => 2\n     \"d\" =>\
    \ 2\n     \"e\" => 2\n     \"f\" => 2\n    >>> histogram(\"a b c d e f a b c d\
    \ e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n     \"a\" => 3\n\
    \     \"b\" => 3\n     \"c\" => 3\n     \"d\" => 3\n     \"e\" => 3\n     \"f\"\
    \ => 3\n    \"\"\"\n    # TODO: implement this function\n    return Dict{String,\
    \ Int64}()\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp48kcy67p.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmp48kcy67p.jl:43\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}()\
    \ == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp48kcy67p.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp48kcy67p.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp48kcy67p.jl:44\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp48kcy67p.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp48kcy67p.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp48kcy67p.jl:45\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict{String, Int64}() == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1,\
    \ \"d\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp48kcy67p.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp48kcy67p.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp48kcy67p.jl:46\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp48kcy67p.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/std"
  timestamp: 1659748922
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if c in keys(hist)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpa1adbm6e.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpa1adbm6e.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpa1adbm6e.jl:23\ntest set: Error During Test at
    /tmp/tmpa1adbm6e.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c d d e e f f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a a b b\
    \ c c d d e e f f a a b b c c d d e e f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 4\n      \"b\" => 4\n      \"c\" => 4\n      \"d\" => 4\n    \
    \  \"e\" => 4\n      \"f\" => 4\n    \"\"\"\n    # YOUR CODE HERE\n    raise NotImplementedError()\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpaxtg6p6l.jl:8 expected\
    \ \"end\", got \"NotImplementedError\"\nStacktrace:\n [1] top-level scope\n  \
    \ @ /tmp/tmpaxtg6p6l.jl:36\nin expression starting at /tmp/tmpaxtg6p6l.jl:36\n"
  stdout: ''
  timestamp: 1659748920
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n      \"a\" => 1\n    >>>\
    \ histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n\
    \      \"a\" => 2\n    >>> histogram(\"a b c d e f a b c d e f a b c d e f\")\n\
    \    Dict{String, Int64} with 1 entry:\n      \"a\" => 3\n    >>> histogram(\"\
    a b c d e f a b c d e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with\
    \ 1 entry:\n      \"a\" => 4\n    >>> histogram(\"a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n\
    \      \"a\" => 5\n    >>> histogram(\"a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n\
    \      \"a\" => 6\n    >>> histogram(\"a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with\
    \ 1 entry:\n      \"a\" => 7\n    >>> histogram(\"a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\")\n   \
    \ Dict{String, Int64} with 1 entry:\n      \"a\" => 8\n    >>> histogram(\"a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzz846cgj.jl:1\nin expression starting at /tmp/tmpzz846cgj.jl:1\n"
  stdout: ''
  timestamp: 1659748920
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    \"\"\"\n   \
    \ # Create a dictionary to store the letters and their counts\n    hist = Dict{String,\
    \ Int64}()\n    # Iterate through the string\n    for letter in test\n       \
    \ # If the letter is not in the dictionary, add it\n        if !haskey(hist, letter)\n\
    \            hist[letter] = 1\n        # If the letter is in the dictionary, increment\
    \ the count\n        else\n            hist[letter] += 1\n        end\n    end\n\
    \    # Create a dictionary to store the letters with the most repetition\n   \
    \ hist_max = Dict{String, Int64}()\n    # Find the maximum count\n    max_count\
    \ = maximum(values(hist))\n    # Iterate through the dictionary\n    for (key,\
    \ value) in hist\n        # If the value is equal to the maximum count, add it\
    \ to the dictionary\n        if value == max_count\n            hist_max[key]\
    \ = value\n        end\n    end\n    # Return the dictionary\n    return hist_max\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwwqlsg6p.jl:42\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwwqlsg6p.jl:17\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpwwqlsg6p.jl:42 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpwwqlsg6p.jl:41\n'''
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n     \"a\" => 1\n   \
    \  \"b\" => 1\n     \"c\" => 1\n     \"d\" => 1\n     \"e\" => 1\n     \"f\" =>\
    \ 1\n    >>> histogram(\"a a b b c c c\")\n    Dict{String, Int64} with 3 entries:\n\
    \     \"a\" => 2\n     \"b\" => 2\n     \"c\" => 3\n    >>> histogram(\"a a b\
    \ b c c c d d d d d\")\n    Dict{String, Int64} with 2 entries:\n     \"d\" =>\
    \ 5\n     \"c\" => 3\n    \"\"\"\n    # your code here\nend\n \nusing Test\n\n\
    @testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp_547o43p.jl:36\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type String to an object of type Dict{String, Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at
    /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmp_547o43p.jl:9\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp_547o43p.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp_547o43p.jl:35\ntest set: Error During Test at
    /tmp/tmp_547o43p.jl:37\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type String to an object of type Dict{String, Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmp_547o43p.jl:9\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp_547o43p.jl:37 [inlined]\n   [4] macro expansion\n     @
    /shared/ce'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code goes here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp7qjci6ze.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmp7qjci6ze.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp7qjci6ze.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp7qjci6ze.jl:15\ntest set: Error During Test at
    /tmp/tmp7qjci6ze.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmp7qjci6ze.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp7qjci6ze.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Create a dictionary to\
    \ store the letter and the count\n    hist = Dict{String, Int64}()\n    # Iterate\
    \ through the string and count the number of times each letter appears\n    for\
    \ letter in test\n        if letter in keys(hist)\n            hist[letter] +=\
    \ 1\n        else\n            hist[letter] = 1\n        end\n    end\n    # Find\
    \ the maximum count\n    max_count = maximum(values(hist))\n    # Create a dictionary\
    \ to store the letter with the maximum count\n    max_dict = Dict{String, Int64}()\n\
    \    # Iterate through the histogram and add the letter with the maximum count\
    \ to the dictionary\n    for (key, value) in hist\n        if value == max_count\n\
    \            max_dict[key] = value\n        end\n    end\n    return max_dict\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp7wnx5sm6.jl:36\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp7wnx5sm6.jl:16\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp7wnx5sm6.jl:36 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp7wnx5sm6.jl:35\n'''
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(letters, letter)\n            letters[letter]\
    \ += 1\n        else\n            letters[letter] = 1\n        end\n    end\n\
    \    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwut2xe9i.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpwut2xe9i.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpwut2xe9i.jl:23\ntest set: Error During Test at
    /tmp/tmpwut2xe9i.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n     \"a\" => 1\n   \
    \  \"b\" => 1\n     \"c\" => 1\n     \"d\" => 1\n     \"e\" => 1\n     \"f\" =>\
    \ 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64} with\
    \ 6 entries:\n     \"a\" => 2\n     \"b\" => 2\n     \"c\" => 2\n     \"d\" =>\
    \ 2\n     \"e\" => 2\n     \"f\" => 2\n    >>> histogram(\"a b c d e f a b c d\
    \ e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n     \"a\" => 3\n\
    \     \"b\" => 3\n     \"c\" => 3\n     \"d\" => 3\n     \"e\" => 3\n     \"f\"\
    \ => 3\n    \"\"\"\n    # your code here\nend\nusing Test\n\n@testset begin\n\n\
    candidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp0x_6bcgp.jl:42\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type String to an object of type Dict{String, Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at
    /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmp0x_6bcgp.jl:9\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp0x_6bcgp.jl:42 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp0x_6bcgp.jl:41\ntest set: Error During Test at
    /tmp/tmp0x_6bcgp.jl:43\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type String to an object of type Dict{String, Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmp0x_6bcgp.jl:9\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp0x_6bcgp.jl:43 [inlined]\n   [4] macro expansion\n     @
    /shared/ce'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(letters, letter)\n            letters[letter]\
    \ += 1\n        else\n            letters[letter] = 1\n        end\n    end\n\
    \    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwut2xe9i.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpwut2xe9i.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpwut2xe9i.jl:23\ntest set: Error During Test at
    /tmp/tmpwut2xe9i.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in split(test)\n        if haskey(letters, letter)\n         \
    \   letters[letter] += 1\n        else\n            letters[letter] = 1\n    \
    \    end\n    end\n    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjjlmka6w.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpjjlmka6w.jl:25\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlmka6w.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlmka6w.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjjlmka6w.jl:28\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlmka6w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlmka6w.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748924
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n      \"d\" => 3\n      \"\
    e\" => 3\n      \"f\" => 3\n    \"\"\"\n    # YOUR CODE HERE\n    #raise NotImplementedError()\n\
    \    #d = Dict{String, Int64}()\n    #for i in test\n    #    d[i] = get(d, i,\
    \ 0) + 1\n    #end\n    #return d\n    d = Dict{String, Int64}()\n    for i in\
    \ test\n        d[i] = get(d, i, 0) + 1\n    end\n    return d\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp_c93vj5c.jl:53\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp_c93vj5c.jl:44\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp_c93vj5c.jl:53 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp_c93vj5c.jl:52\ntest set: Error During Test at
    /tmp/tmp_c93vj5c.jl:54\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp_c93vj5c.jl:44\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748925
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"c\" => 1\n      \"b\" => 1\n      \"e\" => 1\n      \"d\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"c\" => 2\n      \"b\" => 2\n    \
    \  \"e\" => 2\n      \"d\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"c\" => 3\n      \"b\" => 3\n      \"e\" => 3\n      \"\
    d\" => 3\n      \"f\" => 3\n    \"\"\"\n    hist = Dict{String, Int64}()\n   \
    \ for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpx_f82669.jl:50\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpx_f82669.jl:40\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpx_f82669.jl:50 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpx_f82669.jl:49\ntest set: Error During Test at
    /tmp/tmpx_f82669.jl:51\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpx_f82669.jl:40\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748925
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Create a dictionary to\
    \ store the letters and their counts\n    hist = Dict{String, Int64}()\n    #\
    \ Loop through the letters in the string\n    for letter in test\n        # If\
    \ the letter is not in the dictionary, add it\n        if !haskey(hist, letter)\n\
    \            hist[letter] = 1\n        # If the letter is in the dictionary, increment\
    \ the count\n        else\n            hist[letter] += 1\n        end\n    end\n\
    \    # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu4crfjhk.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpu4crfjhk.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpu4crfjhk.jl:29 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpu4crfjhk.jl:28\ntest set: Error During Test at
    /tmp/tmpu4crfjhk.jl:30\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpu4crfjhk.jl:15\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748927
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n      \"d\" => 3\n      \"\
    e\" => 3\n      \"f\" => 3\n    \"\"\"\n    # YOUR CODE HERE\n    return Dict()\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp92rstu0b.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmp92rstu0b.jl:43\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}()\
    \ == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92rstu0b.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92rstu0b.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp92rstu0b.jl:44\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92rstu0b.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92rstu0b.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp92rstu0b.jl:45\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict{String, Int64}() == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1,\
    \ \"d\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92rstu0b.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92rstu0b.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp92rstu0b.jl:46\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92rstu0b.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/std"
  timestamp: 1659748926
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n      \"d\" => 3\n      \"\
    e\" => 3\n      \"f\" => 3\n    \"\"\"\n    # YOUR CODE HERE\n    raise NotImplementedError()\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmps6z8od4s.jl:8 expected\
    \ \"end\", got \"NotImplementedError\"\nStacktrace:\n [1] top-level scope\n  \
    \ @ /tmp/tmps6z8od4s.jl:36\nin expression starting at /tmp/tmps6z8od4s.jl:36\n"
  stdout: ''
  timestamp: 1659748925
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # create a dictionary to\
    \ store the letters and their count\n    hist = Dict{String, Int64}()\n    # iterate\
    \ over the string\n    for letter in test\n        # if the letter is not in the\
    \ dictionary, add it\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # if the letter is already in the dictionary, increment the count\n\
    \        else\n            hist[letter] += 1\n        end\n    end\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpxgxk6f4_.jl:28\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpxgxk6f4_.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpxgxk6f4_.jl:28 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpxgxk6f4_.jl:27\ntest set: Error During Test at
    /tmp/tmpxgxk6f4_.jl:29\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpxgxk6f4_.jl:15\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748927
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c d d e e f f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a a b b\
    \ c c d d e e f f a a b b c c d d e e f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 4\n      \"b\" => 4\n      \"c\" => 4\n      \"d\" => 4\n    \
    \  \"e\" => 4\n      \"f\" => 4\n    \"\"\"\n    # Your code here\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b\
    \ a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp4wk05t1n.jl:42\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type String to an object of type Dict{String, Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at
    /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmp4wk05t1n.jl:9\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp4wk05t1n.jl:42 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp4wk05t1n.jl:41\n'''
  timestamp: 1659748928
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n     \"a\" => 1\n   \
    \  \"b\" => 1\n     \"c\" => 1\n     \"d\" => 1\n     \"e\" => 1\n     \"f\" =>\
    \ 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64} with\
    \ 6 entries:\n     \"a\" => 2\n     \"b\" => 2\n     \"c\" => 2\n     \"d\" =>\
    \ 2\n     \"e\" => 2\n     \"f\" => 2\n    >>> histogram(\"a b c d e f a b c d\
    \ e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n     \"a\" => 3\n\
    \     \"b\" => 3\n     \"c\" => 3\n     \"d\" => 3\n     \"e\" => 3\n     \"f\"\
    \ => 3\n    \"\"\"\n    letters = Dict{String, Int64}()\n    for letter in split(test)\n\
    \        if haskey(letters, letter)\n            letters[letter] += 1\n      \
    \  else\n            letters[letter] = 1\n        end\n    end\n    return letters\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplm0y_8tq.jl:47

    '
  stdout: "test set: Test Failed at /tmp/tmplm0y_8tq.jl:51\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplm0y_8tq.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplm0y_8tq.jl:49\ntest set: Test\
    \ Failed at /tmp/tmplm0y_8tq.jl:54\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplm0y_8tq.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplm0y_8tq.jl:49\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748927
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu7ca3sul.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpu7ca3sul.jl:15\ntest set: Error During Test at
    /tmp/tmpu7ca3sul.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if c in keys(hist)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpa1adbm6e.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpa1adbm6e.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpa1adbm6e.jl:23\ntest set: Error During Test at
    /tmp/tmpa1adbm6e.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(letters)\n            letters[letter]\
    \ += 1\n        else\n            letters[letter] = 1\n        end\n    end\n\
    \    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8lml5lxr.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp8lml5lxr.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp8lml5lxr.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp8lml5lxr.jl:23\n'''
  timestamp: 1659748928
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c d d e e f f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a a b b\
    \ c c d d e e f f a a b b c c d d e e f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 4\n      \"b\" => 4\n      \"c\" => 4\n      \"d\" => 4\n    \
    \  \"e\" => 4\n      \"f\" => 4\n    \"\"\"\n    # YOUR CODE HERE\n    #raise\
    \ NotImplementedError()\n    test_split = split(test)\n    test_dict = Dict{String,\
    \ Int64}()\n    for i in test_split\n        test_dict[i] = get(test_dict, i,\
    \ 0) + 1\n    end\n    return test_dict\nend\nusing Test\n\n@testset begin\n\n\
    candidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquvxzebt.jl:46

    '
  stdout: "test set: Test Failed at /tmp/tmpquvxzebt.jl:50\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquvxzebt.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquvxzebt.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpquvxzebt.jl:53\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquvxzebt.jl:53 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquvxzebt.jl:48\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748927
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a a b b b c c c\")\n    Dict{String, Int64} with\
    \ 3 entries:\n      \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n    >>> histogram(\"\
    a a a b b b c c c d d d d\")\n    Dict{String, Int64} with 1 entry:\n      \"\
    d\" => 4\n    \"\"\"\n    # YOUR CODE HERE\n    #raise NotImplementedError()\n\
    \    hist = Dict()\n    for word in split(test)\n        if haskey(hist, word)\n\
    \            hist[word] += 1\n        else\n            hist[word] = 1\n     \
    \   end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpx0ek000f.jl:41

    '
  stdout: "test set: Test Failed at /tmp/tmpx0ek000f.jl:45\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx0ek000f.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx0ek000f.jl:43\ntest set: Test\
    \ Failed at /tmp/tmpx0ek000f.jl:48\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpx0ek000f.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpx0ek000f.jl:43\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748927
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = split(test)\n\
    \    hist = Dict{String, Int64}()\n    for letter in letters\n        if haskey(hist,\
    \ letter)\n            hist[letter] += 1\n        else\n            hist[letter]\
    \ = 1\n        end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4q_bc3xy.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmp4q_bc3xy.jl:26\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4q_bc3xy.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4q_bc3xy.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp4q_bc3xy.jl:29\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4q_bc3xy.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4q_bc3xy.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748927
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c d d e e f f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a a b b\
    \ c c d d e e f f a a b b c c d d e e f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 4\n      \"b\" => 4\n      \"c\" => 4\n      \"d\" => 4\n    \
    \  \"e\" => 4\n      \"f\" => 4\n    \"\"\"\n    # YOUR CODE HERE\n    #raise\
    \ NotImplementedError()\n    d = Dict{String, Int64}()\n    for i in split(test)\n\
    \        d[i] = get(d, i, 0) + 1\n    end\n    return d\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpl7ki4keb.jl:45

    '
  stdout: "test set: Test Failed at /tmp/tmpl7ki4keb.jl:49\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7ki4keb.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7ki4keb.jl:47\ntest set: Test\
    \ Failed at /tmp/tmpl7ki4keb.jl:52\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpl7ki4keb.jl:52 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpl7ki4keb.jl:47\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748927
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(letters, letter)\n            letters[letter]\
    \ += 1\n        else\n            letters[letter] = 1\n        end\n    end\n\
    \    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwut2xe9i.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpwut2xe9i.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpwut2xe9i.jl:23\ntest set: Error During Test at
    /tmp/tmpwut2xe9i.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b c d e f\")\n    Dict{String, Int64} with 6\
    \ entries:\n      \"a\" => 2\n      \"b\" => 1\n      \"c\" => 1\n      \"d\"\
    \ => 1\n      \"e\" => 1\n      \"f\" => 1\n    >>> histogram(\"a a b c d e f\
    \ f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 2\n      \"b\"\
    \ => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 2\n\
    \    >>> histogram(\"a a b c d e f f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 2\n      \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n    \
    \  \"e\" => 1\n      \"f\" => 3\n    >>> histogram(\"a a b c d e f f f f\")\n\
    \    Dict{String, Int64} with 6 entries:\n      \"a\" => 2\n      \"b\" => 1\n\
    \      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 4\n    >>>\
    \ histogram(\"a a b c d e f f f f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 2\n      \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n    \
    \  \"e\" => 1\n      \"f\" => 5\n    >>> histogram(\"a a b c d e f f f f f f\"\
    )\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 2\n      \"b\" => 1\n\
    \      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 6\n    >>>\
    \ histogram\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq3eqhijp.jl:1\nin expression starting at /tmp/tmpq3eqhijp.jl:1\n"
  stdout: ''
  timestamp: 1659748920
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # create a dictionary\n\
    \    hist = Dict{String, Int64}()\n    # iterate over the string\n    for letter\
    \ in test\n        # if the letter is not in the dictionary, add it\n        if\
    \ !haskey(hist, letter)\n            hist[letter] = 1\n        # otherwise, increment\
    \ the count\n        else\n            hist[letter] += 1\n        end\n    end\n\
    \    # return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpg2tx9b8r.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpg2tx9b8r.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpg2tx9b8r.jl:29 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpg2tx9b8r.jl:28\n'''
  timestamp: 1659748928
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize a dictionary\
    \ to store the result\n    hist = Dict{String, Int64}()\n    # Split the string\
    \ into an array of characters\n    for c in split(test)\n        # If the character\
    \ is already in the dictionary, increment the count\n        if haskey(hist, c)\n\
    \            hist[c] += 1\n        # Otherwise, initialize the count to 1\n  \
    \      else\n            hist[c] = 1\n        end\n    end\n    # Find the maximum\
    \ count\n    max_count = maximum(values(hist))\n    # Return a dictionary of the\
    \ letters with the maximum count\n    return filter(x -> x[2] == max_count, hist)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpak35mfz0.jl:37\n  Test threw
    exception\n  Expression: candidate("") == Dict()\n  ArgumentError: reducing over
    an empty collection is not allowed\n  Stacktrace:\n    [1] _empty_reduce_error()\n      @
    Base ./reduce.jl:301\n    [2] reduce_empty(op::Function, #unused#::Type{Int64})\n      @
    Base ./reduce.jl:311\n    [3] reduce_empty(op::Base.BottomRF{typeof(max)}, #unused#::Type{Int64})\n      @
    Base ./reduce.jl:330\n    [4] reduce_empty_iter\n      @ ./reduce.jl:357 [inlined]\n    [5]
    reduce_empty_iter\n      @ ./reduce.jl:356 [inlined]\n    [6] foldl_impl\n      @
    ./reduce.jl:49 [inlined]\n    [7] mapfoldl_impl\n      @ ./reduce.jl:44 [inlined]\n    [8]
    #mapfoldl#244\n      @ ./reduce.jl:162 [inlined]\n    [9] mapfoldl\n      @ ./reduce.jl:162
    [inlined]\n   [10] #mapreduce#248\n      @ ./reduce.jl:289 [inlined]\n   [11]
    mapreduce\n      @ ./reduce.jl:289 [inlined]\n   [12] #maximum#258\n      @ ./reduce.jl:737
    [inlined]\n   [13] maximum\n      @ ./reduce.jl:737 [inlined]\n   [14] histogram(test::String)\n      @
    Main /tmp/tmpak35mfz0.jl:22\n   [15] macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [16] macro expansion\n      @ /tmp/tmpak35mfz0.jl:37 [inlined]\n   [17]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [18] top-level scope\n      @ /tmp/tmpak35mfz0.jl:30\nTest Summary:
    | Pass  Error  Total\ntest set      |    7      1      8\n'''
  timestamp: 1659748928
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # initialize a dictionary\n\
    \    hist = Dict{String, Int64}()\n    # loop through the string\n    for letter\
    \ in test\n        # if the letter is already in the dictionary, increment the\
    \ count\n        if letter in keys(hist)\n            hist[letter] += 1\n    \
    \    # otherwise, add the letter to the dictionary with a count of 1\n       \
    \ else\n            hist[letter] = 1\n        end\n    end\n    # return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpsxzru19t.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpsxzru19t.jl:18\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpsxzru19t.jl:29 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpsxzru19t.jl:28\ntest set: Error During Test at
    /tmp/tmpsxzru19t.jl:30\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpsxzru19t.jl:18\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748928
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for letter\
    \ in test\n        if haskey(hist, letter)\n            hist[letter] += 1\n  \
    \      else\n            hist[letter] = 1\n        end\n    end\n    return hist\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp02cmz2nh.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmp02cmz2nh.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmp02cmz2nh.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmp02cmz2nh.jl:23\n'''
  timestamp: 1659748928
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if c in keys(hist)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpa1adbm6e.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpa1adbm6e.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpa1adbm6e.jl:23\ntest set: Error During Test at
    /tmp/tmpa1adbm6e.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpa1adbm6e.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(letters)\n            letters[letter]\
    \ += 1\n        else\n            letters[letter] = 1\n        end\n    end\n\
    \    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8lml5lxr.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp8lml5lxr.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp8lml5lxr.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp8lml5lxr.jl:23\n'''
  timestamp: 1659748928
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    \"\"\"\n   \
    \ hist = Dict{String, Int64}()\n    for letter in test\n        if letter in keys(hist)\n\
    \            hist[letter] += 1\n        else\n            hist[letter] = 1\n \
    \       end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp1dvs8fds.jl:26\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp1dvs8fds.jl:16\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp1dvs8fds.jl:26 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp1dvs8fds.jl:25\n'''
  timestamp: 1659748928
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n      \"d\" => 3\n      \"\
    e\" => 3\n      \"f\" => 3\n    \"\"\"\n    # YOUR CODE HERE\n    return Dict()\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp92rstu0b.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmp92rstu0b.jl:43\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}()\
    \ == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92rstu0b.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92rstu0b.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp92rstu0b.jl:44\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92rstu0b.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92rstu0b.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp92rstu0b.jl:45\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict{String, Int64}() == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1,\
    \ \"d\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92rstu0b.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp92rstu0b.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp92rstu0b.jl:46\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp92rstu0b.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/std"
  timestamp: 1659748926
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for i in test\n        if haskey(hist, i)\n            hist[i] += 1\n   \
    \     else\n            hist[i] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjnomskat.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpjnomskat.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpjnomskat.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpjnomskat.jl:23\n'''
  timestamp: 1659748928
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(letters, letter)\n            letters[letter]\
    \ += 1\n        else\n            letters[letter] = 1\n        end\n    end\n\
    \    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwut2xe9i.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpwut2xe9i.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpwut2xe9i.jl:23\ntest set: Error During Test at
    /tmp/tmpwut2xe9i.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # initialize the dictionary\n\
    \    hist = Dict{String, Int64}()\n    # loop through the string\n    for letter\
    \ in test\n        # if the letter is not in the dictionary, add it\n        if\
    \ !(letter in keys(hist))\n            hist[letter] = 1\n        # if the letter\
    \ is in the dictionary, increment the count\n        else\n            hist[letter]\
    \ += 1\n        end\n    end\n    # return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprg7v_chg.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmprg7v_chg.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmprg7v_chg.jl:29 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmprg7v_chg.jl:28\ntest set: Error During Test at
    /tmp/tmprg7v_chg.jl:30\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmprg7v_chg.jl:15\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748928
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize a dictionary\n\
    \    hist = Dict{String, Int64}()\n    # Loop over the letters in the string\n\
    \    for letter in test\n        # If the letter is not in the dictionary, add\
    \ it with a count of 1\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # If the letter is already in the dictionary, increment the count\n\
    \        else\n            hist[letter] += 1\n        end\n    end\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp_tpligb5.jl:28\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp_tpligb5.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp_tpligb5.jl:28 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp_tpligb5.jl:27\ntest set: Error During Test at
    /tmp/tmp_tpligb5.jl:29\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp_tpligb5.jl:15\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748928
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, string(c))\n            hist[string(c)]\
    \ += 1\n        else\n            hist[string(c)] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2ddlsv4u.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp2ddlsv4u.jl:24\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\" \" => 3, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ddlsv4u.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ddlsv4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2ddlsv4u.jl:25\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \" \" => 4, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ddlsv4u.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ddlsv4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2ddlsv4u.jl:26\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict(\"g\" => 1, \"c\" => 1, \" \" => 4, \"b\" => 1, \"a\" => 1, \"d\" => 1)\
    \ == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1, \"d\" => 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ddlsv4u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ddlsv4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2ddlsv4u.jl:27\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict(\"g\" => 1, \" \" => 2,\
    \ \"t\" => 1, \"r\" => 1) == Dict(\"g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ "
  timestamp: 1659748927
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 0 entries\n    >>> histogram(\"a\
    \ b c d e f a b c d e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with\
    \ 1 entry:\n      \"a\" => 4\n    >>> histogram(\"a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\nusing Test\n\n\
    @testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppe07ymvk.jl:1\nin expression starting at /tmp/tmppe07ymvk.jl:1\n"
  stdout: ''
  timestamp: 1659748927
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n      \"a\" => 1\n    >>>\
    \ histogram(\"a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\")\n\
    \    Dict{String, Int64} with 1 entry:\n      \"a\" => 5\n    >>> histogram(\"\
    a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\nusing Test\n\n\
    @testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpec7z0b_a.jl:1\nin expression starting at /tmp/tmpec7z0b_a.jl:1\n"
  stdout: ''
  timestamp: 1659748927
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"d\" => 1\n  \
    \    \"b\" => 1\n      \"a\" => 1\n      \"c\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c c\")\n    Dict{String, Int64} with 3\
    \ entries:\n      \"c\" => 3\n      \"a\" => 2\n      \"b\" => 2\n    >>> histogram(\"\
    a a b b c c c d d d d d\")\n    Dict{String, Int64} with 2 entries:\n      \"\
    d\" => 5\n      \"c\" => 3\n    \"\"\"\n    # your code here\nend\n \nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpguc2d48q.jl:36\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type String to an object of type Dict{String, Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at
    /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpguc2d48q.jl:9\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpguc2d48q.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpguc2d48q.jl:35\ntest set: Error During Test at
    /tmp/tmpguc2d48q.jl:37\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type String to an object of type Dict{String, Int64}\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpguc2d48q.jl:9\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpguc2d48q.jl:37 [inlined]\n   [4] macro expansion\n     @
    /shared/ce'
  timestamp: 1659748930
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, string(c))\n            hist[string(c)]\
    \ += 1\n        else\n            hist[string(c)] = 1\n        end\n    end\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2ddlsv4u.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp2ddlsv4u.jl:24\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\" \" => 3, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ddlsv4u.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ddlsv4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2ddlsv4u.jl:25\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \" \" => 4, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ddlsv4u.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ddlsv4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2ddlsv4u.jl:26\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict(\"g\" => 1, \"c\" => 1, \" \" => 4, \"b\" => 1, \"a\" => 1, \"d\" => 1)\
    \ == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1, \"d\" => 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ddlsv4u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ddlsv4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2ddlsv4u.jl:27\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict(\"g\" => 1, \" \" => 2,\
    \ \"t\" => 1, \"r\" => 1) == Dict(\"g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ "
  timestamp: 1659748927
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in split(test)\n        if haskey(letters, letter)\n         \
    \   letters[letter] += 1\n        else\n            letters[letter] = 1\n    \
    \    end\n    end\n    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjjlmka6w.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpjjlmka6w.jl:25\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlmka6w.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlmka6w.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjjlmka6w.jl:28\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlmka6w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlmka6w.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748924
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n      \"d\" => 3\n      \"\
    e\" => 3\n      \"f\" => 3\n    \"\"\"\n    # Split the string into a list of\
    \ words\n    words = split(test)\n    # Create a dictionary with default values\
    \ of 0\n    d = Dict{String, Int64}()\n    for word in words\n        # Increment\
    \ the count for each word\n        d[word] = get(d, word, 0) + 1\n    end\n  \
    \  return d\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwl4qwywi.jl:47

    '
  stdout: "test set: Test Failed at /tmp/tmpwl4qwywi.jl:51\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl4qwywi.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl4qwywi.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpwl4qwywi.jl:54\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwl4qwywi.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwl4qwywi.jl:49\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748930
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize a dictionary\n\
    \    hist = Dict{String, Int64}()\n    # Iterate over the string\n    for letter\
    \ in test\n        # Check if the letter is already in the dictionary\n      \
    \  if haskey(hist, letter)\n            # If yes, increment the count\n      \
    \      hist[letter] += 1\n        else\n            # If not, add it to the dictionary\n\
    \            hist[letter] = 1\n        end\n    end\n    # Return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp1wqgp1s4.jl:30\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp1wqgp1s4.jl:19\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp1wqgp1s4.jl:30 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp1wqgp1s4.jl:29\n'''
  timestamp: 1659748932
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c c\")\n    Dict{String, Int64} with 3\
    \ entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 3\n    >>> histogram(\"\
    a a b b c c c d d d d d\")\n    Dict{String, Int64} with 2 entries:\n      \"\
    d\" => 5\n      \"c\" => 3\n    \"\"\"\n    # YOUR CODE HERE\n    raise NotImplementedError()\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp3r8eda92.jl:8 expected\
    \ \"end\", got \"NotImplementedError\"\nStacktrace:\n [1] top-level scope\n  \
    \ @ /tmp/tmp3r8eda92.jl:29\nin expression starting at /tmp/tmp3r8eda92.jl:29\n"
  stdout: ''
  timestamp: 1659748929
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # create a dictionary to\
    \ store the letter and its count\n    hist = Dict{String, Int64}()\n    # split\
    \ the string into a vector of letters\n    letters = split(test)\n    # iterate\
    \ over the vector of letters\n    for letter in letters\n        # if the letter\
    \ is not in the dictionary, add it with a count of 1\n        if !haskey(hist,\
    \ letter)\n            hist[letter] = 1\n        # otherwise, increment the count\n\
    \        else\n            hist[letter] += 1\n        end\n    end\n    # return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoav7_jcq.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpoav7_jcq.jl:32\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoav7_jcq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoav7_jcq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpoav7_jcq.jl:35\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoav7_jcq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoav7_jcq.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748931
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Create a dictionary to\
    \ store the letters and their count\n    hist = Dict{String, Int64}()\n    # Loop\
    \ over the string\n    for letter in test\n        # If the letter is not in the\
    \ dictionary, add it\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # If the letter is already in the dictionary, increment its count\n\
    \        else\n            hist[letter] += 1\n        end\n    end\n    # Return\
    \ the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpscjhmhi4.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpscjhmhi4.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpscjhmhi4.jl:29 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpscjhmhi4.jl:28\ntest set: Error During Test at
    /tmp/tmpscjhmhi4.jl:30\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpscjhmhi4.jl:15\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748932
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize dictionary\n\
    \    hist = Dict()\n    # Iterate over each character in the string\n    for c\
    \ in test\n        # If the character is not in the dictionary, add it\n     \
    \   if !haskey(hist, c)\n            hist[c] = 1\n        # Otherwise, increment\
    \ the value\n        else\n            hist[c] += 1\n        end\n    end\n  \
    \  # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpv4jypyqs.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpv4jypyqs.jl:22\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpv4jypyqs.jl:29 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpv4jypyqs.jl:28\n'''
  timestamp: 1659748932
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"\
    a\" => 6\n      \"b\" => 6\n      \"c\" => 6\n      \"d\" => 6\n      \"e\" =>\
    \ 6\n      \"f\" => 6\n    >>> histogram(\"a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj6r3njuj.jl:1\nin expression starting at /tmp/tmpj6r3njuj.jl:1\n"
  stdout: ''
  timestamp: 1659748930
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    histo = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(histo, c)\n            histo[c] += 1\n \
    \       else\n            histo[c] = 1\n        end\n    end\n    return histo\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmptt03ouex.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmptt03ouex.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmptt03ouex.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmptt03ouex.jl:23\n'''
  timestamp: 1659748932
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n      \"d\" => 3\n      \"\
    e\" => 3\n      \"f\" => 3\n    \"\"\"\n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmppdvvz8gz.jl:42\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type String to an object of type Dict{String, Int64}\n  Closest
    candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at
    /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmppdvvz8gz.jl:9\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmppdvvz8gz.jl:42 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmppdvvz8gz.jl:41\n'''
  timestamp: 1659748932
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    d = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(d, c)\n            d[c] += 1\n        else\n\
    \            d[c] = 1\n        end\n    end\n    return d\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpsf_jrz0r.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpsf_jrz0r.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpsf_jrz0r.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpsf_jrz0r.jl:23\ntest set: Error During Test at
    /tmp/tmpsf_jrz0r.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpsf_jrz0r.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748932
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in split(test, \" \")\n        if haskey(hist, letter)\n     \
    \       hist[letter] += 1\n        else\n            hist[letter] = 1\n      \
    \  end\n    end\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpezy6zg7o.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpezy6zg7o.jl:25\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpezy6zg7o.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpezy6zg7o.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpezy6zg7o.jl:28\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpezy6zg7o.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpezy6zg7o.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpezy6zg7o.jl:30\n  Expression: candidate(\"\") == Dict()\n\
    \   Evaluated: Dict(\"\" => 1) == Dict{Any, Any}()\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpezy6zg7o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpezy6zg7o.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659748932
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu7ca3sul.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpu7ca3sul.jl:15\ntest set: Error During Test at
    /tmp/tmpu7ca3sul.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize a dictionary\n\
    \    hist = Dict{String, Int64}()\n    # Iterate over the string\n    for letter\
    \ in test\n        # If the letter is not in the dictionary, add it with a count\
    \ of 1\n        if !haskey(hist, letter)\n            hist[letter] = 1\n     \
    \   # If the letter is already in the dictionary, increment the count\n      \
    \  else\n            hist[letter] += 1\n        end\n    end\n    # Get the maximum\
    \ count\n    max_count = maximum(values(hist))\n    # Initialize a dictionary\
    \ to store the letters with the maximum count\n    max_letters = Dict{String,\
    \ Int64}()\n    # Iterate over the dictionary\n    for (letter, count) in hist\n\
    \        # If the count is equal to the maximum count, add the letter to the dictionary\n\
    \        if count == max_count\n            max_letters[letter] = count\n    \
    \    end\n    end\n    # Return the dictionary\n    return max_letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpduq10jb_.jl:40\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpduq10jb_.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpduq10jb_.jl:40 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpduq10jb_.jl:39\n'''
  timestamp: 1659748932
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c c\")\n    Dict{String, Int64} with 3\
    \ entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 3\n    >>> histogram(\"\
    a a b b c c c d d d d d\")\n    Dict{String, Int64} with 2 entries:\n      \"\
    d\" => 5\n      \"c\" => 3\n    \"\"\"\n    # YOUR CODE HERE\n    #raise NotImplementedError()\n\
    \    d = Dict{String, Int64}()\n    for i in test\n        if i in keys(d)\n \
    \           d[i] += 1\n        else\n            d[i] = 1\n        end\n    end\n\
    \    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpo3tll0lm.jl:45\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpo3tll0lm.jl:35\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpo3tll0lm.jl:45 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpo3tll0lm.jl:44\n'''
  timestamp: 1659748933
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"c\" => 1\n      \"b\" => 1\n      \"e\" => 1\n      \"d\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c c\")\n    Dict{String, Int64} with 3\
    \ entries:\n      \"a\" => 2\n      \"c\" => 3\n      \"b\" => 2\n    >>> histogram(\"\
    a a b b c c c d d d d d\")\n    Dict{String, Int64} with 2 entries:\n      \"\
    d\" => 5\n      \"c\" => 3\n    \"\"\"\n    hist = Dict{String, Int64}()\n   \
    \ for word in split(test)\n        if haskey(hist, word)\n            hist[word]\
    \ += 1\n        else\n            hist[word] = 1\n        end\n    end\n    return\
    \ hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprnxtz8bv.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmprnxtz8bv.jl:44\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprnxtz8bv.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprnxtz8bv.jl:42\ntest set: Test\
    \ Failed at /tmp/tmprnxtz8bv.jl:47\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprnxtz8bv.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprnxtz8bv.jl:42\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748932
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n      \"a\" => 1\n    >>>\
    \ histogram(\"a b c d e f a\")\n    Dict{String, Int64} with 2 entries:\n    \
    \  \"a\" => 2\n      \"b\" => 1\n    >>> histogram(\"a b c d e f a a\")\n    Dict{String,\
    \ Int64} with 2 entries:\n      \"a\" => 3\n      \"b\" => 1\n    >>> histogram(\"\
    a b c d e f a a a\")\n    Dict{String, Int64} with 1 entry:\n      \"a\" => 4\n\
    \    \"\"\"\n    # YOUR CODE HERE\n    #raise NotImplementedError()\n    #return\
    \ Dict{String, Int64}()\n    #return Dict{String, Int64}(\"a\" => 1)\n    #return\
    \ Dict{String, Int64}(\"a\" => 2, \"b\" => 1)\n    #return Dict{String, Int64}(\"\
    a\" => 3, \"b\" => 1)\n    #return Dict{String, Int64}(\"a\" => 4)\n    #return\
    \ Dict{String, Int64}(\"a\" => 4, \"b\" => 1)\n    #return Dict{String, Int64}(\"\
    a\" => 4, \"b\" => 1, \"c\" => 1)\n    #return Dict{String, Int64}(\"a\" => 4,\
    \ \"b\" => 1, \"c\" => 1, \"d\" => 1)\n    #return Dict{String, Int64}(\"a\" =>\
    \ 4, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"e\" => 1)\n    #return Dict{String,\
    \ Int64}(\"a\" => 4, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"e\" => 1, \"f\" =>\
    \ 1)\n    #return Dict{String, Int64}(\"a\" => 4, \"b\" => 1, \"c\" => 1, \"d\"\
    \ => 1, \"e\" => 1, \"f\" => 1, \"g\" => 1)\n    #\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvf6x5bi4.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvf6x5bi4.jl:1\n\
    in expression starting at /tmp/tmpvf6x5bi4.jl:1\n"
  stdout: ''
  timestamp: 1659748930
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Split the string into\
    \ a vector of characters\n    letters = split(test, \"\")\n    # Create a dictionary\
    \ of the letters and their counts\n    hist = Dict{String, Int64}()\n    for letter\
    \ in letters\n        if haskey(hist, letter)\n            hist[letter] += 1\n\
    \        else\n            hist[letter] = 1\n        end\n    end\n    # Find\
    \ the maximum count\n    max_count = maximum(values(hist))\n    # Return the letters\
    \ with the maximum count\n    return filter(x -> x[2] == max_count, hist)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuafa_nb4.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpuafa_nb4.jl:30\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\" \" => 3) ==\
    \ Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuafa_nb4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuafa_nb4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuafa_nb4.jl:31\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\" \" => 4) == Dict(\"b\" =>\
    \ 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuafa_nb4.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuafa_nb4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuafa_nb4.jl:32\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict(\" \" => 4) == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1, \"\
    d\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuafa_nb4.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuafa_nb4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuafa_nb4.jl:33\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict(\" \" => 2) == Dict(\"g\"\
    \ => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuafa_nb4.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:12"
  timestamp: 1659748933
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = split(test)\n\
    \    counts = Dict{String, Int64}()\n    for letter in letters\n        if haskey(counts,\
    \ letter)\n            counts[letter] += 1\n        else\n            counts[letter]\
    \ = 1\n        end\n    end\n    return counts\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpngfevwja.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpngfevwja.jl:26\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngfevwja.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngfevwja.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpngfevwja.jl:29\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngfevwja.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngfevwja.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748922
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 0 entries\n    >>> histogram(\"a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\")\n \
    \   Dict{String, Int64} with 1 entry:\n      \"a\" => 6\n    >>> histogram(\"\
    a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\
    \ f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a\
    \ b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c\
    \ d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljqd3u57.jl:1\nin expression starting at /tmp/tmpljqd3u57.jl:1\n"
  stdout: ''
  timestamp: 1659748930
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu7ca3sul.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpu7ca3sul.jl:15\ntest set: Error During Test at
    /tmp/tmpu7ca3sul.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize the dictionary\n\
    \    hist = Dict{String, Int64}()\n    \n    # Iterate through the string\n  \
    \  for letter in test\n        # If the letter is not in the dictionary, add it\n\
    \        if !haskey(hist, letter)\n            hist[letter] = 1\n        # If\
    \ the letter is in the dictionary, increment the count\n        else\n       \
    \     hist[letter] += 1\n        end\n    end\n    \n    # Return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmph0i7t9wu.jl:31\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmph0i7t9wu.jl:16\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmph0i7t9wu.jl:31 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmph0i7t9wu.jl:30\n'''
  timestamp: 1659748933
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in split(test)\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp33_vr6lu.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp33_vr6lu.jl:25\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33_vr6lu.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33_vr6lu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp33_vr6lu.jl:28\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp33_vr6lu.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp33_vr6lu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748932
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in split(test)\n        if haskey(letters, letter)\n         \
    \   letters[letter] += 1\n        else\n            letters[letter] = 1\n    \
    \    end\n    end\n    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjjlmka6w.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpjjlmka6w.jl:25\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlmka6w.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlmka6w.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjjlmka6w.jl:28\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlmka6w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlmka6w.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748924
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c d d e e f f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a a b b\
    \ c c d d e e f f a a b b c c d d e e f f\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 4\n      \"b\" => 4\n      \"c\" => 4\n      \"d\" => 4\n    \
    \  \"e\" => 4\n      \"f\" => 4\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ Dict{String, Int64}()\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2gh7ekrc.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmp2gh7ekrc.jl:43\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}()\
    \ == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gh7ekrc.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gh7ekrc.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp2gh7ekrc.jl:44\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gh7ekrc.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gh7ekrc.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp2gh7ekrc.jl:45\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict{String, Int64}() == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1,\
    \ \"d\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gh7ekrc.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gh7ekrc.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp2gh7ekrc.jl:46\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gh7ekrc.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/std"
  timestamp: 1659748933
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(hist, letter)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpj2yo_zt5.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpj2yo_zt5.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpj2yo_zt5.jl:23\ntest set: Error During Test at
    /tmp/tmpj2yo_zt5.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpj2yo_zt5.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # initialize the dictionary\n\
    \    hist = Dict{String, Int64}()\n    # loop through the string\n    for letter\
    \ in test\n        # if the letter is already in the dictionary, increment the\
    \ count\n        if letter in keys(hist)\n            hist[letter] += 1\n    \
    \    # otherwise, add the letter to the dictionary with a count of 1\n       \
    \ else\n            hist[letter] = 1\n        end\n    end\n    # return the dictionary\n\
    \    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpx1cqy1x1.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpx1cqy1x1.jl:18\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpx1cqy1x1.jl:29 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpx1cqy1x1.jl:28\ntest set: Error During Test at
    /tmp/tmpx1cqy1x1.jl:30\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpx1cqy1x1.jl:18\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748933
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Create a dictionary to\
    \ store the letters and their corresponding counts\n    hist = Dict{String, Int64}()\n\
    \    # Iterate over the string\n    for letter in test\n        # If the letter\
    \ is not in the dictionary, add it with a count of 1\n        if !haskey(hist,\
    \ letter)\n            hist[letter] = 1\n        # If the letter is already in\
    \ the dictionary, increment the count\n        else\n            hist[letter]\
    \ += 1\n        end\n    end\n    # Find the maximum count\n    max_count = maximum(values(hist))\n\
    \    # Create a dictionary to store the letters with the maximum count\n    max_letters\
    \ = Dict{String, Int64}()\n    # Iterate over the histogram dictionary\n    for\
    \ (letter, count) in hist\n        # If the count is equal to the maximum count,\
    \ add the letter to the max_letters dictionary\n        if count == max_count\n\
    \            max_letters[letter] = count\n        end\n    end\n    # Return the\
    \ max_letters dictionary\n    return max_letters\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprqjb3iq1.jl:40\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmprqjb3iq1.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmprqjb3iq1.jl:40 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmprqjb3iq1.jl:39\ntest set: Error During Test at
    /tmp/tmprqjb3iq1.jl:41\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmprqjb3iq1.jl:15\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748933
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    d = Dict{String, Int64}()\n\
    \    for c in test\n        d[c] = get(d, c, 0) + 1\n    end\n    return d\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp2z1oubxh.jl:20\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp2z1oubxh.jl:11\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp2z1oubxh.jl:20 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp2z1oubxh.jl:19\ntest set: Error During Test at
    /tmp/tmp2z1oubxh.jl:21\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp2z1oubxh.jl:11\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748935
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a a b b c c c\")\n    Dict{String, Int64} with 3\
    \ entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 3\n    >>> histogram(\"\
    a a b b c c c d d d d d\")\n    Dict{String, Int64} with 2 entries:\n      \"\
    d\" => 5\n      \"c\" => 3\n    \"\"\"\n    # split the string into a list of\
    \ words\n    words = split(test)\n    # create a dictionary\n    d = Dict{String,\
    \ Int64}()\n    # loop through the list of words\n    for word in words\n    \
    \    # if the word is not in the dictionary, add it with a count of 1\n      \
    \  if !haskey(d, word)\n            d[word] = 1\n        # if the word is in the\
    \ dictionary, increment the count\n        else\n            d[word] += 1\n  \
    \      end\n    end\n    # return the dictionary\n    return d\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpk6yqswwx.jl:47

    '
  stdout: "test set: Test Failed at /tmp/tmpk6yqswwx.jl:51\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk6yqswwx.jl:51 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk6yqswwx.jl:49\ntest set: Test\
    \ Failed at /tmp/tmpk6yqswwx.jl:54\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpk6yqswwx.jl:54 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpk6yqswwx.jl:49\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748934
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize the dictionary\n\
    \    hist = Dict{String, Int64}()\n    \n    # Iterate over the string\n    for\
    \ letter in test\n        # Check if the letter is already in the dictionary\n\
    \        if haskey(hist, letter)\n            # If so, increment the count\n \
    \           hist[letter] += 1\n        else\n            # If not, add the letter\
    \ to the dictionary and set the count to 1\n            hist[letter] = 1\n   \
    \     end\n    end\n    \n    # Return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp972mbxpq.jl:32\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp972mbxpq.jl:20\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp972mbxpq.jl:32 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp972mbxpq.jl:31\ntest set: Error During Test at
    /tmp/tmp972mbxpq.jl:33\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp972mbxpq.jl:20\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748935
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Create a dictionary to\
    \ store the letter and its count\n    hist = Dict{String, Int64}()\n    # Iterate\
    \ through the string\n    for letter in test\n        # If the letter is not in\
    \ the dictionary, add it\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # Otherwise, increment the count\n        else\n            hist[letter]\
    \ += 1\n        end\n    end\n    # Return the dictionary\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8oe366oo.jl:29\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp8oe366oo.jl:15\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp8oe366oo.jl:29 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp8oe366oo.jl:28\ntest set: Error During Test at
    /tmp/tmp8oe366oo.jl:30\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp8oe366oo.jl:15\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748936
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = split(test)\n\
    \    counts = Dict{String, Int64}()\n    for letter in letters\n        if haskey(counts,\
    \ letter)\n            counts[letter] += 1\n        else\n            counts[letter]\
    \ = 1\n        end\n    end\n    return counts\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpngfevwja.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpngfevwja.jl:26\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngfevwja.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngfevwja.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpngfevwja.jl:29\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpngfevwja.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpngfevwja.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748922
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(letters)\n            letters[letter]\
    \ += 1\n        else\n            letters[letter] = 1\n        end\n    end\n\
    \    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8lml5lxr.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp8lml5lxr.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp8lml5lxr.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp8lml5lxr.jl:23\n'''
  timestamp: 1659748928
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize the dictionary\n\
    \    hist = Dict{String, Int64}()\n    \n    # Iterate over the string\n    for\
    \ letter in test\n        # Check if the letter is already in the dictionary\n\
    \        if letter in keys(hist)\n            # If it is, increment the count\n\
    \            hist[letter] += 1\n        else\n            # If it is not, initialize\
    \ the count to 1\n            hist[letter] = 1\n        end\n    end\n    \n \
    \   # Return the dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp7evel8de.jl:32\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp7evel8de.jl:20\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmp7evel8de.jl:32 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmp7evel8de.jl:31\ntest set: Error During Test at
    /tmp/tmp7evel8de.jl:33\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmp7evel8de.jl:20\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748936
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in split(test, \" \")\n        if haskey(letters, letter)\n  \
    \          letters[letter] += 1\n        else\n            letters[letter] = 1\n\
    \        end\n    end\n    return letters\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"\
    d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t\
    @test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    \") == Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp25kkebcn.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmp25kkebcn.jl:25\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25kkebcn.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25kkebcn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp25kkebcn.jl:28\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25kkebcn.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25kkebcn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp25kkebcn.jl:30\n  Expression: candidate(\"\") == Dict()\n\
    \   Evaluated: Dict(\"\" => 1) == Dict{Any, Any}()\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp25kkebcn.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp25kkebcn.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     3      8\n"
  timestamp: 1659748934
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n      \"d\" => 3\n      \"\
    e\" => 3\n      \"f\" => 3\n    \"\"\"\n    # your code here\n    return Dict{String,\
    \ Int64}()\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp58t29jai.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmp58t29jai.jl:43\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}()\
    \ == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58t29jai.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58t29jai.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp58t29jai.jl:44\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58t29jai.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58t29jai.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp58t29jai.jl:45\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict{String, Int64}() == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1,\
    \ \"d\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58t29jai.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp58t29jai.jl:42\ntest set: Test\
    \ Failed at /tmp/tmp58t29jai.jl:46\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict{String, Int64}() == Dict(\"\
    g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp58t29jai.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/std"
  timestamp: 1659748935
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a b c d e f\")\n    Dict{String, Int64}\
    \ with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n    \
    \  \"d\" => 2\n      \"e\" => 2\n      \"f\" => 2\n    >>> histogram(\"a b c d\
    \ e f a b c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n  \
    \    \"a\" => 3\n      \"b\" => 3\n      \"c\" => 3\n      \"d\" => 3\n      \"\
    e\" => 3\n      \"f\" => 3\n    \"\"\"\n    # YOUR CODE HERE\n    #raise NotImplementedError()\n\
    \    d = Dict{String, Int64}()\n    for c in test\n        if haskey(d, c)\n \
    \           d[c] += 1\n        else\n            d[c] = 1\n        end\n    end\n\
    \    return d\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0u5xaz6y.jl:49

    '
  stdout: "test set: Error During Test at /tmp/tmp0u5xaz6y.jl:52\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] histogram(test::String)\n     @ Main /tmp/tmp0u5xaz6y.jl:42\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0u5xaz6y.jl:52 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0u5xaz6y.jl:51\ntest set:\
    \ Error During Test at /tmp/tmp0u5xaz6y.jl:53\n  Test threw exception\n  Expression:\
    \ candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] histogram(test::String)\n     @ Main /tmp/tmp0u5xaz6y.jl:42\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  timestamp: 1659748936
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # create a dictionary to\
    \ store the letter and its count\n    hist = Dict{String, Int64}()\n    # iterate\
    \ through the string\n    for letter in test\n        # if the letter is not in\
    \ the dictionary, add it\n        if !haskey(hist, letter)\n            hist[letter]\
    \ = 1\n        # if the letter is in the dictionary, increment the count\n   \
    \     else\n            hist[letter] += 1\n        end\n    end\n    # find the\
    \ maximum count\n    max_count = maximum(values(hist))\n    # create a dictionary\
    \ to store the letter with the most repetition\n    max_hist = Dict{String, Int64}()\n\
    \    # iterate through the dictionary\n    for (key, value) in hist\n        #\
    \ if the count is equal to the maximum count, add it to the dictionary\n     \
    \   if value == max_count\n            max_hist[key] = value\n        end\n  \
    \  end\n    # return the dictionary\n    return max_hist\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp43rcc51y.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmp43rcc51y.jl:40\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] histogram(test::String)\n     @ Main /tmp/tmp43rcc51y.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp43rcc51y.jl:40 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp43rcc51y.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp43rcc51y.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] histogram(test::String)\n     @ Main /tmp/tmp43rcc51y.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  timestamp: 1659748937
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in test\n        if haskey(letters, letter)\n            letters[letter]\
    \ += 1\n        else\n            letters[letter] = 1\n        end\n    end\n\
    \    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\
    \t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpwut2xe9i.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpwut2xe9i.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpwut2xe9i.jl:23\ntest set: Error During Test at
    /tmp/tmpwut2xe9i.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpwut2xe9i.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Initialize a dictionary\n\
    \    hist = Dict{String, Int64}()\n    # Iterate over the string\n    for letter\
    \ in test\n        # If the letter is not in the dictionary, add it with a count\
    \ of 1\n        if !haskey(hist, letter)\n            hist[letter] = 1\n     \
    \   # If the letter is already in the dictionary, increment its count\n      \
    \  else\n            hist[letter] += 1\n        end\n    end\n    # Return the\
    \ dictionary\n    return hist\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpj2ka1gct.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpj2ka1gct.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] histogram(test::String)\n     @ Main /tmp/tmpj2ka1gct.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj2ka1gct.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj2ka1gct.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpj2ka1gct.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] histogram(test::String)\n     @ Main /tmp/tmpj2ka1gct.jl:15\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/T"
  timestamp: 1659748937
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphsp98pf9.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphsp98pf9.jl:15\ntest set: Error During Test at
    /tmp/tmphsp98pf9.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmphsp98pf9.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphsp98pf9.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n      \"a\" => 1\n    >>>\
    \ histogram(\"a b c d e f a\")\n    Dict{String, Int64} with 2 entries:\n    \
    \  \"a\" => 2\n      \"b\" => 1\n    >>> histogram(\"a b c d e f a b\")\n    Dict{String,\
    \ Int64} with 3 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 1\n\
    \    >>> histogram(\"a b c d e f a b c\")\n    Dict{String, Int64} with 4 entries:\n\
    \      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n      \"d\" => 1\n    >>>\
    \ histogram(\"a b c d e f a b c d\")\n    Dict{String, Int64} with 5 entries:\n\
    \      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n      \"d\" => 2\n    \
    \  \"e\" => 1\n    >>> histogram(\"a b c d e f a b c d e\")\n    Dict{String,\
    \ Int64} with 6 entries:\n      \"a\" => 2\n      \"b\" => 2\n      \"c\" => 2\n\
    \      \"d\" => 2\n      \"e\" => 2\n      \"f\" => 1\n    >>> histogram(\"a b\
    \ c d e f a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\"\
    \ => 2\n      \"b\" => 2\n      \"c\" => 2\n      \"d\" => 2\n      \"e\" => 2\n\
    \      \"f\" => 2\n    \"\"\"\n    # your code here\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"\
    b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"\
    c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\"\
    \ => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\") == Dict(\"\
    b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\"\
    \ => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"a\") == Dict(\"\
    a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpvnqbyga6.jl:56

    '
  stdout: "test set: Error During Test at /tmp/tmpvnqbyga6.jl:59\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Dict{String,\
    \ Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where\
    \ T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n\
    \    convert(::Type{T}, !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n\
    \    convert(::Type{T}, !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \    ...\n  Stacktrace:\n   [1] histogram(test::String)\n     @ Main /tmp/tmpvnqbyga6.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvnqbyga6.jl:59 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvnqbyga6.jl:58\ntest set:\
    \ Error During Test at /tmp/tmpvnqbyga6.jl:60\n  Test threw exception\n  Expression:\
    \ candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot\
    \ `convert` an object of type String to an object of type Dict{String, Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},\
    \ !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n\
    \    convert(::Type{T}, !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n\
    \    ...\n  Stacktrace:\n   [1] histogram(test::String)\n     @ Main /tmp/tmpvnqbyga6.jl:9\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvnqbyga6.jl:60 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1"
  timestamp: 1659748937
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 1\n  \
    \    \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"\
    f\" => 1\n    >>> histogram(\"a b c d e f a\")\n    Dict{String, Int64} with 6\
    \ entries:\n      \"a\" => 2\n      \"b\" => 1\n      \"c\" => 1\n      \"d\"\
    \ => 1\n      \"e\" => 1\n      \"f\" => 1\n    >>> histogram(\"a b c d e f a\
    \ a\")\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 3\n      \"b\"\
    \ => 1\n      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 1\n\
    \    >>> histogram(\"a b c d e f a a a\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 4\n      \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n    \
    \  \"e\" => 1\n      \"f\" => 1\n    >>> histogram(\"a b c d e f a a a a\")\n\
    \    Dict{String, Int64} with 6 entries:\n      \"a\" => 5\n      \"b\" => 1\n\
    \      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 1\n    >>>\
    \ histogram(\"a b c d e f a a a a a\")\n    Dict{String, Int64} with 6 entries:\n\
    \      \"a\" => 6\n      \"b\" => 1\n      \"c\" => 1\n      \"d\" => 1\n    \
    \  \"e\" => 1\n      \"f\" => 1\n    >>> histogram(\"a b c d e f a a a a a a\"\
    )\n    Dict{String, Int64} with 6 entries:\n      \"a\" => 7\n      \"b\" => 1\n\
    \      \"c\" => 1\n      \"d\" => 1\n      \"e\" => 1\n      \"f\" => 1\n    >>>\
    \ histogram\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_snxd379.jl:1\nin expression starting at /tmp/tmp_snxd379.jl:1\n"
  stdout: ''
  timestamp: 1659748934
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for letter\
    \ in test\n        if letter in keys(hist)\n            hist[letter] += 1\n  \
    \      else\n            hist[letter] = 1\n        end\n    end\n    return hist\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpw7qevu5h.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpw7qevu5h.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] Dict{String, Int64}(kv::Dict{Any, Any})\n \
    \    @ Base ./dict.jl:104\n   [3] convert\n     @ ./abstractdict.jl:528 [inlined]\n\
    \   [4] histogram(test::String)\n     @ Main /tmp/tmpw7qevu5h.jl:17\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw7qevu5h.jl:24 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw7qevu5h.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpw7qevu5h.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] Dict{String, In"
  timestamp: 1659748937
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    \"\"\"\n    >>> histogram(\"\
    a b c d e f\")\n    Dict{String, Int64} with 1 entry:\n      \"a\" => 1\n    >>>\
    \ histogram(\"a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b\
    \ c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d\
    \ e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f a b c d e f\
    \ a b c d e f a b c d e f a b c d e f a\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt2f_hlc4.jl:1\nin expression starting at /tmp/tmpt2f_hlc4.jl:1\n"
  stdout: ''
  timestamp: 1659748934
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu7ca3sul.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpu7ca3sul.jl:15\ntest set: Error During Test at
    /tmp/tmpu7ca3sul.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu7ca3sul.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpu7ca3sul.jl:15\ntest set: Error During Test at
    /tmp/tmpu7ca3sul.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for letter in test\n        if letter in keys(hist)\n            hist[letter]\
    \ += 1\n        else\n            hist[letter] = 1\n        end\n    end\n   \
    \ return hist\nend\nusing Test\n\n@testset begin\n\ncandidate = histogram;\n\t\
    @test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\"\
    ) == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpm8tkaq6g.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpm8tkaq6g.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpm8tkaq6g.jl:23\ntest set: Error During Test at
    /tmp/tmpm8tkaq6g.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpm8tkaq6g.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Create a dictionary to\
    \ store the letters and their counts\n    hist = Dict()\n    # Iterate through\
    \ the string\n    for letter in test\n        # If the letter is already in the\
    \ dictionary, add 1 to its count\n        if letter in keys(hist)\n          \
    \  hist[letter] += 1\n        # If the letter is not in the dictionary, add it\
    \ with a count of 1\n        else\n            hist[letter] = 1\n        end\n\
    \    end\n    # Find the maximum count\n    max_count = maximum(values(hist))\n\
    \    # Create a dictionary to store the letters with the maximum count\n    max_letters\
    \ = Dict()\n    # Iterate through the histogram\n    for (letter, count) in hist\n\
    \        # If the count is equal to the maximum count, add the letter to the dictionary\n\
    \        if count == max_count\n            max_letters[letter] = count\n    \
    \    end\n    end\n    # Return the dictionary\n    return max_letters\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmp3gtru26k.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmp3gtru26k.jl:40\n  Test threw exception\n\
    \  Expression: candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError:\
    \ Cannot `convert` an object of type Char to an object of type String\n  Closest\
    \ candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] Dict{String, Int64}(kv::Dict{Any, Any})\n \
    \    @ Base ./dict.jl:104\n   [3] convert\n     @ ./abstractdict.jl:528 [inlined]\n\
    \   [4] histogram(test::String)\n     @ Main /tmp/tmp3gtru26k.jl:33\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3gtru26k.jl:40 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3gtru26k.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp3gtru26k.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n  MethodError: Cannot\
    \ `convert` an object of type Char to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n\
    \     @ Base ./dict.jl:373\n   [2] Dict{String, In"
  timestamp: 1659748937
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpu7ca3sul.jl:16\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type typeof(>) to an object of type Dict{String,
    Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:16 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpu7ca3sul.jl:15\ntest set: Error During Test at
    /tmp/tmpu7ca3sul.jl:17\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type typeof(>) to an object of type Dict{String, Int64}\n  Closest candidates
    are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:525\n    convert(::Type{T},
    !Matched::AbstractDict) where T<:AbstractDict at /shared/centos7/julia/1.7.3/share/julia/base/abstractdict.jl:527\n    convert(::Type{T},
    !Matched::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:218\n    ...\n  Stacktrace:\n   [1]
    histogram(test::String)\n     @ Main /tmp/tmpu7ca3sul.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpu7ca3sul.jl:17 [inlined]\n   [4] macro expansion\n     @
    /sha'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    # initialize dictionary\n\
    \    hist = Dict{String, Int64}()\n    # split string into array of characters\n\
    \    chars = split(test, \"\")\n    # loop through each character\n    for char\
    \ in chars\n        # if character is in dictionary, increment count\n       \
    \ if char in keys(hist)\n            hist[char] += 1\n        # if character is\
    \ not in dictionary, add it with count of 1\n        else\n            hist[char]\
    \ = 1\n        end\n    end\n    # return dictionary\n    return hist\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b\
    \ a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"\
    a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmkkc_xdx.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpmkkc_xdx.jl:31\n  Expression: candidate(\"\
    a b b a\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\" \" => 3, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkkc_xdx.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkkc_xdx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpmkkc_xdx.jl:32\n  Expression: candidate(\"a b c a b\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \" \" => 4, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkkc_xdx.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkkc_xdx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpmkkc_xdx.jl:33\n  Expression: candidate(\"a b c d g\") ==\
    \ Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)\n   Evaluated:\
    \ Dict(\"g\" => 1, \"c\" => 1, \" \" => 4, \"b\" => 1, \"a\" => 1, \"d\" => 1)\
    \ == Dict(\"g\" => 1, \"c\" => 1, \"b\" => 1, \"a\" => 1, \"d\" => 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmkkc_xdx.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmkkc_xdx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpmkkc_xdx.jl:34\n  Expression: candidate(\"r t g\") == Dict(\"\
    r\" => 1, \"t\" => 1, \"g\" => 1)\n   Evaluated: Dict(\"g\" => 1, \" \" => 2,\
    \ \"t\" => 1, \"r\" => 1) == Dict(\"g\" => 1, \"t\" => 1, \"r\" => 1)\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ "
  timestamp: 1659748936
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: 1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    letters = Dict{String, Int64}()\n\
    \    for letter in split(test)\n        if haskey(letters, letter)\n         \
    \   letters[letter] += 1\n        else\n            letters[letter] = 1\n    \
    \    end\n    end\n    return letters\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = histogram;\n\t@test(candidate(\"a b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\
    \t@test(candidate(\"a b c a b\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"\
    a b c d g\") == Dict(\"a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" =>\
    \ 1))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\
    \t@test(candidate(\"b b b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t\
    \ g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") ==\
    \ Dict())\n\t@test(candidate(\"a\") == Dict(\"a\" => 1))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjjlmka6w.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpjjlmka6w.jl:25\n  Expression: candidate(\"\
    a b c a b\") == Dict(\"a\" => 2, \"b\" => 2)\n   Evaluated: Dict(\"c\" => 1, \"\
    b\" => 2, \"a\" => 2) == Dict(\"b\" => 2, \"a\" => 2)\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlmka6w.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlmka6w.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjjlmka6w.jl:28\n  Expression: candidate(\"b b b b a\") ==\
    \ Dict(\"b\" => 4)\n   Evaluated: Dict(\"b\" => 4, \"a\" => 1) == Dict(\"b\" =>\
    \ 4)\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlmka6w.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlmka6w.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     2      8\n"
  timestamp: 1659748924
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict()\n    for c\
    \ in test\n        if haskey(hist, c)\n            hist[c] += 1\n        else\n\
    \            hist[c] = 1\n        end\n    end\n    return hist\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a b b a\") ==\
    \ Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\") == Dict(\"a\"\
    \ => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"r t g\") ==\
    \ Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b b b a\")\
    \ == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" => 1, \"t\"\
    \ => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpz1gpso7q.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    Dict{String, Int64}(kv::Dict{Any, Any})\n     @ Base ./dict.jl:104\n   [3] convert\n     @
    ./abstractdict.jl:528 [inlined]\n   [4] histogram(test::String)\n     @ Main /tmp/tmpz1gpso7q.jl:17\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1gpso7q.jl:24 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1gpso7q.jl:23\ntest set: Error
    During Test at /tmp/tmpz1gpso7q.jl:25\n  Test threw exception\n  Expression: candidate("a
    b c a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object
    of type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Ba'
  timestamp: 1659748923
- exit_code: -1
  program: "\"\"\"Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n    of the letter with the most repetition and containing\
    \ the corresponding count.\n    If several letters have the same occurrence, return\
    \ all of them.\n    \n    Example:\n                    \n    \"\"\"\nfunction\
    \ histogram(test::String)::Dict{String, Int64}> \n    hist = Dict{String, Int64}()\n\
    \    for c in test\n        if haskey(hist, c)\n            hist[c] += 1\n   \
    \     else\n            hist[c] = 1\n        end\n    end\n    return hist\nend\n\
    using Test\n\n@testset begin\n\ncandidate = histogram;\n\t@test(candidate(\"a\
    \ b b a\") == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c a b\")\
    \ == Dict(\"a\" => 2, \"b\" => 2))\n\t@test(candidate(\"a b c d g\") == Dict(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1))\n\t@test(candidate(\"\
    r t g\") == Dict(\"r\" => 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"b b\
    \ b b a\") == Dict(\"b\" => 4))\n\t@test(candidate(\"r t g\") == Dict(\"r\" =>\
    \ 1, \"t\" => 1, \"g\" => 1))\n\t@test(candidate(\"\") == Dict())\n\t@test(candidate(\"\
    a\") == Dict(\"a\" => 1))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmpswrj9y.jl:24\n  Test threw
    exception\n  Expression: candidate("a b b a") == Dict("a" => 2, "b" => 2)\n  MethodError:
    Cannot `convert` an object of type Char to an object of type String\n  Closest
    candidates are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmpswrj9y.jl:24 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmpswrj9y.jl:23\ntest set: Error During Test at
    /tmp/tmpmpswrj9y.jl:25\n  Test threw exception\n  Expression: candidate("a b c
    a b") == Dict("a" => 2, "b" => 2)\n  MethodError: Cannot `convert` an object of
    type Char to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    setindex!(h::Dict{String, Int64}, v0::Int64, key0::Char)\n     @ Base ./dict.jl:373\n   [2]
    histogram(test::String)\n     @ Main /tmp/tmpmpswrj9y.jl:14\n   [3] macro expansion\n     @
    /shared/centos'
  timestamp: 1659748923

language: jl
name: HumanEval_44_change_base
results:
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    result = \"\"\n    while x > 0\n   \
    \     result = string(x % base) * result\n        x = x \xF7 base\n    end\n \
    \   return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    res = \"\"\
    \n    while x > 0\n        res = digits[x % base + 1] * res\n        x = x \xF7\
    \ base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        return \"Base must be less than 10\"\n    end\n   \
    \ if x < 0\n        return \"Number must be positive\"\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        throw(ArgumentError(\"base must be between\
    \ 2 and 10\"))\n    end\n    if x == 0\n        return \"0\"\n    end\n    if\
    \ x < 0\n        return \"-\" * change_base(-x, base)\n    end\n    result = \"\
    \"\n    while x > 0\n        result = string(x % base) * result\n        x = x\
    \ \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    res = \"\"\n    while x > 0\n        res = string(x\
    \ % base) * res\n        x = x \xF7 base\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    q, r = divrem(x,\
    \ base)\n    return change_base(q, base) * digits[r+1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 12 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpt656vt_4.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpt656vt_4.jl:24\n  Expression: candidate(8,\
    \ 3) == \"22\"\n   Evaluated: \"022\" == \"22\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt656vt_4.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt656vt_4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpt656vt_4.jl:25\n  Expression: candidate(9, 3) == \"100\"\n\
    \   Evaluated: \"0100\" == \"100\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt656vt_4.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt656vt_4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpt656vt_4.jl:26\n  Expression: candidate(234, 2) == \"11101010\"\
    \n   Evaluated: \"011101010\" == \"11101010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt656vt_4.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt656vt_4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpt656vt_4.jl:27\n  Expression: candidate(16, 2) == \"10000\"\
    \n   Evaluated: \"010000\" == \"10000\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpt656vt_4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpt656vt_4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpt656vt_4.jl:28\n  Expression: candidate(8, 2) == \"1000\"\n\
    \   Evaluated: \"01000\" == \"1000\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdli"
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base is less than 10\")\n    end\n    if x\
    \ == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    result = \"\"\n    while x > 0\n        result = string(x\
    \ % base) * result\n        x = x \xF7 base\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    x = abs(x)\n    res = \"\"\n\
    \    while x > 0\n        res = string(x % base) * res\n        x = div(x, base)\n\
    \    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base is too large\")\n    end\n    if x ==\
    \ 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    if x < base\n        return string(x)\n    end\n    return\
    \ change_base(x \xF7 base, base) * string(x % base)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    x = abs(x)\n    res = \"\"\n\
    \    while x > 0\n        res = string(x % base) * res\n        x = x \xF7 base\n\
    \    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ != 0\n        result = string(x % base) * result\n        x = x \xF7 base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        println(\"Base should be less than 10\")\n        return\
    \ \"\"\n    end\n    if x < 0\n        println(\"Input number should be positive\"\
    )\n        return \"\"\n    end\n    if x == 0\n        return \"0\"\n    end\n\
    \    result = \"\"\n    while x > 0\n        result = string(x % base) * result\n\
    \        x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    s = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n      \
    \  x = x \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x !=\
    \ 0\n        result = string(x % base) * result\n        x = x \xF7 base\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n     \
    \   return \"-\" * change_base(-x, base)\n    end\n    digits = \"0123456789\"\
    \n    result = \"\"\n    while x > 0\n        result = digits[x % base + 1] *\
    \ result\n        x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n\
    \        remainder = x % base\n        x = x \xF7 base\n        result = string(remainder)\
    \ * result\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be non-negative\")\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"Base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"Number must be positive\")\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[1 + mod(x, base)] * s\n        x\
    \ = div(x, base)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n\
    \        res = string(x % base) * res\n        x = x \xF7 base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be in [2,10]\")\n   \
    \ end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return\
    \ \"-\" * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    result\
    \ = \"\"\n    while x > 0\n        result = digits[mod(x, base)+1] * result\n\
    \        x = div(x, base)\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    result\
    \ = \"\"\n    while x > 0\n        result = digits[x % base + 1] * result\n  \
    \      x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    res = \"\"\n    while x > 0\n        res = string(x\
    \ % base) * res\n        x = x \xF7 base\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        return \"-\" * change_base(-x, base)\n    end\n\
    \    if x < base\n        return string(x)\n    end\n    return change_base(x\
    \ \xF7 base, base) * string(x % base)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x !=\
    \ 0\n        res = string(x % base) * res\n        x = x \xF7 base\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ != 0\n        result = string(x % base) * result\n        x = x \xF7 base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base == 10\n        return string(x)\n    end\n    if x < 0\n        return\
    \ \"-\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    s = \"\"\
    \n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x \xF7 base\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    digits = \"0123456789\"\n \
    \   res = \"\"\n    while x > 0\n        res = digits[mod(x, base)+1] * res\n\
    \        x = div(x, base)\n    end\n    return res\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = [\"0\", \"1\", \"2\", \"3\"\
    , \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    result = \"\"\n    while x >\
    \ 0\n        result = digits[x % base + 1] * result\n        x = x \xF7 base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"Base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"Input must be positive\")\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be in range [2,10]\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n\
    \        result = string(x % base) * result\n        x = x \xF7 base\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < 0\n        return \"-\" * change_base(-x, base)\n    end\n    if x\
    \ < base\n        return string(x)\n    end\n    return change_base(x \xF7 base,\
    \ base) * string(x % base)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    digits = \"0123456789\"\n \
    \   result = \"\"\n    while x > 0\n        result = digits[mod(x, base)+1] *\
    \ result\n        x = div(x, base)\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base == 10\n        return string(x)\n    end\n    if x == 0\n       \
    \ return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    result = \"\"\n    while x > 0\n        result = string(x\
    \ % base) * result\n        x = x \xF7 base\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"Base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"Input must be positive\")\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    result\
    \ = \"\"\n    while x > 0\n        result = digits[x % base + 1] * result\n  \
    \      x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    digits = \"0123456789\"\n \
    \   result = \"\"\n    while x != 0\n        result = digits[x % base + 1] * result\n\
    \        x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < 0\n        return \"-\" * change_base(-x, base)\n    end\n    if x\
    \ < base\n        return string(x)\n    end\n    return change_base(x \xF7 base,\
    \ base) * string(x % base)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be in range [2, 10]\"\
    )\n    end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n     \
    \   return \"-\" * change_base(-x, base)\n    end\n    digits = []\n    while\
    \ x > 0\n        digits = [x % base] + digits\n        x = x \xF7 base\n    end\n\
    \    return join(digits, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpt0ioepkb.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpt0ioepkb.jl:27\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  DimensionMismatch(\"dimensions must\
    \ match: a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at\
    \ 1\")\n  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n\
    \   [2] promote_shape\n     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64},\
    \ Bs::Vector{Any})\n     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64,\
    \ base::Int64)\n     @ Main /tmp/tmpt0ioepkb.jl:17\n   [5] macro expansion\n \
    \    @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpt0ioepkb.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpt0ioepkb.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpt0ioepkb.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  DimensionMismatch(\"dimensions must match: a has\
    \ dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n  Stacktrace:\n\
    \   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2] promote_shape\n\
    \     @ ./indices.jl:169 [inlined]\n   [3] +(A::Vector{Int64}, Bs::Vector{Any})\n\
    \     @ Base ./arraymath.jl:45\n   [4] change_base(x::Int64, base::Int64)\n  \
    \   @ Main /tmp/tmpt0ioepkb.jl:17\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpt0ioepkb.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpt0ioepkb.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpt0ioepkb.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  DimensionMismatch(\"dimensions must match:\
    \ a has dims (Base.OneTo(1),), b has dims (Base.OneTo(0),), mismatch at 1\")\n\
    \  Stacktrace:\n   [1] promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2]\
    \ promote_shape\n     @ ./indic"
  timestamp: 1659748675
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    # convert to base 10\n    base10 = 0\n    for i in 1:length(x)\n        base10\
    \ += Int64(x[i]) * base^(length(x)-i)\n    end\n    # convert from base 10\n \
    \   res = \"\"\n    while base10 > 0\n        res = string(base10 % base) * res\n\
    \        base10 = base10 \xF7 base\n    end\n    return res\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    result\
    \ = \"\"\n    while x > 0\n        result = digits[x % base + 1] * result\n  \
    \      x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n     \
    \   return \"-\" * change_base(-x, base)\n    end\n    digits = \"0123456789\"\
    \n    result = \"\"\n    while x > 0\n        result = digits[mod(x, base)+1]\
    \ * result\n        x = div(x, base)\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    result = \"\"\n    while x > 0\n     \
    \   result = string(x % base) * result\n        x = x \xF7 base\n    end\n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    result = \"\"\n    while x > 0\n   \
    \     result = string(x % base) * result\n        x = x \xF7 base\n    end\n \
    \   return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n\
    \        result = string(x % base) * result\n        x = x \xF7 base\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be greater than 0\")\n    end\n    if x ==\
    \ 0\n        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n     \
    \   result = string(x % base) * result\n        x = x \xF7 base\n    end\n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    result\
    \ = \"\"\n    while x > 0\n        result = digits[x % base + 1] * result\n  \
    \      x = div(x, base)\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < 0\n        return \"-\" * change_base(-x, base)\n    end\n    if x\
    \ < base\n        return string(x)\n    end\n    return change_base(x \xF7 base,\
    \ base) * string(x % base)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base should be less than 10\")\n    end\n \
    \   if x < 0\n        error(\"x should be positive\")\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    quotient = x\n    remainder = 0\n    result = \"\"\n    while quotient !=\
    \ 0\n        remainder = quotient % base\n        quotient = quotient \xF7 base\n\
    \        push!(result, remainder)\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpj4zxlne6.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpj4zxlne6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpj4zxlne6.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj4zxlne6.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj4zxlne6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpj4zxlne6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] change_base(x::Int64, base::Int64)\n     @ Main\
    \ /tmp/tmpj4zxlne6.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj4zxlne6.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj4zxlne6.jl:20\ntest set:\
    \ Error During Te"
  timestamp: 1659748676
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    digits = \"0123456789\"\n \
    \   result = \"\"\n    while x > 0\n        result = digits[mod(x, base)+1] *\
    \ result\n        x = div(x, base)\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        throw(ArgumentError(\"base must be less than 10\"))\n\
    \    end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n       \
    \ return \"-\" * change_base(-x, base)\n    end\n    if x < base\n        return\
    \ string(x)\n    end\n    return change_base(x \xF7 base, base) * string(x % base)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    res\
    \ = \"\"\n    while x > 0\n        res = digits[x % base + 1] * res\n        x\
    \ = x \xF7 base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n     \
    \   return \"-\" * change_base(-x, base)\n    end\n    result = \"\"\n    while\
    \ x > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    # check if base is less than 10\n    if base > 10\n        error(\"base must\
    \ be less than 10\")\n    end\n    # check if x is less than 0\n    if x < 0\n\
    \        error(\"x must be greater than 0\")\n    end\n    # check if x is less\
    \ than base\n    if x < base\n        return string(x)\n    end\n    # check if\
    \ x is greater than base\n    if x >= base\n        return change_base(x \xF7\
    \ base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    s = \"\"\n    while x > 0\n        r = x % base\n        s = digits[r+1]\
    \ * s\n        x = x \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x !=\
    \ 0\n        res = string(x % base) * res\n        x = x // base\n    end\n  \
    \  return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpk4_02ub4.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpk4_02ub4.jl:21\n  Test threw exception\n\
    \  Expression: candidate(8, 3) == \"22\"\n  OverflowError: 4052555153018976267\
    \ * 3 overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpk4_02ub4.jl:11\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpk4_02ub4.jl:21 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpk4_02ub4.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpk4_02ub4.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == \"100\"\n  OverflowError: 4052555153018976267 * 3 overflowed\
    \ for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4] change_base(x::Int64, base::Int64)\n     @ Main /tmp/tmpk4_02ub4.jl:11\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpk4_02ub4.jl:22 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpk4_02ub4.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpk4_02ub4.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(234, 2) == \"11101010\"\n  OverflowError: 4611686018427387904 * 2\
    \ overflowed for type Int64\n  Stacktrace:\n   [1] throw_overflowerr_binaryop(op::Symbol,\
    \ x::Int64, y::Int64)\n     @ Base.Checked ./checked.jl:154\n   [2] checked_mul\n\
    \     @ ./checked.jl:288 [inlined]\n   [3] rem\n     @ ./rational.jl:312 [inlined]\n\
    \   [4"
  timestamp: 1659748676
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[mod(x, base)+1] * s\n        x =\
    \ div(x, base)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    s = \"\"\n\
    \    while x > 0\n        s = digits[mod(x, base)+1] * s\n        x = div(x, base)\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    res\
    \ = \"\"\n    while x > 0\n        res = digits[x % base + 1] * res\n        x\
    \ = x \xF7 base\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        throw(ArgumentError(\"base must be less than 10\"))\n\
    \    end\n    if x < 0\n        throw(ArgumentError(\"x must be positive\"))\n\
    \    end\n    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n  \
    \  while x > 0\n        result = string(x % base) * result\n        x = x \xF7\
    \ base\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n\
    \        res = string(x % base) * res\n        x = x \xF7 base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    quotient = x\n    remainder = 0\n    result = \"\"\n    while quotient !=\
    \ 0\n        remainder = quotient % base\n        quotient = quotient \xF7 base\n\
    \        result = string(remainder) * result\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    result\
    \ = \"\"\n    while x > 0\n        result = digits[x % base + 1] * result\n  \
    \      x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        sign = \"-\"\n        x = -x\n    else\n        sign = \"\"\
    \n    end\n    if x < base\n        return sign * string(x)\n    else\n      \
    \  return change_base(x \xF7 base, base) * string(x % base)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3)\
    \ == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) ==\
    \ \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        x = -x\n        sign = \"-\"\n    else\n   \
    \     sign = \"\"\n    end\n    if x == 0\n        return \"0\"\n    end\n   \
    \ result = \"\"\n    while x > 0\n        result = string(x % base) * result\n\
    \        x = x \xF7 base\n    end\n    return sign * result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base is too large\")\n    end\n    if x ==\
    \ 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    result = \"\"\n    while x > 0\n        result = string(x\
    \ % base) * result\n        x = x \xF7 base\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n\
    \        result = string(x % base) * result\n        x = x \xF7 base\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n\
    \        res = string(x % base) * res\n        x = x \xF7 base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base should be between 2 and 10\"\
    )\n    end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n     \
    \   return \"-\" * change_base(-x, base)\n    end\n    result = \"\"\n    while\
    \ x > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base == 10\n        return string(x)\n    end\n    if x == 0\n       \
    \ return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    result\
    \ = \"\"\n    while x > 0\n        result = digits[mod(x, base)+1] * result\n\
    \        x = div(x, base)\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n\
    \        res = string(x % base) * res\n        x = x \xF7 base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        println(\"base should be between 2 and\
    \ 10\")\n        return \"\"\n    end\n    if x == 0\n        return \"0\"\n \
    \   end\n    if x < 0\n        return \"-\" * change_base(-x, base)\n    end\n\
    \    result = \"\"\n    while x > 0\n        result = string(x % base) * result\n\
    \        x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    s = \"\"\n    while x != 0\n\
    \        s = string(x % base) * s\n        x = x \xF7 base\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    result\
    \ = \"\"\n    while x > 0\n        result = digits[x % base + 1] * result\n  \
    \      x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"Base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n\
    \        result = string(x % base) * result\n        x = x \xF7 base\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    res = \"\"\n    while x != 0\n        res =\
    \ string(x % base) * res\n        x = x \xF7 base\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"Base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"Input must be positive\")\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"Base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"Input must be positive\")\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n        res =\
    \ string(x % base) * res\n        x = x \xF7 base\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n\
    \        result = string(x % base) * result\n        x = x \xF7 base\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    quotient = x\n    remainder = 0\n    result = \"\"\n    while quotient !=\
    \ 0\n        remainder = quotient % base\n        quotient = quotient \xF7 base\n\
    \        result = string(remainder) * result\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < 0\n        return \"-\" * change_base(-x, base)\n    end\n    if x\
    \ < base\n        return string(x)\n    end\n    return change_base(x \xF7 base,\
    \ base) * string(x % base)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ != 0\n        result = string(x % base) * result\n        x = x \xF7 base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    s = \"\"\n\
    \    while x > 0\n        s = digits[x % base + 1] * s\n        x = x \xF7 base\n\
    \    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base == 10\n        return string(x)\n    end\n    if x == 0\n       \
    \ return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    res = \"\"\n    while x > 0\n        res = string(x % base)\
    \ * res\n        x = x \xF7 base\n    end\n    return res\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\"\
    )\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\"\
    )\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\"\
    )\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t\
    @test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5,\
    \ 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) ==\
    \ \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        return \"base should be less than 10\"\n    end\n \
    \   if x < 0\n        return \"input number should be positive\"\n    end\n  \
    \  if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x >\
    \ 0\n        result = string(x % base) * result\n        x = x \xF7 base\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n\
    \        res = string(x % base) * res\n        x = x \xF7 base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[1 + mod(x, base)] * s\n        x\
    \ = div(x, base)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"Base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    digits = \"0123456789\"\n    result =\
    \ \"\"\n    while x > 0\n        result = digits[x % base + 1] * result\n    \
    \    x = x \xF7 base\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        return \"base must be less than 10\"\n    end\n   \
    \ if x < 0\n        return \"x must be positive\"\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x !=\
    \ 0\n        res = string(x % base) * res\n        x = x \xF7 base\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 1
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ div base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphewyfyj_.jl:9\nin expression starting at /tmp/tmphewyfyj_.jl:9\n"
  stdout: ''
  timestamp: 1659748675
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n\
    \        res = string(x % base) * res\n        x = x \xF7 base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n     \
    \   return \"-\" * change_base(-x, base)\n    end\n    result = \"\"\n    while\
    \ x > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n\
    \        res = string(x % base) * res\n        x = x \xF7 base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < 0\n        return \"-\" * change_base(-x, base)\n    end\n    if x\
    \ < base\n        return string(x)\n    end\n    return change_base(x \xF7 base,\
    \ base) * string(x % base)\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base == 10\n        return string(x)\n    end\n    if x == 0\n       \
    \ return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    if x < base\n        return string(x)\n    end\n    return\
    \ change_base(x \xF7 base, base) * string(x % base)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"Base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"Input must be positive\")\n    end\n    if x == 0\n\
    \        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x == 0\n        return \"0\"\n    end\n    if x < 0\n     \
    \   return \"-\" * change_base(-x, base)\n    end\n    res = \"\"\n    while x\
    \ > 0\n        res = string(x % base) * res\n        x = x \xF7 base\n    end\n\
    \    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ != 0\n        result = string(x % base) * result\n        x = x \xF7 base\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) ==\
    \ \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be non-negative\")\n    end\n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[mod(x, base)+1] * s\n        x =\
    \ div(x, base)\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base == 10\n        return string(x)\n    end\n    if x == 0\n       \
    \ return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    res = \"\"\n    while x > 0\n\
    \        res = string(x % base) * res\n        x = x \xF7 base\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x < base\n        return string(x)\n    else\n        return change_base(x\
    \ \xF7 base, base) * string(x % base)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9,\
    \ 3) == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base < 2 || base > 10\n        error(\"base must be between 2 and 10\"\
    )\n    end\n    if x < 0\n        error(\"x must be positive\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x > 0\n\
    \        result = string(x % base) * result\n        x = x \xF7 base\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748673
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    result = \"\"\n    while x\
    \ > 0\n        result = string(x % base) * result\n        x = x \xF7 base\n \
    \   end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\
    \t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234,\
    \ 2) == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    s = \"\"\n    while x > 0\n        s\
    \ = string(x % base) * s\n        x = x \xF7 base\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748674
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"-\"\
    \ * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    if x < base\n        return string(x)\n\
    \    end\n    return change_base(x \xF7 base, base) * string(x % base)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base == 10\n        return string(x)\n    end\n    if x == 0\n       \
    \ return \"0\"\n    end\n    if x < 0\n        return \"-\" * change_base(-x,\
    \ base)\n    end\n    result = \"\"\n    while x > 0\n        result = string(x\
    \ % base) * result\n        x = x \xF7 base\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748672
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if base > 10\n        error(\"base must be less than 10\")\n    end\n   \
    \ if x < 0\n        error(\"x must be positive\")\n    end\n    if x == 0\n  \
    \      return \"0\"\n    end\n    result = \"\"\n    while x > 0\n        result\
    \ = string(x % base) * result\n        x = x \xF7 base\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = change_base;\n\t@test(candidate(8,\
    \ 3) == \"22\")\n\t@test(candidate(9, 3) == \"100\")\n\t@test(candidate(234, 2)\
    \ == \"11101010\")\n\t@test(candidate(16, 2) == \"10000\")\n\t@test(candidate(8,\
    \ 2) == \"1000\")\n\t@test(candidate(7, 2) == \"111\")\n\t@test(candidate(2, 3)\
    \ == \"2\")\n\t@test(candidate(3, 4) == \"3\")\n\t@test(candidate(4, 5) == \"\
    4\")\n\t@test(candidate(5, 6) == \"5\")\n\t@test(candidate(6, 7) == \"6\")\n\t\
    @test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671
- exit_code: 0
  program: "\"\"\"Change numerical base of input number x to base.\n    return string\
    \ representation after the conversion.\n    base numbers are less than 10.\n \
    \               \"\"\"\nfunction change_base(x::Int64, base::Int64)::String \n\
    \    if x == 0\n        return \"0\"\n    end\n    if x < 0\n        return \"\
    -\" * change_base(-x, base)\n    end\n    digits = \"0123456789ABCDEF\"\n    s\
    \ = \"\"\n    while x > 0\n        s = digits[x % base + 1] * s\n        x = x\
    \ \xF7 base\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = change_base;\n\t@test(candidate(8, 3) == \"22\")\n\t@test(candidate(9, 3)\
    \ == \"100\")\n\t@test(candidate(234, 2) == \"11101010\")\n\t@test(candidate(16,\
    \ 2) == \"10000\")\n\t@test(candidate(8, 2) == \"1000\")\n\t@test(candidate(7,\
    \ 2) == \"111\")\n\t@test(candidate(2, 3) == \"2\")\n\t@test(candidate(3, 4) ==\
    \ \"3\")\n\t@test(candidate(4, 5) == \"4\")\n\t@test(candidate(5, 6) == \"5\"\
    )\n\t@test(candidate(6, 7) == \"6\")\n\t@test(candidate(7, 8) == \"7\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   12     12

    '
  stdout: ''
  timestamp: 1659748671

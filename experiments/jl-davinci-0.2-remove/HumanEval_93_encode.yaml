name: HumanEval_93_encode
language: jl
prompt: "\"\"\"\n    Write a function that takes a message, and encodes in such a\
  \ \n    way that it swaps case of all letters, replaces all vowels in \n    the\
  \ message with the letter that appears 2 places ahead of that \n    vowel in the\
  \ english alphabet. \n    Assume only letters. \n    \n    Examples:\n         \
  \   \"\"\"\nfunction encode(message::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
  TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
  YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
  )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
  )\nend\n"
completions: ["    # your code here\nend", "    # YOUR CODE HERE\nend", "    # your\
    \ code here\nend", "    # your code here\nend", "    # your code here\nend", " \
    \   # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    \"\"\"\n    >>> encode(\"Hello World\")\n    \"HllE Wrld\"\n\
    \    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello\
    \ World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE\
    \ Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello", "    # Your code here\nend", "    # your\
    \ code here\nend", "    # your code here\nend", "    # your code here\nend", " \
    \   # your code here\nend", "    \"\"\"\n    >>> encode(\"Hello World\")\n   \
    \ \"HElLO wORLd\"\n    >>> encode(\"This is a test\")\n    \"THIs iS A TEsT\"\n\
    \    >>> encode(\"This is a longer test\")\n    \"THIs iS A LOngER TEsT\"\n  \
    \  \"\"\"\n    # YOUR CODE HERE\n    return \"HElLO wORLd\"\nend", "    # your\
    \ code here\nend", "    # your code here\nend", "    # your code here\nend", " \
    \   # your code here\nend", "    # Your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # YOUR CODE HERE\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # YOUR CODE HERE\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    \"\"\"\n    encode(message::String)::String\n    \n    Takes a string\
    \ message and encodes it. \n    \"\"\"\n    # create a dictionary of vowels and\
    \ their replacements\n    vowels = Dict(\"a\"=>\"c\", \"e\"=>\"g\", \"i\"=>\"\
    k\", \"o\"=>\"q\", \"u\"=>\"y\")\n    # create a dictionary of letters and their\
    \ replacements\n    letters = Dict(\"a\"=>\"A\", \"b\"=>\"B\", \"c\"=>\"C\", \"\
    d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\", \"g\"=>\"G\", \"h\"=>\"H\", \"i\"=>\"\
    I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"=>\"L\", \"m\"=>\"M\", \"n\"=>\"N\", \"\
    o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\", \"r\"=>\"R\", \"s\"=>\"S\", \"t\"=>\"\
    T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"=>\"W\", \"x\"=>\"X\", \"y\"=>\"Y\", \"\
    z\"=>\"Z\")\n    # create a dictionary of letters and their replacements\n   \
    \ letters2 = Dict(\"A\"=>\"a\", \"B\"=>\"b\", \"C\"=>\"c\", \"D\"=>\"d\", \"E\"\
    =>\"e\", \"F\"=>\"f\", \"G\"=>\"g\", \"H\"=>\"h\", \"I\"=>\"i\", \"J\"=>\"j\"\
    , \"K\"=>\"k\", \"L\"=>\"l\", \"M\"=>\"m\", \"N\"=>\"n\", \"O\"=>\"o\", \"P\"\
    =>\"p\", \"Q\"=>\"q\", \"R\"=>\"r\", \"S\"=>\"s\", \"T\"=>\"t\", \"U\"=>\"u\"\
    , \"V\"=>\"v\", \"W\"=>\"w\", \"X\"=>\"x\", \"Y\"=>\"y\", \"Z\"=>\"z\")\n    #\
    \ create an empty string to store the encoded message\n    encoded = \"\"\n  \
    \  # loop through each character in the message\n   ", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\n    return encoded_message\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # Your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # Your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # YOUR CODE HERE\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded_message = \"\"\n\
    \    for letter in message\n        if letter in vowels\n            encoded_message\
    \ *= letter + \"2\"\n        else\n            encoded_message *= letter\n   \
    \     end\n    end\n    return encoded_message\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # Your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\n    return encoded_message\nend",
  "    # your code here\nend", "    # YOUR CODE HERE\nend", "    # Your code here\n\
    end", "    # your code here\nend", "    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    vowels = \"aeiou\"\n    encoded_message = \"\"\n    for letter in message\n\
    \        if letter in vowels\n            encoded_message *= alphabet[(findfirst(alphabet,\
    \ letter) + 2) % 26]\n        elseif letter in alphabet\n            encoded_message\
    \ *= alphabet[(findfirst(alphabet, letter) + 13) % 26]\n        else\n       \
    \     encoded_message *= letter\n        end\n    end\n    return encoded_message\n\
    end", "    # your code here\nend", "    # Your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\n    return message\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # TODO: implement this function\n    return\
    \ message\nend", "    # your code here\nend", "    # your code here\nend", " \
    \   # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    alphabet\
    \ = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    encoded_message = \"\"\n    for i in message\n\
    \        if i in vowels\n            index = findfirst(vowels, i)\n          \
    \  encoded_message = encoded_message * alphabet[index + 2]\n        else\n   \
    \         index = findfirst(alphabet, i)\n            encoded_message = encoded_message\
    \ * alphabet[index + 2]\n        end\n    end\n    return encoded_message\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here \nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    \"\"\"\n    >>> encode(\"Hello World\")\n    \"HElLo WOrLd\"\
    \n    >>> encode(\"I love you\")\n    \"I lOvE yOu\"\n    >>> encode(\"I am a\
    \ student\")\n    \"I Am A StUdEnT\"\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ \"HElLo WOrLd\"\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # YOUR CODE\
    \ HERE\nend", "    # YOUR CODE HERE\n    return \"\";\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  \
    \  encoded = \"\"\n    for c in message\n        if c in vowels\n            encoded\
    \ *= c\n        elseif c in uppercase(vowels)\n            encoded *= c\n    \
    \    elseif c in lowercase(vowels)\n            encoded *= c\n        elseif c\
    \ in uppercase(alphabet)\n            encoded *= c\n        elseif c in lowercase(alphabet)\n\
    \            encoded *= c\n        else\n            encoded *= c\n        end\n\
    \    end\n    return encoded\nend", "    # your code here\nend", "    # Your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    \"\"\"\n    >>> encode(\"Hello World\")\n    \"HllE Wrdl\"\n\
    \    >>> encode(\"Hello World\")\n    \"HllE Wrdl\"\n    >>> encode(\"Hello World\"\
    )\n    \"HllE Wrdl\"\n    \"\"\"\n    # Your code here\nend", "    # YOUR CODE\
    \ HERE\n    return\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # YOUR CODE HERE\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # write your code here\n    return message\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

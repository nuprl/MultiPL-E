language: jl
name: HumanEval_89_encrypt
results:
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary with the alphabet\n \
    \   alphabet = Dict('a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5, 'f'=>6, 'g'=>7, 'h'=>8,\
    \ 'i'=>9, 'j'=>10, 'k'=>11, 'l'=>12, 'm'=>13, 'n'=>14, 'o'=>15, 'p'=>16, 'q'=>17,\
    \ 'r'=>18, 's'=>19, 't'=>20, 'u'=>21, 'v'=>22, 'w'=>23, 'x'=>24, 'y'=>25, 'z'=>26)\n\
    \    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # check if\
    \ the character is a letter\n        if i in keys(alphabet)\n            # check\
    \ if the letter is a vowel\n            if i in [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n                # add the letter to the encrypted string\n             \
    \   encrypted_string = encrypted_string * i\n            else\n              \
    \  # add the letter to the encrypted string\n                encrypted_string\
    \ = encrypted_string * i\n            end\n        else\n            # add the\
    \ character to the encrypted string\n            encrypted_string = encrypted_string\
    \ * i\n        end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmztjx98i.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmpmztjx98i.jl:37\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmztjx98i.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmztjx98i.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpmztjx98i.jl:38\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmztjx98i.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmztjx98i.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpmztjx98i.jl:39\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmztjx98i.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmztjx98i.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpmztjx98i.jl:40\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmztjx98i.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmztjx98i.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpmztjx98i.jl:41\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted_string\
    \ = encrypted_string * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"\
    abcdefghijklmnopqrstuvwxyz\") .== i)[1] + 2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            encrypted_string = encrypted_string * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1] + 2])\n        else\n    \
    \        encrypted_string = encrypted_string * i\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmtmbtjzc.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpmtmbtjzc.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #s = \"hello\"\n    #s = \"abc\"\n    #s =\
    \ \"xyz\"\n    #s = \"zzz\"\n    #s = \"z\"\n    #s = \"a\"\n    #s = \"b\"\n\
    \    #s = \"c\"\n    #s = \"d\"\n    #s = \"e\"\n    #s = \"f\"\n    #s = \"g\"\
    \n    #s = \"h\"\n    #s = \"i\"\n    #s = \"j\"\n    #s = \"k\"\n    #s = \"\
    l\"\n    #s = \"m\"\n    #s = \"n\"\n    #s = \"o\"\n    #s = \"p\"\n    #s =\
    \ \"q\"\n    #s = \"r\"\n    #s = \"s\"\n    #s = \"t\"\n    #s = \"u\"\n    #s\
    \ = \"v\"\n    #s = \"w\"\n    #s = \"x\"\n    #s = \"y\"\n    #s = \"z\"\n  \
    \  #s = \" \"\n    #s = \"!\"\n    #s = \"?\"\n    #s = \".\"\n    #s = \",\"\n\
    \    #s = \":\"\n    #s = \";\"\n    #s = \"-\"\n    #s = \"_\"\n    #s = \"=\"\
    \n    #s = \"+\"\n    #s = \"(\"\n    #s = \")\"\n    #s = \"*\"\n    #s = \"\
    /\"\n    #s = \"\\\"\"\n    #s = \"'\"\n    #s = \"&\"\n    #s = \"^\"\n    #s\
    \ = \"%\"\n    #s = \"$\"\n    #s = \"#\"\n    #s = \"@\"\n    #s = \"!\"\n  \
    \  #s = \"1\"\n    #s = \"2\"\n    #s = \"3\"\n    #s = \"4\"\n    #s = \"5\"\n\
    \    #s = \"6\"\n    #s = \"7\"\n    #s = \"8\"\n    #s = \"9\"\n    #s = \"0\"\
    \n    #s = \"~\"\n   \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr5gnioec.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr5gnioec.jl:1\n\
    in expression starting at /tmp/tmpr5gnioec.jl:1\n"
  stdout: ''
  timestamp: 1659748177
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"\
    =>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"\
    =>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"\
    w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n    # create an empty string to store\
    \ the encrypted string\n    encrypted_string = \"\"\n    # loop through the string\n\
    \    for i in s\n        # check if the character is a letter\n        if isalpha(i)\n\
    \            # check if the letter is uppercase\n            if isupper(i)\n \
    \               # convert the letter to lowercase\n                i = lowercase(i)\n\
    \                # encrypt the letter\n                encrypted_string = string(encrypted_string,\
    \ alphabet[i])\n            else\n                # encrypt the letter\n     \
    \           encrypted_string = string(encrypted_string, alphabet[i])\n       \
    \     end\n        else\n            # add the character to the encrypted string\n\
    \            encrypted_string = string(encrypted_string, i)\n        end\n   \
    \ end\n    # return the encrypted string\n    return encrypted_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpifwufzf4.jl:39\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: isalpha not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpifwufzf4.jl:15\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpifwufzf4.jl:39 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpifwufzf4.jl:38\ntest set: Error
    During Test at /tmp/tmpifwufzf4.jl:40\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpifwufzf4.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpifwufzf4.jl:40 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpifwufzf4.jl:38\ntest set: Error
    During Test at /tmp/tmpifwufzf4.jl:41\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpifwufzf4.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpifwufzf4.jl:41 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpifwufzf4.jl:38\ntest set: Error
    During Test at /tmp/tmpifwufzf4.jl:42\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpifwufzf4.jl:15\n   [2] macro expansion\n     @ /shared/cent'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>'c', 'b'=>'d', 'c'=>'e', 'd'=>'f', 'e'=>'g', 'f'=>'h',\
    \ 'g'=>'i', 'h'=>'j', 'i'=>'k', 'j'=>'l', 'k'=>'m', 'l'=>'n', 'm'=>'o', 'n'=>'p',\
    \ 'o'=>'q', 'p'=>'r', 'q'=>'s', 'r'=>'t', 's'=>'u', 't'=>'v', 'u'=>'w', 'v'=>'x',\
    \ 'w'=>'y', 'x'=>'z', 'y'=>'a', 'z'=>'b')\n    # create a new string to store\
    \ the encrypted string\n    encrypted_string = \"\"\n    # iterate through the\
    \ string\n    for i in s\n        # check if the character is in the dictionary\n\
    \        if i in keys(alphabet)\n            # if it is, add the encrypted character\
    \ to the encrypted string\n            encrypted_string = string(encrypted_string,\
    \ alphabet[i])\n        else\n            # if it is not, add the character to\
    \ the encrypted string\n            encrypted_string = string(encrypted_string,\
    \ i)\n        end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeceo_8g3.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpeceo_8g3.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeceo_8g3.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeceo_8g3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpeceo_8g3.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeceo_8g3.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeceo_8g3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpeceo_8g3.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeceo_8g3.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeceo_8g3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpeceo_8g3.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeceo_8g3.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeceo_8g3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpeceo_8g3.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5, 'f'=>6, 'g'=>7, 'h'=>8,\
    \ 'i'=>9, 'j'=>10, 'k'=>11, 'l'=>12, 'm'=>13, 'n'=>14, 'o'=>15, 'p'=>16, 'q'=>17,\
    \ 'r'=>18, 's'=>19, 't'=>20, 'u'=>21, 'v'=>22, 'w'=>23, 'x'=>24, 'y'=>25, 'z'=>26)\n\
    \    # create a dictionary of the alphabet rotated\n    alphabet_rotated = Dict('a'=>3,\
    \ 'b'=>4, 'c'=>5, 'd'=>6, 'e'=>7, 'f'=>8, 'g'=>9, 'h'=>10, 'i'=>11, 'j'=>12, 'k'=>13,\
    \ 'l'=>14, 'm'=>15, 'n'=>16, 'o'=>17, 'p'=>18, 'q'=>19, 'r'=>20, 's'=>21, 't'=>22,\
    \ 'u'=>23, 'v'=>24, 'w'=>25, 'x'=>26, 'y'=>1, 'z'=>2)\n    # create a string to\
    \ store the encrypted message\n    encrypted_message = \"\"\n    # iterate through\
    \ the string\n    for i in s\n        # check if the character is a letter\n \
    \       if i in alphabet\n            # if it is a letter, add the encrypted letter\
    \ to the encrypted message\n            encrypted_message = string(encrypted_message,\
    \ alphabet_rotated[i])\n        else\n            # if it is not a letter, add\
    \ the character to the encrypted message\n            encrypted_message = string(encrypted_message,\
    \ i)\n        end\n    end\n    # return the encrypted message\n    return encrypted_message\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcbvoet_w.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  AbstractDict collections only
    contain Pairs;\n  Either look for e.g. A=>B instead, or use the `keys` or `values`\n  function
    if you are looking for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Int64})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmpcbvoet_w.jl:17\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmpcbvoet_w.jl:33 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmpcbvoet_w.jl:32\ntest set: Error During Test at
    /tmp/tmpcbvoet_w.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  AbstractDict collections only contain Pairs;\n  Either look
    for e.g. A=>B instead, or use the `keys` or `values`\n  function if you are looking
    for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Int64})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmpcbvoet_w.jl:17\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmpcbvoet_w.jl:34 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmpcbvoet_w.jl:32\ntest set: Error During Test at
    /tmp/tmpcbvoet_w.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  AbstractDict collections only contain Pairs;\n  Either look for e.g.
    A=>B instead, or use the `keys` or `values`\n  function if you are looking for
    a key or value respectively.\n  Stacktrace:\n   [1] er'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    \"\"\"\n    This function takes a string as\
    \ an argument and returns a string \n    encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    \"\"\"\n    # create a dictionary\
    \ of letters\n    letters = Dict('a'=>'c', 'b'=>'d', 'c'=>'e', 'd'=>'f', 'e'=>'g',\
    \ 'f'=>'h', 'g'=>'i', 'h'=>'j', 'i'=>'k', 'j'=>'l', 'k'=>'m', 'l'=>'n', 'm'=>'o',\
    \ 'n'=>'p', 'o'=>'q', 'p'=>'r', 'q'=>'s', 'r'=>'t', 's'=>'u', 't'=>'v', 'u'=>'w',\
    \ 'v'=>'x', 'w'=>'y', 'x'=>'z', 'y'=>'a', 'z'=>'b')\n    # create an empty string\
    \ to store the encrypted string\n    encrypted_string = \"\"\n    # loop through\
    \ the string\n    for i in s\n        # if the character is a letter, encrypt\
    \ it\n        if i in keys(letters)\n            encrypted_string = string(encrypted_string,\
    \ letters[i])\n        # if the character is not a letter, leave it as it is\n\
    \        else\n            encrypted_string = string(encrypted_string, i)\n  \
    \      end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsfibug6f.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpsfibug6f.jl:36\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsfibug6f.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsfibug6f.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpsfibug6f.jl:37\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsfibug6f.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsfibug6f.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpsfibug6f.jl:38\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsfibug6f.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsfibug6f.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpsfibug6f.jl:39\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsfibug6f.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsfibug6f.jl:35\ntest set: Test\
    \ Failed at /tmp/tmpsfibug6f.jl:40\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict(zip(string(\"abcdefghijklmnopqrstuvwxyz\"),1:26))\n    # create\
    \ a dictionary of the alphabet rotated by two places\n    alphabet_rotated = Dict(zip(string(\"\
    cdefghijklmnopqrstuvwxyzab\"),1:26))\n    # create a dictionary of the alphabet\
    \ rotated by four places\n    alphabet_rotated_four = Dict(zip(string(\"efghijklmnopqrstuvwxyzabcd\"\
    ),1:26))\n    # create a dictionary of the alphabet rotated by six places\n  \
    \  alphabet_rotated_six = Dict(zip(string(\"ghijklmnopqrstuvwxyzabcdef\"),1:26))\n\
    \    # create a dictionary of the alphabet rotated by eight places\n    alphabet_rotated_eight\
    \ = Dict(zip(string(\"ijklmnopqrstuvwxyzabcdefgh\"),1:26))\n    # create a dictionary\
    \ of the alphabet rotated by ten places\n    alphabet_rotated_ten = Dict(zip(string(\"\
    klmnopqrstuvwxyzabcdefghij\"),1:26))\n    # create a dictionary of the alphabet\
    \ rotated by twelve places\n    alphabet_rotated_twelve = Dict(zip(string(\"mnopqrstuvwxyzabcdefghijkl\"\
    ),1:26))\n    # create a dictionary of the alphabet rotated by fourteen places\n\
    \    alphabet_rotated_fourteen = Dict(zip(string(\"opqrstuvwxyzabcdefghijklmn\"\
    ),1:26))\n    # create a dictionary of the alphabet rotated by sixteen places\n\
    \    alphabet_rotated_sixteen = Dict(zip(string(\"qrstuvwxyzabcdefghijklmnop\"\
    ),1:26))\n    # create a dictionary of the alphabet rotated by eighteen places\n\
    \    alphabet_rotated_eighteen = Dict(zip(string(\"stuvwxyzabcdefghijklmnopqr\"\
    ),1:26))\n    # create a dictionary of the alphabet rotated by twenty places\n\
    \    alphabet_rotated_twenty = Dict(zip(string(\"uvwxyzabcdefgh\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8whie0lr.jl:35\nin expression starting at\
    \ /tmp/tmp8whie0lr.jl:35\n"
  stdout: ''
  timestamp: 1659748177
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmptmyqdmh8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmptmyqdmh8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5, 'f'=>6, 'g'=>7, 'h'=>8,\
    \ 'i'=>9, 'j'=>10, 'k'=>11, 'l'=>12, 'm'=>13, 'n'=>14, 'o'=>15, 'p'=>16, 'q'=>17,\
    \ 'r'=>18, 's'=>19, 't'=>20, 'u'=>21, 'v'=>22, 'w'=>23, 'x'=>24, 'y'=>25, 'z'=>26)\n\
    \    # create a dictionary of the alphabet rotated by two places\n    alphabet_rotated\
    \ = Dict('a'=>3, 'b'=>4, 'c'=>5, 'd'=>6, 'e'=>7, 'f'=>8, 'g'=>9, 'h'=>10, 'i'=>11,\
    \ 'j'=>12, 'k'=>13, 'l'=>14, 'm'=>15, 'n'=>16, 'o'=>17, 'p'=>18, 'q'=>19, 'r'=>20,\
    \ 's'=>21, 't'=>22, 'u'=>23, 'v'=>24, 'w'=>25, 'x'=>26, 'y'=>1, 'z'=>2)\n    #\
    \ create a dictionary of the alphabet rotated by two places\n    alphabet_rotated_2\
    \ = Dict('a'=>5, 'b'=>6, 'c'=>7, 'd'=>8, 'e'=>9, 'f'=>10, 'g'=>11, 'h'=>12, 'i'=>13,\
    \ 'j'=>14, 'k'=>15, 'l'=>16, 'm'=>17, 'n'=>18, 'o'=>19, 'p'=>20, 'q'=>21, 'r'=>22,\
    \ 's'=>23, 't'=>24, 'u'=>25, 'v'=>26, 'w'=>1, '\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpus_ke97b.jl:19\nin expression starting at /tmp/tmpus_ke97b.jl:19\n"
  stdout: ''
  timestamp: 1659748177
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    #create an empty string to store the encrypted string\n    encrypted = \"\
    \"\n    #loop through the string\n    for i in s\n        #check if the letter\
    \ is in the alphabet\n        if i in keys(alphabet)\n            #if it is, add\
    \ the encrypted letter to the string\n            encrypted = encrypted * string(alphabet[i]*2)\n\
    \        else\n            #if it is not, add the letter to the string\n     \
    \       encrypted = encrypted * string(i)\n        end\n    end\n    #return the\
    \ encrypted string\n    return encrypted\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfh8qxog7.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpfh8qxog7.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"1618\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfh8qxog7.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfh8qxog7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfh8qxog7.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"2388121416202224\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfh8qxog7.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfh8qxog7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfh8qxog7.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"1412\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfh8qxog7.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfh8qxog7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfh8qxog7.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"1040\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfh8qxog7.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfh8qxog7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfh8qxog7.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"12210461224610122104614\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion"
  timestamp: 1659748179
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \"a\"\
    , \"c\")\n    s = replace(s, \"b\", \"d\")\n    s = replace(s, \"c\", \"e\")\n\
    \    s = replace(s, \"d\", \"f\")\n    s = replace(s, \"e\", \"g\")\n    s = replace(s,\
    \ \"f\", \"h\")\n    s = replace(s, \"g\", \"i\")\n    s = replace(s, \"h\", \"\
    j\")\n    s = replace(s, \"i\", \"k\")\n    s = replace(s, \"j\", \"l\")\n   \
    \ s = replace(s, \"k\", \"m\")\n    s = replace(s, \"l\", \"n\")\n    s = replace(s,\
    \ \"m\", \"o\")\n    s = replace(s, \"n\", \"p\")\n    s = replace(s, \"o\", \"\
    q\")\n    s = replace(s, \"p\", \"r\")\n    s = replace(s, \"q\", \"s\")\n   \
    \ s = replace(s, \"r\", \"t\")\n    s = replace(s, \"s\", \"u\")\n    s = replace(s,\
    \ \"t\", \"v\")\n    s = replace(s, \"u\", \"w\")\n    s = replace(s, \"v\", \"\
    x\")\n    s = replace(s, \"w\", \"y\")\n    s = replace(s, \"x\", \"z\")\n   \
    \ s = replace(s, \"y\", \"a\")\n    s = replace(s, \"z\", \"b\")\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpo2j0idt7.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpo2j0idt7.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo2j0idt7.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo2j0idt7.jl:41\ntest set: Error
    During Test at /tmp/tmpo2j0idt7.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpo2j0idt7.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo2j0idt7.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo2j0idt7.jl:41\ntest set: Error
    During Test at /tmp/tmpo2j0idt7.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpo2j0idt7.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo2j0idt7.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo2j0idt7.jl:41\ntest set: Error
    During Test at /tmp/tmpo2j0idt7.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \"!\" => \"\")\n    s = replace(s, \"?\" => \"\"\
    )\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\")\n    s\
    \ = replace(s, \";\" => \"\")\n    s = replace(s, \":\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"(\" => \"\")\n    s = replace(s, \")\"\
    \ => \"\")\n    s = replace(s, \"'\" => \"\")\n    s = replace(s, \"\\\"\" =>\
    \ \"\")\n    s = replace(s, \"&\" => \"\")\n    s = replace(s, \"*\" => \"\")\n\
    \    s = replace(s, \"=\" => \"\")\n    s = replace(s, \"+\" => \"\")\n    s =\
    \ replace(s, \"-\" => \"\")\n    s = replace(s, \"_\" => \"\")\n    s = replace(s,\
    \ \"/\" => \"\")\n    s = replace(s, \"\\\\\" => \"\")\n    s = replace(s, \"\
    |\" => \"\")\n    s = replace(s, \"~\" => \"\")\n    s = replace(s, \"`\" => \"\
    \")\n    s = replace(s, \"1\" => \"\")\n    s = replace(s, \"2\" => \"\")\n  \
    \  s = replace(s, \"3\" => \"\")\n    s = replace(s, \"4\" => \"\")\n    s = replace(s,\
    \ \"5\" => \"\")\n    s = replace(s, \"6\" => \"\")\n    s = replace(s, \"7\"\
    \ => \"\")\n    s = replace(s, \"8\" => \"\")\n    s = replace(s, \"9\" => \"\"\
    )\n    s = replace(s, \"0\" => \"\")\n    s = replace(s, \"a\" => \"c\")\n   \
    \ s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n    s =\
    \ replace(s, \"d\" =>\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq5oaowgz.jl:48\nin expression starting at\
    \ /tmp/tmpq5oaowgz.jl:48\n"
  stdout: ''
  timestamp: 1659748177
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    #create a string of the alphabet shifted\
    \ by two\n    shifted_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\n    #create an\
    \ empty string to store the encrypted string\n    encrypted_string = \"\"\n  \
    \  #loop through the string\n    for i in s\n        #check if the character is\
    \ a letter\n        if i in alphabet\n            #find the index of the letter\
    \ in the alphabet\n            index = findfirst(alphabet, i)\n            #add\
    \ the shifted letter to the encrypted string\n            push!(encrypted_string,\
    \ shifted_alphabet[index])\n        else\n            #add the character to the\
    \ encrypted string\n            push!(encrypted_string, i)\n        end\n    end\n\
    \    #return the encrypted string\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp9_t6zkh7.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp9_t6zkh7.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp9_t6zkh7.jl:35 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp9_t6zkh7.jl:34\ntest set: Error During Test at
    /tmp/tmp9_t6zkh7.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp9_t6zkh7.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp9_t6zkh7.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp9_t6zkh7.jl:34\ntest set: Error During Test at
    /tmp/tmp9_t6zkh7.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted_string\
    \ = encrypted_string * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"\
    abcdefghijklmnopqrstuvwxyz\") .== i)[1] + 2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            encrypted_string = encrypted_string * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1] + 2])\n        else\n    \
    \        encrypted_string = encrypted_string * i\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmtmbtjzc.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpmtmbtjzc.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    #create a dictionary of the alphabet rotated by two places\n    alphabet_rotated\
    \ = Dict('c'=>1,'d'=>2,'e'=>3,'f'=>4,'g'=>5,'h'=>6,'i'=>7,'j'=>8,'k'=>9,'l'=>10,'m'=>11,'n'=>12,'o'=>13,'p'=>14,'q'=>15,'r'=>16,'s'=>17,'t'=>18,'u'=>19,'v'=>20,'w'=>21,'x'=>22,'y'=>23,'z'=>24,'a'=>25,'b'=>26)\n\
    \    #create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    #loop through the string\n    for i in s\n        #check if the\
    \ character is a letter\n        if i in keys(alphabet)\n            #if it is\
    \ a letter, append the encrypted letter to the encrypted string\n            push!(encrypted_string,\
    \ keys(alphabet_rotated)[values(alphabet_rotated) .== values(alphabet)[i]])\n\
    \        else\n            #if it is not a letter, append the character to the\
    \ encrypted string\n            push!(encrypted_string, i)\n        end\n    end\n\
    \    #return the encrypted string\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpnw89dxdl.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    getindex(::Base.ValueIterator{Dict{Char, Int64}}, ::Char)\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpnw89dxdl.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpnw89dxdl.jl:33 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpnw89dxdl.jl:32\ntest set: Error During Test at
    /tmp/tmpnw89dxdl.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching getindex(::Base.ValueIterator{Dict{Char,
    Int64}}, ::Char)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnw89dxdl.jl:19\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnw89dxdl.jl:34 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnw89dxdl.jl:32\ntest set: Error
    During Test at /tmp/tmpnw89dxdl.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching getindex(::Base.ValueIterator{Dict{Char,
    Int64}}, ::Char)\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpnw89dxdl.jl:19\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnw89dxdl.jl:35 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnw89dxdl.jl:32\n'''
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    \"\"\"\n    Encrypts a string by rotating the\
    \ alphabet by two places\n    \"\"\"\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    encrypted_string = \"\"\n    for letter in s\n        if letter in alphabet\n\
    \            index = findfirst(alphabet, letter)\n            encrypted_string\
    \ = encrypted_string * alphabet[index + 2]\n        else\n            encrypted_string\
    \ = encrypted_string * letter\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpn_6z99em.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpn_6z99em.jl:15\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpn_6z99em.jl:28 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpn_6z99em.jl:27\ntest set: Error During Test at
    /tmp/tmpn_6z99em.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpn_6z99em.jl:15\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpn_6z99em.jl:29 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpn_6z99em.jl:27\ntest set: Error During Test at
    /tmp/tmpn_6z99em.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            append!(encrypted, \" \")\n        else\n          \
    \  append!(encrypted, chr(int(i) + 2))\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8r4qi5k4.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp8r4qi5k4.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp8r4qi5k4.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp8r4qi5k4.jl:22\ntest set: Error During Test at
    /tmp/tmp8r4qi5k4.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8r4qi5k4.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8r4qi5k4.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8r4qi5k4.jl:22\ntest set: Error
    During Test at /tmp/tmp8r4qi5k4.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8r4qi5k4.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8r4qi5k4.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8r4qi5k4.jl:22\ntest set: Error
    During Test at /tmp/tmp8r4qi5k4.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8r4qi5k4.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    , \"\")\n    s = replace(s, \".\", \"\")\n    s = replace(s, \",\", \"\")\n  \
    \  s = replace(s, \"!\", \"\")\n    s = replace(s, \"?\", \"\")\n    s = replace(s,\
    \ \";\", \"\")\n    s = replace(s, \":\", \"\")\n    s = replace(s, \"\\\"\",\
    \ \"\")\n    s = replace(s, \"\\'\", \"\")\n    s = replace(s, \"(\", \"\")\n\
    \    s = replace(s, \")\", \"\")\n    s = replace(s, \"-\", \"\")\n    s = replace(s,\
    \ \"1\", \"\")\n    s = replace(s, \"2\", \"\")\n    s = replace(s, \"3\", \"\"\
    )\n    s = replace(s, \"4\", \"\")\n    s = replace(s, \"5\", \"\")\n    s = replace(s,\
    \ \"6\", \"\")\n    s = replace(s, \"7\", \"\")\n    s = replace(s, \"8\", \"\"\
    )\n    s = replace(s, \"9\", \"\")\n    s = replace(s, \"0\", \"\")\n    s = replace(s,\
    \ \"a\", \"c\")\n    s = replace(s, \"b\", \"d\")\n    s = replace(s, \"c\", \"\
    e\")\n    s = replace(s, \"d\", \"f\")\n    s = replace(s, \"e\", \"g\")\n   \
    \ s = replace(s, \"f\", \"h\")\n    s = replace(s, \"g\", \"i\")\n    s = replace(s,\
    \ \"h\", \"j\")\n    s = replace(s, \"i\", \"k\")\n    s = replace(s, \"j\", \"\
    l\")\n    s = replace(s, \"k\", \"m\")\n    s = replace(s, \"l\", \"n\")\n   \
    \ s = replace(s, \"m\", \"o\")\n    s = replace(s, \"n\", \"p\")\n    s = replace(s,\
    \ \"o\", \"q\")\n    s = replace(s, \"p\", \"r\")\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp57bh0wnt.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp57bh0wnt.jl:1\n\
    in expression starting at /tmp/tmp57bh0wnt.jl:1\n"
  stdout: ''
  timestamp: 1659748177
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"e\"=>\"g\"\
    , \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"l\", \"k\"\
    =>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"p\"=>\"r\"\
    , \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"w\", \"v\"\
    =>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n    #create\
    \ an empty string to store the encrypted string\n    encrypted_string = \"\"\n\
    \    #loop through the string\n    for i in s\n        #check if the character\
    \ is a letter\n        if i in keys(alphabet)\n            #if it is, then add\
    \ the encrypted character to the encrypted string\n            encrypted_string\
    \ = encrypted_string * alphabet[i]\n        else\n            #if it is not a\
    \ letter, then just add the character to the encrypted string\n            encrypted_string\
    \ = encrypted_string * i\n        end\n    end\n    #return the encrypted string\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8zjo5n3e.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp8zjo5n3e.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zjo5n3e.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zjo5n3e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8zjo5n3e.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zjo5n3e.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zjo5n3e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8zjo5n3e.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zjo5n3e.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zjo5n3e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8zjo5n3e.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8zjo5n3e.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8zjo5n3e.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp8zjo5n3e.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"\
    =>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"\
    =>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"\
    x\"=>24,\"y\"=>25,\"z\"=>26)\n    #create a dictionary of the alphabet rotated\n\
    \    alphabet_rotated = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"e\"=>7,\"f\"\
    =>8,\"g\"=>9,\"h\"=>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"m\"=>15,\"n\"\
    =>16,\"o\"=>17,\"p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"u\"=>23,\"\
    v\"=>24,\"w\"=>25,\"x\"=>26,\"y\"=>1,\"z\"=>2)\n    #create a string to store\
    \ the encrypted string\n    encrypted_string = \"\"\n    #loop through the string\n\
    \    for i in s\n        #if the character is a space, add a space to the encrypted\
    \ string\n        if i == \" \"\n            encrypted_string = encrypted_string\
    \ * \" \"\n        #else, add the rotated character to the encrypted string\n\
    \        else\n            encrypted_string = encrypted_string * string(alphabet_rotated[string(i)])\n\
    \        end\n    end\n    #return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp11xtkkk_.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp11xtkkk_.jl:32\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"1011\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp11xtkkk_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp11xtkkk_.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp11xtkkk_.jl:33\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"32168910121314\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp11xtkkk_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp11xtkkk_.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp11xtkkk_.jl:34\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"98\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp11xtkkk_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp11xtkkk_.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp11xtkkk_.jl:35\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"722\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp11xtkkk_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp11xtkkk_.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp11xtkkk_.jl:36\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"8372583257837259\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /share"
  timestamp: 1659748179
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \" \"\n            new_string = new_string * i\n        else\n     \
    \       new_string = new_string * (chr(ord(i) + 2))\n        end\n    end\n  \
    \  return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpra35c4ay.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpra35c4ay.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error During Test at
    /tmp/tmpra35c4ay.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    #create a string of the alphabet rotated\
    \ by two places\n    rot_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\n    #create\
    \ a dictionary of the alphabet and the rotated alphabet\n    d = Dict(zip(alphabet,\
    \ rot_alphabet))\n    #create a string to hold the encrypted string\n    encrypted_string\
    \ = \"\"\n    #iterate through the string\n    for i in s\n        #if the character\
    \ is a space, add a space to the encrypted string\n        if i == \" \"\n   \
    \         push!(encrypted_string, \" \")\n        #if the character is not a space,\
    \ add the encrypted character to the encrypted string\n        else\n        \
    \    push!(encrypted_string, d[i])\n        end\n    end\n    #return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpx7lpjplp.jl:34\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpx7lpjplp.jl:23\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpx7lpjplp.jl:34 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpx7lpjplp.jl:33\ntest set: Error During Test at
    /tmp/tmpx7lpjplp.jl:35\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpx7lpjplp.jl:23\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpx7lpjplp.jl:35 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpx7lpjplp.jl:33\n'''
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    encrypted_string = \"\"\n    for i in s\n        if i in alphabet\n     \
    \       encrypted_string = encrypted_string * alphabet[(alphabet.find(i) + 2)\
    \ % 26]\n        else\n            encrypted_string = encrypted_string * i\n \
    \       end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmprng6rxlv.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field find\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmprng6rxlv.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprng6rxlv.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprng6rxlv.jl:23\ntest set: Error
    During Test at /tmp/tmprng6rxlv.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field find\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprng6rxlv.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprng6rxlv.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprng6rxlv.jl:23\ntest set: Error
    During Test at /tmp/tmprng6rxlv.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field find\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprng6rxlv.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprng6rxlv.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprng6rxlv.jl:23\ntest set: Error
    During Test at /tmp/tmprng6rxlv.jl:27\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has no '
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            encrypted = encrypted * i\n        else\n          \
    \  encrypted = encrypted * (chr(ord(i) + 2))\n        end\n    end\n    return\
    \ encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp8ihn50kd.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp8ihn50kd.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp8ihn50kd.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp8ihn50kd.jl:22\ntest set: Error During Test at
    /tmp/tmp8ihn50kd.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8ihn50kd.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ihn50kd.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ihn50kd.jl:22\ntest set: Error
    During Test at /tmp/tmp8ihn50kd.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8ihn50kd.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ihn50kd.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ihn50kd.jl:22\ntest set: Error
    During Test at /tmp/tmp8ihn50kd.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8ihn50kd.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748182
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    #s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n    #s =\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMN\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0koo0df6.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0koo0df6.jl:1\n\
    in expression starting at /tmp/tmp0koo0df6.jl:1\n"
  stdout: ''
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(mod(ord(i) + 2*2, 122)))\n        end\n    end\n    return encrypted\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpwaa__a6u.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpwaa__a6u.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpwaa__a6u.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpwaa__a6u.jl:22\ntest set: Error During Test at
    /tmp/tmpwaa__a6u.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwaa__a6u.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwaa__a6u.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwaa__a6u.jl:22\ntest set: Error
    During Test at /tmp/tmpwaa__a6u.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwaa__a6u.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwaa__a6u.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwaa__a6u.jl:22\ntest set: Error
    During Test at /tmp/tmpwaa__a6u.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwaa__a6u.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748182
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \" \"\n            new_string = new_string * i\n        else\n     \
    \       new_string = new_string * (chr(ord(i) + 2))\n        end\n    end\n  \
    \  return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpra35c4ay.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpra35c4ay.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error During Test at
    /tmp/tmpra35c4ay.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = lowercase(s)\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpil7l8zsx.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpil7l8zsx.jl:42\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"ba\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:43\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"aabbabbab\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:44\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ab\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:45\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"ab\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:46\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"baaabaaabaaaa\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748181
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5, 'f'=>6, 'g'=>7, 'h'=>8,\
    \ 'i'=>9, 'j'=>10, 'k'=>11, 'l'=>12, 'm'=>13, 'n'=>14, 'o'=>15, 'p'=>16, 'q'=>17,\
    \ 'r'=>18, 's'=>19, 't'=>20, 'u'=>21, 'v'=>22, 'w'=>23, 'x'=>24, 'y'=>25, 'z'=>26)\n\
    \    # create a dictionary of the alphabet rotated by two places\n    alphabet_rotated\
    \ = Dict('a'=>3, 'b'=>4, 'c'=>5, 'd'=>6, 'e'=>7, 'f'=>8, 'g'=>9, 'h'=>10, 'i'=>11,\
    \ 'j'=>12, 'k'=>13, 'l'=>14, 'm'=>15, 'n'=>16, 'o'=>17, 'p'=>18, 'q'=>19, 'r'=>20,\
    \ 's'=>21, 't'=>22, 'u'=>23, 'v'=>24, 'w'=>25, 'x'=>26, 'y'=>1, 'z'=>2)\n    #\
    \ create a dictionary of the alphabet rotated by two places\n    alphabet_rotated_2\
    \ = Dict('a'=>5, 'b'=>6, 'c'=>7, 'd'=>8, 'e'=>9, 'f'=>10, 'g'=>11, 'h'=>12, 'i'=>13,\
    \ 'j'=>14, 'k'=>15, 'l'=>16, 'm'=>17, 'n'=>18, 'o'=>19, 'p'=>20, 'q'=>21, 'r'=>22,\
    \ 's'=>23, 't'=>24, 'u'=>25, 'v'=>26, 'w'=>1, '\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpus_ke97b.jl:19\nin expression starting at /tmp/tmpus_ke97b.jl:19\n"
  stdout: ''
  timestamp: 1659748177
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # s = \"a\"\n    # s = \"ab\"\n    # s = \"\
    abc\"\n    # s = \"abcd\"\n    # s = \"abcde\"\n    # s = \"abcdef\"\n    # s\
    \ = \"abcdefg\"\n    # s = \"abcdefgh\"\n    # s = \"abcdefghi\"\n    # s = \"\
    abcdefghij\"\n    # s = \"abcdefghijk\"\n    # s = \"abcdefghijkl\"\n    # s =\
    \ \"abcdefghijklm\"\n    # s = \"abcdefghijklmn\"\n    # s = \"abcdefghijklmno\"\
    \n    # s = \"abcdefghijklmnop\"\n    # s = \"abcdefghijklmnopq\"\n    # s = \"\
    abcdefghijklmnopqr\"\n    # s = \"abcdefghijklmnopqrs\"\n    # s = \"abcdefghijklmnopqrst\"\
    \n    # s = \"abcdefghijklmnopqrstu\"\n    # s = \"abcdefghijklmnopqrstuv\"\n\
    \    # s = \"abcdefghijklmnopqrstuvw\"\n    # s = \"abcdefghijklmnopqrstuvwx\"\
    \n    # s = \"abcdefghijklmnopqrstuvwxy\"\n    # s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    # s = \"abcdefghijklmnopqrstuvwxyza\"\n    # s = \"abcdefghijklmnopqrstuvwxyzab\"\
    \n    # s = \"abcdefghijklmnopqrstuvwxyzabc\"\n    # s = \"abcdefghijklmnopqrstuvwxyzabcd\"\
    \n    # s = \"abcdefghijklmnopqrstuvwxyzabcde\"\n    # s = \"abcdefghijklmnopqrstuvwxyzabcdef\"\
    \n    # s = \"abcdefghijklmnopqrstuvwxyzabcdefg\"\n    # s =\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptpepvsdr.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptpepvsdr.jl:1\n\
    in expression starting at /tmp/tmptpepvsdr.jl:1\n"
  stdout: ''
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i == \" \"\n            encrypted_string *= \" \"\n        else\n \
    \           encrypted_string *= string(next(i,2))\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjpc2jx6o.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: next not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpjpc2jx6o.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpjpc2jx6o.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpjpc2jx6o.jl:22\ntest set: Error During Test at
    /tmp/tmpjpc2jx6o.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: next not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjpc2jx6o.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjpc2jx6o.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjpc2jx6o.jl:22\ntest set: Error
    During Test at /tmp/tmpjpc2jx6o.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: next not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjpc2jx6o.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjpc2jx6o.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjpc2jx6o.jl:22\ntest set: Error
    During Test at /tmp/tmpjpc2jx6o.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: next not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjpc2jx6o.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.'
  timestamp: 1659748184
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    #create a dictionary to store the alphabet\
    \ and its encrypted version\n    alphabet_dict = Dict()\n    #create a list to\
    \ store the alphabet\n    alphabet_list = []\n    #create a list to store the\
    \ encrypted alphabet\n    encrypted_alphabet_list = []\n    #create a list to\
    \ store the alphabet in reverse order\n    alphabet_list_reverse = []\n    #create\
    \ a list to store the encrypted alphabet in reverse order\n    encrypted_alphabet_list_reverse\
    \ = []\n    #create a list to store the alphabet in reverse order\n    alphabet_list_reverse\
    \ = []\n    #create a list to store the encrypted alphabet in reverse order\n\
    \    encrypted_alphabet_list_reverse = []\n    #create a list to store the alphabet\
    \ in reverse order\n    alphabet_list_reverse = []\n    #create a list to store\
    \ the encrypted alphabet in reverse order\n    encrypted_alphabet_list_reverse\
    \ = []\n    #create a list to store the alphabet in reverse order\n    alphabet_list_reverse\
    \ = []\n    #create a list to store the encrypted alphabet in reverse order\n\
    \    encrypted_alphabet_list_reverse = []\n    #create a list to store the alphabet\
    \ in reverse order\n    alphabet_list_reverse = []\n    #create a list to store\
    \ the encrypted alphabet in reverse order\n    encrypted_alphabet_list_reverse\
    \ = []\n    #create a list to store the alphabet in reverse order\n    alphabet_list_reverse\
    \ = []\n    #create a list to store the encrypted alphabet in reverse order\n\
    \    encrypted_alphabet_list_reverse = []\n    #create a list to store the alphabet\
    \ in reverse order\n    alphabet_list_reverse = []\n    #create a list to store\
    \ the encrypted alphabet in reverse order\n    encrypted_alphabet_list_reverse\
    \ = []\n    #create a list to store the alphabet in reverse order\n    alphabet_list_reverse\
    \ = []\n    #create a list to store the encrypted alphabet in reverse order\n\
    \    encrypted_alphabet_list_reverse = []\n    #create a list to store the alphabet\
    \ in reverse order\n    alphabet_list_reverse = []\n    #create a list to store\
    \ the encrypted alphabet in reverse order\n    encrypted_alphabet_list_reverse\
    \ = []\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdt2s2wqx.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdt2s2wqx.jl:1\n\
    in expression starting at /tmp/tmpdt2s2wqx.jl:1\n"
  stdout: ''
  timestamp: 1659748181
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # Create an array of the alphabet\n    alphabet\
    \ = ['a':'z']\n    # Create an empty string to store the encrypted string\n  \
    \  encrypted_string = \"\"\n    # Iterate through the string\n    for i in s\n\
    \        # Check if the character is a letter\n        if i in alphabet\n    \
    \        # Find the index of the letter in the alphabet\n            index = findfirst(alphabet,\
    \ i)\n            # Add 2 to the index\n            index += 2\n            #\
    \ Check if the index is greater than the length of the alphabet\n            if\
    \ index > length(alphabet)\n                # If it is, subtract the length of\
    \ the alphabet from the index\n                index -= length(alphabet)\n   \
    \         end\n            # Add the letter to the encrypted string\n        \
    \    push!(encrypted_string, alphabet[index])\n        else\n            # If\
    \ the character is not a letter, add it to the encrypted string\n            push!(encrypted_string,\
    \ i)\n        end\n    end\n    # Return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjjgllqos.jl:40\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpjjgllqos.jl:29\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpjjgllqos.jl:40 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpjjgllqos.jl:39\ntest set: Error During Test at
    /tmp/tmpjjgllqos.jl:41\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpjjgllqos.jl:29\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpjjgllqos.jl:41 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpjjgllqos.jl:39\ntest'
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i in \"abcdefghijklmnopqrstuvwxyz\"\n            encrypted = encrypted * string(char(mod(int(i)\
    \ + 2*2, 26) + 97))\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    \
    \        encrypted = encrypted * string(char(mod(int(i) + 2*2, 26) + 65))\n  \
    \      else\n            encrypted = encrypted * string(i)\n        end\n    end\n\
    \    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp3mrzpgjn.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp3mrzpgjn.jl:11\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp3mrzpgjn.jl:25 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp3mrzpgjn.jl:24\ntest set: Error During Test at
    /tmp/tmp3mrzpgjn.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp3mrzpgjn.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3mrzpgjn.jl:26 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3mrzpgjn.jl:24\ntest set: Error
    During Test at /tmp/tmp3mrzpgjn.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp3mrzpgjn.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3mrzpgjn.jl:27 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3mrzpgjn.jl:24\ntest set: Error
    During Test at /tmp/tmp3mrzpgjn.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp3mrzpgjn.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ i)\n        end\n    end\n    return encrypted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp80bmucec.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp80bmucec.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp80bmucec.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp80bmucec.jl:22\ntest set: Error During Test at
    /tmp/tmp80bmucec.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp80bmucec.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp80bmucec.jl:24 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp80bmucec.jl:22\ntest'
  timestamp: 1659748184
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    #create an empty string to store the encrypted string\n    encrypted = \"\
    \"\n    #loop through the string\n    for i in s\n        #check if the character\
    \ is a letter\n        if i in keys(alphabet)\n            #if the letter is a\
    \ letter, add the encrypted character to the string\n            encrypted = string(encrypted,\
    \ alphabet[i] + 2)\n        else\n            #if the character is not a letter,\
    \ add the character to the string\n            encrypted = string(encrypted, i)\n\
    \        end\n    end\n    #return the encrypted string\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprov7m97s.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmprov7m97s.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"1011\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprov7m97s.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprov7m97s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprov7m97s.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"32168910121314\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprov7m97s.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprov7m97s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprov7m97s.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"98\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprov7m97s.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprov7m97s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprov7m97s.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"722\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprov7m97s.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprov7m97s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprov7m97s.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"8372583257837259\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /share"
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    #create a string of the alphabet rotated\
    \ by two places\n    rotated_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\n    #create\
    \ an empty string to store the encrypted string\n    encrypted_string = \"\"\n\
    \    #loop through each character in the string\n    for i in s\n        #check\
    \ if the character is a space\n        if i == \" \"\n            #if it is a\
    \ space, add a space to the encrypted string\n            push!(encrypted_string,\
    \ \" \")\n        else\n            #if it is not a space, find the index of the\
    \ character in the alphabet\n            index = findfirst(alphabet, i)\n    \
    \        #add the character at the same index in the rotated alphabet to the encrypted\
    \ string\n            push!(encrypted_string, rotated_alphabet[index])\n     \
    \   end\n    end\n    #return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpuzpjyfmc.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpuzpjyfmc.jl:22\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpuzpjyfmc.jl:35 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpuzpjyfmc.jl:34\ntest set: Error During Test at
    /tmp/tmpuzpjyfmc.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpuzpjyfmc.jl:22\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpuzpjyfmc.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpuzpjyfmc.jl:34\ntest set: Error During Test at
    /tmp/tmpuzpjyfmc.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # Create a dictionary of the alphabet\n   \
    \ alphabet = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"e\"\
    =>\"g\", \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"l\"\
    , \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"p\"\
    =>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"w\"\
    , \"v\"=>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n    #\
    \ Create an empty string to store the encrypted message\n    encrypted = \"\"\n\
    \    # Loop through the string and replace the letters with the encrypted letters\n\
    \    for i in s\n        encrypted = string(encrypted, alphabet[i])\n    end\n\
    \    # Return the encrypted message\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpfwd63c_o.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  KeyError: key \''h\'' not
    found\n  Stacktrace:\n   [1] getindex(h::Dict{String, String}, key::Char)\n     @
    Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpfwd63c_o.jl:14\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwd63c_o.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwd63c_o.jl:23\ntest set: Error
    During Test at /tmp/tmpfwd63c_o.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  KeyError: key \''a\'' not found\n  Stacktrace:\n   [1] getindex(h::Dict{String,
    String}, key::Char)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpfwd63c_o.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwd63c_o.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwd63c_o.jl:23\ntest set: Error
    During Test at /tmp/tmpfwd63c_o.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  KeyError: key \''g\'' not found\n  Stacktrace:\n   [1] getindex(h::Dict{String,
    String}, key::Char)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpfwd63c_o.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwd63c_o.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwd63c_o.jl:23\ntest set: Error
    During Test at /tmp/tmpfwd63c_o.jl:2'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i == \" \"\n            push!(encrypted_string, \" \")\n        else\n\
    \            push!(encrypted_string, chr(ord(i) + 2))\n        end\n    end\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcfd_bk_y.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error During Test at
    /tmp/tmpcfd_bk_y.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error
    During Test at /tmp/tmpcfd_bk_y.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error
    During Test at /tmp/tmpcfd_bk_y.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748185
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = lowercase(s)\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s, \"b\" => \"\
    d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\" => \"f\")\n\
    \    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"h\")\n    s\
    \ = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n    s = replace(s,\
    \ \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s = replace(s, \"k\"\
    \ => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s, \"m\" => \"\
    o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\" => \"q\")\n\
    \    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"s\")\n    s\
    \ = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n    s = replace(s,\
    \ \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s = replace(s, \"v\"\
    \ => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s, \"x\" => \"\
    z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\" => \"b\")\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjuxah3dm.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmpjuxah3dm.jl:43\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"ba\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:44\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"aabbabbab\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:45\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ab\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:46\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"ab\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:47\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"baaabaaabaaaa\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a new string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    #loop through the string\n    for i\
    \ in s\n        #check if the character is a letter\n        if i in string(\"\
    abcdefghijklmnopqrstuvwxyz\")\n            #find the index of the letter in the\
    \ alphabet\n            index = findfirst(string(\"abcdefghijklmnopqrstuvwxyz\"\
    ), i)\n            #add two to the index\n            index += 2\n           \
    \ #check if the index is greater than the length of the alphabet\n           \
    \ if index > length(string(\"abcdefghijklmnopqrstuvwxyz\"))\n                #subtract\
    \ the length of the alphabet from the index\n                index -= length(string(\"\
    abcdefghijklmnopqrstuvwxyz\"))\n            end\n            #add the new letter\
    \ to the encrypted string\n            push!(encrypted_string, string(\"abcdefghijklmnopqrstuvwxyz\"\
    )[index])\n        else\n            #add the character to the encrypted string\n\
    \            push!(encrypted_string, i)\n        end\n    end\n    #return the\
    \ encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphh5y2vyq.jl:38\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmphh5y2vyq.jl:15\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphh5y2vyq.jl:38 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphh5y2vyq.jl:37\ntest set: Error During Test at
    /tmp/tmphh5y2vyq.jl:39\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmphh5y2vyq.jl:15\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphh5y2vyq.jl:39 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphh5y2vyq.jl:37\ntest set: Error During Test at
    /tmp/tmphh5y2vyq.jl:40\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    #create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    #iterate through the string\n    for\
    \ i in s\n        #check if the character is a letter\n        if isalpha(i)\n\
    \            #if it is a letter, find the index of the letter in the alphabet\n\
    \            index = findfirst(alphabet, i)\n            #add two to the index\n\
    \            index += 2\n            #check if the index is greater than the length\
    \ of the alphabet\n            if index > length(alphabet)\n                #if\
    \ it is, subtract the length of the alphabet from the index\n                index\
    \ -= length(alphabet)\n            end\n            #add the letter at the index\
    \ to the encrypted string\n            push!(encrypted_string, alphabet[index])\n\
    \        else\n            #if it is not a letter, add it to the encrypted string\n\
    \            push!(encrypted_string, i)\n        end\n    end\n    #return the\
    \ encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpugsl3a61.jl:40\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: isalpha not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpugsl3a61.jl:15\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpugsl3a61.jl:40 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpugsl3a61.jl:39\ntest set: Error
    During Test at /tmp/tmpugsl3a61.jl:41\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpugsl3a61.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpugsl3a61.jl:41 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpugsl3a61.jl:39\ntest set: Error
    During Test at /tmp/tmpugsl3a61.jl:42\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpugsl3a61.jl:15\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpugsl3a61.jl:42 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpugsl3a61.jl:39\ntest set: Error
    During Test at /tmp/tmpugsl3a61.jl:43\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpugsl3a61.jl:15\n   [2] macro expansion\n     @ /shared/cent'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary\n    dict = Dict()\n \
    \   #create a list of letters\n    letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \    #create a list of numbers\n    numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]\n\
    \    #create a dictionary of letters and numbers\n    dict = Dict(zip(letters,numbers))\n\
    \    #create a list of the letters in the string\n    s_list = collect(s)\n  \
    \  #create a list of the numbers in the string\n    s_numbers = []\n    #create\
    \ a list of the encrypted numbers in the string\n    s_encrypted = []\n    #create\
    \ a list of the encrypted letters in the string\n    s_encrypted_letters = []\n\
    \    #create a list of the encrypted string\n    s_encrypted_string = []\n   \
    \ #iterate through the list of letters in the string\n    for i in s_list\n  \
    \      #append the numbers of the letters in the string to the list of numbers\
    \ in the string\n        push!(s_numbers,dict[i])\n    end\n    #iterate through\
    \ the list of numbers in the string\n    for i in s_numbers\n        #append the\
    \ encrypted numbers to the list of encrypted numbers in the string\n        push!(s_encrypted,i*2)\n\
    \    end\n    #iterate through the list of encrypted numbers in the string\n \
    \   for i in s_encrypted\n        #append the encrypted letters to the list of\
    \ encrypted letters in the string\n        push!(s_encrypted_letters,dict[i])\n\
    \    end\n    #iterate through the list of encrypted letters in the string\n \
    \   for i in s_encrypted_letters\n        #append the encrypted string to the\
    \ list of encrypted string\n        push!(s_encrypted_string,i)\n    end\n   \
    \ #return the encrypted string\n    return s_encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmppny4aqtk.jl:54\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  KeyError: key 16 not found\n  Stacktrace:\n   [1]
    getindex(h::Dict{Char, Int64}, key::Int64)\n     @ Base ./dict.jl:481\n   [2]
    encrypt(s::String)\n     @ Main /tmp/tmppny4aqtk.jl:39\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmppny4aqtk.jl:54 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmppny4aqtk.jl:53\ntest set: Error During Test at
    /tmp/tmppny4aqtk.jl:55\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  KeyError: key 2 not found\n  Stacktrace:\n   [1] getindex(h::Dict{Char,
    Int64}, key::Int64)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmppny4aqtk.jl:39\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmppny4aqtk.jl:55 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmppny4aqtk.jl:53\ntest set: Error
    During Test at /tmp/tmppny4aqtk.jl:56\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  KeyError: key 14 not found\n  Stacktrace:\n   [1] getindex(h::Dict{Char,
    Int64}, key::Int64)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmppny4aqtk.jl:39\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmppny4aqtk.jl:56 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmppny4aqtk.jl:53\ntest set: Error
    During Test at /tmp/tmppny4aqtk.jl:57\n  Test threw '
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted_string\
    \ = encrypted_string * string(string(\"abcdefghijklmnopqrstuvwxyz\")[string(\"\
    abcdefghijklmnopqrstuvwxyz\").index(i)+2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            encrypted_string = encrypted_string * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").index(i)+2])\n        else\n        \
    \    encrypted_string = encrypted_string * i\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpmya70xjw.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field index\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpmya70xjw.jl:11\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmya70xjw.jl:11\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmya70xjw.jl:11\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:27 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has '
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # Initialize the alphabet\n    alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    # Initialize the encrypted string\n    encrypted_string\
    \ = \"\"\n    # Iterate through the string\n    for i in s\n        # If the character\
    \ is a space, add a space to the encrypted string\n        if i == \" \"\n   \
    \         push!(encrypted_string, \" \")\n        # If the character is a letter,\
    \ add the corresponding encrypted letter to the encrypted string\n        else\n\
    \            push!(encrypted_string, alphabet[(findfirst(alphabet, i) + 2) % 26])\n\
    \        end\n    end\n    # Return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpqoew8yhv.jl:30\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpqoew8yhv.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpqoew8yhv.jl:30 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpqoew8yhv.jl:29\ntest set: Error During Test at
    /tmp/tmpqoew8yhv.jl:31\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpqoew8yhv.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpqoew8yhv.jl:31 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpqoew8yhv.jl:29\ntest set: Error During Test at
    /tmp/tmpqoew8yhv.jl:32\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmc76xb4q.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpmc76xb4q.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error During Test at
    /tmp/tmpmc76xb4q.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmc76xb4q.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpmc76xb4q.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error During Test at
    /tmp/tmpmc76xb4q.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    new_string = \"\"\n\
    \    for i in s\n        if i == \" \"\n            new_string = new_string *\
    \ i\n        else\n            new_string = new_string * (chr(int(Int(i) + 2)))\n\
    \        end\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp2gskpi0n.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp2gskpi0n.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2gskpi0n.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2gskpi0n.jl:23\ntest set: Error
    During Test at /tmp/tmp2gskpi0n.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp2gskpi0n.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2gskpi0n.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2gskpi0n.jl:23\ntest set: Error
    During Test at /tmp/tmp2gskpi0n.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp2gskpi0n.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2gskpi0n.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2gskpi0n.jl:23\ntest set: Error
    During Test at /tmp/tmp2gskpi0n.jl:27\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary with the alphabet\n  \
    \  alphabet = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"\
    e\"=>\"g\", \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"\
    l\", \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"\
    p\"=>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"\
    w\", \"v\"=>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n \
    \   #create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    #loop through the string and replace each character with the encrypted\
    \ character\n    for i in s\n        encrypted_string = string(encrypted_string,\
    \ alphabet[i])\n    end\n    #return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp9hkepms9.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  KeyError: key \''h\'' not
    found\n  Stacktrace:\n   [1] getindex(h::Dict{String, String}, key::Char)\n     @
    Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp9hkepms9.jl:14\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9hkepms9.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9hkepms9.jl:23\ntest set: Error
    During Test at /tmp/tmp9hkepms9.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  KeyError: key \''a\'' not found\n  Stacktrace:\n   [1] getindex(h::Dict{String,
    String}, key::Char)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp9hkepms9.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9hkepms9.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9hkepms9.jl:23\ntest set: Error
    During Test at /tmp/tmp9hkepms9.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  KeyError: key \''g\'' not found\n  Stacktrace:\n   [1] getindex(h::Dict{String,
    String}, key::Char)\n     @ Base ./dict.jl:481\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp9hkepms9.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9hkepms9.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9hkepms9.jl:23\ntest set: Error
    During Test at /tmp/tmp9hkepms9.jl:2'
  timestamp: 1659748185
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    for i in s\n        if i == \"a\"\n       \
    \     i = \"c\"\n        elseif i == \"b\"\n            i = \"d\"\n        elseif\
    \ i == \"c\"\n            i = \"e\"\n        elseif i == \"d\"\n            i\
    \ = \"f\"\n        elseif i == \"e\"\n            i = \"g\"\n        elseif i\
    \ == \"f\"\n            i = \"h\"\n        elseif i == \"g\"\n            i =\
    \ \"i\"\n        elseif i == \"h\"\n            i = \"j\"\n        elseif i ==\
    \ \"i\"\n            i = \"k\"\n        elseif i == \"j\"\n            i = \"\
    l\"\n        elseif i == \"k\"\n            i = \"m\"\n        elseif i == \"\
    l\"\n            i = \"n\"\n        elseif i == \"m\"\n            i = \"o\"\n\
    \        elseif i == \"n\"\n            i = \"p\"\n        elseif i == \"o\"\n\
    \            i = \"q\"\n        elseif i == \"p\"\n            i = \"r\"\n   \
    \     elseif i == \"q\"\n            i = \"s\"\n        elseif i == \"r\"\n  \
    \          i = \"t\"\n        elseif i == \"s\"\n            i = \"u\"\n     \
    \   elseif i == \"t\"\n            i = \"v\"\n        elseif i == \"u\"\n    \
    \        i = \"w\"\n        elseif i == \"v\"\n            i = \"x\"\n       \
    \ elseif i == \"w\"\n            i = \"y\"\n        elseif i == \"x\"\n      \
    \      i = \"z\"\n        elseif i == \"y\"\n            i = \"a\"\n        elseif\
    \ i == \"z\"\n            i = \"b\"\n        end\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd_xig558.jl:67

    '
  stdout: "test set: Test Failed at /tmp/tmpd_xig558.jl:70\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_xig558.jl:70 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_xig558.jl:69\ntest set: Test\
    \ Failed at /tmp/tmpd_xig558.jl:71\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_xig558.jl:71 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_xig558.jl:69\ntest set: Test\
    \ Failed at /tmp/tmpd_xig558.jl:72\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_xig558.jl:72 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_xig558.jl:69\ntest set: Test\
    \ Failed at /tmp/tmpd_xig558.jl:73\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_xig558.jl:73 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_xig558.jl:69\ntest set: Test\
    \ Failed at /tmp/tmpd_xig558.jl:74\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a new string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    # iterate through the string\n    for\
    \ i in s\n        # if the character is a letter, encrypt it\n        if i in\
    \ string(['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'])\n\
    \            # get the index of the letter in the alphabet\n            index\
    \ = findfirst(string(['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']),\
    \ i)\n            # if the index is greater than 23, subtract 24 from the index\n\
    \            if index > 23\n                index = index - 24\n            end\n\
    \            # add the encrypted letter to the encrypted string\n            encrypted_string\
    \ = encrypted_string * string(['c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','a','b'])[index]\n\
    \        # if the character is not a letter, add it to the encrypted string\n\
    \        else\n            encrypted_string = encrypted_string * i\n        end\n\
    \    end\n    # return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpn5jso_4g.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpn5jso_4g.jl:15\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpn5jso_4g.jl:35 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpn5jso_4g.jl:34\ntest set: Error During Test at
    /tmp/tmpn5jso_4g.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpn5jso_4g.jl:15\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpn5jso_4g.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpn5jso_4g.jl:34\ntest set: Error During Test at
    /tmp/tmpn5jso_4g.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748185
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    #create a dictionary of the alphabet rotated by two\n    alphabet_rotated\
    \ = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    #create an empty string\n    encrypted_string = \"\"\n    #iterate through\
    \ the string\n    for i in s\n        #check if the letter is in the dictionary\n\
    \        if i in keys(alphabet)\n            #if it is, add the rotated letter\
    \ to the empty string\n            encrypted_string = encrypted_string * string(alphabet_rotated[i])\n\
    \        else\n            #if it is not, add the letter to the empty string\n\
    \            encrypted_string = encrypted_string * string(i)\n        end\n  \
    \  end\n    #return the encrypted string\n    return encrypted_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2gwtse8d.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp2gwtse8d.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"1011\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gwtse8d.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gwtse8d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp2gwtse8d.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"32168910121314\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gwtse8d.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gwtse8d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp2gwtse8d.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"98\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gwtse8d.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gwtse8d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp2gwtse8d.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"722\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2gwtse8d.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2gwtse8d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp2gwtse8d.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"8372583257837259\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /share"
  timestamp: 1659748186
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    # loop through the string\n    for\
    \ i in s\n        # if the character is a letter\n        if i in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n            # find the index of the character in the alphabet\n           \
    \ index = findfirst(string(\"abcdefghijklmnopqrstuvwxyz\"), i)\n            #\
    \ shift the index by 2\n            index += 2\n            # if the index is\
    \ greater than the length of the alphabet\n            if index > length(string(\"\
    abcdefghijklmnopqrstuvwxyz\"))\n                # subtract the length of the alphabet\
    \ from the index\n                index -= length(string(\"abcdefghijklmnopqrstuvwxyz\"\
    ))\n            end\n            # append the character at the shifted index to\
    \ the encrypted string\n            push!(encrypted_string, string(\"abcdefghijklmnopqrstuvwxyz\"\
    )[index])\n        else\n            # if the character is not a letter, append\
    \ it to the encrypted string\n            push!(encrypted_string, i)\n       \
    \ end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprdni3f2s.jl:38\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmprdni3f2s.jl:15\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmprdni3f2s.jl:38 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmprdni3f2s.jl:37\ntest set: Error During Test at
    /tmp/tmprdni3f2s.jl:39\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmprdni3f2s.jl:15\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmprdni3f2s.jl:39 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmprdni3f2s.jl:37\ntest set: Error During Test at
    /tmp/tmprdni3f2s.jl:40\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748187
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = lowercase(s)\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s, \"b\" => \"\
    d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\" => \"f\")\n\
    \    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"h\")\n    s\
    \ = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n    s = replace(s,\
    \ \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s = replace(s, \"k\"\
    \ => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s, \"m\" => \"\
    o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\" => \"q\")\n\
    \    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"s\")\n    s\
    \ = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n    s = replace(s,\
    \ \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s = replace(s, \"v\"\
    \ => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s, \"x\" => \"\
    z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\" => \"b\")\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjuxah3dm.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmpjuxah3dm.jl:43\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"ba\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:44\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"aabbabbab\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:45\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ab\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:46\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"ab\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:47\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"baaabaaabaaaa\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == ' '\n            push!(encrypted, ' ')\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpjut4d36r.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpjut4d36r.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpjut4d36r.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpjut4d36r.jl:22\ntest set: Error During Test at
    /tmp/tmpjut4d36r.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjut4d36r.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjut4d36r.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjut4d36r.jl:22\ntest set: Error
    During Test at /tmp/tmpjut4d36r.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjut4d36r.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjut4d36r.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjut4d36r.jl:22\ntest set: Error
    During Test at /tmp/tmpjut4d36r.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjut4d36r.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748187
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # convert string to lowercase\n    s = lowercase(s)\n\
    \    # create a dictionary of the alphabet\n    alphabet = Dict('a' => 1, 'b'\
    \ => 2, 'c' => 3, 'd' => 4, 'e' => 5, 'f' => 6, 'g' => 7, 'h' => 8, 'i' => 9,\
    \ 'j' => 10, 'k' => 11, 'l' => 12, 'm' => 13, 'n' => 14, 'o' => 15, 'p' => 16,\
    \ 'q' => 17, 'r' => 18, 's' => 19, 't' => 20, 'u' => 21, 'v' => 22, 'w' => 23,\
    \ 'x' => 24, 'y' => 25, 'z' => 26)\n    # create a dictionary of the alphabet\
    \ shifted by two\n    alphabet_shift = Dict('a' => 3, 'b' => 4, 'c' => 5, 'd'\
    \ => 6, 'e' => 7, 'f' => 8, 'g' => 9, 'h' => 10, 'i' => 11, 'j' => 12, 'k' =>\
    \ 13, 'l' => 14, 'm' => 15, 'n' => 16, 'o' => 17, 'p' => 18, 'q' => 19, 'r' =>\
    \ 20, 's' => 21, 't' => 22, 'u' => 23, 'v' => 24, 'w' => 25, 'x' => 26, 'y' =>\
    \ 1, 'z' => 2)\n    # create a string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # if the character\
    \ is a letter, then encrypt it\n        if i in keys(alphabet)\n            encrypted_string\
    \ = string(encrypted_string, get(alphabet_shift, i, 0))\n        # if the character\
    \ is not a letter, then do not encrypt it\n        else\n            encrypted_string\
    \ = string(encrypted_string, i)\n        end\n    end\n    # return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpziyh6r0h.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpziyh6r0h.jl:34\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"1011\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziyh6r0h.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziyh6r0h.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpziyh6r0h.jl:35\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"32168910121314\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziyh6r0h.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziyh6r0h.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpziyh6r0h.jl:36\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"98\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziyh6r0h.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziyh6r0h.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpziyh6r0h.jl:37\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"722\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpziyh6r0h.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpziyh6r0h.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpziyh6r0h.jl:38\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"8372583257837259\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /share"
  timestamp: 1659748187
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted_string\
    \ = encrypted_string * string(string(\"abcdefghijklmnopqrstuvwxyz\")[string(\"\
    abcdefghijklmnopqrstuvwxyz\").index(i)+2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            encrypted_string = encrypted_string * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").index(i)+2])\n        else\n        \
    \    encrypted_string = encrypted_string * i\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpmya70xjw.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field index\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpmya70xjw.jl:11\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmya70xjw.jl:11\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmya70xjw.jl:11\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:27 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has '
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    # create a dictionary of the alphabet rotated\n    alphabet_rotated = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # loop through the string\n    for i in s\n        # check if the\
    \ character is a letter\n        if i in alphabet\n            # if it is a letter,\
    \ get the value of the letter from the dictionary\n            value = alphabet[i]\n\
    \            # get the rotated value of the letter\n            rotated_value\
    \ = alphabet_rotated[i]\n            # add the rotated value to the encrypted\
    \ string\n            push!(encrypted_string,rotated_value)\n        else\n  \
    \          # if it is not a letter, add it to the encrypted string\n         \
    \   push!(encrypted_string,i)\n        end\n    end\n    # return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp_hqbsnj9.jl:37\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  AbstractDict collections only
    contain Pairs;\n  Either look for e.g. A=>B instead, or use the `keys` or `values`\n  function
    if you are looking for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Int64})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmp_hqbsnj9.jl:17\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmp_hqbsnj9.jl:37 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmp_hqbsnj9.jl:36\ntest set: Error During Test at
    /tmp/tmp_hqbsnj9.jl:38\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  AbstractDict collections only contain Pairs;\n  Either look
    for e.g. A=>B instead, or use the `keys` or `values`\n  function if you are looking
    for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Int64})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmp_hqbsnj9.jl:17\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmp_hqbsnj9.jl:38 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmp_hqbsnj9.jl:36\ntest set: Error During Test at
    /tmp/tmp_hqbsnj9.jl:39\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  AbstractDict collections only contain Pairs;\n  Either look for e.g.
    A=>B instead, or use the `keys` or `values`\n  function if you are looking for
    a key or value respectively.\n  Stacktrace:\n   [1] er'
  timestamp: 1659748189
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_s = \"\"\n    for i in s\n        if i\
    \ == \" \"\n            new_s = new_s * i\n        else\n            new_s = new_s\
    \ * (i + 2)\n        end\n    end\n    return new_s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprh0a6gy7.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmprh0a6gy7.jl:23\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprh0a6gy7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprh0a6gy7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprh0a6gy7.jl:24\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprh0a6gy7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprh0a6gy7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprh0a6gy7.jl:25\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprh0a6gy7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprh0a6gy7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprh0a6gy7.jl:26\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprh0a6gy7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprh0a6gy7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprh0a6gy7.jl:27\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748188
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = s.replace(\"a\"\
    , \"c\")\n    s = s.replace(\"b\", \"d\")\n    s = s.replace(\"c\", \"e\")\n \
    \   s = s.replace(\"d\", \"f\")\n    s = s.replace(\"e\", \"g\")\n    s = s.replace(\"\
    f\", \"h\")\n    s = s.replace(\"g\", \"i\")\n    s = s.replace(\"h\", \"j\")\n\
    \    s = s.replace(\"i\", \"k\")\n    s = s.replace(\"j\", \"l\")\n    s = s.replace(\"\
    k\", \"m\")\n    s = s.replace(\"l\", \"n\")\n    s = s.replace(\"m\", \"o\")\n\
    \    s = s.replace(\"n\", \"p\")\n    s = s.replace(\"o\", \"q\")\n    s = s.replace(\"\
    p\", \"r\")\n    s = s.replace(\"q\", \"s\")\n    s = s.replace(\"r\", \"t\")\n\
    \    s = s.replace(\"s\", \"u\")\n    s = s.replace(\"t\", \"v\")\n    s = s.replace(\"\
    u\", \"w\")\n    s = s.replace(\"v\", \"x\")\n    s = s.replace(\"w\", \"y\")\n\
    \    s = s.replace(\"x\", \"z\")\n    s = s.replace(\"y\", \"a\")\n    s = s.replace(\"\
    z\", \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprx4ztnj8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmprx4ztnj8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    encrypted = \"\"\n    for i in s\n        if i == \" \"\n            encrypted\
    \ = encrypted * \" \"\n        else\n            encrypted = encrypted * alphabet[(findfirst(alphabet,\
    \ i) + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmps_ine0uf.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmps_ine0uf.jl:14\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmps_ine0uf.jl:24 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmps_ine0uf.jl:23\ntest set: Error During Test at
    /tmp/tmps_ine0uf.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmps_ine0uf.jl:14\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmps_ine0uf.jl:25 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmps_ine0uf.jl:23\ntest set: Error During Test at
    /tmp/tmps_ine0uf.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s_array = []\n    for i in s\n        if i\
    \ in string(\"abcdefghijklmnopqrstuvwxyz\")\n            s_array.append(string(\"\
    abcdefghijklmnopqrstuvwxyz\")[(string(\"abcdefghijklmnopqrstuvwxyz\").index(i)+2)%26])\n\
    \        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            s_array.append(string(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\")[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").index(i)+2)%26])\n\
    \        else\n            s_array.append(i)\n        end\n    end\n    return\
    \ join(s_array)\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t\
    @test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpaudtzvmq.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type Array has no field append\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpaudtzvmq.jl:11\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpaudtzvmq.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpaudtzvmq.jl:24\ntest set: Error
    During Test at /tmp/tmpaudtzvmq.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type Array has no field append\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpaudtzvmq.jl:11\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpaudtzvmq.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpaudtzvmq.jl:24\ntest set: Error
    During Test at /tmp/tmpaudtzvmq.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type Array has no field append\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpaudtzvmq.jl:11\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpaudtzvmq.jl:27 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpaudtzvmq.jl:24\ntest set: Error
    During Test at /tmp/tmpaudtzvmq.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type Array has n'
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2*2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpq4ysvx89.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpq4ysvx89.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error During Test at
    /tmp/tmpq4ysvx89.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq4ysvx89.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error
    During Test at /tmp/tmpq4ysvx89.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq4ysvx89.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error
    During Test at /tmp/tmpq4ysvx89.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748189
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted = encrypted\
    \ * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"abcdefghijklmnopqrstuvwxyz\"\
    ) .== i)[1] + 2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\
    \            encrypted = encrypted * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1] + 2])\n        else\n    \
    \        encrypted = encrypted * i\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp09ugd8e.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpp09ugd8e.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748188
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary with the alphabet and\
    \ the encrypted alphabet\n    alphabet = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"\
    =>\"e\", \"d\"=>\"f\", \"e\"=>\"g\", \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\"\
    , \"i\"=>\"k\", \"j\"=>\"l\", \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"\
    =>\"p\", \"o\"=>\"q\", \"p\"=>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\"\
    , \"t\"=>\"v\", \"u\"=>\"w\", \"v\"=>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"\
    =>\"a\", \"z\"=>\"b\")\n    # create an empty string to store the encrypted string\n\
    \    encrypted_string = \"\"\n    # iterate through the string\n    for i in s\n\
    \        # if the letter is in the dictionary, add the encrypted letter to the\
    \ empty string\n        if i in keys(alphabet)\n            encrypted_string =\
    \ encrypted_string * alphabet[i]\n        # if the letter is not in the dictionary,\
    \ add the letter to the empty string\n        else\n            encrypted_string\
    \ = encrypted_string * i\n        end\n    end\n    # return the encrypted string\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1tr_d8t.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpd1tr_d8t.jl:30\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1tr_d8t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1tr_d8t.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpd1tr_d8t.jl:31\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1tr_d8t.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1tr_d8t.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpd1tr_d8t.jl:32\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1tr_d8t.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1tr_d8t.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpd1tr_d8t.jl:33\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1tr_d8t.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1tr_d8t.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpd1tr_d8t.jl:34\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748189
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary with the alphabet\n \
    \   alphabet = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"\
    =>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"\
    =>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"\
    w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n    # create a dictionary with the alphabet\
    \ shifted by 2\n    alphabet_shift = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"\
    e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"=>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"\
    m\"=>15,\"n\"=>16,\"o\"=>17,\"p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"\
    u\"=>23,\"v\"=>24,\"w\"=>25,\"x\"=>26,\"y\"=>1,\"z\"=>2)\n    # create a dictionary\
    \ with the alphabet shifted by 4\n    alphabet_shift_2 = Dict(\"a\"=>5,\"b\"=>6,\"\
    c\"=>7,\"d\"=>8,\"e\"=>9,\"f\"=>10,\"g\"=>11,\"h\"=>12,\"i\"=>13,\"j\"=>14,\"\
    k\"=>15,\"l\"=>16,\"m\"=>17,\"n\"=>18,\"o\"=>19,\"p\"=>20,\"q\"=>21,\"r\"=>22,\"\
    s\"=>23,\"t\"=>24,\"u\"=>25,\"v\"=>26,\"w\"=>1,\"x\"=>2,\"y\"=>3,\"z\"=>4)\n \
    \   # create a dictionary with the alphabet shifted by 6\n    alphabet_shift_3\
    \ = Dict(\"a\"=>7,\"b\"=>8,\"c\"=>9,\"d\"=>10,\"e\"=>11,\"f\"=>12,\"g\"=>13,\"\
    h\"=>14\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd62utoy0.jl:16\nin expression starting at\
    \ /tmp/tmpd62utoy0.jl:16\n"
  stdout: ''
  timestamp: 1659748187
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary with the alphabet\n \
    \   alphabet = Dict('a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5, 'f'=>6, 'g'=>7, 'h'=>8,\
    \ 'i'=>9, 'j'=>10, 'k'=>11, 'l'=>12, 'm'=>13, 'n'=>14, 'o'=>15, 'p'=>16, 'q'=>17,\
    \ 'r'=>18, 's'=>19, 't'=>20, 'u'=>21, 'v'=>22, 'w'=>23, 'x'=>24, 'y'=>25, 'z'=>26)\n\
    \    # create a new dictionary with the alphabet shifted by two places\n    alphabet_shift\
    \ = Dict('a'=>3, 'b'=>4, 'c'=>5, 'd'=>6, 'e'=>7, 'f'=>8, 'g'=>9, 'h'=>10, 'i'=>11,\
    \ 'j'=>12, 'k'=>13, 'l'=>14, 'm'=>15, 'n'=>16, 'o'=>17, 'p'=>18, 'q'=>19, 'r'=>20,\
    \ 's'=>21, 't'=>22, 'u'=>23, 'v'=>24, 'w'=>25, 'x'=>26, 'y'=>1, 'z'=>2)\n    #\
    \ create a new dictionary with the alphabet shifted by two places\n    alphabet_shift_2\
    \ = Dict('a'=>5, 'b'=>6, 'c'=>7, 'd'=>8, 'e'=>9, 'f'=>10, 'g'=>11, 'h'=>12, 'i'=>13,\
    \ 'j'=>14, 'k'=>15, 'l'=>16, 'm'=>17, 'n'=>18, 'o'=>19, 'p'=>20, 'q'=>21, 'r'=>22,\
    \ 's'=>23, 't'=>24, 'u'=>25, 'v'=>26, 'w'=>1, '\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid character literal\nStacktrace:\n [1]\
    \ top-level scope\n   @ /tmp/tmpnewxkd6u.jl:19\nin expression starting at /tmp/tmpnewxkd6u.jl:19\n"
  stdout: ''
  timestamp: 1659748187
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"\
    =>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"\
    =>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"\
    x\"=>24,\"y\"=>25,\"z\"=>26)\n    #create a dictionary of the alphabet rotated\
    \ by two places\n    alphabet_rotated = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"\
    =>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"=>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"\
    m\"=>15,\"n\"=>16,\"o\"=>17,\"p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"\
    u\"=>23,\"v\"=>24,\"w\"=>25,\"x\"=>26,\"y\"=>1,\"z\"=>2)\n    #create a dictionary\
    \ of the alphabet rotated by two places\n    alphabet_rotated_2 = Dict(\"a\"=>5,\"\
    b\"=>6,\"c\"=>7,\"d\"=>8,\"e\"=>9,\"f\"=>10,\"g\"=>11,\"h\"=>12,\"i\"=>13,\"j\"\
    =>14,\"k\"=>15,\"l\"=>16,\"m\"=>17,\"n\"=>18,\"o\"=>19,\"p\"=>20,\"q\"=>21,\"\
    r\"=>22,\"s\"=>23,\"t\"=>24,\"u\"=>25,\"v\"=>26,\"w\"=>1,\"x\"=>2,\"y\"=>3,\"\
    z\"=>4)\n    #create a dictionary of the alphabet rotated by two places\n    alphabet_rotated_3\
    \ = Dict(\"a\"=>7,\"b\"=>8,\"c\"=>9,\"d\"=>10,\"e\"=>11,\"f\"=>12,\"g\"=>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppo36h9yc.jl:18\nin expression starting at\
    \ /tmp/tmppo36h9yc.jl:18\n"
  stdout: ''
  timestamp: 1659748187
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\"\
    )\n    s = replace(s, \"!\" => \"\")\n    s = replace(s, \"?\" => \"\")\n    s\
    \ = replace(s, \":\" => \"\")\n    s = replace(s, \";\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"(\" => \"\")\n    s = replace(s, \")\"\
    \ => \"\")\n    s = replace(s, \"0\" => \"\")\n    s = replace(s, \"1\" => \"\"\
    )\n    s = replace(s, \"2\" => \"\")\n    s = replace(s, \"3\" => \"\")\n    s\
    \ = replace(s, \"4\" => \"\")\n    s = replace(s, \"5\" => \"\")\n    s = replace(s,\
    \ \"6\" => \"\")\n    s = replace(s, \"7\" => \"\")\n    s = replace(s, \"8\"\
    \ => \"\")\n    s = replace(s, \"9\" => \"\")\n    s = replace(s, \"a\" => \"\
    c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n\
    \    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s\
    \ = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s,\
    \ \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\"\
    \ => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"\
    n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n\
    \    s = replace(s, \"o\" => \"q\")\n    s = replace(s,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66db70n3.jl:47\nin expression starting at\
    \ /tmp/tmp66db70n3.jl:47\n"
  stdout: ''
  timestamp: 1659748187
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = string(s)\n    for i in 1:length(s)\n \
    \       if s[i] == \"a\"\n            s[i] = \"c\"\n        elseif s[i] == \"\
    b\"\n            s[i] = \"d\"\n        elseif s[i] == \"c\"\n            s[i]\
    \ = \"e\"\n        elseif s[i] == \"d\"\n            s[i] = \"f\"\n        elseif\
    \ s[i] == \"e\"\n            s[i] = \"g\"\n        elseif s[i] == \"f\"\n    \
    \        s[i] = \"h\"\n        elseif s[i] == \"g\"\n            s[i] = \"i\"\n\
    \        elseif s[i] == \"h\"\n            s[i] = \"j\"\n        elseif s[i] ==\
    \ \"i\"\n            s[i] = \"k\"\n        elseif s[i] == \"j\"\n            s[i]\
    \ = \"l\"\n        elseif s[i] == \"k\"\n            s[i] = \"m\"\n        elseif\
    \ s[i] == \"l\"\n            s[i] = \"n\"\n        elseif s[i] == \"m\"\n    \
    \        s[i] = \"o\"\n        elseif s[i] == \"n\"\n            s[i] = \"p\"\n\
    \        elseif s[i] == \"o\"\n            s[i] = \"q\"\n        elseif s[i] ==\
    \ \"p\"\n            s[i] = \"r\"\n        elseif s[i] == \"q\"\n            s[i]\
    \ = \"s\"\n        elseif s[i] == \"r\"\n            s[i] = \"t\"\n        elseif\
    \ s[i] == \"s\"\n            s[i] = \"u\"\n        elseif s[i] == \"t\"\n    \
    \        s[i] = \"v\"\n        elseif s[i] == \"u\"\n            s[i] = \"w\"\n\
    \        elseif s[i] == \"v\"\n            s[i] = \"x\"\n        elseif s[i] ==\
    \ \"\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn3tbnj6n.jl:60\nin expression starting at\
    \ /tmp/tmpn3tbnj6n.jl:60\n"
  stdout: ''
  timestamp: 1659748187
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = s.replace(\"a\"\
    , \"c\")\n    s = s.replace(\"b\", \"d\")\n    s = s.replace(\"c\", \"e\")\n \
    \   s = s.replace(\"d\", \"f\")\n    s = s.replace(\"e\", \"g\")\n    s = s.replace(\"\
    f\", \"h\")\n    s = s.replace(\"g\", \"i\")\n    s = s.replace(\"h\", \"j\")\n\
    \    s = s.replace(\"i\", \"k\")\n    s = s.replace(\"j\", \"l\")\n    s = s.replace(\"\
    k\", \"m\")\n    s = s.replace(\"l\", \"n\")\n    s = s.replace(\"m\", \"o\")\n\
    \    s = s.replace(\"n\", \"p\")\n    s = s.replace(\"o\", \"q\")\n    s = s.replace(\"\
    p\", \"r\")\n    s = s.replace(\"q\", \"s\")\n    s = s.replace(\"r\", \"t\")\n\
    \    s = s.replace(\"s\", \"u\")\n    s = s.replace(\"t\", \"v\")\n    s = s.replace(\"\
    u\", \"w\")\n    s = s.replace(\"v\", \"x\")\n    s = s.replace(\"w\", \"y\")\n\
    \    s = s.replace(\"x\", \"z\")\n    s = s.replace(\"y\", \"a\")\n    s = s.replace(\"\
    z\", \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprx4ztnj8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmprx4ztnj8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmptmyqdmh8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmptmyqdmh8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary with the alphabet\n  \
    \  alphabet = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"\
    e\"=>\"g\", \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"\
    l\", \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"\
    p\"=>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"\
    w\", \"v\"=>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n \
    \   #create a variable to store the encrypted string\n    encrypted = \"\"\n \
    \   #loop through the string\n    for i in s\n        #check if the letter is\
    \ in the dictionary\n        if i in keys(alphabet)\n            #if it is, add\
    \ the encrypted letter to the encrypted string\n            encrypted = encrypted\
    \ * alphabet[i]\n        else\n            #if it is not, add the letter to the\
    \ encrypted string\n            encrypted = encrypted * i\n        end\n    end\n\
    \    #return the encrypted string\n    return encrypted\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqgmsvkw2.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpqgmsvkw2.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgmsvkw2.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgmsvkw2.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpqgmsvkw2.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgmsvkw2.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgmsvkw2.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpqgmsvkw2.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgmsvkw2.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgmsvkw2.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpqgmsvkw2.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqgmsvkw2.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqgmsvkw2.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpqgmsvkw2.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748189
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    #create a dictionary of the alphabet rotated\n    alphabet_rotated = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    #create an empty string\n    encrypted_string = \"\"\n    #loop through the\
    \ string\n    for i in s\n        #check if the character is a letter\n      \
    \  if i in keys(alphabet)\n            #add the encrypted character to the encrypted\
    \ string\n            encrypted_string = string(encrypted_string,get(alphabet_rotated,i,0))\n\
    \        else\n            #add the character to the encrypted string\n      \
    \      encrypted_string = string(encrypted_string,i)\n        end\n    end\n \
    \   #return the encrypted string\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprtesdxoq.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmprtesdxoq.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"1011\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprtesdxoq.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprtesdxoq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmprtesdxoq.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"32168910121314\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprtesdxoq.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprtesdxoq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmprtesdxoq.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"98\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprtesdxoq.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprtesdxoq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmprtesdxoq.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"722\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprtesdxoq.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprtesdxoq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmprtesdxoq.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"8372583257837259\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /share"
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i in \"abcdefghijklmnopqrstuvwxyz\"\n            encrypted = encrypted * string(char(int(i)\
    \ + 2))\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            encrypted\
    \ = encrypted * string(char(int(i) + 2))\n        else\n            encrypted\
    \ = encrypted * string(i)\n        end\n    end\n    return encrypted\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpjsevpuuq.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpjsevpuuq.jl:11\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpjsevpuuq.jl:25 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpjsevpuuq.jl:24\ntest set: Error During Test at
    /tmp/tmpjsevpuuq.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjsevpuuq.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjsevpuuq.jl:26 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjsevpuuq.jl:24\ntest set: Error
    During Test at /tmp/tmpjsevpuuq.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjsevpuuq.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpjsevpuuq.jl:27 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjsevpuuq.jl:24\ntest set: Error
    During Test at /tmp/tmpjsevpuuq.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpjsevpuuq.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748190
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    for i in s\n        if i in string.letters\n\
    \            if i in string.lowercase\n                if i == 'z'\n         \
    \           i = 'b'\n                elseif i == 'y'\n                    i =\
    \ 'a'\n                else\n                    i = string.lowercase[string.lowercase.index(i)\
    \ + 2]\n                end\n            else\n                if i == 'Z'\n \
    \                   i = 'B'\n                elseif i == 'Y'\n               \
    \     i = 'A'\n                else\n                    i = string.uppercase[string.uppercase.index(i)\
    \ + 2]\n                end\n            end\n        end\n    end\n    return\
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphub9ojo1.jl:36\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type #string has no field
    letters\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    encrypt(s::String)\n     @ Main /tmp/tmphub9ojo1.jl:9\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmphub9ojo1.jl:36 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmphub9ojo1.jl:35\ntest set: Error During Test at
    /tmp/tmphub9ojo1.jl:37\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type #string has no field letters\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmphub9ojo1.jl:9\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmphub9ojo1.jl:37 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmphub9ojo1.jl:35\ntest set: Error
    During Test at /tmp/tmphub9ojo1.jl:38\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type #string has no field letters\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmphub9ojo1.jl:9\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmphub9ojo1.jl:38 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmphub9ojo1.jl:35\ntest set: Error
    During Test at /tmp/tmphub9ojo1.jl:39\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type #stri'
  timestamp: 1659748190
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"e\"=>\"g\"\
    , \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"l\", \"k\"\
    =>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"p\"=>\"r\"\
    , \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"w\", \"v\"\
    =>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n    #create\
    \ a new string\n    new_string = \"\"\n    #iterate through the string\n    for\
    \ i in s\n        #check if the letter is in the dictionary\n        if i in keys(alphabet)\n\
    \            #if it is, add the value of the letter to the new string\n      \
    \      new_string = new_string * alphabet[i]\n        else\n            #if it\
    \ is not, add the letter to the new string\n            new_string = new_string\
    \ * i\n        end\n    end\n    #return the new string\n    return new_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc7mn00me.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpc7mn00me.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7mn00me.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7mn00me.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpc7mn00me.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7mn00me.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7mn00me.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpc7mn00me.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7mn00me.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7mn00me.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpc7mn00me.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7mn00me.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7mn00me.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpc7mn00me.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    s = lowercase(s)\n    encrypted = \"\"\n    for i in s\n        if i in alphabet\n\
    \            index = findfirst(alphabet, i)\n            encrypted = encrypted\
    \ * alphabet[index + 2]\n        else\n            encrypted = encrypted * i\n\
    \        end\n    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpr6oo_q_0.jl:26\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpr6oo_q_0.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpr6oo_q_0.jl:26 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpr6oo_q_0.jl:25\ntest set: Error During Test at
    /tmp/tmpr6oo_q_0.jl:27\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpr6oo_q_0.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpr6oo_q_0.jl:27 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpr6oo_q_0.jl:25\ntest set: Error During Test at
    /tmp/tmpr6oo_q_0.jl:28\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748190
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdef\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3stquvjc.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3stquvjc.jl:1\n\
    in expression starting at /tmp/tmp3stquvjc.jl:1\n"
  stdout: ''
  timestamp: 1659748188
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s_new = \"\"\n    for i in s\n        if i\
    \ in string(['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'])\n\
    \            s_new = s_new * string(chr(ord(i)+2))\n        elseif i in string(['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'])\n\
    \            s_new = s_new * string(chr(ord(i)+2))\n        else\n           \
    \ s_new = s_new * string(i)\n        end\n    end\n    return s_new\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp609anx_y.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp609anx_y.jl:11\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp609anx_y.jl:25 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp609anx_y.jl:24\ntest set: Error During Test at
    /tmp/tmp609anx_y.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp609anx_y.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp609anx_y.jl:26 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp609anx_y.jl:24\ntest set: Error
    During Test at /tmp/tmp609anx_y.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp609anx_y.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp609anx_y.jl:27 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp609anx_y.jl:24\ntest set: Error
    During Test at /tmp/tmp609anx_y.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp609anx_y.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748192
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2*2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpq4ysvx89.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpq4ysvx89.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error During Test at
    /tmp/tmpq4ysvx89.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq4ysvx89.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error
    During Test at /tmp/tmpq4ysvx89.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq4ysvx89.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error
    During Test at /tmp/tmpq4ysvx89.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748189
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = lowercase(s)\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\"\
    )\n    s = replace(s, \"!\" => \"\")\n    s = replace(s, \"?\" => \"\")\n    s\
    \ = replace(s, \";\" => \"\")\n    s = replace(s, \":\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"(\" => \"\")\n    s = replace(s, \")\"\
    \ => \"\")\n    s = replace(s, \"*\" => \"\")\n    s = replace(s, \"&\" => \"\"\
    )\n    s = replace(s, \"^\" => \"\")\n    s = replace(s, \"%\" => \"\")\n    s\
    \ = replace(s, \"$\" => \"\")\n    s = replace(s, \"#\" => \"\")\n    s = replace(s,\
    \ \"@\" => \"\")\n    s = replace(s, \"=\" => \"\")\n    s = replace(s, \"+\"\
    \ => \"\")\n    s = replace(s, \"/\" => \"\")\n    s = replace(s, \"\\\\\" =>\
    \ \"\")\n    s = replace(s, \"|\" => \"\")\n    s = replace(s, \">\" => \"\")\n\
    \    s = replace(s, \"<\" => \"\")\n    s = replace(s, \"`\" => \"\")\n    s =\
    \ replace(s, \"~\" => \"\")\n    s = replace(s, \"0\" => \"\")\n    s = replace(s,\
    \ \"1\" => \"\")\n    s = replace(s, \"2\" => \"\")\n    s = replace(s, \"3\"\
    \ => \"\")\n    s = replace(s, \"4\" => \"\")\n    s = replace(s, \"5\" => \"\"\
    )\n    s = replace(s, \"6\" => \"\")\n    s = replace(s, \"7\" => \"\")\n    s\
    \ = replace(s, \"8\" => \"\")\n    s = replace(s, \"9\" => \"\")\n    s = replace(s,\
    \ \"a\" => \"c\")\n    s\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid interpolation syntax: \"$\"\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoer4gmu3.jl:23\nin expression starting at\
    \ /tmp/tmpoer4gmu3.jl:23\n"
  stdout: ''
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i == \" \"\n            push!(encrypted_string, \" \")\n        else\n\
    \            push!(encrypted_string, chr(ord(i) + 2))\n        end\n    end\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcfd_bk_y.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error During Test at
    /tmp/tmpcfd_bk_y.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error
    During Test at /tmp/tmpcfd_bk_y.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error
    During Test at /tmp/tmpcfd_bk_y.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \" \"\n            new_string = new_string * i\n        else\n     \
    \       new_string = new_string * (chr(ord(i) + 2))\n        end\n    end\n  \
    \  return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpra35c4ay.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpra35c4ay.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error During Test at
    /tmp/tmpra35c4ay.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # Create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    # Create a string of the alphabet rotated\
    \ by two places\n    rotated_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\n    #\
    \ Create a dictionary of the alphabet and rotated alphabet\n    alphabet_dict\
    \ = Dict(zip(alphabet, rotated_alphabet))\n    # Create a string to store the\
    \ encrypted string\n    encrypted_string = \"\"\n    # Iterate through the string\n\
    \    for i in s\n        # Check if the character is a letter\n        if i in\
    \ alphabet\n            # If it is a letter, add the encrypted letter to the encrypted\
    \ string\n            encrypted_string = string(encrypted_string, alphabet_dict[i])\n\
    \        else\n            # If it is not a letter, add the character to the encrypted\
    \ string\n            encrypted_string = string(encrypted_string, i)\n       \
    \ end\n    end\n    # Return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc819l73f.jl:32

    '
  stdout: "test set: Test Failed at /tmp/tmpc819l73f.jl:35\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc819l73f.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc819l73f.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc819l73f.jl:36\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc819l73f.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc819l73f.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc819l73f.jl:37\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc819l73f.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc819l73f.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc819l73f.jl:38\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc819l73f.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc819l73f.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc819l73f.jl:39\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748192
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    for i in s\n        if i in string.letters\n\
    \            if i in string.lowercase\n                if i == 'y'\n         \
    \           push!(s, 'a')\n                elseif i == 'z'\n                 \
    \   push!(s, 'b')\n                else\n                    push!(s, i+2)\n \
    \               end\n            else\n                if i == 'Y'\n         \
    \           push!(s, 'A')\n                elseif i == 'Z'\n                 \
    \   push!(s, 'B')\n                else\n                    push!(s, i+2)\n \
    \               end\n            end\n        else\n            push!(s, i)\n\
    \        end\n    end\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpvsx_1xth.jl:38\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type #string has no field
    letters\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2]
    encrypt(s::String)\n     @ Main /tmp/tmpvsx_1xth.jl:9\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpvsx_1xth.jl:38 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpvsx_1xth.jl:37\ntest set: Error During Test at
    /tmp/tmpvsx_1xth.jl:39\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type #string has no field letters\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpvsx_1xth.jl:9\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvsx_1xth.jl:39 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvsx_1xth.jl:37\ntest set: Error
    During Test at /tmp/tmpvsx_1xth.jl:40\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type #string has no field letters\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpvsx_1xth.jl:9\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvsx_1xth.jl:40 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvsx_1xth.jl:37\ntest set: Error
    During Test at /tmp/tmpvsx_1xth.jl:41\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type #stri'
  timestamp: 1659748192
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \" \"\n            new_string = new_string * i\n        else\n     \
    \       new_string = new_string * (chr(ord(i) + 2))\n        end\n    end\n  \
    \  return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpra35c4ay.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpra35c4ay.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error During Test at
    /tmp/tmpra35c4ay.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmptmyqdmh8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmptmyqdmh8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \" \"\n            new_string = new_string * i\n        else\n     \
    \       new_string = new_string * (i+2)\n        end\n    end\n    return new_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_1dpkllc.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmp_1dpkllc.jl:23\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1dpkllc.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1dpkllc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_1dpkllc.jl:24\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1dpkllc.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1dpkllc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_1dpkllc.jl:25\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1dpkllc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1dpkllc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_1dpkllc.jl:26\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_1dpkllc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_1dpkllc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_1dpkllc.jl:27\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748192
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #convert string to array of characters\n  \
    \  s_array = collect(s)\n    #create an array of characters in the alphabet\n\
    \    alphabet = collect(\"abcdefghijklmnopqrstuvwxyz\")\n    #create an array\
    \ of characters in the alphabet rotated by two\n    alphabet_rotated = collect(\"\
    cdefghijklmnopqrstuvwxyzab\")\n    #create an empty array to store the encrypted\
    \ string\n    encrypted_array = []\n    #iterate through the characters in the\
    \ string\n    for i in s_array\n        #find the index of the character in the\
    \ alphabet\n        index = findfirst(alphabet, i)\n        #append the character\
    \ at the index in the alphabet_rotated to the encrypted_array\n        push!(encrypted_array,\
    \ alphabet_rotated[index])\n    end\n    #convert the encrypted_array to a string\n\
    \    encrypted_string = join(encrypted_array)\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp17lk1n8b.jl:32\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp17lk1n8b.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp17lk1n8b.jl:32 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp17lk1n8b.jl:31\ntest set: Error During Test at
    /tmp/tmp17lk1n8b.jl:33\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp17lk1n8b.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp17lk1n8b.jl:33 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp17lk1n8b.jl:31\ntest set: Error During Test at
    /tmp/tmp17lk1n8b.jl:34\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Ch'
  timestamp: 1659748193
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted_string\
    \ = encrypted_string * string(string(\"abcdefghijklmnopqrstuvwxyz\")[string(\"\
    abcdefghijklmnopqrstuvwxyz\").index(i)+2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            encrypted_string = encrypted_string * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").index(i)+2])\n        else\n        \
    \    encrypted_string = encrypted_string * i\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpmya70xjw.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field index\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpmya70xjw.jl:11\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmya70xjw.jl:11\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpmya70xjw.jl:11\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmya70xjw.jl:27 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmya70xjw.jl:24\ntest set: Error
    During Test at /tmp/tmpmya70xjw.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has '
  timestamp: 1659748185
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s_array = collect(s)\n    for i in 1:length(s_array)\n\
    \        if s_array[i] == \" \"\n            s_array[i] = \" \"\n        elseif\
    \ s_array[i] == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i]\
    \ == \"y\"\n            s_array[i] = \"a\"\n        else\n            s_array[i]\
    \ = Char(Int(s_array[i]) + 2)\n        end\n    end\n    return join(s_array)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr4mqaih2.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpr4mqaih2.jl:27\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4mqaih2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4mqaih2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr4mqaih2.jl:28\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4mqaih2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4mqaih2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr4mqaih2.jl:29\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4mqaih2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4mqaih2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr4mqaih2.jl:30\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4mqaih2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4mqaih2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr4mqaih2.jl:31\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748192
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s_array = collect(s)\n    for i in 1:length(s_array)\n\
    \        if s_array[i] == \" \"\n            s_array[i] = \" \"\n        elseif\
    \ s_array[i] == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i]\
    \ == \"y\"\n            s_array[i] = \"a\"\n        else\n            s_array[i]\
    \ = Char(Int(s_array[i]) + 2)\n        end\n    end\n    return join(s_array)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpr4mqaih2.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpr4mqaih2.jl:27\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4mqaih2.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4mqaih2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr4mqaih2.jl:28\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4mqaih2.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4mqaih2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr4mqaih2.jl:29\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4mqaih2.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4mqaih2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr4mqaih2.jl:30\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpr4mqaih2.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpr4mqaih2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpr4mqaih2.jl:31\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748192
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted_string\
    \ = encrypted_string * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"\
    abcdefghijklmnopqrstuvwxyz\") .== i)[1] + 2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            encrypted_string = encrypted_string * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1] + 2])\n        else\n    \
    \        encrypted_string = encrypted_string * i\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmtmbtjzc.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpmtmbtjzc.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    encrypted = \"\"\n    for i in s\n        if i == \" \"\n            encrypted\
    \ *= \" \"\n        else\n            encrypted *= alphabet[(alphabet.index(i)\
    \ + 2) % 26]\n        end\n    end\n    return encrypted\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpm723zdea.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field index\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpm723zdea.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm723zdea.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm723zdea.jl:23\ntest set: Error
    During Test at /tmp/tmpm723zdea.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpm723zdea.jl:14\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm723zdea.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm723zdea.jl:23\ntest set: Error
    During Test at /tmp/tmpm723zdea.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field index\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpm723zdea.jl:14\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpm723zdea.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpm723zdea.jl:23\ntest set: Error
    During Test at /tmp/tmpm723zdea.jl:27\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has '
  timestamp: 1659748193
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    # create a dictionary of the alphabet rotated by two places\n    alphabet_rotated\
    \ = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # loop through each character in the string\n    for i in s\n  \
    \      # check if the character is a letter\n        if i in alphabet\n      \
    \      # if it is a letter, add the encrypted letter to the encrypted string\n\
    \            encrypted_string = string(encrypted_string,get(alphabet_rotated,i,0))\n\
    \        else\n            # if it is not a letter, add the character to the encrypted\
    \ string\n            encrypted_string = string(encrypted_string,i)\n        end\n\
    \    end\n    # return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpbk4onn5v.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  AbstractDict collections only
    contain Pairs;\n  Either look for e.g. A=>B instead, or use the `keys` or `values`\n  function
    if you are looking for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Int64})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmpbk4onn5v.jl:17\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmpbk4onn5v.jl:33 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmpbk4onn5v.jl:32\ntest set: Error During Test at
    /tmp/tmpbk4onn5v.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  AbstractDict collections only contain Pairs;\n  Either look
    for e.g. A=>B instead, or use the `keys` or `values`\n  function if you are looking
    for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Int64})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmpbk4onn5v.jl:17\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmpbk4onn5v.jl:34 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmpbk4onn5v.jl:32\ntest set: Error During Test at
    /tmp/tmpbk4onn5v.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  AbstractDict collections only contain Pairs;\n  Either look for e.g.
    A=>B instead, or use the `keys` or `values`\n  function if you are looking for
    a key or value respectively.\n  Stacktrace:\n   [1] er'
  timestamp: 1659748193
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # Convert the string to an array of characters\n\
    \    s = collect(s)\n    # Create an array of characters in the alphabet\n   \
    \ alphabet = collect(\"abcdefghijklmnopqrstuvwxyz\")\n    # Create an array of\
    \ characters in the alphabet rotated by two places\n    rotated_alphabet = collect(\"\
    cdefghijklmnopqrstuvwxyzab\")\n    # Create an empty array to store the encrypted\
    \ string\n    encrypted_string = []\n    # Iterate through the characters in the\
    \ string\n    for i in s\n        # Find the index of the character in the alphabet\n\
    \        index = findfirst(alphabet, i)\n        # If the character is not in\
    \ the alphabet, push it to the encrypted string\n        if index == nothing\n\
    \            push!(encrypted_string, i)\n        # If the character is in the\
    \ alphabet, push the corresponding character in the rotated alphabet to the encrypted\
    \ string\n        else\n            push!(encrypted_string, rotated_alphabet[index])\n\
    \        end\n    end\n    # Return the encrypted string\n    return join(encrypted_string)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpzfvmgti_.jl:36\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpzfvmgti_.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpzfvmgti_.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpzfvmgti_.jl:35\ntest set: Error During Test at
    /tmp/tmpzfvmgti_.jl:37\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpzfvmgti_.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpzfvmgti_.jl:37 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpzfvmgti_.jl:35\ntest set: Error During Test at
    /tmp/tmpzfvmgti_.jl:38\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Ch'
  timestamp: 1659748193
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    new_alphabet = alphabet[3:end] * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n\
    \    s = lowercase(s)\n    s = replace(s, r\"[^a-z]\", \"\")\n    s = replace(s,\
    \ alphabet, new_alphabet)\n    return s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmsrwsqep.jl:20\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,
    Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n    replace(::String,
    !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n    replace(::AbstractString,
    !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpmsrwsqep.jl:11\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpmsrwsqep.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpmsrwsqep.jl:19\ntest set: Error During Test at
    /tmp/tmpmsrwsqep.jl:21\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest
    candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at
    /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n    replace(::String,
    !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n    replace(::AbstractString,
    !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpmsrwsqep.jl:11\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpmsrwsqep.jl:21 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp'
  timestamp: 1659748193
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2*2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpq4ysvx89.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpq4ysvx89.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error During Test at
    /tmp/tmpq4ysvx89.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq4ysvx89.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error
    During Test at /tmp/tmpq4ysvx89.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq4ysvx89.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq4ysvx89.jl:22\ntest set: Error
    During Test at /tmp/tmpq4ysvx89.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpq4ysvx89.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    # iterate through the string\n    for\
    \ i in s\n        # if the character is a space, add it to the encrypted string\n\
    \        if i == \" \"\n            push!(encrypted_string, \" \")\n        #\
    \ if the character is a letter, add the encrypted letter to the encrypted string\n\
    \        else\n            push!(encrypted_string, rotate_letter(i, 2))\n    \
    \    end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp86028tgb.jl:28\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: rotate_letter
    not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp86028tgb.jl:17\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp86028tgb.jl:28 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp86028tgb.jl:27\ntest set: Error
    During Test at /tmp/tmp86028tgb.jl:29\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: rotate_letter not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp86028tgb.jl:17\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp86028tgb.jl:29 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp86028tgb.jl:27\ntest set: Error During Test at
    /tmp/tmp86028tgb.jl:30\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: rotate_letter not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp86028tgb.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp86028tgb.jl:30 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp86028tgb.jl:27\ntest set: Error
    During Test at /tmp/tmp86028tgb.jl:31\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: rotate_letter not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp86028tgb.jl:17\n   [2] macro expans'
  timestamp: 1659748194
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary with the alphabet\n  \
    \  alphabet = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"\
    =>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"\
    =>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"\
    w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n    #create a dictionary with the alphabet\
    \ rotated\n    alphabet_rotated = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"=>6,\"\
    e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"=>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"\
    m\"=>15,\"n\"=>16,\"o\"=>17,\"p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"\
    u\"=>23,\"v\"=>24,\"w\"=>25,\"x\"=>26,\"y\"=>1,\"z\"=>2)\n    #create an empty\
    \ string\n    encrypted_string = \"\"\n    #iterate over the string\n    for i\
    \ in s\n        #check if the character is a letter\n        if i in keys(alphabet)\n\
    \            #if it is a letter, append the encrypted letter to the empty string\n\
    \            encrypted_string = string(encrypted_string,get(alphabet_rotated,i,0))\n\
    \        else\n            #if it is not a letter, append the character to the\
    \ empty string\n            encrypted_string = string(encrypted_string,i)\n  \
    \      end\n    end\n    #return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpselotkr8.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpselotkr8.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpselotkr8.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpselotkr8.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpselotkr8.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpselotkr8.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpselotkr8.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpselotkr8.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpselotkr8.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpselotkr8.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpselotkr8.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpselotkr8.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpselotkr8.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpselotkr8.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748193
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    #s = \"0123456789\"\n    #s = \"!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n    #s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()\"\
    \n\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp41qzr8o9.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp41qzr8o9.jl:1\n\
    in expression starting at /tmp/tmp41qzr8o9.jl:1\n"
  stdout: ''
  timestamp: 1659748192
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # s is the string to be encrypted\n    # The\
    \ string is converted to a character array\n    s_array = collect(s)\n    # The\
    \ length of the string is calculated\n    s_length = length(s_array)\n    # The\
    \ encrypted string is initialized\n    encrypted_string = \"\"\n    # The alphabet\
    \ is initialized\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    # The alphabet\
    \ is converted to a character array\n    alphabet_array = collect(alphabet)\n\
    \    # The length of the alphabet is calculated\n    alphabet_length = length(alphabet_array)\n\
    \    # The loop iterates over the length of the string\n    for i in 1:s_length\n\
    \        # The character is converted to lower case\n        s_array[i] = lowercase(s_array[i])\n\
    \        # The index of the character in the alphabet is calculated\n        index\
    \ = findfirst(alphabet_array, s_array[i])\n        # The index is incremented\
    \ by two\n        index += 2\n        # The index is divided by the length of\
    \ the alphabet\n        index = mod(index, alphabet_length)\n        # The encrypted\
    \ character is added to the encrypted string\n        encrypted_string = string(encrypted_string,\
    \ alphabet_array[index])\n    end\n    # The encrypted string is returned\n  \
    \  return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpkt3l1uss.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpkt3l1uss.jl:26\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpkt3l1uss.jl:42 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpkt3l1uss.jl:41\ntest set: Error During Test at
    /tmp/tmpkt3l1uss.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpkt3l1uss.jl:26\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpkt3l1uss.jl:43 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpkt3l1uss.jl:41\ntest set: Error During Test at
    /tmp/tmpkt3l1uss.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Ch'
  timestamp: 1659748194
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            encrypted = encrypted * i\n        elseif i == \"z\"\
    \n            encrypted = encrypted * \"b\"\n        elseif i == \"y\"\n     \
    \       encrypted = encrypted * \"a\"\n        else\n            encrypted = encrypted\
    \ * string(Char(Int(i) + 2))\n        end\n    end\n    return encrypted\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwagg8_m4.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpwagg8_m4.jl:27\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwagg8_m4.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwagg8_m4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwagg8_m4.jl:28\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwagg8_m4.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwagg8_m4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwagg8_m4.jl:29\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwagg8_m4.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwagg8_m4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwagg8_m4.jl:30\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwagg8_m4.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwagg8_m4.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpwagg8_m4.jl:31\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748193
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmc76xb4q.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpmc76xb4q.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error During Test at
    /tmp/tmpmc76xb4q.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmptmyqdmh8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmptmyqdmh8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted_string\
    \ = encrypted_string * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"\
    abcdefghijklmnopqrstuvwxyz\") .== i)[1] + 2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            encrypted_string = encrypted_string * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1] + 2])\n        else\n    \
    \        encrypted_string = encrypted_string * i\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmtmbtjzc.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpmtmbtjzc.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    # create a dictionary of the alphabet shifted by two multiplied by two places\n\
    \    shifted_alphabet = Dict('a'=>5,'b'=>6,'c'=>7,'d'=>8,'e'=>9,'f'=>10,'g'=>11,'h'=>12,'i'=>13,'j'=>14,'k'=>15,'l'=>16,'m'=>17,'n'=>18,'o'=>19,'p'=>20,'q'=>21,'r'=>22,'s'=>23,'t'=>24,'u'=>25,'v'=>26,'w'=>1,'x'=>2,'y'=>3,'z'=>4)\n\
    \    # create a string to store the encrypted string\n    encrypted_string = \"\
    \"\n    # loop through the string\n    for i in s\n        # check if the character\
    \ is a letter\n        if i in keys(alphabet)\n            # if it is a letter,\
    \ append the encrypted letter to the encrypted string\n            encrypted_string\
    \ = string(encrypted_string, get(shifted_alphabet, i, 0))\n        else\n    \
    \        # if it is not a letter, append the character to the encrypted string\n\
    \            encrypted_string = string(encrypted_string, i)\n        end\n   \
    \ end\n    # return the encrypted string\n    return encrypted_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp5hh0_kb1.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmp5hh0_kb1.jl:33\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"1213\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hh0_kb1.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hh0_kb1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5hh0_kb1.jl:34\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"5238101112141516\" == \"ewhjklnop\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hh0_kb1.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hh0_kb1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5hh0_kb1.jl:35\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"1110\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hh0_kb1.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hh0_kb1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5hh0_kb1.jl:36\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"924\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5hh0_kb1.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5hh0_kb1.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5hh0_kb1.jl:37\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"10591105191059111\" == \"jeiajeaijeiak\"\
    \nStacktrace:\n [1] macro expansion\n   @ /"
  timestamp: 1659748193
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a new string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    # loop through the string\n    for\
    \ i in s\n        # check if the character is a letter\n        if isalpha(i)\n\
    \            # check if the character is a lower case letter\n            if islower(i)\n\
    \                # add the encrypted character to the encrypted string\n     \
    \           push!(encrypted_string, chr(mod(ord(i) + 2*2, 122)))\n           \
    \ else\n                # add the encrypted character to the encrypted string\n\
    \                push!(encrypted_string, chr(mod(ord(i) + 2*2, 90)))\n       \
    \     end\n        else\n            # add the character to the encrypted string\n\
    \            push!(encrypted_string, i)\n        end\n    end\n    # return the\
    \ encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmplaojvqwm.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: isalpha not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmplaojvqwm.jl:13\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaojvqwm.jl:35 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaojvqwm.jl:34\ntest set: Error
    During Test at /tmp/tmplaojvqwm.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmplaojvqwm.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaojvqwm.jl:36 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaojvqwm.jl:34\ntest set: Error
    During Test at /tmp/tmplaojvqwm.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmplaojvqwm.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaojvqwm.jl:37 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaojvqwm.jl:34\ntest set: Error
    During Test at /tmp/tmplaojvqwm.jl:38\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmplaojvqwm.jl:13\n   [2] macro expansion\n     @ /shared/cent'
  timestamp: 1659748194
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\"\
    )\n    s = replace(s, \"!\" => \"\")\n    s = replace(s, \"?\" => \"\")\n    s\
    \ = replace(s, \":\" => \"\")\n    s = replace(s, \";\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"(\" => \"\")\n    s = replace(s, \")\"\
    \ => \"\")\n    s = replace(s, \"0\" => \"\")\n    s = replace(s, \"1\" => \"\"\
    )\n    s = replace(s, \"2\" => \"\")\n    s = replace(s, \"3\" => \"\")\n    s\
    \ = replace(s, \"4\" => \"\")\n    s = replace(s, \"5\" => \"\")\n    s = replace(s,\
    \ \"6\" => \"\")\n    s = replace(s, \"7\" => \"\")\n    s = replace(s, \"8\"\
    \ => \"\")\n    s = replace(s, \"9\" => \"\")\n    s = replace(s, \"a\" => \"\
    c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n\
    \    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s\
    \ = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s,\
    \ \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\"\
    \ => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"\
    n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n\
    \    s = replace(s, \"o\" => \"q\")\n    s = replace(s,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66db70n3.jl:47\nin expression starting at\
    \ /tmp/tmp66db70n3.jl:47\n"
  stdout: ''
  timestamp: 1659748187
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    #create a string of the alphabet rotated\
    \ by two places\n    alphabet_rotated = \"cdefghijklmnopqrstuvwxyzab\"\n    #create\
    \ a dictionary of the alphabet and the rotated alphabet\n    alphabet_dict = Dict(zip(alphabet,\
    \ alphabet_rotated))\n    #create an empty string to store the encrypted string\n\
    \    encrypted_string = \"\"\n    #loop through the string and replace each letter\
    \ with the corresponding letter in the rotated alphabet\n    for i in s\n    \
    \    encrypted_string = string(encrypted_string, alphabet_dict[i])\n    end\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpusbrzyd7.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpusbrzyd7.jl:27\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpusbrzyd7.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpusbrzyd7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpusbrzyd7.jl:28\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpusbrzyd7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpusbrzyd7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpusbrzyd7.jl:29\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpusbrzyd7.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpusbrzyd7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpusbrzyd7.jl:30\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpusbrzyd7.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpusbrzyd7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpusbrzyd7.jl:31\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748194
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    encrypted = \"\"\n    for i in s\n        if i in alphabet\n           \
    \ encrypted = encrypted * alphabet[(alphabet.index(i) + 2) % 26]\n        else\n\
    \            encrypted = encrypted * i\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpo8f7gu9r.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpo8f7gu9r.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo8f7gu9r.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo8f7gu9r.jl:24\ntest set: Error
    During Test at /tmp/tmpo8f7gu9r.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpo8f7gu9r.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo8f7gu9r.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo8f7gu9r.jl:24\ntest set: Error
    During Test at /tmp/tmpo8f7gu9r.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpo8f7gu9r.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo8f7gu9r.jl:27 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo8f7gu9r.jl:24\ntest set: Error
    During Test at /tmp/tmpo8f7gu9r.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748194
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    encrypted = \"\"\n    for i in s\n        if i in alphabet\n           \
    \ encrypted = encrypted * string(alphabet[(alphabet.index(i) + 2) % 26])\n   \
    \     else\n            encrypted = encrypted * string(i)\n        end\n    end\n\
    \    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp_bnbhq3c.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp_bnbhq3c.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_bnbhq3c.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_bnbhq3c.jl:24\ntest set: Error
    During Test at /tmp/tmp_bnbhq3c.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp_bnbhq3c.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_bnbhq3c.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_bnbhq3c.jl:24\ntest set: Error
    During Test at /tmp/tmp_bnbhq3c.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp_bnbhq3c.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_bnbhq3c.jl:27 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_bnbhq3c.jl:24\ntest set: Error
    During Test at /tmp/tmp_bnbhq3c.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748194
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    encrypted = \"\"\n    for i in s\n        if i in alphabet\n           \
    \ encrypted = encrypted * alphabet[(alphabet.index(i) + 2) % 26]\n        else\n\
    \            encrypted = encrypted * i\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpo8f7gu9r.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpo8f7gu9r.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo8f7gu9r.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo8f7gu9r.jl:24\ntest set: Error
    During Test at /tmp/tmpo8f7gu9r.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpo8f7gu9r.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo8f7gu9r.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo8f7gu9r.jl:24\ntest set: Error
    During Test at /tmp/tmpo8f7gu9r.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpo8f7gu9r.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo8f7gu9r.jl:27 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo8f7gu9r.jl:24\ntest set: Error
    During Test at /tmp/tmpo8f7gu9r.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748194
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    return [shift(x, 2*2) for x in s]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphccyitvv.jl:15\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmphccyitvv.jl:8\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmphccyitvv.jl:15 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmphccyitvv.jl:14\ntest set: Error
    During Test at /tmp/tmphccyitvv.jl:16\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmphccyitvv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmphccyitvv.jl:16 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmphccyitvv.jl:14\ntest set: Error
    During Test at /tmp/tmphccyitvv.jl:17\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmphccyitvv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia'
  timestamp: 1659748195
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = s.replace(\"a\"\
    , \"c\")\n    s = s.replace(\"b\", \"d\")\n    s = s.replace(\"c\", \"e\")\n \
    \   s = s.replace(\"d\", \"f\")\n    s = s.replace(\"e\", \"g\")\n    s = s.replace(\"\
    f\", \"h\")\n    s = s.replace(\"g\", \"i\")\n    s = s.replace(\"h\", \"j\")\n\
    \    s = s.replace(\"i\", \"k\")\n    s = s.replace(\"j\", \"l\")\n    s = s.replace(\"\
    k\", \"m\")\n    s = s.replace(\"l\", \"n\")\n    s = s.replace(\"m\", \"o\")\n\
    \    s = s.replace(\"n\", \"p\")\n    s = s.replace(\"o\", \"q\")\n    s = s.replace(\"\
    p\", \"r\")\n    s = s.replace(\"q\", \"s\")\n    s = s.replace(\"r\", \"t\")\n\
    \    s = s.replace(\"s\", \"u\")\n    s = s.replace(\"t\", \"v\")\n    s = s.replace(\"\
    u\", \"w\")\n    s = s.replace(\"v\", \"x\")\n    s = s.replace(\"w\", \"y\")\n\
    \    s = s.replace(\"x\", \"z\")\n    s = s.replace(\"y\", \"a\")\n    s = s.replace(\"\
    z\", \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprx4ztnj8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmprx4ztnj8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    #create a string of the alphabet rotated\
    \ by two multiplied to two places\n    alphabet_rotated = \"cdefghijklmnopqrstuvwxyzab\"\
    \n    #create a dictionary of the alphabet and the alphabet rotated\n    d = Dict(zip(alphabet,alphabet_rotated))\n\
    \    #create an empty string\n    encrypted_string = \"\"\n    #loop through the\
    \ string s\n    for i in s\n        #if the letter is in the dictionary\n    \
    \    if i in keys(d)\n            #add the corresponding letter to the encrypted\
    \ string\n            push!(encrypted_string,d[i])\n        else\n           \
    \ #if the letter is not in the dictionary, add the letter to the encrypted string\n\
    \            push!(encrypted_string,i)\n        end\n    end\n    #return the\
    \ encrypted string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpg1fjnfgr.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpg1fjnfgr.jl:21\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpg1fjnfgr.jl:35 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpg1fjnfgr.jl:34\ntest set: Error During Test at
    /tmp/tmpg1fjnfgr.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpg1fjnfgr.jl:21\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpg1fjnfgr.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpg1fjnfgr.jl:34\ntest'
  timestamp: 1659748195
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    encrypted_string = \"\"\n    for i in s\n        if i in alphabet\n     \
    \       encrypted_string = encrypted_string * alphabet[(alphabet.find(i) + 2)\
    \ % 26]\n        else\n            encrypted_string = encrypted_string * i\n \
    \       end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmprng6rxlv.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field find\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmprng6rxlv.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprng6rxlv.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprng6rxlv.jl:23\ntest set: Error
    During Test at /tmp/tmprng6rxlv.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field find\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprng6rxlv.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprng6rxlv.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprng6rxlv.jl:23\ntest set: Error
    During Test at /tmp/tmprng6rxlv.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field find\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprng6rxlv.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprng6rxlv.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprng6rxlv.jl:23\ntest set: Error
    During Test at /tmp/tmprng6rxlv.jl:27\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has no '
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    #create a dictionary of the alphabet\n\
    \    alphabet = Dict(\"a\"=>\"c\", \"b\"=>\"d\", \"c\"=>\"e\", \"d\"=>\"f\", \"\
    e\"=>\"g\", \"f\"=>\"h\", \"g\"=>\"i\", \"h\"=>\"j\", \"i\"=>\"k\", \"j\"=>\"\
    l\", \"k\"=>\"m\", \"l\"=>\"n\", \"m\"=>\"o\", \"n\"=>\"p\", \"o\"=>\"q\", \"\
    p\"=>\"r\", \"q\"=>\"s\", \"r\"=>\"t\", \"s\"=>\"u\", \"t\"=>\"v\", \"u\"=>\"\
    w\", \"v\"=>\"x\", \"w\"=>\"y\", \"x\"=>\"z\", \"y\"=>\"a\", \"z\"=>\"b\")\n \
    \   #loop through the string\n    for i in s\n        #check if the character\
    \ is a letter\n        if i in keys(alphabet)\n            #if it is a letter,\
    \ append the encrypted letter to the encrypted string\n            push!(encrypted_string,\
    \ alphabet[i])\n        else\n            #if it is not a letter, append the character\
    \ to the encrypted string\n            push!(encrypted_string, i)\n        end\n\
    \    end\n    #return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp0crko8uy.jl:31\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp0crko8uy.jl:20\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp0crko8uy.jl:31 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp0crko8uy.jl:30\ntest set: Error During Test at
    /tmp/tmp0crko8uy.jl:32\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp0crko8uy.jl:20\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp0crko8uy.jl:32 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp0crko8uy.jl:30\ntest'
  timestamp: 1659748195
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5, 'f'=>6, 'g'=>7, 'h'=>8,\
    \ 'i'=>9, 'j'=>10, 'k'=>11, 'l'=>12, 'm'=>13, 'n'=>14, 'o'=>15, 'p'=>16, 'q'=>17,\
    \ 'r'=>18, 's'=>19, 't'=>20, 'u'=>21, 'v'=>22, 'w'=>23, 'x'=>24, 'y'=>25, 'z'=>26)\n\
    \    # create a dictionary of the alphabet rotated\n    alphabet_rotated = Dict('a'=>3,\
    \ 'b'=>4, 'c'=>5, 'd'=>6, 'e'=>7, 'f'=>8, 'g'=>9, 'h'=>10, 'i'=>11, 'j'=>12, 'k'=>13,\
    \ 'l'=>14, 'm'=>15, 'n'=>16, 'o'=>17, 'p'=>18, 'q'=>19, 'r'=>20, 's'=>21, 't'=>22,\
    \ 'u'=>23, 'v'=>24, 'w'=>25, 'x'=>26, 'y'=>1, 'z'=>2)\n    # create an empty string\
    \ to store the encrypted string\n    encrypted_string = \"\"\n    # iterate through\
    \ the string\n    for i in s\n        # if the character is a letter\n       \
    \ if i in alphabet\n            # find the value of the letter in the alphabet\
    \ dictionary\n            value = alphabet[i]\n            # find the corresponding\
    \ value in the alphabet_rotated dictionary\n            value_rotated = alphabet_rotated[i]\n\
    \            # add the corresponding letter to the encrypted string\n        \
    \    push!(encrypted_string, value_rotated)\n        # if the character is not\
    \ a letter\n        else\n            # add the character to the encrypted string\n\
    \            push!(encrypted_string, i)\n        end\n    end\n    # return\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb4wrdmfk.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb4wrdmfk.jl:1\n\
    in expression starting at /tmp/tmpb4wrdmfk.jl:1\n"
  stdout: ''
  timestamp: 1659748194
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    new_s = \"\"\n    for\
    \ i in s\n        if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n           \
    \ new_s = new_s * string(i)\n        else\n            new_s = new_s * string(i)\n\
    \        end\n    end\n    return new_s\nend\nusing Test\n\n@testset begin\n\n\
    candidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpvm9zh0ye.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpvm9zh0ye.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvm9zh0ye.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvm9zh0ye.jl:23\ntest set: Error
    During Test at /tmp/tmpvm9zh0ye.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpvm9zh0ye.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvm9zh0ye.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvm9zh0ye.jl:23\ntest set: Error
    During Test at /tmp/tmpvm9zh0ye.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpvm9zh0ye.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvm9zh0ye.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvm9zh0ye.jl:23\ntest set: Error
    During Test at /tmp/tmpvm9zh0ye.jl:27\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748197
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    # create a string of the alphabet shifted\
    \ down by two\n    alphabet_shift = \"cdefghijklmnopqrstuvwxyzab\"\n    # create\
    \ an empty string to store the encrypted string\n    encrypted_string = \"\"\n\
    \    # iterate through the string\n    for letter in s\n        # check if the\
    \ letter is in the alphabet\n        if letter in alphabet\n            # find\
    \ the index of the letter in the alphabet\n            index = findfirst(alphabet,\
    \ letter)\n            # add the letter at the index in the alphabet_shift to\
    \ the encrypted string\n            push!(encrypted_string, alphabet_shift[index])\n\
    \        else\n            # add the letter to the encrypted string\n        \
    \    push!(encrypted_string, letter)\n        end\n    end\n    # return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpi6brr0m2.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpi6brr0m2.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpi6brr0m2.jl:35 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpi6brr0m2.jl:34\ntest set: Error During Test at
    /tmp/tmpi6brr0m2.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpi6brr0m2.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpi6brr0m2.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpi6brr0m2.jl:34\ntest set: Error During Test at
    /tmp/tmpi6brr0m2.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748197
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = uppercase(s)\n    s = replace(s, \"A\"\
    \ => \"C\")\n    s = replace(s, \"B\" => \"D\")\n    s = replace(s, \"C\" => \"\
    E\")\n    s = replace(s, \"D\" => \"F\")\n    s = replace(s, \"E\" => \"G\")\n\
    \    s = replace(s, \"F\" => \"H\")\n    s = replace(s, \"G\" => \"I\")\n    s\
    \ = replace(s, \"H\" => \"J\")\n    s = replace(s, \"I\" => \"K\")\n    s = replace(s,\
    \ \"J\" => \"L\")\n    s = replace(s, \"K\" => \"M\")\n    s = replace(s, \"L\"\
    \ => \"N\")\n    s = replace(s, \"M\" => \"O\")\n    s = replace(s, \"N\" => \"\
    P\")\n    s = replace(s, \"O\" => \"Q\")\n    s = replace(s, \"P\" => \"R\")\n\
    \    s = replace(s, \"Q\" => \"S\")\n    s = replace(s, \"R\" => \"T\")\n    s\
    \ = replace(s, \"S\" => \"U\")\n    s = replace(s, \"T\" => \"V\")\n    s = replace(s,\
    \ \"U\" => \"W\")\n    s = replace(s, \"V\" => \"X\")\n    s = replace(s, \"W\"\
    \ => \"Y\")\n    s = replace(s, \"X\" => \"Z\")\n    s = replace(s, \"Y\" => \"\
    A\")\n    s = replace(s, \"Z\" => \"B\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2ge_2b_f.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmp2ge_2b_f.jl:42\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"BA\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ge_2b_f.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ge_2b_f.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2ge_2b_f.jl:43\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"AABBABBAB\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ge_2b_f.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ge_2b_f.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2ge_2b_f.jl:44\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"AB\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ge_2b_f.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ge_2b_f.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2ge_2b_f.jl:45\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"AB\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ge_2b_f.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ge_2b_f.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2ge_2b_f.jl:46\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"BAAABAAABAAAA\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748196
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\"\
    )\n    s = replace(s, \"!\" => \"\")\n    s = replace(s, \"?\" => \"\")\n    s\
    \ = replace(s, \";\" => \"\")\n    s = replace(s, \":\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"(\" => \"\")\n    s = replace(s, \")\"\
    \ => \"\")\n    s = replace(s, \"1\" => \"\")\n    s = replace(s, \"2\" => \"\"\
    )\n    s = replace(s, \"3\" => \"\")\n    s = replace(s, \"4\" => \"\")\n    s\
    \ = replace(s, \"5\" => \"\")\n    s = replace(s, \"6\" => \"\")\n    s = replace(s,\
    \ \"7\" => \"\")\n    s = replace(s, \"8\" => \"\")\n    s = replace(s, \"9\"\
    \ => \"\")\n    s = replace(s, \"0\" => \"\")\n    s = replace(s, \"a\" => \"\
    c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n\
    \    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s\
    \ = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s,\
    \ \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\"\
    \ => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"\
    n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n\
    \    s = replace(s, \"o\" => \"q\")\n    s = replace(s,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr91kbtj9.jl:47\nin expression starting at\
    \ /tmp/tmpr91kbtj9.jl:47\n"
  stdout: ''
  timestamp: 1659748194
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    #create a dictionary of the alphabet rotated by two places\n    alphabet_rotated\
    \ = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    #create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    #loop through the string\n    for i in s\n        #check if the\
    \ character is a letter\n        if i in alphabet\n            #if it is a letter,\
    \ add the encrypted letter to the encrypted string\n            encrypted_string\
    \ = string(encrypted_string,get(alphabet_rotated,i,0))\n        else\n       \
    \     #if it is not a letter, add the character to the encrypted string\n    \
    \        encrypted_string = string(encrypted_string,i)\n        end\n    end\n\
    \    #return the encrypted string\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprxq7qakp.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  AbstractDict collections only
    contain Pairs;\n  Either look for e.g. A=>B instead, or use the `keys` or `values`\n  function
    if you are looking for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Int64})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmprxq7qakp.jl:17\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmprxq7qakp.jl:33 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmprxq7qakp.jl:32\ntest set: Error During Test at
    /tmp/tmprxq7qakp.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  AbstractDict collections only contain Pairs;\n  Either look
    for e.g. A=>B instead, or use the `keys` or `values`\n  function if you are looking
    for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Int64})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmprxq7qakp.jl:17\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmprxq7qakp.jl:34 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmprxq7qakp.jl:32\ntest set: Error During Test at
    /tmp/tmprxq7qakp.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  AbstractDict collections only contain Pairs;\n  Either look for e.g.
    A=>B instead, or use the `keys` or `values`\n  function if you are looking for
    a key or value respectively.\n  Stacktrace:\n   [1] er'
  timestamp: 1659748198
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #convert string to array of characters\n  \
    \  s = collect(s)\n    #create an array of the alphabet\n    alphabet = collect(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    #create an empty array to store the encrypted\
    \ string\n    encrypted = []\n    #loop through the string\n    for i in s\n \
    \       #check if the character is a letter\n        if i in alphabet\n      \
    \      #find the index of the letter in the alphabet\n            index = findfirst(alphabet,\
    \ i)\n            #add 2 to the index\n            index += 2\n            #if\
    \ the index is greater than the length of the alphabet\n            if index >\
    \ length(alphabet)\n                #subtract the length of the alphabet from\
    \ the index\n                index -= length(alphphabet)\n            end\n  \
    \          #add the letter at the new index to the encrypted array\n         \
    \   push!(encrypted, alphabet[index])\n        else\n            #if the character\
    \ is not a letter, add it to the encrypted array\n            push!(encrypted,\
    \ i)\n        end\n    end\n    #convert the encrypted array to a string\n   \
    \ encrypted = join(encrypted)\n    #return the encrypted string\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpip6p5bzc.jl:44\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::Vector{Char}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpip6p5bzc.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpip6p5bzc.jl:44 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpip6p5bzc.jl:43\ntest set: Error During Test at
    /tmp/tmpip6p5bzc.jl:45\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpip6p5bzc.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpip6p5bzc.jl:45 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpip6p5bzc.jl:43\ntest set: Error During Test at
    /tmp/tmpip6p5bzc.jl:46\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  MethodError: no method matching findfirst(::Vector{Char}, ::Ch'
  timestamp: 1659748198
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary that maps the letters\
    \ of the alphabet to their \n    #corresponding letters in the encrypted alphabet\n\
    \    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    encrypted_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\
    \n    alphabet_dict = Dict(zip(alphabet, encrypted_alphabet))\n    #create an\
    \ empty string to store the encrypted string\n    encrypted_string = \"\"\n  \
    \  #iterate through the string and replace each letter with its corresponding\
    \ \n    #letter in the encrypted alphabet\n    for letter in s\n        if letter\
    \ in alphabet_dict\n            encrypted_string = string(encrypted_string, alphabet_dict[letter])\n\
    \        else\n            encrypted_string = string(encrypted_string, letter)\n\
    \        end\n    end\n    return encrypted_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpdm_w1i7s.jl:31\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  AbstractDict collections only
    contain Pairs;\n  Either look for e.g. A=>B instead, or use the `keys` or `values`\n  function
    if you are looking for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Char})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmpdm_w1i7s.jl:18\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmpdm_w1i7s.jl:31 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmpdm_w1i7s.jl:30\ntest set: Error During Test at
    /tmp/tmpdm_w1i7s.jl:32\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  AbstractDict collections only contain Pairs;\n  Either look
    for e.g. A=>B instead, or use the `keys` or `values`\n  function if you are looking
    for a key or value respectively.\n  Stacktrace:\n   [1] error(s::String)\n     @
    Base ./error.jl:33\n   [2] in(p::Char, a::Dict{Char, Char})\n     @ Base ./abstractdict.jl:28\n   [3]
    encrypt(s::String)\n     @ Main /tmp/tmpdm_w1i7s.jl:18\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5]
    macro expansion\n     @ /tmp/tmpdm_w1i7s.jl:32 [inlined]\n   [6] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7]
    top-level scope\n     @ /tmp/tmpdm_w1i7s.jl:30\ntest set: Error During Test at
    /tmp/tmpdm_w1i7s.jl:33\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  AbstractDict collections only contain Pairs;\n  Either look for e.g.
    A=>B instead, or use the `keys` or `values`\n  function if you are looking for
    a key or value respectively.\n  Stacktrace:\n   [1] erro'
  timestamp: 1659748198
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted = encrypted\
    \ * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"abcdefghijklmnopqrstuvwxyz\"\
    ) .== i)[1] + 2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\
    \            encrypted = encrypted * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1] + 2])\n        else\n    \
    \        encrypted = encrypted * i\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp09ugd8e.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpp09ugd8e.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748188
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = uppercase(s)\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\"\
    )\n    s = replace(s, \"?\" => \"\")\n    s = replace(s, \"!\" => \"\")\n    s\
    \ = replace(s, \":\" => \"\")\n    s = replace(s, \";\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"'\" => \"\")\n    s = replace(s, \"(\"\
    \ => \"\")\n    s = replace(s, \")\" => \"\")\n    s = replace(s, \"0\" => \"\"\
    )\n    s = replace(s, \"1\" => \"\")\n    s = replace(s, \"2\" => \"\")\n    s\
    \ = replace(s, \"3\" => \"\")\n    s = replace(s, \"4\" => \"\")\n    s = replace(s,\
    \ \"5\" => \"\")\n    s = replace(s, \"6\" => \"\")\n    s = replace(s, \"7\"\
    \ => \"\")\n    s = replace(s, \"8\" => \"\")\n    s = replace(s, \"9\" => \"\"\
    )\n    s = replace(s, \"A\" => \"C\")\n    s = replace(s, \"B\" => \"D\")\n  \
    \  s = replace(s, \"C\" => \"E\")\n    s = replace(s, \"D\" => \"F\")\n    s =\
    \ replace(s, \"E\" => \"G\")\n    s = replace(s, \"F\" => \"H\")\n    s = replace(s,\
    \ \"G\" => \"I\")\n    s = replace(s, \"H\" => \"J\")\n    s = replace(s, \"I\"\
    \ => \"K\")\n    s = replace(s, \"J\" => \"L\")\n    s = replace(s, \"K\" => \"\
    M\")\n    s = replace(s, \"L\" => \"N\")\n    s = replace(s, \"M\" => \"O\")\n\
    \    s = replace(s, \"N\" => \"P\")\n    s = replace(s, \"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp84dlaqj2.jl:50\nin expression starting at\
    \ /tmp/tmp84dlaqj2.jl:50\n"
  stdout: ''
  timestamp: 1659748195
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"\
    =>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"\
    =>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"\
    x\"=>24,\"y\"=>25,\"z\"=>26)\n    #create a dictionary of the alphabet rotated\
    \ by two places\n    alphabet_rotated = Dict(\"a\"=>3,\"b\"=>4,\"c\"=>5,\"d\"\
    =>6,\"e\"=>7,\"f\"=>8,\"g\"=>9,\"h\"=>10,\"i\"=>11,\"j\"=>12,\"k\"=>13,\"l\"=>14,\"\
    m\"=>15,\"n\"=>16,\"o\"=>17,\"p\"=>18,\"q\"=>19,\"r\"=>20,\"s\"=>21,\"t\"=>22,\"\
    u\"=>23,\"v\"=>24,\"w\"=>25,\"x\"=>26,\"y\"=>1,\"z\"=>2)\n    #create a dictionary\
    \ of the alphabet rotated by two places\n    alphabet_rotated_2 = Dict(\"a\"=>5,\"\
    b\"=>6,\"c\"=>7,\"d\"=>8,\"e\"=>9,\"f\"=>10,\"g\"=>11,\"h\"=>12,\"i\"=>13,\"j\"\
    =>14,\"k\"=>15,\"l\"=>16,\"m\"=>17,\"n\"=>18,\"o\"=>19,\"p\"=>20,\"q\"=>21,\"\
    r\"=>22,\"s\"=>23,\"t\"=>24,\"u\"=>25,\"v\"=>26,\"w\"=>1,\"x\"=>2,\"y\"=>3,\"\
    z\"=>4)\n    #create an empty string\n    encrypted_string = \"\"\n    #iterate\
    \ through the string\n    for i in s\n        #check if the letter is in the alphabet\n\
    \        if i in keys(alphabet)\n            #check if the letter is in\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvejccctc.jl:1\nin expression starting at /tmp/tmpvejccctc.jl:1\n"
  stdout: ''
  timestamp: 1659748196
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a new string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    #loop through the string\n    for i\
    \ in s\n        #check if the character is a letter\n        if isalpha(i)\n \
    \           #check if the character is a lower case letter\n            if islower(i)\n\
    \                #check if the character is a lower case letter\n            \
    \    if i == 'z'\n                    #append the character to the encrypted string\n\
    \                    append!(encrypted_string, 'b')\n                elseif i\
    \ == 'y'\n                    #append the character to the encrypted string\n\
    \                    append!(encrypted_string, 'a')\n                else\n  \
    \                  #append the character to the encrypted string\n           \
    \         append!(encrypted_string, chr(ord(i) + 2))\n                end\n  \
    \          else\n                #check if the character is a lower case letter\n\
    \                if i == 'Z'\n                    #append the character to the\
    \ encrypted string\n                    append!(encrypted_string, 'B')\n     \
    \           elseif i == 'Y'\n                    #append the character to the\
    \ encrypted string\n                    append!(encrypted_string, 'A')\n     \
    \           else\n                    #append the character to the encrypted string\n\
    \                    append!(encrypted_string, chr(ord(i) + 2))\n            \
    \    end\n            end\n        else\n            #append the character to\
    \ the encrypted string\n            append!(encrypted_string, i)\n        end\n\
    \    end\n    #return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp8gg1updr.jl:53\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: isalpha not
    defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmp8gg1updr.jl:13\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8gg1updr.jl:53 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8gg1updr.jl:52\ntest set: Error
    During Test at /tmp/tmp8gg1updr.jl:54\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8gg1updr.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8gg1updr.jl:54 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8gg1updr.jl:52\ntest set: Error
    During Test at /tmp/tmp8gg1updr.jl:55\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8gg1updr.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8gg1updr.jl:55 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8gg1updr.jl:52\ntest set: Error
    During Test at /tmp/tmp8gg1updr.jl:56\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: isalpha not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8gg1updr.jl:13\n   [2] macro expansion\n     @ /shared/cent'
  timestamp: 1659748198
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1, 'b'=>2, 'c'=>3, 'd'=>4, 'e'=>5, 'f'=>6, 'g'=>7, 'h'=>8,\
    \ 'i'=>9, 'j'=>10, 'k'=>11, 'l'=>12, 'm'=>13, 'n'=>14, 'o'=>15, 'p'=>16, 'q'=>17,\
    \ 'r'=>18, 's'=>19, 't'=>20, 'u'=>21, 'v'=>22, 'w'=>23, 'x'=>24, 'y'=>25, 'z'=>26)\n\
    \    # create a dictionary of the alphabet rotated\n    alphabet_rotated = Dict('a'=>3,\
    \ 'b'=>4, 'c'=>5, 'd'=>6, 'e'=>7, 'f'=>8, 'g'=>9, 'h'=>10, 'i'=>11, 'j'=>12, 'k'=>13,\
    \ 'l'=>14, 'm'=>15, 'n'=>16, 'o'=>17, 'p'=>18, 'q'=>19, 'r'=>20, 's'=>21, 't'=>22,\
    \ 'u'=>23, 'v'=>24, 'w'=>25, 'x'=>26, 'y'=>1, 'z'=>2)\n    # create an empty string\
    \ to store the encrypted string\n    encrypted_string = \"\"\n    # loop through\
    \ the string\n    for i in s\n        # if the letter is a space, add a space\
    \ to the encrypted string\n        if i == \" \"\n            encrypted_string\
    \ = encrypted_string * \" \"\n        # else, add the letter from the rotated\
    \ alphabet to the encrypted string\n        else\n            encrypted_string\
    \ = encrypted_string * get(alphabet_rotated, i, 0)\n        end\n    end\n   \
    \ # return the encrypted string\n    return encrypted_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659748198
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted = encrypted\
    \ * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"abcdefghijklmnopqrstuvwxyz\"\
    ) .== i)[1]+2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\
    \            encrypted = encrypted * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1]+2])\n        else\n      \
    \      encrypted = encrypted * i\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf9fyk7rv.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpf9fyk7rv.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9fyk7rv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9fyk7rv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpf9fyk7rv.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9fyk7rv.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9fyk7rv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpf9fyk7rv.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9fyk7rv.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9fyk7rv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpf9fyk7rv.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf9fyk7rv.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf9fyk7rv.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpf9fyk7rv.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748198
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i == \" \"\n            push!(encrypted_string, \" \")\n        else\n\
    \            push!(encrypted_string, i)\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp6i51ttnn.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp6i51ttnn.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp6i51ttnn.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp6i51ttnn.jl:22\ntest set: Error During Test at
    /tmp/tmp6i51ttnn.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp6i51ttnn.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp6i51ttnn.jl:24 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp6i51ttnn.jl:22\ntest'
  timestamp: 1659748199
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    for i in s\n        if i == \"a\"\n       \
    \     i = \"c\"\n        elseif i == \"b\"\n            i = \"d\"\n        elseif\
    \ i == \"c\"\n            i = \"e\"\n        elseif i == \"d\"\n            i\
    \ = \"f\"\n        elseif i == \"e\"\n            i = \"g\"\n        elseif i\
    \ == \"f\"\n            i = \"h\"\n        elseif i == \"g\"\n            i =\
    \ \"i\"\n        elseif i == \"h\"\n            i = \"j\"\n        elseif i ==\
    \ \"i\"\n            i = \"k\"\n        elseif i == \"j\"\n            i = \"\
    l\"\n        elseif i == \"k\"\n            i = \"m\"\n        elseif i == \"\
    l\"\n            i = \"n\"\n        elseif i == \"m\"\n            i = \"o\"\n\
    \        elseif i == \"n\"\n            i = \"p\"\n        elseif i == \"o\"\n\
    \            i = \"q\"\n        elseif i == \"p\"\n            i = \"r\"\n   \
    \     elseif i == \"q\"\n            i = \"s\"\n        elseif i == \"r\"\n  \
    \          i = \"t\"\n        elseif i == \"s\"\n            i = \"u\"\n     \
    \   elseif i == \"t\"\n            i = \"v\"\n        elseif i == \"u\"\n    \
    \        i = \"w\"\n        elseif i == \"v\"\n            i = \"x\"\n       \
    \ elseif i == \"w\"\n            i = \"y\"\n        elseif i == \"x\"\n      \
    \      i = \"z\"\n        elseif i == \"y\"\n            i = \"a\"\n        elseif\
    \ i == \"z\"\n            i = \"b\"\n        end\n    end\n    return s\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd_xig558.jl:67

    '
  stdout: "test set: Test Failed at /tmp/tmpd_xig558.jl:70\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_xig558.jl:70 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_xig558.jl:69\ntest set: Test\
    \ Failed at /tmp/tmpd_xig558.jl:71\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_xig558.jl:71 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_xig558.jl:69\ntest set: Test\
    \ Failed at /tmp/tmpd_xig558.jl:72\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_xig558.jl:72 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_xig558.jl:69\ntest set: Test\
    \ Failed at /tmp/tmpd_xig558.jl:73\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_xig558.jl:73 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_xig558.jl:69\ntest set: Test\
    \ Failed at /tmp/tmpd_xig558.jl:74\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # Create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    # Create a string of the alphabet rotated\
    \ by two places\n    alphabet_rotated = \"cdefghijklmnopqrstuvwxyzab\"\n    #\
    \ Create an empty string to store the encrypted string\n    encrypted_string =\
    \ \"\"\n    # Loop through the string\n    for i in s\n        # Check if the\
    \ character is a letter\n        if i in alphabet\n            # Find the index\
    \ of the character in the alphabet\n            index = findfirst(alphabet, i)\n\
    \            # Add the character at the index in the rotated alphabet to the encrypted\
    \ string\n            push!(encrypted_string, alphabet_rotated[index])\n     \
    \   else\n            # Add the character to the encrypted string\n          \
    \  push!(encrypted_string, i)\n        end\n    end\n    # Return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp0lijobsa.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    findfirst(::String, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp0lijobsa.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp0lijobsa.jl:35 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp0lijobsa.jl:34\ntest set: Error During Test at
    /tmp/tmp0lijobsa.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching findfirst(::String, ::Char)\n  Closest
    candidates are:\n    findfirst(!Matched::Function, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,
    !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n    findfirst(::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp0lijobsa.jl:19\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp0lijobsa.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp0lijobsa.jl:34\ntest set: Error During Test at
    /tmp/tmp0lijobsa.jl:37\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  Meth'
  timestamp: 1659748199
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdefghijklmnopqrstuvwxyz\"\
    \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s = \"abcdef\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3stquvjc.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3stquvjc.jl:1\n\
    in expression starting at /tmp/tmp3stquvjc.jl:1\n"
  stdout: ''
  timestamp: 1659748188
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = lowercase(s)\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\"\
    )\n    s = replace(s, \"!\" => \"\")\n    s = replace(s, \"?\" => \"\")\n    s\
    \ = replace(s, \":\" => \"\")\n    s = replace(s, \";\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"'\" => \"\")\n    s = replace(s, \"(\"\
    \ => \"\")\n    s = replace(s, \")\" => \"\")\n    s = replace(s, \"[\" => \"\"\
    )\n    s = replace(s, \"]\" => \"\")\n    s = replace(s, \"{\" => \"\")\n    s\
    \ = replace(s, \"}\" => \"\")\n    s = replace(s, \"0\" => \"\")\n    s = replace(s,\
    \ \"1\" => \"\")\n    s = replace(s, \"2\" => \"\")\n    s = replace(s, \"3\"\
    \ => \"\")\n    s = replace(s, \"4\" => \"\")\n    s = replace(s, \"5\" => \"\"\
    )\n    s = replace(s, \"6\" => \"\")\n    s = replace(s, \"7\" => \"\")\n    s\
    \ = replace(s, \"8\" => \"\")\n    s = replace(s, \"9\" => \"\")\n    s = replace(s,\
    \ \"a\" => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\"\
    \ => \"e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"\
    g\")\n    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n\
    \    s = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s\
    \ = replace(s, \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpm55d0bi7.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm55d0bi7.jl:1\n\
    in expression starting at /tmp/tmpm55d0bi7.jl:1\n"
  stdout: ''
  timestamp: 1659748196
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary with the alphabet as\
    \ keys and the encrypted alphabet as values\n    # create a new string to store\
    \ the encrypted string\n    # loop through the string and replace the letters\
    \ with the encrypted letters\n    # return the encrypted string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpif3hb7ku.jl:18\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpif3hb7ku.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpif3hb7ku.jl:18 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpif3hb7ku.jl:17\ntest set: Error During Test at
    /tmp/tmpif3hb7ku.jl:19\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpif3hb7ku.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpif3hb7ku.jl:19 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src'
  timestamp: 1659748199
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = uppercase(s)\n    s = replace(s, \"A\"\
    \ => \"C\")\n    s = replace(s, \"B\" => \"D\")\n    s = replace(s, \"C\" => \"\
    E\")\n    s = replace(s, \"D\" => \"F\")\n    s = replace(s, \"E\" => \"G\")\n\
    \    s = replace(s, \"F\" => \"H\")\n    s = replace(s, \"G\" => \"I\")\n    s\
    \ = replace(s, \"H\" => \"J\")\n    s = replace(s, \"I\" => \"K\")\n    s = replace(s,\
    \ \"J\" => \"L\")\n    s = replace(s, \"K\" => \"M\")\n    s = replace(s, \"L\"\
    \ => \"N\")\n    s = replace(s, \"M\" => \"O\")\n    s = replace(s, \"N\" => \"\
    P\")\n    s = replace(s, \"O\" => \"Q\")\n    s = replace(s, \"P\" => \"R\")\n\
    \    s = replace(s, \"Q\" => \"S\")\n    s = replace(s, \"R\" => \"T\")\n    s\
    \ = replace(s, \"S\" => \"U\")\n    s = replace(s, \"T\" => \"V\")\n    s = replace(s,\
    \ \"U\" => \"W\")\n    s = replace(s, \"V\" => \"X\")\n    s = replace(s, \"W\"\
    \ => \"Y\")\n    s = replace(s, \"X\" => \"Z\")\n    s = replace(s, \"Y\" => \"\
    A\")\n    s = replace(s, \"Z\" => \"B\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2ge_2b_f.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmp2ge_2b_f.jl:42\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"BA\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ge_2b_f.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ge_2b_f.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2ge_2b_f.jl:43\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"AABBABBAB\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ge_2b_f.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ge_2b_f.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2ge_2b_f.jl:44\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"AB\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ge_2b_f.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ge_2b_f.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2ge_2b_f.jl:45\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"AB\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ge_2b_f.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ge_2b_f.jl:41\ntest set: Test\
    \ Failed at /tmp/tmp2ge_2b_f.jl:46\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"BAAABAAABAAAA\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748196
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s_array = Array(s)\n    for i in 1:length(s_array)\n\
    \        if s_array[i] == \" \"\n            s_array[i] = \" \"\n        elseif\
    \ s_array[i] == \"z\"\n            s_array[i] = \"b\"\n        elseif s_array[i]\
    \ == \"y\"\n            s_array[i] = \"a\"\n        else\n            s_array[i]\
    \ = Char(Int(s_array[i]) + 2)\n        end\n    end\n    return join(s_array)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmppbm3q73r.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    Array(::String)\n  Closest candidates are:\n    Array(!Matched::Union{LinearAlgebra.QR,
    LinearAlgebra.QRCompactWY}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:442\n    Array(!Matched::Union{LinearAlgebra.Hermitian,
    LinearAlgebra.Symmetric}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:271\n    Array(!Matched::LinearAlgebra.Hessenberg)
    at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:550\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmppbm3q73r.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmppbm3q73r.jl:27 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmppbm3q73r.jl:26\ntest set: Error During Test at
    /tmp/tmppbm3q73r.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching Array(::String)\n  Closest candidates
    are:\n    Array(!Matched::Union{LinearAlgebra.QR, LinearAlgebra.QRCompactWY})
    at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/qr.jl:442\n    Array(!Matched::Union{LinearAlgebra.Hermitian,
    LinearAlgebra.Symmetric}) at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/symmetric.jl:271\n    Array(!Matched::LinearAlgebra.Hessenberg)
    at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/hessenberg.jl:550\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmppbm3q73r.jl:8\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmppbm3q73r.jl:28 [inlined]\n   [4] macro '
  timestamp: 1659748199
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # Create an array of the alphabet\n    alphabet\
    \ = [chr(i) for i in range(65,91)]\n    # Create an empty string to store the\
    \ encrypted string\n    encrypted_string = \"\"\n    # Loop through the string\n\
    \    for i in s\n        # If the character is a space, add a space to the encrypted\
    \ string\n        if i == \" \"\n            push!(encrypted_string, \" \")\n\
    \        # If the character is a capital letter, add the encrypted letter to the\
    \ encrypted string\n        elseif i in alphabet\n            push!(encrypted_string,\
    \ alphabet[(alphabet .== i)[1] + 2*2])\n        # If the character is a lowercase\
    \ letter, add the encrypted letter to the encrypted string\n        else\n   \
    \         push!(encrypted_string, lowercase(alphabet)[(lowercase(alphabet) .==\
    \ i)[1] + 2*2])\n        end\n    end\n    # Return the encrypted string\n   \
    \ return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpuq_t62cc.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(i::Int64)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64}, var"#1#2"})\n     @
    Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpuq_t62cc.jl:9\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpuq_t62cc.jl:33 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpuq_t62cc.jl:32\ntest set: Error
    During Test at /tmp/tmpuq_t62cc.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] (::var"#1#2")(i::Int64)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpuq_t62cc.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpuq_t62cc.jl:34 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpuq_t62cc.jl:32\ntest set: Error
    During Test at /tmp/tmpuq_t62cc.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] (::var"#1#2")(i::Int64)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpuq_t62cc.jl:9\n   [5] macro expansion\n     @ /shared/cent'
  timestamp: 1659748199
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = s.replace(\"a\"\
    , \"c\")\n    s = s.replace(\"b\", \"d\")\n    s = s.replace(\"c\", \"e\")\n \
    \   s = s.replace(\"d\", \"f\")\n    s = s.replace(\"e\", \"g\")\n    s = s.replace(\"\
    f\", \"h\")\n    s = s.replace(\"g\", \"i\")\n    s = s.replace(\"h\", \"j\")\n\
    \    s = s.replace(\"i\", \"k\")\n    s = s.replace(\"j\", \"l\")\n    s = s.replace(\"\
    k\", \"m\")\n    s = s.replace(\"l\", \"n\")\n    s = s.replace(\"m\", \"o\")\n\
    \    s = s.replace(\"n\", \"p\")\n    s = s.replace(\"o\", \"q\")\n    s = s.replace(\"\
    p\", \"r\")\n    s = s.replace(\"q\", \"s\")\n    s = s.replace(\"r\", \"t\")\n\
    \    s = s.replace(\"s\", \"u\")\n    s = s.replace(\"t\", \"v\")\n    s = s.replace(\"\
    u\", \"w\")\n    s = s.replace(\"v\", \"x\")\n    s = s.replace(\"w\", \"y\")\n\
    \    s = s.replace(\"x\", \"z\")\n    s = s.replace(\"y\", \"a\")\n    s = s.replace(\"\
    z\", \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprx4ztnj8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmprx4ztnj8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748189
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, r\" \"\
    , \"\")\n    s = replace(s, r\"[^a-z]\", \"\")\n    s = replace(s, r\"a\", \"\
    c\")\n    s = replace(s, r\"b\", \"d\")\n    s = replace(s, r\"c\", \"e\")\n \
    \   s = replace(s, r\"d\", \"f\")\n    s = replace(s, r\"e\", \"g\")\n    s =\
    \ replace(s, r\"f\", \"h\")\n    s = replace(s, r\"g\", \"i\")\n    s = replace(s,\
    \ r\"h\", \"j\")\n    s = replace(s, r\"i\", \"k\")\n    s = replace(s, r\"j\"\
    , \"l\")\n    s = replace(s, r\"k\", \"m\")\n    s = replace(s, r\"l\", \"n\"\
    )\n    s = replace(s, r\"m\", \"o\")\n    s = replace(s, r\"n\", \"p\")\n    s\
    \ = replace(s, r\"o\", \"q\")\n    s = replace(s, r\"p\", \"r\")\n    s = replace(s,\
    \ r\"q\", \"s\")\n    s = replace(s, r\"r\", \"t\")\n    s = replace(s, r\"s\"\
    , \"u\")\n    s = replace(s, r\"t\", \"v\")\n    s = replace(s, r\"u\", \"w\"\
    )\n    s = replace(s, r\"v\", \"x\")\n    s = replace(s, r\"w\", \"y\")\n    s\
    \ = replace(s, r\"x\", \"z\")\n    s = replace(s, r\"y\", \"a\")\n    s = replace(s,\
    \ r\"z\", \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpjzoybpmo.jl:44\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpjzoybpmo.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjzoybpmo.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjzoybpmo.jl:43\ntest set: Error
    During Test at /tmp/tmpjzoybpmo.jl:45\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpjzoybpmo.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjzoybpmo.jl:45 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjzoybpmo.jl:43\ntest set: Error
    During Test at /tmp/tmpjzoybpmo.jl:46\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpjzoybpmo.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjzoybpmo.jl:46 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjzoybpmo.jl:43\ntest set: Error
    During Test at /tmp/tmpjzoybpmo.jl:47\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748200
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_s = \"\"\n    for letter in s\n       \
    \ if letter in \"abcdefghijklmnopqrstuvwxyz\"\n            new_s = new_s * string(next_letter(letter))\n\
    \        elseif letter in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_s =\
    \ new_s * string(next_letter(letter))\n        else\n            new_s = new_s\
    \ * letter\n        end\n    end\n    return new_s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpsl_5zflr.jl:25\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: next_letter
    not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpsl_5zflr.jl:11\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsl_5zflr.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsl_5zflr.jl:24\ntest set: Error
    During Test at /tmp/tmpsl_5zflr.jl:26\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: next_letter not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpsl_5zflr.jl:11\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpsl_5zflr.jl:26 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpsl_5zflr.jl:24\ntest set: Error During Test at
    /tmp/tmpsl_5zflr.jl:27\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: next_letter not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpsl_5zflr.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsl_5zflr.jl:27 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsl_5zflr.jl:24\ntest set: Error
    During Test at /tmp/tmpsl_5zflr.jl:28\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: next_letter not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpsl_5zflr.jl:11\n   [2] macro expansion\n   '
  timestamp: 1659748200
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        elseif i == \"z\"\n\
    \            push!(encrypted, \"b\")\n        elseif i == \"y\"\n            push!(encrypted,\
    \ \"a\")\n        else\n            push!(encrypted, chr(Int(i) + 2))\n      \
    \  end\n    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpme0l_6v9.jl:27\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpme0l_6v9.jl:17\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpme0l_6v9.jl:27 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpme0l_6v9.jl:26\ntest set: Error During Test at
    /tmp/tmpme0l_6v9.jl:28\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpme0l_6v9.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpme0l_6v9.jl:28 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpme0l_6v9.jl:26\ntest set: Error
    During Test at /tmp/tmpme0l_6v9.jl:29\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpme0l_6v9.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpme0l_6v9.jl:29 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpme0l_6v9.jl:26\ntest set: Error
    During Test at /tmp/tmpme0l_6v9.jl:30\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: chr not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpme0l_6v9.jl:17\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748200
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    # create a dictionary of the alphabet shifted by two\n    shifted_alphabet\
    \ = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    # create a dictionary of the alphabet shifted by two multiplied by two\n\
    \    shifted_alphabet_x2 = Dict('a'=>6,'b'=>8,'c'=>10,'d'=>12,'e'=>14,'f'=>16,'g'=>18,'h'=>20,'i'=>22,'j'=>24,'k'=>26,'l'=>1,'m'=>3,'n'=>5,'o'=>7,'p'=>9,'q'=>11,'r'=>13,'s'=>15,'t'=>17,'u'=>19,'v'=>21,'w'=>23,'x'=>25,'y'=>2,'z'=>4)\n\
    \    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # check if\
    \ the character is a letter\n        if i in keys(alphabet)\n            #\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwgnz_6bl.jl:1\nin expression starting at /tmp/tmpwgnz_6bl.jl:1\n"
  stdout: ''
  timestamp: 1659748198
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = lowercase(s)\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpil7l8zsx.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpil7l8zsx.jl:42\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"ba\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:43\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"aabbabbab\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:44\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ab\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:45\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"ab\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:46\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"baaabaaabaaaa\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748181
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \" \"\n            new_string *= \" \"\n        else\n            new_string\
    \ *= string(chr(ord(i) + 2))\n        end\n    end\n    return new_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp9c_3vbw1.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp9c_3vbw1.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp9c_3vbw1.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp9c_3vbw1.jl:22\ntest set: Error During Test at
    /tmp/tmp9c_3vbw1.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp9c_3vbw1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9c_3vbw1.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9c_3vbw1.jl:22\ntest set: Error
    During Test at /tmp/tmp9c_3vbw1.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp9c_3vbw1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9c_3vbw1.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9c_3vbw1.jl:22\ntest set: Error
    During Test at /tmp/tmp9c_3vbw1.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp9c_3vbw1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748200
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmptmyqdmh8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmptmyqdmh8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmptmyqdmh8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmptmyqdmh8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmptmyqdmh8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmyqdmh8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmyqdmh8.jl:41\ntest set: Error
    During Test at /tmp/tmptmyqdmh8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748180
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmc76xb4q.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpmc76xb4q.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error During Test at
    /tmp/tmpmc76xb4q.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    for i in s\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            i = chr(ord(i) + 2)\n        end\n    end\n    return s\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpk78dhs3x.jl:20\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpk78dhs3x.jl:10\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpk78dhs3x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpk78dhs3x.jl:19\ntest set: Error During Test at
    /tmp/tmpk78dhs3x.jl:21\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpk78dhs3x.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk78dhs3x.jl:21 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk78dhs3x.jl:19\ntest set: Error
    During Test at /tmp/tmpk78dhs3x.jl:22\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpk78dhs3x.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpk78dhs3x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk78dhs3x.jl:19\ntest set: Error
    During Test at /tmp/tmpk78dhs3x.jl:23\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpk78dhs3x.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748200
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s, \"b\" => \"\
    d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\" => \"f\")\n\
    \    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"h\")\n    s\
    \ = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n    s = replace(s,\
    \ \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s = replace(s, \"k\"\
    \ => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s, \"m\" => \"\
    o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\" => \"q\")\n\
    \    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"s\")\n    s\
    \ = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n    s = replace(s,\
    \ \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s = replace(s, \"v\"\
    \ => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s, \"x\" => \"\
    z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\" => \"b\")\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp440mrent.jl:43\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmp440mrent.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp440mrent.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp440mrent.jl:42\ntest set: Error
    During Test at /tmp/tmp440mrent.jl:44\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp440mrent.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp440mrent.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp440mrent.jl:42\ntest set: Error
    During Test at /tmp/tmp440mrent.jl:45\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmp440mrent.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp440mrent.jl:45 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp440mrent.jl:42\ntest set: Error
    During Test at /tmp/tmp440mrent.jl:46\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748201
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = lowercase(s)\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \"a\" => \"c\")\n    s = replace(s, \"b\" => \"\
    d\")\n    s = replace(s, \"c\" => \"e\")\n    s = replace(s, \"d\" => \"f\")\n\
    \    s = replace(s, \"e\" => \"g\")\n    s = replace(s, \"f\" => \"h\")\n    s\
    \ = replace(s, \"g\" => \"i\")\n    s = replace(s, \"h\" => \"j\")\n    s = replace(s,\
    \ \"i\" => \"k\")\n    s = replace(s, \"j\" => \"l\")\n    s = replace(s, \"k\"\
    \ => \"m\")\n    s = replace(s, \"l\" => \"n\")\n    s = replace(s, \"m\" => \"\
    o\")\n    s = replace(s, \"n\" => \"p\")\n    s = replace(s, \"o\" => \"q\")\n\
    \    s = replace(s, \"p\" => \"r\")\n    s = replace(s, \"q\" => \"s\")\n    s\
    \ = replace(s, \"r\" => \"t\")\n    s = replace(s, \"s\" => \"u\")\n    s = replace(s,\
    \ \"t\" => \"v\")\n    s = replace(s, \"u\" => \"w\")\n    s = replace(s, \"v\"\
    \ => \"x\")\n    s = replace(s, \"w\" => \"y\")\n    s = replace(s, \"x\" => \"\
    z\")\n    s = replace(s, \"y\" => \"a\")\n    s = replace(s, \"z\" => \"b\")\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjuxah3dm.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmpjuxah3dm.jl:43\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"ba\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:44\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"aabbabbab\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:45\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ab\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:46\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"ab\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjuxah3dm.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjuxah3dm.jl:42\ntest set: Test\
    \ Failed at /tmp/tmpjuxah3dm.jl:47\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"baaabaaabaaaa\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748184
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i == \" \"\n            push!(encrypted_string, \" \")\n        else\n\
    \            push!(encrypted_string, chr(ord(i) + 2))\n        end\n    end\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcfd_bk_y.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error During Test at
    /tmp/tmpcfd_bk_y.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error
    During Test at /tmp/tmpcfd_bk_y.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcfd_bk_y.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcfd_bk_y.jl:22\ntest set: Error
    During Test at /tmp/tmpcfd_bk_y.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpcfd_bk_y.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748185
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    return [shift(x, 2*2) for x in s]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmphccyitvv.jl:15\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(x::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmphccyitvv.jl:8\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmphccyitvv.jl:15 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmphccyitvv.jl:14\ntest set: Error
    During Test at /tmp/tmphccyitvv.jl:16\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmphccyitvv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmphccyitvv.jl:16 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmphccyitvv.jl:14\ntest set: Error
    During Test at /tmp/tmphccyitvv.jl:17\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(x::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmphccyitvv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia'
  timestamp: 1659748195
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary with the alphabet\n \
    \   alphabet = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    # create a dictionary with the alphabet rotated by two multiplied to two\
    \ places\n    alphabet_rotated = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    for (key,value) in alphabet\n        if value == 1\n            alphabet_rotated[key]\
    \ = 25\n        elseif value == 2\n            alphabet_rotated[key] = 26\n  \
    \      else\n            alphabet_rotated[key] = value - 2\n        end\n    end\n\
    \    # create a dictionary with the alphabet rotated by two multiplied to two\
    \ places\n    alphabet_rotated = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoblssfj3.jl:23\nin expression starting at\
    \ /tmp/tmpoblssfj3.jl:23\n"
  stdout: ''
  timestamp: 1659748198
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    new_alphabet = alphabet[3:end] * \" \" * alphabet[1:2] * \" \" * alphabet[2:3]\n\
    \    s = lowercase(s)\n    s = replace(s,alphabet,new_alphabet)\n    return s\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpdyu0s_cn.jl:19\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    replace(::String, ::String, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function,
    Type}, ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n    replace(::String,
    !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n    replace(::AbstractString,
    !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpdyu0s_cn.jl:11\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpdyu0s_cn.jl:19 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpdyu0s_cn.jl:18\ntest set: Error During Test at
    /tmp/tmpdyu0s_cn.jl:20\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching replace(::String, ::String,
    ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type},
    ::Any; count) at /shared/centos7/julia/1.7.3/share/julia/base/set.jl:622\n    replace(::String,
    !Matched::Pair...; count) where N at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:535\n    replace(::AbstractString,
    !Matched::Pair...; count) at /shared/centos7/julia/1.7.3/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpdyu0s_cn.jl:11\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpdyu0s_cn.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/t'
  timestamp: 1659748201
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    new_string = \"\"\n\
    \    for i in s\n        if i == \" \"\n            new_string = new_string *\
    \ i\n        else\n            new_string = new_string * (chr(ord(i) + 2))\n \
    \       end\n    end\n    return new_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmprlie6cqd.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmprlie6cqd.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprlie6cqd.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprlie6cqd.jl:23\ntest set: Error
    During Test at /tmp/tmprlie6cqd.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprlie6cqd.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprlie6cqd.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprlie6cqd.jl:23\ntest set: Error
    During Test at /tmp/tmprlie6cqd.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprlie6cqd.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprlie6cqd.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprlie6cqd.jl:23\ntest set: Error
    During Test at /tmp/tmprlie6cqd.jl:27\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748201
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create an array of characters\n    # create\
    \ a dictionary of characters\n    # create a dictionary of characters that are\
    \ shifted\n    # create a new string\n    # iterate through the string\n    #\
    \ if the character is in the dictionary\n    # append the shifted character to\
    \ the new string\n    # else\n    # append the character to the new string\n \
    \   # return the new string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpp09kitaw.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpp09kitaw.jl:18\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpp09kitaw.jl:24 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpp09kitaw.jl:23\ntest set: Error During Test at
    /tmp/tmpp09kitaw.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpp09kitaw.jl:18\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpp09kitaw.jl:25 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src'
  timestamp: 1659748202
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"\
    =>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"\
    =>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"\
    w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n    # create a dictionary of the alphabet\
    \ shifted down by two multiplied to two places\n    shifted_alphabet = Dict(\"\
    a\"=>5,\"b\"=>6,\"c\"=>7,\"d\"=>8,\"e\"=>9,\"f\"=>10,\"g\"=>11,\"h\"=>12,\"i\"\
    =>13,\"j\"=>14,\"k\"=>15,\"l\"=>16,\"m\"=>17,\"n\"=>18,\"o\"=>19,\"p\"=>20,\"\
    q\"=>21,\"r\"=>22,\"s\"=>23,\"t\"=>24,\"u\"=>25,\"v\"=>26,\"w\"=>1,\"x\"=>2,\"\
    y\"=>3,\"z\"=>4)\n    # create an empty string to store the encrypted string\n\
    \    encrypted_string = \"\"\n    # iterate through the string\n    for i in s\n\
    \        # check if the character is a letter\n        if i in keys(alphabet)\n\
    \            # if it is a letter, append the encrypted letter to the encrypted\
    \ string\n            append!(encrypted_string,keys(shifted_alphabet)[values(shifted_alphabet)\
    \ .== values(alphabet)[i]])\n        else\n            # if it is not a letter,\
    \ append the character to the encrypted string\n            append!(encrypted_string,i)\n\
    \        end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmppj1y_96z.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    append!(::String, ::Char)\n  Closest candidates are:\n    append!(!Matched::BitVector,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,
    ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmppj1y_96z.jl:22\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmppj1y_96z.jl:33 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmppj1y_96z.jl:32\ntest set: Error During Test at
    /tmp/tmppj1y_96z.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching append!(::String, ::Char)\n  Closest
    candidates are:\n    append!(!Matched::BitVector, ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/bitarray.jl:782\n    append!(!Matched::AbstractVector,
    ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1050\n    append!(!Matched::AbstractVector,
    ::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1053\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmppj1y_96z.jl:22\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmppj1y_96z.jl:34 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmppj1y_96z.jl:32\ntest set: Error During Test at
    /tmp/tmppj1y_96z.jl:35\n  Test threw exception\n  Expression: candidate("gf")
    == "k'
  timestamp: 1659748202
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary of the alphabet\n   \
    \ alphabet = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    # create a dictionary of the alphabet rotated\n    alphabet_rotated = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # iterate through the string\n    for i in s\n        # if the character\
    \ is a space\n        if i == \" \"\n            # append a space to the encrypted\
    \ string\n            push!(encrypted_string,i)\n        else\n            # append\
    \ the encrypted character to the encrypted string\n            push!(encrypted_string,get(alphabet_rotated,get(alphabet,i)))\n\
    \        end\n    end\n    # return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpxbt4pwmu.jl:33\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    get(::Dict{Char, Int64}, ::Char)\n  Closest candidates are:\n    get(::Dict{K,
    V}, ::Any, !Matched::Any) where {K, V} at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:506\n    get(!Matched::Base.ImmutableDict,
    ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:804\n    get(!Matched::IOContext,
    ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:343\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpxbt4pwmu.jl:22\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpxbt4pwmu.jl:33 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpxbt4pwmu.jl:32\ntest set: Error During Test at
    /tmp/tmpxbt4pwmu.jl:34\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching get(::Dict{Char, Int64}, ::Char)\n  Closest
    candidates are:\n    get(::Dict{K, V}, ::Any, !Matched::Any) where {K, V} at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:506\n    get(!Matched::Base.ImmutableDict,
    ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:804\n    get(!Matched::IOContext,
    ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:343\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpxbt4pwmu.jl:22\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpxbt4pwmu.jl:34 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpxbt4pwmu.jl:32\n'''
  timestamp: 1659748203
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\
    \    encrypted = \"\"\n    for i in s\n        if i in alphabet\n            encrypted\
    \ = encrypted * string(alphabet[(alphabet.find(i)+2)%26])\n        else\n    \
    \        encrypted = encrypted * string(i)\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpixscgh6f.jl:24\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field find\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmpixscgh6f.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpixscgh6f.jl:24 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpixscgh6f.jl:23\ntest set: Error
    During Test at /tmp/tmpixscgh6f.jl:25\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field find\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpixscgh6f.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpixscgh6f.jl:25 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpixscgh6f.jl:23\ntest set: Error
    During Test at /tmp/tmpixscgh6f.jl:26\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field find\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmpixscgh6f.jl:12\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpixscgh6f.jl:26 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpixscgh6f.jl:23\ntest set: Error
    During Test at /tmp/tmpixscgh6f.jl:27\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type String has no '
  timestamp: 1659748203
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary for the alphabet\n   \
    \ alphabet = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"\
    =>7,\"h\"=>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"\
    =>15,\"p\"=>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"\
    w\"=>23,\"x\"=>24,\"y\"=>25,\"z\"=>26)\n    #create a dictionary for the encrypted\
    \ alphabet\n    encrypted_alphabet = Dict(\"a\"=>3,\"b\"=>5,\"c\"=>7,\"d\"=>9,\"\
    e\"=>11,\"f\"=>13,\"g\"=>15,\"h\"=>17,\"i\"=>19,\"j\"=>21,\"k\"=>23,\"l\"=>25,\"\
    m\"=>27,\"n\"=>1,\"o\"=>3,\"p\"=>5,\"q\"=>7,\"r\"=>9,\"s\"=>11,\"t\"=>13,\"u\"\
    =>15,\"v\"=>17,\"w\"=>19,\"x\"=>21,\"y\"=>23,\"z\"=>25)\n    #create an empty\
    \ string to store the encrypted string\n    encrypted_string = \"\"\n    #loop\
    \ through the string\n    for i in s\n        #check if the character is a letter\n\
    \        if isalpha(i)\n            #if it is a letter, check if it is uppercase\n\
    \            if isupper(i)\n                #if it is uppercase, convert it to\
    \ lowercase\n                i = lowercase(i)\n                #add the encrypted\
    \ letter to the encrypted string\n                encrypted_string = encrypted_string\
    \ * string(encrypted_alphabet[i])\n            else\n                #if it is\
    \ lowercase, add the encrypted letter to the encrypted string\n              \
    \  encrypted_string = encrypted_string * string(encrypted_alphabet[i])\n     \
    \       end\n        else\n            #if it is not a letter, add it to the encrypted\
    \ string\n            encrypted_string = encrypted_string * string(i)\n      \
    \  end\n    end\n    #return the encrypted string\nusing Test\n\n@testset begin\n\
    \ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph12cdx3f.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph12cdx3f.jl:1\n\
    in expression starting at /tmp/tmph12cdx3f.jl:1\n"
  stdout: ''
  timestamp: 1659748200
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    return [shift(c, 2*2) for c in s]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpe0r7zsqv.jl:15\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(c::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpe0r7zsqv.jl:8\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe0r7zsqv.jl:15 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe0r7zsqv.jl:14\ntest set: Error
    During Test at /tmp/tmpe0r7zsqv.jl:16\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(c::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpe0r7zsqv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe0r7zsqv.jl:16 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe0r7zsqv.jl:14\ntest set: Error
    During Test at /tmp/tmpe0r7zsqv.jl:17\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(c::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpe0r7zsqv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia'
  timestamp: 1659748203
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted = encrypted\
    \ * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"abcdefghijklmnopqrstuvwxyz\"\
    ) .== i)[1] + 2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\
    \            encrypted = encrypted * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1] + 2])\n        else\n    \
    \        encrypted = encrypted * i\n        end\n    end\n    return encrypted\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpp09ugd8e.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpp09ugd8e.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpp09ugd8e.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpp09ugd8e.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpp09ugd8e.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748188
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\"\
    )\n    s = replace(s, \"!\" => \"\")\n    s = replace(s, \"?\" => \"\")\n    s\
    \ = replace(s, \":\" => \"\")\n    s = replace(s, \";\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"'\" => \"\")\n    s = replace(s, \"(\"\
    \ => \"\")\n    s = replace(s, \")\" => \"\")\n    s = replace(s, \"\\\"\" =>\
    \ \"\")\n    s = replace(s, \"0\" => \"\")\n    s = replace(s, \"1\" => \"\")\n\
    \    s = replace(s, \"2\" => \"\")\n    s = replace(s, \"3\" => \"\")\n    s =\
    \ replace(s, \"4\" => \"\")\n    s = replace(s, \"5\" => \"\")\n    s = replace(s,\
    \ \"6\" => \"\")\n    s = replace(s, \"7\" => \"\")\n    s = replace(s, \"8\"\
    \ => \"\")\n    s = replace(s, \"9\" => \"\")\n    s = replace(s, \"a\" => \"\
    c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n\
    \    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s\
    \ = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s,\
    \ \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\"\
    \ => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"\
    n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\"\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjpzu1cb4.jl:45\nin expression starting at\
    \ /tmp/tmpjpzu1cb4.jl:45\n"
  stdout: ''
  timestamp: 1659748200
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    return [shift(c, 2*2) for c in s]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpe0r7zsqv.jl:15\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(c::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpe0r7zsqv.jl:8\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe0r7zsqv.jl:15 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe0r7zsqv.jl:14\ntest set: Error
    During Test at /tmp/tmpe0r7zsqv.jl:16\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(c::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpe0r7zsqv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe0r7zsqv.jl:16 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe0r7zsqv.jl:14\ntest set: Error
    During Test at /tmp/tmpe0r7zsqv.jl:17\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(c::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpe0r7zsqv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia'
  timestamp: 1659748203
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i == \" \"\n            encrypted_string = encrypted_string * i\n \
    \       else\n            encrypted_string = encrypted_string * (chr(ord(i) +\
    \ 2))\n        end\n    end\n    return encrypted_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpuwq9aw3q.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpuwq9aw3q.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpuwq9aw3q.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpuwq9aw3q.jl:22\ntest set: Error During Test at
    /tmp/tmpuwq9aw3q.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpuwq9aw3q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuwq9aw3q.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuwq9aw3q.jl:22\ntest set: Error
    During Test at /tmp/tmpuwq9aw3q.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpuwq9aw3q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuwq9aw3q.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuwq9aw3q.jl:22\ntest set: Error
    During Test at /tmp/tmpuwq9aw3q.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpuwq9aw3q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748203
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    for i in s\n        if i == \"a\"\n       \
    \     print(\"c\")\n        elseif i == \"b\"\n            print(\"d\")\n    \
    \    elseif i == \"c\"\n            print(\"e\")\n        elseif i == \"d\"\n\
    \            print(\"f\")\n        elseif i == \"e\"\n            print(\"g\"\
    )\n        elseif i == \"f\"\n            print(\"h\")\n        elseif i == \"\
    g\"\n            print(\"i\")\n        elseif i == \"h\"\n            print(\"\
    j\")\n        elseif i == \"i\"\n            print(\"k\")\n        elseif i ==\
    \ \"j\"\n            print(\"l\")\n        elseif i == \"k\"\n            print(\"\
    m\")\n        elseif i == \"l\"\n            print(\"n\")\n        elseif i ==\
    \ \"m\"\n            print(\"o\")\n        elseif i == \"n\"\n            print(\"\
    p\")\n        elseif i == \"o\"\n            print(\"q\")\n        elseif i ==\
    \ \"p\"\n            print(\"r\")\n        elseif i == \"q\"\n            print(\"\
    s\")\n        elseif i == \"r\"\n            print(\"t\")\n        elseif i ==\
    \ \"s\"\n            print(\"u\")\n        elseif i == \"t\"\n            print(\"\
    v\")\n        elseif i == \"u\"\n            print(\"w\")\n        elseif i ==\
    \ \"v\"\n            print(\"x\")\n        elseif i == \"w\"\n            print(\"\
    y\")\n        elseif i == \"x\"\n            print(\"z\")\n        elseif i ==\
    \ \"y\"\n            print(\"a\")\n        elseif i == \"z\"\n            print(\"\
    b\")\n        else\n            print(i)\n        end\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''hitest set: Error During Test at /tmp/tmp3xog59df.jl:71\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp3xog59df.jl:62\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp3xog59df.jl:71 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp3xog59df.jl:70\nasdfghjkltest set: Error During
    Test at /tmp/tmp3xog59df.jl:72\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type String\n  Closest candidates are:\n    convert(::Type{String},
    !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n    convert(::Type{T},
    !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n    convert(::Type{T},
    !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp3xog59df.jl:62\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp3xog59df.jl:72 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1'
  timestamp: 1659748203
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \" \"\n            new_string = new_string * i\n        else\n     \
    \       new_string = new_string * (chr(ord(i) + 2))\n        end\n    end\n  \
    \  return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpra35c4ay.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpra35c4ay.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error During Test at
    /tmp/tmpra35c4ay.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpra35c4ay.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpra35c4ay.jl:22\ntest set: Error
    During Test at /tmp/tmpra35c4ay.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpra35c4ay.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748180
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \"z\"\n            new_string = new_string * \"b\"\n        elseif i\
    \ == \"y\"\n            new_string = new_string * \"a\"\n        else\n      \
    \      new_string = new_string * string(char(int(i) + 2))\n        end\n    end\n\
    \    return new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpa4qogikc.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpa4qogikc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpa4qogikc.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa4qogikc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa4qogikc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpa4qogikc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: int not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpa4qogikc.jl:15\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa4qogikc.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa4qogikc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpa4qogikc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpa4qogikc.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa4qogikc.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa4qogikc.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpa4qogikc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpa4qogikc.jl:15\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n"
  timestamp: 1659748203
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(ord(i) + 2))\n        end\n    end\n    return encrypted\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\"\
    )\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\"\
    ) == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmc76xb4q.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpmc76xb4q.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error During Test at
    /tmp/tmpmc76xb4q.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmc76xb4q.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmc76xb4q.jl:22\ntest set: Error
    During Test at /tmp/tmpmc76xb4q.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpmc76xb4q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748185
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \"a\"\n            encrypted = encrypted * \"c\"\n        elseif i == \"\
    b\"\n            encrypted = encrypted * \"d\"\n        elseif i == \"c\"\n  \
    \          encrypted = encrypted * \"e\"\n        elseif i == \"d\"\n        \
    \    encrypted = encrypted * \"f\"\n        elseif i == \"e\"\n            encrypted\
    \ = encrypted * \"g\"\n        elseif i == \"f\"\n            encrypted = encrypted\
    \ * \"h\"\n        elseif i == \"g\"\n            encrypted = encrypted * \"i\"\
    \n        elseif i == \"h\"\n            encrypted = encrypted * \"j\"\n     \
    \   elseif i == \"i\"\n            encrypted = encrypted * \"k\"\n        elseif\
    \ i == \"j\"\n            encrypted = encrypted * \"l\"\n        elseif i == \"\
    k\"\n            encrypted = encrypted * \"m\"\n        elseif i == \"l\"\n  \
    \          encrypted = encrypted * \"n\"\n        elseif i == \"m\"\n        \
    \    encrypted = encrypted * \"o\"\n        elseif i == \"n\"\n            encrypted\
    \ = encrypted * \"p\"\n        elseif i == \"o\"\n            encrypted = encrypted\
    \ * \"q\"\n        elseif i == \"p\"\n            encrypted = encrypted * \"r\"\
    \n        elseif i == \"q\"\n            encrypted = encrypted * \"s\"\n     \
    \   elseif i == \"r\"\n            encrypted = encrypted * \"t\"\n        elseif\
    \ i == \"s\"\n            encrypted = encrypted * \"u\"\n        elseif i == \"\
    t\"\n            encrypted = encrypted * \"v\"\n        elseif i == \"u\"\n  \
    \          encrypted = encrypted * \"w\"\n        elseif i == \"v\"\n        \
    \    encrypted = encrypted * \"x\"\n        elseif i == \"w\"\n            encrypted\
    \ = encrypted * \"y\"\n        elseif i == \"x\"\n            encrypted = encrypted\
    \ * \"z\"\n        elseif i == \"y\"\n            encrypted = encrypted * \"a\"\
    \n        elseif i == \"z\"\n            encrypted = encrypted * \"b\"\n     \
    \   else\n            encrypted = encrypted * i\n        end\n    end\n    return\
    \ encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwqsx98_r.jl:70

    '
  stdout: "test set: Test Failed at /tmp/tmpwqsx98_r.jl:73\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwqsx98_r.jl:73 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwqsx98_r.jl:72\ntest set: Test\
    \ Failed at /tmp/tmpwqsx98_r.jl:74\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwqsx98_r.jl:74 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwqsx98_r.jl:72\ntest set: Test\
    \ Failed at /tmp/tmpwqsx98_r.jl:75\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwqsx98_r.jl:75 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwqsx98_r.jl:72\ntest set: Test\
    \ Failed at /tmp/tmpwqsx98_r.jl:76\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwqsx98_r.jl:76 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwqsx98_r.jl:72\ntest set: Test\
    \ Failed at /tmp/tmpwqsx98_r.jl:77\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748203
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = uppercase(s)\n    s = replace(s, r\" \"\
    , \"\")\n    s = replace(s, r\"\\.\", \"\")\n    s = replace(s, r\"\\,\", \"\"\
    )\n    s = replace(s, r\"\\!\", \"\")\n    s = replace(s, r\"\\?\", \"\")\n  \
    \  s = replace(s, r\"\\;\", \"\")\n    s = replace(s, r\"\\:\", \"\")\n    s =\
    \ replace(s, r\"\\(\", \"\")\n    s = replace(s, r\"\\)\", \"\")\n    s = replace(s,\
    \ r\"\\[\", \"\")\n    s = replace(s, r\"\\]\", \"\")\n    s = replace(s, r\"\\\
    {\", \"\")\n    s = replace(s, r\"\\}\", \"\")\n    s = replace(s, r\"\\*\", \"\
    \")\n    s = replace(s, r\"\\&\", \"\")\n    s = replace(s, r\"\\%\", \"\")\n\
    \    s = replace(s, r\"\\$\", \"\")\n    s = replace(s, r\"\\#\", \"\")\n    s\
    \ = replace(s, r\"\\@\", \"\")\n    s = replace(s, r\"\\^\", \"\")\n    s = replace(s,\
    \ r\"\\~\", \"\")\n    s = replace(s, r\"\\`\", \"\")\n    s = replace(s, r\"\\\
    _\", \"\")\n    s = replace(s, r\"\\-\", \"\")\n    s = replace(s, r\"\\+\", \"\
    \")\n    s = replace(s, r\"\\=\", \"\")\n    s = replace(s, r\"\\|\", \"\")\n\
    \    s = replace(s, r\"\\\\\", \"\")\n    s = replace(s, r\"\\/\", \"\")\n   \
    \ s = replace(s, r\"\\>\", \"\")\n    s = replace(s, r\"\\<\", \"\")\n    s =\
    \ replace(s, r\"\\0\", \"\")\n    s = replace(s, r\"\\1\", \"\")\n    s = replace(s,\
    \ r\"\\2\", \"\")\n   \nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9veiyfhv.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9veiyfhv.jl:1\n\
    in expression starting at /tmp/tmp9veiyfhv.jl:1\n"
  stdout: ''
  timestamp: 1659748201
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            push!(encrypted, \" \")\n        else\n            push!(encrypted,\
    \ chr(mod(ord(i) + 2*2, 122)))\n        end\n    end\n    return encrypted\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpwaa__a6u.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpwaa__a6u.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpwaa__a6u.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpwaa__a6u.jl:22\ntest set: Error During Test at
    /tmp/tmpwaa__a6u.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwaa__a6u.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwaa__a6u.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwaa__a6u.jl:22\ntest set: Error
    During Test at /tmp/tmpwaa__a6u.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwaa__a6u.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwaa__a6u.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwaa__a6u.jl:22\ntest set: Error
    During Test at /tmp/tmpwaa__a6u.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpwaa__a6u.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748182
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_s = \"\"\n    for i in s\n        if i\
    \ == \" \"\n            new_s = new_s * i\n        else\n            new_s = new_s\
    \ * (i + 2)\n        end\n    end\n    return new_s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprh0a6gy7.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmprh0a6gy7.jl:23\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprh0a6gy7.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprh0a6gy7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprh0a6gy7.jl:24\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprh0a6gy7.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprh0a6gy7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprh0a6gy7.jl:25\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprh0a6gy7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprh0a6gy7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprh0a6gy7.jl:26\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprh0a6gy7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprh0a6gy7.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprh0a6gy7.jl:27\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748188
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i == \" \"\n            push!(encrypted_string, \" \")\n        else\n\
    \            push!(encrypted_string, i)\n        end\n    end\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp6i51ttnn.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    push!(::String, ::Char)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)
    at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp6i51ttnn.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp6i51ttnn.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp6i51ttnn.jl:22\ntest set: Error During Test at
    /tmp/tmp6i51ttnn.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching push!(::String, ::Char)\n  Closest
    candidates are:\n    push!(::Any, ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2970\n    push!(::Any,
    ::Any, !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:2971\n    push!(!Matched::Base.InvasiveLinkedListSynchronized{T},
    ::T) where T at /shared/centos7/julia/1.7.3/share/julia/base/task.jl:605\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp6i51ttnn.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp6i51ttnn.jl:24 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp6i51ttnn.jl:22\ntest'
  timestamp: 1659748199
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"\
    =>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"\
    =>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"\
    x\"=>24,\"y\"=>25,\"z\"=>26)\n    #create an empty string\n    encrypted_string\
    \ = \"\"\n    #iterate through the string\n    for i in s\n        #check if the\
    \ character is a letter\n        if i in keys(alphabet)\n            #if it is\
    \ a letter, add the encrypted letter to the encrypted string\n            encrypted_string\
    \ = string(encrypted_string, alphabet[i] + 2)\n        else\n            #if it\
    \ is not a letter, add the character to the encrypted string\n            encrypted_string\
    \ = string(encrypted_string, i)\n        end\n    end\n    #return the encrypted\
    \ string\n    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3isc_eey.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp3isc_eey.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3isc_eey.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3isc_eey.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3isc_eey.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3isc_eey.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3isc_eey.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3isc_eey.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3isc_eey.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3isc_eey.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3isc_eey.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3isc_eey.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3isc_eey.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3isc_eey.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748203
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    return [shift(c, 2*2) for c in s]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") ==\
    \ \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpe0r7zsqv.jl:15\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1]
    (::var"#1#2")(c::Char)\n     @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47
    [inlined]\n   [3] collect(itr::Base.Generator{String, var"#1#2"})\n     @ Base
    ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main /tmp/tmpe0r7zsqv.jl:8\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe0r7zsqv.jl:15 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe0r7zsqv.jl:14\ntest set: Error
    During Test at /tmp/tmpe0r7zsqv.jl:16\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(c::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpe0r7zsqv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [6] macro expansion\n     @ /tmp/tmpe0r7zsqv.jl:16 [inlined]\n   [7]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [8] top-level scope\n     @ /tmp/tmpe0r7zsqv.jl:14\ntest set: Error
    During Test at /tmp/tmpe0r7zsqv.jl:17\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: shift not defined\n  Stacktrace:\n   [1] (::var"#1#2")(c::Char)\n     @
    Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{String,
    var"#1#2"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @ Main
    /tmp/tmpe0r7zsqv.jl:8\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia'
  timestamp: 1659748203
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    new_string = \"\"\n    for i in s\n       \
    \ if i == \" \"\n            new_string = new_string * i\n        else\n     \
    \       new_string = new_string * shift(i,2)\n        end\n    end\n    return\
    \ new_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpfvee9xrb.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfvee9xrb.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpfvee9xrb.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfvee9xrb.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfvee9xrb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfvee9xrb.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: shift not defined\n\
    \  Stacktrace:\n   [1] encrypt(s::String)\n     @ Main /tmp/tmpfvee9xrb.jl:13\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfvee9xrb.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfvee9xrb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfvee9xrb.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpfvee9xrb.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfvee9xrb.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfvee9xrb.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfvee9xrb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  UndefVarError: shift not defined\n  Stacktrace:\n\
    \   [1] encrypt(s::String)\n     @ Main /tmp/tmpfvee9xrb.jl:13\n   [2] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [i"
  timestamp: 1659748204
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = lowercase(s)\n    s = replace(s, \"a\"\
    \ => \"c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"\
    e\")\n    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n\
    \    s = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s\
    \ = replace(s, \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s,\
    \ \"j\" => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\"\
    \ => \"n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"\
    p\")\n    s = replace(s, \"o\" => \"q\")\n    s = replace(s, \"p\" => \"r\")\n\
    \    s = replace(s, \"q\" => \"s\")\n    s = replace(s, \"r\" => \"t\")\n    s\
    \ = replace(s, \"s\" => \"u\")\n    s = replace(s, \"t\" => \"v\")\n    s = replace(s,\
    \ \"u\" => \"w\")\n    s = replace(s, \"v\" => \"x\")\n    s = replace(s, \"w\"\
    \ => \"y\")\n    s = replace(s, \"x\" => \"z\")\n    s = replace(s, \"y\" => \"\
    a\")\n    s = replace(s, \"z\" => \"b\")\n    return s\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpil7l8zsx.jl:39

    '
  stdout: "test set: Test Failed at /tmp/tmpil7l8zsx.jl:42\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"ba\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:43\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"aabbabbab\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:44\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ab\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:45\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"ab\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil7l8zsx.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil7l8zsx.jl:41\ntest set: Test\
    \ Failed at /tmp/tmpil7l8zsx.jl:46\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"baaabaaabaaaa\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748181
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i == \" \"\n            encrypted_string = encrypted_string * i\n \
    \       else\n            encrypted_string = encrypted_string * (chr(ord(i) +\
    \ 2))\n        end\n    end\n    return encrypted_string\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpuwq9aw3q.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmpuwq9aw3q.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpuwq9aw3q.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpuwq9aw3q.jl:22\ntest set: Error During Test at
    /tmp/tmpuwq9aw3q.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpuwq9aw3q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuwq9aw3q.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuwq9aw3q.jl:22\ntest set: Error
    During Test at /tmp/tmpuwq9aw3q.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpuwq9aw3q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuwq9aw3q.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuwq9aw3q.jl:22\ntest set: Error
    During Test at /tmp/tmpuwq9aw3q.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmpuwq9aw3q.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748203
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    encrypted = \"\"\n \
    \   for i in s\n        if i == \" \"\n            encrypted = encrypted * i\n\
    \        else\n            encrypted = encrypted * (chr(ord(i) + 2))\n       \
    \ end\n    end\n    return encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpyb9n14v4.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpyb9n14v4.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpyb9n14v4.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyb9n14v4.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyb9n14v4.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyb9n14v4.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  type String has no field lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpyb9n14v4.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyb9n14v4.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyb9n14v4.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyb9n14v4.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpyb9n14v4.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyb9n14v4.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyb9n14v4.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpyb9n14v4.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  type String has no field lowercase\n  Stacktrace:\n\
    \   [1] getprop"
  timestamp: 1659748204
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted = \"\"\n    for i in s\n        if\
    \ i == \" \"\n            encrypted = encrypted * i\n        else\n          \
    \  encrypted = encrypted * (chr(ord(i) + 2))\n        end\n    end\n    return\
    \ encrypted\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp8ihn50kd.jl:23\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp8ihn50kd.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp8ihn50kd.jl:23 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp8ihn50kd.jl:22\ntest set: Error During Test at
    /tmp/tmp8ihn50kd.jl:24\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8ihn50kd.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ihn50kd.jl:24 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ihn50kd.jl:22\ntest set: Error
    During Test at /tmp/tmp8ihn50kd.jl:25\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8ihn50kd.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ihn50kd.jl:25 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ihn50kd.jl:22\ntest set: Error
    During Test at /tmp/tmp8ihn50kd.jl:26\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  UndefVarError: ord not defined\n  Stacktrace:\n   [1] encrypt(s::String)\n     @
    Main /tmp/tmp8ihn50kd.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/'
  timestamp: 1659748182
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary with the alphabet\n \
    \   alphabet = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    # create a dictionary with the alphabet rotated\n    alphabet_rotated = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    # create an empty string to store the encrypted string\n    encrypted_string\
    \ = \"\"\n    # loop through the string\n    for i in s\n        # check if the\
    \ character is a letter\n        if i in keys(alphabet)\n            # if it is\
    \ a letter, get the value of the letter from the alphabet dictionary\n       \
    \     # and get the value of the letter from the alphabet_rotated dictionary\n\
    \            # and add the letter to the encrypted string\n            encrypted_string\
    \ = string(encrypted_string,get(alphabet_rotated,get(alphabet,i),0))\n       \
    \ else\n            # if it is not a letter, add the character to the encrypted\
    \ string\n            encrypted_string = string(encrypted_string,i)\n        end\n\
    \    end\n    # return the encrypted string\n    return encrypted_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp26l8iy2w.jl:35\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    get(::Dict{Char, Int64}, ::Char)\n  Closest candidates are:\n    get(::Dict{K,
    V}, ::Any, !Matched::Any) where {K, V} at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:506\n    get(!Matched::Base.ImmutableDict,
    ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:804\n    get(!Matched::IOContext,
    ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:343\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp26l8iy2w.jl:21\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp26l8iy2w.jl:35 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp26l8iy2w.jl:34\ntest set: Error During Test at
    /tmp/tmp26l8iy2w.jl:36\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  MethodError: no method matching get(::Dict{Char, Int64}, ::Char)\n  Closest
    candidates are:\n    get(::Dict{K, V}, ::Any, !Matched::Any) where {K, V} at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:506\n    get(!Matched::Base.ImmutableDict,
    ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/dict.jl:804\n    get(!Matched::IOContext,
    ::Any, !Matched::Any) at /shared/centos7/julia/1.7.3/share/julia/base/show.jl:343\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp26l8iy2w.jl:21\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp26l8iy2w.jl:36 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp26l8iy2w.jl:34\ntest set: Error During Test '
  timestamp: 1659748205
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    =>\"\")\n    s = replace(s, \".\"=>\"\")\n    s = replace(s, \",\"=>\"\")\n  \
    \  s = replace(s, \"!\"=>\"\")\n    s = replace(s, \"?\"=>\"\")\n    s = replace(s,\
    \ \";\"=>\"\")\n    s = replace(s, \":\"=>\"\")\n    s = replace(s, \"-\"=>\"\"\
    )\n    s = replace(s, \"(\"=>\"\")\n    s = replace(s, \")\"=>\"\")\n    s = replace(s,\
    \ \"&\"=>\"\")\n    s = replace(s, \"*\"=>\"\")\n    s = replace(s, \"=\"=>\"\"\
    )\n    s = replace(s, \"+\"=>\"\")\n    s = replace(s, \"{\"=>\"\")\n    s = replace(s,\
    \ \"}\"=>\"\")\n    s = replace(s, \"[\"=>\"\")\n    s = replace(s, \"]\"=>\"\"\
    )\n    s = replace(s, \"\\\"\"=>\"\")\n    s = replace(s, \"'\"=>\"\")\n    s\
    \ = replace(s, \"|\"=>\"\")\n    s = replace(s, \"\\\\\"=>\"\")\n    s = replace(s,\
    \ \"/\"=>\"\")\n    s = replace(s, \">\"=>\"\")\n    s = replace(s, \"<\"=>\"\"\
    )\n    s = replace(s, \"~\"=>\"\")\n    s = replace(s, \"`\"=>\"\")\n    s = replace(s,\
    \ \"^\"=>\"\")\n    s = replace(s, \"_\"=>\"\")\n    s = replace(s, \"@\"=>\"\"\
    )\n    s = replace(s, \"#\"=>\"\")\n    s = replace(s, \"$\"=>\"\")\n    s = replace(s,\
    \ \"%\"=>\"\")\n    s = replace(s, \"0\"=>\"\")\n    s = replace(s, \"1\"=>\"\"\
    )\n    s = replace(s, \"2\"=>\"\")\n    s = replace(s, \"3\"=>\"\")\n    s = replace(s,\
    \ \"4\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid interpolation syntax: \"$\"\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppspmw9qv.jl:40\nin expression starting at\
    \ /tmp/tmppspmw9qv.jl:40\n"
  stdout: ''
  timestamp: 1659748202
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #s\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    #s = \"Hello World\"\n    #s = \"Hello\
    \ World!\"\n    #s = \"Hello World! 123\"\n    #s = \"Hello World! 123!\"\n  \
    \  #s = \"Hello World! 123!@#\"\n    #s = \"Hello World! 123!@#!\"\n    #s = \"\
    Hello World! 123!@#!$\"\n    #s = \"Hello World! 123!@#!$%\"\n    #s = \"Hello\
    \ World! 123!@#!$%^\"\n    #s = \"Hello World! 123!@#!$%^&\"\n    #s = \"Hello\
    \ World! 123!@#!$%^&*\"\n    #s = \"Hello World! 123!@#!$%^&*()\"\n    #s = \"\
    Hello World! 123!@#!$%^&*()_\"\n    #s = \"Hello World! 123!@#!$%^&*()_+\"\n \
    \   #s = \"Hello World! 123!@#!$%^&*()_+-=\"\n    #s = \"Hello World! 123!@#!$%^&*()_+-=[]\"\
    \n    #s = \"Hello World! 123!@#!$%^&*()_+-=[]{}\"\n    #s = \"Hello World! 123!@#!$%^&*()_+-=[]{}|\"\
    \n    #s = \"Hello World! 123!@#!$%^&*()_+-=[]{}|\\\\\"\n    #s = \"Hello World!\
    \ 123!@#!$%^&*()_+-=[]{}|\\\\;\"\n    #s = \"Hello World! 123!@#!$%^&*()_+-=[]{}|\\\
    \\;'\"\n    #s = \"Hello World! 123!@#!$%^&*()_+-=[]{}|\\\\;'\\\"\"\n    #s =\
    \ \"Hello World! 123!@#!$%^&*()_+-=[]{}|\\\\;'\\\"<\"\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkqng9j2y.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkqng9j2y.jl:1\n\
    in expression starting at /tmp/tmpkqng9j2y.jl:1\n"
  stdout: ''
  timestamp: 1659748202
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a dictionary with the alphabet\n \
    \   alphabet = Dict('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5,'f'=>6,'g'=>7,'h'=>8,'i'=>9,'j'=>10,'k'=>11,'l'=>12,'m'=>13,'n'=>14,'o'=>15,'p'=>16,'q'=>17,'r'=>18,'s'=>19,'t'=>20,'u'=>21,'v'=>22,'w'=>23,'x'=>24,'y'=>25,'z'=>26)\n\
    \    # create a dictionary with the alphabet rotated\n    alphabet_rotated = Dict('a'=>3,'b'=>4,'c'=>5,'d'=>6,'e'=>7,'f'=>8,'g'=>9,'h'=>10,'i'=>11,'j'=>12,'k'=>13,'l'=>14,'m'=>15,'n'=>16,'o'=>17,'p'=>18,'q'=>19,'r'=>20,'s'=>21,'t'=>22,'u'=>23,'v'=>24,'w'=>25,'x'=>26,'y'=>1,'z'=>2)\n\
    \    # create a new string\n    new_string = \"\"\n    # loop through the string\n\
    \    for i in s\n        # if the letter is not in the alphabet, add it to the\
    \ new string\n        if !haskey(alphabet,i)\n            new_string = new_string\
    \ * i\n        else\n            # if the letter is in the alphabet, add the rotated\
    \ letter to the new string\n            new_string = new_string * get(alphabet_rotated,i,0)\n\
    \        end\n    end\n    # return the new string\n    return new_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\"\
    ) == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5y22q0my.jl:32\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  MethodError: no method matching
    *(::String, ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any,
    !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    *(!Matched::T,
    ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32,
    UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:88\n    *(::Union{AbstractChar,
    AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:260\n    ...\n  Stacktrace:\n   [1]
    encrypt(s::String)\n     @ Main /tmp/tmp5y22q0my.jl:21\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp5y22q0my.jl:32 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp5y22q0my.jl:31\n'''
  timestamp: 1659748205
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a dictionary of the alphabet\n    alphabet\
    \ = Dict(\"a\"=>1,\"b\"=>2,\"c\"=>3,\"d\"=>4,\"e\"=>5,\"f\"=>6,\"g\"=>7,\"h\"\
    =>8,\"i\"=>9,\"j\"=>10,\"k\"=>11,\"l\"=>12,\"m\"=>13,\"n\"=>14,\"o\"=>15,\"p\"\
    =>16,\"q\"=>17,\"r\"=>18,\"s\"=>19,\"t\"=>20,\"u\"=>21,\"v\"=>22,\"w\"=>23,\"\
    x\"=>24,\"y\"=>25,\"z\"=>26)\n    #create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    #iterate through the string\n    for\
    \ i in s\n        #check if the character is a letter\n        if i in keys(alphabet)\n\
    \            #add the encrypted character to the string\n            encrypted_string\
    \ = string(encrypted_string,get(alphabet,i,0))\n        else\n            #add\
    \ the character to the string\n            encrypted_string = string(encrypted_string,i)\n\
    \        end\n    end\n    #return the encrypted string\n    return encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnp83bqvb.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmpnp83bqvb.jl:31\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnp83bqvb.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnp83bqvb.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnp83bqvb.jl:32\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnp83bqvb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnp83bqvb.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnp83bqvb.jl:33\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnp83bqvb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnp83bqvb.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnp83bqvb.jl:34\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnp83bqvb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnp83bqvb.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpnp83bqvb.jl:35\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748204
- exit_code: -1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = s.replace(\"a\"\
    , \"c\")\n    s = s.replace(\"b\", \"d\")\n    s = s.replace(\"c\", \"e\")\n \
    \   s = s.replace(\"d\", \"f\")\n    s = s.replace(\"e\", \"g\")\n    s = s.replace(\"\
    f\", \"h\")\n    s = s.replace(\"g\", \"i\")\n    s = s.replace(\"h\", \"j\")\n\
    \    s = s.replace(\"i\", \"k\")\n    s = s.replace(\"j\", \"l\")\n    s = s.replace(\"\
    k\", \"m\")\n    s = s.replace(\"l\", \"n\")\n    s = s.replace(\"m\", \"o\")\n\
    \    s = s.replace(\"n\", \"p\")\n    s = s.replace(\"o\", \"q\")\n    s = s.replace(\"\
    p\", \"r\")\n    s = s.replace(\"q\", \"s\")\n    s = s.replace(\"r\", \"t\")\n\
    \    s = s.replace(\"s\", \"u\")\n    s = s.replace(\"t\", \"v\")\n    s = s.replace(\"\
    u\", \"w\")\n    s = s.replace(\"v\", \"x\")\n    s = s.replace(\"w\", \"y\")\n\
    \    s = s.replace(\"x\", \"z\")\n    s = s.replace(\"y\", \"a\")\n    s = s.replace(\"\
    z\", \"b\")\n    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprx4ztnj8.jl:42\n  Test threw
    exception\n  Expression: candidate("hi") == "lm"\n  type String has no field lowercase\n  Stacktrace:\n   [1]
    getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @
    Main /tmp/tmprx4ztnj8.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:42 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:43\n  Test threw exception\n  Expression: candidate("asdfghjkl")
    == "ewhjklnop"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:43 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:44\n  Test threw exception\n  Expression: candidate("gf")
    == "kj"\n  type String has no field lowercase\n  Stacktrace:\n   [1] getproperty\n     @
    ./Base.jl:42 [inlined]\n   [2] encrypt(s::String)\n     @ Main /tmp/tmprx4ztnj8.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmprx4ztnj8.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmprx4ztnj8.jl:41\ntest set: Error
    During Test at /tmp/tmprx4ztnj8.jl:45\n  Test threw exception\n  Expression: candidate("et")
    == "ix"\n  type St'
  timestamp: 1659748189
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #Create an empty string to store the encrypted\
    \ string\n    encrypted_string = \"\"\n    #Create a dictionary to map the letters\
    \ to the encrypted letters\n    alphabet_dict = Dict()\n    #Create a list of\
    \ the alphabet\n    alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"\
    ,\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\"\
    ,\"v\",\"w\",\"x\",\"y\",\"z\"]\n    #Create a list of the encrypted alphabet\n\
    \    encrypted_alphabet = [\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"\
    k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"\
    x\",\"y\",\"z\",\"a\",\"b\"]\n    #Loop through the alphabet and encrypted alphabet\
    \ and map them to the dictionary\n    for i in 1:length(alphabet)\n        alphabet_dict[alphabet[i]]\
    \ = encrypted_alphabet[i]\n    end\n    #Loop through the string and encrypt the\
    \ letters\n    for i in 1:length(s)\n        encrypted_string = encrypted_string\
    \ * alphabet_dict[s[i]]\n    end\n    #Return the encrypted string\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpd87_mf78.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpd87_mf78.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  KeyError: key 'h' not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd87_mf78.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd87_mf78.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd87_mf78.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd87_mf78.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  KeyError: key 'a' not found\n \
    \ Stacktrace:\n   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd87_mf78.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd87_mf78.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd87_mf78.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd87_mf78.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  KeyError: key 'g' not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined]\n   [2] encrypt(s::String)\n\
    \     @ Main /tmp/tmpd87_mf78.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd87_mf78.jl:34 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd87_mf78.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpd87_mf78.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(\"et\") == \"ix\"\n  KeyError: key 'e' not found\n  Stacktrace:\n\
    \   [1] getindex\n     @ ./dict.jl:481 [inlined"
  timestamp: 1659748204
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # s is the string to be encrypted\n    # returns\
    \ the encrypted string\n    # your code here\n    return s\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\
    \t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\")\
    \ == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphaj3ecq7.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmphaj3ecq7.jl:18\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"hi\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphaj3ecq7.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphaj3ecq7.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphaj3ecq7.jl:19\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"asdfghjkl\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphaj3ecq7.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphaj3ecq7.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphaj3ecq7.jl:20\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"gf\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphaj3ecq7.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphaj3ecq7.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphaj3ecq7.jl:21\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"et\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphaj3ecq7.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphaj3ecq7.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphaj3ecq7.jl:22\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"faewfawefaewg\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748204
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    # create a string of the alphabet\n    alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\"\n    # create a string of the alphabet shifted\
    \ by two\n    shifted_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\n    # create\
    \ a dictionary of the alphabet and shifted alphabet\n    alphabet_dict = Dict(alphabet[i]\
    \ => shifted_alphabet[i] for i in 1:length(alphabet))\n    # create an empty string\n\
    \    encrypted_string = \"\"\n    # loop through the string\n    for i in s\n\
    \        # if the character is in the dictionary, add the value to the empty string\n\
    \        if i in keys(alphabet_dict)\n            encrypted_string *= alphabet_dict[i]\n\
    \        # else add the character to the empty string\n        else\n        \
    \    encrypted_string *= i\n        end\n    end\n    # return the encrypted string\n\
    \    return encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzj2bdgew.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpzj2bdgew.jl:34\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"jk\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzj2bdgew.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzj2bdgew.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpzj2bdgew.jl:35\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"cufhijlmn\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzj2bdgew.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzj2bdgew.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpzj2bdgew.jl:36\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"ih\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzj2bdgew.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzj2bdgew.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpzj2bdgew.jl:37\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"gv\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzj2bdgew.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzj2bdgew.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpzj2bdgew.jl:38\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"hcgyhcyghcgyi\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748204
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    encrypted_string = \"\"\n    for i in s\n \
    \       if i in string(\"abcdefghijklmnopqrstuvwxyz\")\n            encrypted_string\
    \ = encrypted_string * string(string(\"abcdefghijklmnopqrstuvwxyz\")[(string(\"\
    abcdefghijklmnopqrstuvwxyz\") .== i)[1] + 2])\n        elseif i in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )\n            encrypted_string = encrypted_string * string(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )[(string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") .== i)[1] + 2])\n        else\n    \
    \        encrypted_string = encrypted_string * i\n        end\n    end\n    return\
    \ encrypted_string\nend\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\
    \t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\"\
    )\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\
    \t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\t@test(candidate(\"\
    hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
    ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"\
    a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmtmbtjzc.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpmtmbtjzc.jl:25\n  Expression: candidate(\"\
    hi\") == \"lm\"\n   Evaluated: \"bb\" == \"lm\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:26\n  Expression: candidate(\"asdfghjkl\") ==\
    \ \"ewhjklnop\"\n   Evaluated: \"bbbbbbbbb\" == \"ewhjklnop\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:27\n  Expression: candidate(\"gf\") == \"kj\"\n\
    \   Evaluated: \"bb\" == \"kj\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:28\n  Expression: candidate(\"et\") == \"ix\"\n\
    \   Evaluated: \"bb\" == \"ix\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmtmbtjzc.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmtmbtjzc.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpmtmbtjzc.jl:29\n  Expression: candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\"\n   Evaluated: \"bbbbbbbbbbbbb\" == \"jeiajeaijeiak\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/j"
  timestamp: 1659748179
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #create a list of all the characters in the\
    \ alphabet\n    alphabet = [chr(i) for i in range(97,123)]\n    #create a list\
    \ of all the characters in the alphabet rotated by two places\n    alphabet_rotated\
    \ = [chr(i) for i in range(99,123)] + [chr(i) for i in range(97,99)]\n    #create\
    \ a dictionary of the alphabet and the alphabet rotated\n    alphabet_dict = Dict(zip(alphabet,alphabet_rotated))\n\
    \    #create a list of the characters in the string\n    s_list = collect(s)\n\
    \    #create a list of the characters in the string encrypted\n    s_encrypted\
    \ = [alphabet_dict[i] for i in s_list]\n    #join the encrypted characters into\
    \ a string\n    s_encrypted_string = join(s_encrypted)\n    return s_encrypted_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encrypt;\n\t@test(candidate(\"\
    hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"\
    gf\") == \"kj\")\n\t@test(candidate(\"et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\"\
    ) == \"jeiajeaijeiak\")\n\t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\"\
    )\n\t@test(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"\
    hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n\t@test(candidate(\"a\") ==\
    \ \"e\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpv7nehf7h.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpv7nehf7h.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"hi\") == \"lm\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#5\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#5\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpv7nehf7h.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpv7nehf7h.jl:27 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpv7nehf7h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpv7nehf7h.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"asdfghjkl\") == \"ewhjklnop\"\n  UndefVarError: chr not defined\n\
    \  Stacktrace:\n   [1] (::var\"#1#5\")(i::Int64)\n     @ Main ./none:0\n   [2]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#5\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpv7nehf7h.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmpv7nehf7h.jl:28 [inlined]\n\
    \   [7] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpv7nehf7h.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpv7nehf7h.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"gf\") == \"kj\"\n  UndefVarError: chr not defined\n  Stacktrace:\n\
    \   [1] (::var\"#1#5\")(i::Int64)\n     @ Main ./none:0\n   [2] iterate\n    \
    \ @ ./generator.jl:47 [inlined]\n   [3] collect(itr::Base.Generator{UnitRange{Int64},\
    \ var\"#1#5\"})\n     @ Base ./array.jl:724\n   [4] encrypt(s::String)\n     @\
    \ Main /tmp/tmpv7nehf7h.jl:9\n   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:4"
  timestamp: 1659748205
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    #convert string to array of characters\n  \
    \  s_array = collect(s)\n    #create an array of the alphabet\n    alphabet =\
    \ collect(\"abcdefghijklmnopqrstuvwxyz\")\n    #create an array of the alphabet\
    \ rotated by two places\n    alphabet_rotated = vcat(alphabet[3:end],alphabet[1:2])\n\
    \    #create an array of the alphabet rotated by two places\n    alphabet_rotated_2\
    \ = vcat(alphabet[5:end],alphabet[1:4])\n    #create an array of the alphabet\
    \ rotated by two places\n    alphabet_rotated_3 = vcat(alphabet[7:end],alphabet[1:6])\n\
    \    #create an array of the alphabet rotated by two places\n    alphabet_rotated_4\
    \ = vcat(alphabet[9:end],alphabet[1:8])\n    #create an array of the alphabet\
    \ rotated by two places\n    alphabet_rotated_5 = vcat(alphabet[11:end],alphabet[1:10])\n\
    \    #create an array of the alphabet rotated by two places\n    alphabet_rotated_6\
    \ = vcat(alphabet[13:end],alphabet[1:12])\n    #create an array of the alphabet\
    \ rotated by two places\n    alphabet_rotated_7 = vcat(alphabet[15:end],alphabet[1:14])\n\
    \    #create an array of the alphabet rotated by two places\n    alphabet_rotated_8\
    \ = vcat(alphabet[17:end],alphabet[1:16])\n    #create an array of the alphabet\
    \ rotated by two places\n    alphabet_rotated_9 = vcat(alphabet[19:end],alphabet[1:18])\n\
    \    #create an array of the alphabet rotated by two places\n    alphabet_rotated_10\
    \ = vcat(alphabet[21:end],alphabet[1:20])\n    #create an array of the alphabet\
    \ rotated by two places\n    alphabet_rotated_11 = vcat(alphabet[23:end],alphabet[1:22])\n\
    \    #create an array of the alphabet rotated by two places\n    alphabet_rotated_12\
    \ = vcat(alphabet[25:end],alphabet[\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"asdfghjkl\"\
    ) == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg5j68eq_.jl:1\nin expression starting at /tmp/tmpg5j68eq_.jl:1\n"
  stdout: ''
  timestamp: 1659748203
- exit_code: 1
  program: "\"\"\"Create a function encrypt that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:\n                    \"\"\"\nfunction\
    \ encrypt(s::String)::String \n    s = s.lowercase()\n    s = replace(s, \" \"\
    \ => \"\")\n    s = replace(s, \".\" => \"\")\n    s = replace(s, \",\" => \"\"\
    )\n    s = replace(s, \"!\" => \"\")\n    s = replace(s, \"?\" => \"\")\n    s\
    \ = replace(s, \";\" => \"\")\n    s = replace(s, \":\" => \"\")\n    s = replace(s,\
    \ \"-\" => \"\")\n    s = replace(s, \"(\" => \"\")\n    s = replace(s, \")\"\
    \ => \"\")\n    s = replace(s, \"0\" => \"\")\n    s = replace(s, \"1\" => \"\"\
    )\n    s = replace(s, \"2\" => \"\")\n    s = replace(s, \"3\" => \"\")\n    s\
    \ = replace(s, \"4\" => \"\")\n    s = replace(s, \"5\" => \"\")\n    s = replace(s,\
    \ \"6\" => \"\")\n    s = replace(s, \"7\" => \"\")\n    s = replace(s, \"8\"\
    \ => \"\")\n    s = replace(s, \"9\" => \"\")\n    s = replace(s, \"a\" => \"\
    c\")\n    s = replace(s, \"b\" => \"d\")\n    s = replace(s, \"c\" => \"e\")\n\
    \    s = replace(s, \"d\" => \"f\")\n    s = replace(s, \"e\" => \"g\")\n    s\
    \ = replace(s, \"f\" => \"h\")\n    s = replace(s, \"g\" => \"i\")\n    s = replace(s,\
    \ \"h\" => \"j\")\n    s = replace(s, \"i\" => \"k\")\n    s = replace(s, \"j\"\
    \ => \"l\")\n    s = replace(s, \"k\" => \"m\")\n    s = replace(s, \"l\" => \"\
    n\")\n    s = replace(s, \"m\" => \"o\")\n    s = replace(s, \"n\" => \"p\")\n\
    \    s = replace(s, \"o\" => \"q\")\n    s = replace(s,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encrypt;\n\t@test(candidate(\"hi\") == \"lm\")\n\t@test(candidate(\"\
    asdfghjkl\") == \"ewhjklnop\")\n\t@test(candidate(\"gf\") == \"kj\")\n\t@test(candidate(\"\
    et\") == \"ix\")\n\t@test(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\")\n\
    \t@test(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\")\n\t@test(candidate(\"\
    dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
    )\n\t@test(candidate(\"a\") == \"e\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3wbx0b_v.jl:47\nin expression starting at\
    \ /tmp/tmp3wbx0b_v.jl:47\n"
  stdout: ''
  timestamp: 1659748203

language: jl
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$(i)\" for i in 0:n], \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(map(string, 0:n), \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n),\" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    if n < 0\n        return \"\"\n    else\n        return string_sequence(n-1)\
    \ * \" \" * string(n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmadmuogo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmadmuogo.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" 0\" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" 0 1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" 0 1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    if n < 0\n        return \"\"\n    else\n        return string_sequence(n-1)\
    \ * \" \" * string(n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmadmuogo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmadmuogo.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" 0\" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" 0 1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" 0 1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n),\" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(map(string, 0:n), \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n),\" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    if n < 0\n        return \"\"\n    else\n        return string_sequence(n-1)\
    \ * \" \" * string(n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmadmuogo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmadmuogo.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" 0\" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" 0 1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" 0 1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    if n < 0\n        return \"\"\n    else\n        return string_sequence(n-1)\
    \ * \" \" * string(n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmadmuogo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmadmuogo.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" 0\" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" 0 1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" 0 1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = string(s, i, \" \")\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprzuzn0fq.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprzuzn0fq.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzuzn0fq.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzuzn0fq.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprzuzn0fq.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzuzn0fq.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzuzn0fq.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprzuzn0fq.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzuzn0fq.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzuzn0fq.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$(i)\" for i in 0:n], \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n),\" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$(i)\" for i in 0:n], \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    if n < 0\n        return \"\"\n    else\n        return string_sequence(n-1)\
    \ * \" \" * string(n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmadmuogo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmadmuogo.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" 0\" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" 0 1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" 0 1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    if n < 0\n        return \"\"\n    else\n        return string_sequence(n-1)\
    \ * \" \" * string(n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmadmuogo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmadmuogo.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" 0\" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" 0 1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" 0 1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = string(s, i, \" \")\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprzuzn0fq.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprzuzn0fq.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzuzn0fq.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzuzn0fq.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprzuzn0fq.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzuzn0fq.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzuzn0fq.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprzuzn0fq.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprzuzn0fq.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprzuzn0fq.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n),\" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n),\" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = string(s, \" \", i)\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmaigi5k2.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmaigi5k2.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" 0\" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmaigi5k2.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmaigi5k2.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmaigi5k2.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" 0 1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmaigi5k2.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmaigi5k2.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmaigi5k2.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" 0 1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmaigi5k2.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmaigi5k2.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    if n < 0\n        return \"\"\n    else\n        return string_sequence(n-1)\
    \ * \" \" * string(n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmadmuogo.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmadmuogo.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \" 0\" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \" 0 1 2 3\" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmadmuogo.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \" 0 1 2 3 4 5 6 7 8 9 10\" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmadmuogo.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmadmuogo.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    if n == 0\n        return \"0\"\n    else\n        return string_sequence(n-1)\
    \ * \" \" * string(n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3) ==\
    \ \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    s = \"\"\n    for i in 0:n\n        s = s * string(i) * \" \"\n    end\n\
    \    return s\nend\nusing Test\n\n@testset begin\n\ncandidate = string_sequence;\n\
    \t@test(candidate(0) == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmiityei7.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpmiityei7.jl:15\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:16\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpmiityei7.jl:17\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmiityei7.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmiityei7.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    \"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n    \"\"\"\n    return join([\"$i \" for i in 0:n])\nend\n\
    using Test\n\n@testset begin\n\ncandidate = string_sequence;\n\t@test(candidate(0)\
    \ == \"0\")\n\t@test(candidate(3) == \"0 1 2 3\")\n\t@test(candidate(10) == \"\
    0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3_ctrn6x.jl:10

    '
  stdout: "test set: Test Failed at /tmp/tmp3_ctrn6x.jl:13\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_ctrn6x.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_ctrn6x.jl:12\ntest set: Test\
    \ Failed at /tmp/tmp3_ctrn6x.jl:14\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_ctrn6x.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_ctrn6x.jl:12\ntest set: Test\
    \ Failed at /tmp/tmp3_ctrn6x.jl:15\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3_ctrn6x.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3_ctrn6x.jl:12\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$(i)\" for i in 0:n], \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n), \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188
- exit_code: 1
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join([\"$i \" for i in 0:n])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0zln7s9d.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp0zln7s9d.jl:11\n  Expression: candidate(0)\
    \ == \"0\"\n   Evaluated: \"0 \" == \"0\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:11 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:12\n  Expression: candidate(3) == \"0 1 2 3\"\n\
    \   Evaluated: \"0 1 2 3 \" == \"0 1 2 3\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp0zln7s9d.jl:13\n  Expression: candidate(10) == \"0 1 2 3 4\
    \ 5 6 7 8 9 10\"\n   Evaluated: \"0 1 2 3 4 5 6 7 8 9 10 \" == \"0 1 2 3 4 5 6\
    \ 7 8 9 10\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0zln7s9d.jl:13 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0zln7s9d.jl:10\nTest Summary:\
    \ | Fail  Total\ntest set      |    3      3\n"
  timestamp: 1659747189
- exit_code: 0
  program: "\"\"\" Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n            \"\"\"\nfunction string_sequence(n::Int64)::String\
    \ \n    return join(string.(0:n),\" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = string_sequence;\n\t@test(candidate(0) == \"0\")\n\t@test(candidate(3)\
    \ == \"0 1 2 3\")\n\t@test(candidate(10) == \"0 1 2 3 4 5 6 7 8 9 10\")\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747188

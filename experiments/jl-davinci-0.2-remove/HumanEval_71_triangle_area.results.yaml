language: jl
name: HumanEval_71_triangle_area
results:
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, digits=2)\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpclw3qz3s.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpclw3qz3s.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclw3qz3s.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpclw3qz3s.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpofw2ista.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpofw2ista.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofw2ista.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpofw2ista.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppyimbyic.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmppyimbyic.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyimbyic.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppyimbyic.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a < b + c && b < a + c && c < a + b\n        p =\
    \ (a + b + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpscnt1p3i.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpscnt1p3i.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscnt1p3i.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscnt1p3i.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpscnt1p3i.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscnt1p3i.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscnt1p3i.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpscnt1p3i.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscnt1p3i.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscnt1p3i.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpscnt1p3i.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpscnt1p3i.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpscnt1p3i.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpofw2ista.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpofw2ista.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofw2ista.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpofw2ista.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    s = (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph77azn1p.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmph77azn1p.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmph77azn1p.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph77azn1p.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph77azn1p.jl:22\ntest set:\
    \ Error During Test at /tmp/tmph77azn1p.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmph77azn1p.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph77azn1p.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749728
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd0ffl0ny.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd0ffl0ny.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, digits=2)\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd0ffl0ny.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd0ffl0ny.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqsxajn96.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpqsxajn96.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmprgmn1o0f.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmprgmn1o0f.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmprgmn1o0f.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprgmn1o0f.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprgmn1o0f.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprgmn1o0f.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmprgmn1o0f.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprgmn1o0f.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) & (a+c>b) & (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpp0h1oveo.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpp0h1oveo.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpp0h1oveo.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp0h1oveo.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp0h1oveo.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpp0h1oveo.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpp0h1oveo.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp0h1oveo.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmprgmn1o0f.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmprgmn1o0f.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmprgmn1o0f.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprgmn1o0f.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprgmn1o0f.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprgmn1o0f.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmprgmn1o0f.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprgmn1o0f.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpclw3qz3s.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpclw3qz3s.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclw3qz3s.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpclw3qz3s.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, 2)\n    else\n        return -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfm3hgqe1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfm3hgqe1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpfm3hgqe1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfm3hgqe1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfm3hgqe1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfm3hgqe1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpfm3hgqe1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfm3hgqe1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    # your code here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp99jqx_x4.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp99jqx_x4.jl:17\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Float64\n  Closest candidates are:\n  \
    \  convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp99jqx_x4.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp99jqx_x4.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp99jqx_x4.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp99jqx_x4.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Float64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp99jqx_x4.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp99jqx_x4.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659749728
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    s = (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \        return round(area, digits=2)\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpssr_1wy1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpssr_1wy1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpssr_1wy1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpssr_1wy1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, 2)\n    else\n        return -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfm3hgqe1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfm3hgqe1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpfm3hgqe1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfm3hgqe1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfm3hgqe1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfm3hgqe1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpfm3hgqe1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfm3hgqe1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppyimbyic.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmppyimbyic.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyimbyic.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppyimbyic.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf7tedam5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpf7tedam5.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppyimbyic.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmppyimbyic.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyimbyic.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppyimbyic.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf7tedam5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpf7tedam5.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpssr_1wy1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpssr_1wy1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpssr_1wy1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpssr_1wy1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpssr_1wy1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpssr_1wy1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpssr_1wy1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpssr_1wy1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpclw3qz3s.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpclw3qz3s.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclw3qz3s.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpclw3qz3s.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpssr_1wy1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpssr_1wy1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpssr_1wy1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpssr_1wy1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf7tedam5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpf7tedam5.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpclw3qz3s.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpclw3qz3s.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclw3qz3s.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpclw3qz3s.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd0ffl0ny.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd0ffl0ny.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd0ffl0ny.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd0ffl0ny.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd0ffl0ny.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    # Your code here\n    return -1\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\
    \t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnphvd1uz.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpnphvd1uz.jl:18\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnphvd1uz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnphvd1uz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnphvd1uz.jl:20\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: -1.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnphvd1uz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnphvd1uz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnphvd1uz.jl:21\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnphvd1uz.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnphvd1uz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnphvd1uz.jl:23\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnphvd1uz.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnphvd1uz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnphvd1uz.jl:25\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b > c && a+c > b && b+c > a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpssr_1wy1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpssr_1wy1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpssr_1wy1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpssr_1wy1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqsxajn96.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpqsxajn96.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    # Your code here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp0lrmydv1.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp0lrmydv1.jl:17\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Float64\n  Closest candidates are:\n  \
    \  convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp0lrmydv1.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lrmydv1.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0lrmydv1.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp0lrmydv1.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Float64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp0lrmydv1.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lrmydv1.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659749729
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf7tedam5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpf7tedam5.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpofw2ista.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpofw2ista.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofw2ista.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpofw2ista.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmprgmn1o0f.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmprgmn1o0f.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmprgmn1o0f.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprgmn1o0f.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprgmn1o0f.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprgmn1o0f.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmprgmn1o0f.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprgmn1o0f.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqsxajn96.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpqsxajn96.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    # Your code here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp0lrmydv1.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp0lrmydv1.jl:17\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Float64\n  Closest candidates are:\n  \
    \  convert(::Type{T}, !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp0lrmydv1.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lrmydv1.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0lrmydv1.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp0lrmydv1.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(1, 2, 10) == -1\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Float64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmp0lrmydv1.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lrmydv1.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n "
  timestamp: 1659749729
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppyimbyic.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmppyimbyic.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyimbyic.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppyimbyic.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppyimbyic.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmppyimbyic.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyimbyic.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppyimbyic.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) & (a+c>b) & (b+c>a)\n        s = (a+b+c)/2\n\
    \        return sqrt(s*(s-a)*(s-b)*(s-c))\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8rhdcd9v.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp8rhdcd9v.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rhdcd9v.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rhdcd9v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8rhdcd9v.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rhdcd9v.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rhdcd9v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8rhdcd9v.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rhdcd9v.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rhdcd9v.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8rhdcd9v.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rhdcd9v.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rhdcd9v.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqsxajn96.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpqsxajn96.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqsxajn96.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsxajn96.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsxajn96.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c && a+c>b && b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, 2)\n   \
    \ else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpvur45iom.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpvur45iom.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpvur45iom.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvur45iom.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvur45iom.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpvur45iom.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpvur45iom.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvur45iom.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749728
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, digits=2)\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        return sqrt(p*(p-a)*(p-b)*(p-c))\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2605e9i5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp2605e9i5.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2605e9i5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2605e9i5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2605e9i5.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2605e9i5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2605e9i5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2605e9i5.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2605e9i5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2605e9i5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2605e9i5.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2605e9i5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2605e9i5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2.0\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n  \
    \      return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpaesw29h2.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpaesw29h2.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpaesw29h2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaesw29h2.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaesw29h2.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaesw29h2.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpaesw29h2.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpaesw29h2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749728
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpofw2ista.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpofw2ista.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofw2ista.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpofw2ista.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    # your code goes here\n    if a + b > c && a + c >\
    \ b && b + c > a\n        p = (a + b + c) / 2\n        area = sqrt(p * (p - a)\
    \ * (p - b) * (p - c))\n        return round(area, 2)\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpalph2zpf.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpalph2zpf.jl:24\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpalph2zpf.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpalph2zpf.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpalph2zpf.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpalph2zpf.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpalph2zpf.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpalph2zpf.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749728
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, 2)\n    else\n        return -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpfm3hgqe1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpfm3hgqe1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpfm3hgqe1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfm3hgqe1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfm3hgqe1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpfm3hgqe1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpfm3hgqe1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfm3hgqe1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmprgmn1o0f.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmprgmn1o0f.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmprgmn1o0f.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprgmn1o0f.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprgmn1o0f.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprgmn1o0f.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmprgmn1o0f.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprgmn1o0f.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf7tedam5.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpf7tedam5.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf7tedam5.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7tedam5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7tedam5.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_jr__dkp.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmp_jr__dkp.jl:23\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jr__dkp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jr__dkp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_jr__dkp.jl:24\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jr__dkp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jr__dkp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_jr__dkp.jl:26\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jr__dkp.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jr__dkp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_jr__dkp.jl:28\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_jr__dkp.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_jr__dkp.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpofw2ista.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpofw2ista.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofw2ista.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpofw2ista.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    # your code goes here\n    return -1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq4q14c5_.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpq4q14c5_.jl:18\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4q14c5_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4q14c5_.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpq4q14c5_.jl:20\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: -1.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4q14c5_.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4q14c5_.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpq4q14c5_.jl:21\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4q14c5_.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4q14c5_.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpq4q14c5_.jl:23\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq4q14c5_.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq4q14c5_.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpq4q14c5_.jl:25\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    # your code here\n    return -1\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\
    \t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmn727u0s.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpmn727u0s.jl:18\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn727u0s.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn727u0s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmn727u0s.jl:20\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: -1.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn727u0s.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn727u0s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmn727u0s.jl:21\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn727u0s.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn727u0s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmn727u0s.jl:23\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn727u0s.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn727u0s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmn727u0s.jl:25\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  timestamp: 1659749728
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, 2)\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpssr_1wy1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpssr_1wy1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpssr_1wy1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpssr_1wy1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpssr_1wy1.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpssr_1wy1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, digits=2)\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        s =\
    \ (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s - b) * (s - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpclw3qz3s.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpclw3qz3s.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclw3qz3s.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpclw3qz3s.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    # your code here\n    return -1\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\
    \t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2,\
    \ 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5,\
    \ 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1)\
    \ == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpmn727u0s.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpmn727u0s.jl:18\n  Expression: candidate(3,\
    \ 4, 5) == 6.0\n   Evaluated: -1.0 == 6.0\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn727u0s.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn727u0s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmn727u0s.jl:20\n  Expression: candidate(4, 8, 5) == 8.18\n\
    \   Evaluated: -1.0 == 8.18\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn727u0s.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn727u0s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmn727u0s.jl:21\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: -1.0 == 1.73\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn727u0s.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn727u0s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmn727u0s.jl:23\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: -1.0 == 16.25\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpmn727u0s.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpmn727u0s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmn727u0s.jl:25\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: -1.0 == 0.43\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 "
  timestamp: 1659749728
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppyimbyic.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmppyimbyic.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyimbyic.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppyimbyic.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n\
    \        area = sqrt(p*(p-a)*(p-b)*(p-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppyimbyic.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmppyimbyic.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppyimbyic.jl:22\ntest set:\
    \ Error During Test at /tmp/tmppyimbyic.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmppyimbyic.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppyimbyic.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a + b > c) && (a + c > b) && (b + c > a)\n    \
    \    p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, digits=2)\n    else\n        return -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c && a+c>b && b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area, digits=2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpofw2ista.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpofw2ista.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpofw2ista.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpofw2ista.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpofw2ista.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpofw2ista.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpd1llqjf_.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpd1llqjf_.jl:24\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:25\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:27\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpd1llqjf_.jl:29\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpd1llqjf_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpd1llqjf_.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  timestamp: 1659749726
- exit_code: 0
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if a + b > c && a + c > b && b + c > a\n        p =\
    \ (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n    \
    \    return round(area, digits=2)\n    else\n        return -1\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    9      9

    '
  stdout: ''
  timestamp: 1659749724
- exit_code: 1
  program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n            \"\"\"\nfunction triangle_area(a::Int64, b::Int64,\
    \ c::Int64)::Float64 \n    if (a+b>c) && (a+c>b) && (b+c>a)\n        s = (a+b+c)/2\n\
    \        area = sqrt(s*(s-a)*(s-b)*(s-c))\n        return round(area,2)\n    else\n\
    \        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpclw3qz3s.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpclw3qz3s.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpclw3qz3s.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpclw3qz3s.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:645\n\
    \    round(::AbstractFloat, !Matched::RoundingMode{:NearestTiesAway}) at /shared/centos7/julia/1.7.3/share/julia/base/floatfuncs.jl:215\n\
    \    ...\n  Stacktrace:\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n\
    \     @ Main /tmp/tmpclw3qz3s.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpclw3qz3s.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n  "
  timestamp: 1659749727

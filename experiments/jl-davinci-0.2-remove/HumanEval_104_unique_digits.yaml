name: HumanEval_104_unique_digits
language: jl
prompt: "\"\"\"Given a list of positive integers x. return a sorted list of all \n\
  \    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted\
  \ in increasing order.\n    \n    For example:\n            \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
  \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
  \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
  \ 103, 31]) == [31, 135])\nend\n"
completions: ["    # your code here\nend", "    # YOUR CODE HERE\nend", "    # your\
    \ code here\nend", "    # your code here\nend", "    # your code here\nend", " \
    \   # your code here\nend", "    # your code here\nend", "    # write your code\
    \ here\n    return x\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\n    return []\nend", "    # your code here\n\
    end", "    # your code here\n    return x\nend", "    # your code here\nend",
  "    # Write your code here\n    return [i for i in x if !any(i % 2 == 0 for i in\
    \ digits(i))]\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\n    return x\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\n    return x\nend", "    # your code here\n\
    end", "    # your code here\n    return x\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # Write your code here\nend",
  "    # your code here\nend", "    # your code here\n    return x\nend", "    # your\
    \ code here\nend", "    # your code here\nend", "    # your code here\nend", " \
    \   # your code here\n    return x\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\n \
    \   return []\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\n    y = []\n    for i in x\n\
    \        if !(any(i % 2 == 0 for i in digits(i)))\n            push!(y, i)\n \
    \       end\n    end\n    return sort(y)\nend", "    # your code here\nend", " \
    \   # your code here\nend", "    # Your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\n    return []\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code goes here\n\
    \    return x\nend", "    # your code here\nend", "    # Write your code here\n\
    \    # x = [12, 345, 2, 6, 7896]\n    # unique_digits(x) = [345, 7896]\n    #\
    \ x = [12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896]\n    # unique_digits(x) = [345,\
    \ 7896]\n    # x = [12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896]\n\
    \    # unique_digits(x) = [345, 7896]\n    # x = [12, 345, 2, 6, 7896, 12, 345,\
    \ 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896]\n    # unique_digits(x)\
    \ = [345, 7896]\n    # x = [12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345,\
    \ 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896]\n    # unique_digits(x)\
    \ = [345, 7896]\n    # x = [12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345,\
    \ 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896]\n\
    \    # unique_digits(x) = [345, 7896]\n    # x = [12, 345, 2, 6, 7896, 12, 345,\
    \ 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896, 12,\
    \ 345, 2, 6, 7896, 12, 345, 2, 6, 7896]\n    # unique_digits(x) = [345, 7896]\n\
    \    # x = [12, 345, 2, 6, 7896, 12, 345, 2, 6, 7896, 12, 345, 2, 6,", "    #\
    \ your code here\nend", "    # your code here\nend", "    # Your code here\nend",
  "    # your code here\nend", "    # your code here\n    return []\nend", "    #\
    \ Your code here\nend", "    # your code here\nend", "    # YOUR CODE HERE\nend",
  "    # your code here\nend", "    # your code here\nend", "    # Your code here\n\
    end", "    # your code here\nend", "    # Your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # write your code here\n\
    \    return [i for i in x if all(j % 2 != 0 for j in digits(i))]\nend", "    #\
    \ your code here\nend", "    # your code here\n    return x\nend", "    # your\
    \ code here\n    return sort(x[find(x -> !any(x % 2 .== 0), x)])\nend", "    #\
    \ Your code here\nend", "    # your code here\nend", "    # your code here\n \
    \   return x\nend", "    # your code here\nend", "    # Your code here\nend",
  "    # your code here\n    return x\nend", "    # your code here\nend", "    # your\
    \ code here\nend", "    # your code here\nend", "    # Your code here\nend", " \
    \   # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\n \
    \   return x\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code goes\
    \ here\n    return []\nend", "    # Your code here\nend", "    # your code here\n\
    end", "    # Your code here\nend", "    # your code here\nend", "    # Your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    return sort(filter(x -> !any(isodd, digits(x)), x))\nend", "    # your code\
    \ goes here\n    return [i for i in x if all(i % 2 != 0 for i in digits(i))]\n\
    end", "    # your code here\nend", "    # Write your code here\n    return x\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # Your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # Write your code here\n    return [i for i in x\
    \ if !any(i % 10 == 0 for i in digits(i))]\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code goes here\n    return x\nend", " \
    \   # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code goes here\nend", "    # your code here\nend", "    # your\
    \ code here\nend", "    return sort(filter(x -> all(digits(x) .% 2 .!= 0), x))\n\
    end", "    # YOUR CODE HERE\n    return [i for i in x if all(j % 2 != 0 for j\
    \ in digits(i))]\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ Your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # Your code here\n\
    end", "    # your code here\nend", "    # your code here\n    return x\nend",
  "    return sort(filter(x) do x\n        for i in digits(x)\n            if i %\
    \ 2 == 0\n                return false\n            end\n        end\n       \
    \ return true\n    end)\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # Your code here\nend", "    # your code here\nend", "    #\
    \ your code here\n    return x\nend", "    # your code here\nend", "    # your\
    \ code here\n    return x\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_104_unique_digits
language: jl
prompt: "\"\"\"Given a list of positive integers x. return a sorted list of all \n\
  \    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted\
  \ in increasing order.\n    \n    For example:\n            \"\"\"\nfunction unique_digits(x::Vector{Int64})::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = unique_digits;\n\t@test(candidate([15,\
  \ 33, 1422, 1]) == [1, 15, 33])\n\t@test(candidate([152, 323, 1422, 10]) == Vector{Int64}([]))\n\
  \t@test(candidate([12345, 2033, 111, 151]) == [111, 151])\n\t@test(candidate([135,\
  \ 103, 31]) == [31, 135])\nend\n"
completions: ["    # your code here\nend", "    # Your code here\nend", "    # your\
    \ code here\nend", "    # your code here\nend", "    # your code here\nend", " \
    \   # your code here\n    return x\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    return sort(filter(x\
    \ -> all(i -> i % 2 != 0, digits(x)), x))\nend", "    # your code here\nend",
  "    # your code here\nend", "    # Your code here\nend", "    # your code here\n\
    \    return x\nend", "    # YOUR CODE HERE\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code goes here\n    return [i for i in x if all(j % 2 != 0 for\
    \ j in digits(i))]\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend\n ", "    # your\
    \ code here\n    return [i for i in x if all(i%10 != 0 for i in digits(i))]\n\
    end", "    # Your code here\nend", "    # your code here\nend", "    # your code\
    \ here\n    return []\nend", "    # your code goes here\n    return x\nend", " \
    \   # Your code here\nend", "    # YOUR CODE HERE\nend", "    # your code here\n\
    end", "    # YOUR CODE HERE\n    return x\nend", "    # your code goes here\n\
    \    return [i for i in x if all(i%2!=0 for i in digits(i))]\nend", "    # your\
    \ code here\nend", "    # Your code here\nend", "    # your code here\nend", " \
    \   # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # Write your\
    \ code here\n    return [i for i in x if all(i % 2 == 1 for i in digits(i))]\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code goes\
    \ here\nend", "    # your code here\nend", "    # your code here\n    return []\n\
    end", "    # Write your code here\n    return [i for i in x if all(j % 2 != 0\
    \ for j in digits(i))]\nend", "    # YOUR CODE HERE\nend", "    # Your code here\n\
    end", "    return sort(filter(x) do x\n        return all(map(digits(x)) do d\n\
    \            return d % 2 != 0\n        end)\n    end)\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    # your code here\n    return []\nend", "    # your\
    \ code here\n    return x\nend", "    # your code here\nend", "    # your code\
    \ here\n    return x\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\n    return []\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code goes here\n    return x\n\
    end", "    # your code here\n    return x\nend", "    # your code here\nend",
  "    # your code goes here\n    return x\nend", "    return sort(filter(x -> all(x\
    \ % 2 != 0), x))\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\n    return [i for i in x if\
    \ all(i % 2 != 0 for i in digits(i))]\nend", "    # your code here\nend", "  \
    \  # your code here\nend", "    # your code here\nend", "    # Your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\nend", "    unique_digits = []\n    for i in x\n        if !(contains(digits(i),\
    \ 2) || contains(digits(i), 4) || contains(digits(i), 6) || contains(digits(i),\
    \ 8) || contains(digits(i), 0))\n            push!(unique_digits, i)\n       \
    \ end\n    end\n    sort(unique_digits)\nend", "    # your code here\nend", " \
    \   # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code goes here\nend", "    # your code here\nend", "    # your\
    \ code goes here\n    return x\nend", "    x_unique = []\n    for i in x\n   \
    \     if !(any(digits(i) .% 2 .== 0))\n            push!(x_unique, i)\n      \
    \  end\n    end\n    return sort(x_unique)\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code goes here\n    return [i for i in x if all(j % 2 != 0 for\
    \ j in digits(i))]\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\n    return x\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\n    return [i for i\
    \ in x if all(i%2 != 0 for i in digits(i))]\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\n    return []\nend",
  "    # your code here\n    return x\nend", "    # your code here\n    return [i\
    \ for i in x if all(i%2!=0 for i in digits(i))]\nend", "    # YOUR CODE HERE\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ your code here\n    return x\nend", "    # your code here\nend", "    # your\
    \ code here\nend", "    # your code here\n    return x\nend", "    # your code\
    \ here\n    return []\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # Your code here\nend", "    # your code here\nend", "    return sort(filter(x)\
    \ do x\n        x_str = string(x)\n        for i in 1:length(x_str)\n        \
    \    if x_str[i] in \"02468\"\n                return false\n            end\n\
    \        end\n        return true\n    end)\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    return sort(filter(x->all(digits(x)\
    \ .% 2 .!= 0), x))\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # Your code here\nend", "    # your code\
    \ here\n    return x\nend", "    # Your code here\nend", "    # your code here\n\
    end", "    # your code goes here\nend", "    # your code here\nend", "    # YOUR\
    \ CODE HERE\n    return []\nend", "    # write your code here\n    return x\n\
    end", "    # your code goes here\nend", "    # your code here\nend", "    # your\
    \ code goes here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    # your code here\n\
    end", "    # your code here\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ Your code here\nend", "    # your code here\nend", "    return sort(filter(x)\
    \ do x\n        x_str = string(x)\n        !any(x_str[i] in '02468' for i in 1:length(x_str))\n\
    \    end)\nend", "    # your code here\n    return x\nend", "    # your code here\n\
    end", "    # your code here\nend", "    y = []\n    for i in x\n        if !(any(string(i)\
    \ .== '2') || any(string(i) .== '4') || any(string(i) .== '6') || any(string(i)\
    \ .== '8') || any(string(i) .== '0'))\n            push!(y, i)\n        end\n\
    \    end\n    return sort(y)\nend", "    # your code here\nend", "    # your code\
    \ here\nend", "    # your code here\nend", "    # your code here\nend", "    #\
    \ Your code here\nend", "    # your code here\nend", "    # your code here\nend",
  "    # your code here\n    return []\nend", "    # your code goes here\nend", " \
    \   # your code here\nend", "    # your code here\n    return []\nend", "    #\
    \ your code here\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

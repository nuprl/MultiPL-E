language: jl
name: HumanEval_49_modp
results:
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        if n % 2 == 0\n            return modp(n/2, p)^2\
    \ % p\n        else\n            return 2 * modp(n-1, p) % p\n        end\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph33h4db1.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmph33h4db1.jl:19\n  Test threw exception\n\
    \  Expression: candidate(3, 5) == 3\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmph33h4db1.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph33h4db1.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph33h4db1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmph33h4db1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(1101, 101) == 2\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmph33h4db1.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph33h4db1.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph33h4db1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmph33h4db1.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(3, 11) == 8\n  MethodError: no method matching modp(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmph33h4db1.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /"
  timestamp: 1659749293
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2 * modp(n-1, p)) % p\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return modp(n-1, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu34f5zbn.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpu34f5zbn.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n==0\n      \
    \  return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu5b88qcm.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpu5b88qcm.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu5b88qcm.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu5b88qcm.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpu5b88qcm.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu5b88qcm.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu5b88qcm.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpu5b88qcm.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu5b88qcm.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu5b88qcm.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpu5b88qcm.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu5b88qcm.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu5b88qcm.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpu5b88qcm.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu5b88qcm."
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return modp(n-1, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu34f5zbn.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpu34f5zbn.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        if n % 2\
    \ == 0\n            return modp(n/2, p)^2 % p\n        else\n            return\
    \ 2 * modp(n-1, p) % p\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101)\
    \ == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpc9ixik1x.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpc9ixik1x.jl:21\n  Test threw exception\n\
    \  Expression: candidate(3, 5) == 3\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpc9ixik1x.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:10\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:12\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc9ixik1x.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc9ixik1x.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpc9ixik1x.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(1101, 101) == 2\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpc9ixik1x.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:10\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:12\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc9ixik1x.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc9ixik1x.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpc9ixik1x.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(3, 11) == 8\n  MethodError: no method matching modp(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpc9ixik1x.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:10\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:12\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     "
  timestamp: 1659749293
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return (modp(n-1, p)^2) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6ihvb_7w.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp6ihvb_7w.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihv"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return modp(n-1, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu34f5zbn.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpu34f5zbn.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return (modp(n-1, p)^2) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6ihvb_7w.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp6ihvb_7w.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihv"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        if n % 2 == 0\n            return modp(n/2, p)^2\
    \ % p\n        else\n            return (2 * modp(n-1, p)) % p\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpdxbt1grf.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpdxbt1grf.jl:19\n  Test threw exception\n\
    \  Expression: candidate(3, 5) == 3\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdxbt1grf.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdxbt1grf.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpdxbt1grf.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(1101, 101) == 2\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdxbt1grf.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdxbt1grf.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpdxbt1grf.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(3, 11) == 8\n  MethodError: no method matching modp(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /"
  timestamp: 1659749293
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    n = mod(n, p)\n\
    \    if n == 0\n        return 1\n    end\n    if n == 1\n        return 2\n \
    \   end\n    if n == 2\n        return 4\n    end\n    if n == 3\n        return\
    \ 8\n    end\n    if n == 4\n        return 16\n    end\n    if n == 5\n     \
    \   return 32\n    end\n    if n == 6\n        return 64\n    end\n    if n ==\
    \ 7\n        return 128\n    end\n    if n == 8\n        return 256\n    end\n\
    \    if n == 9\n        return 512\n    end\n    if n == 10\n        return 1024\n\
    \    end\n    if n == 11\n        return 2048\n    end\n    if n == 12\n     \
    \   return 4096\n    end\n    if n == 13\n        return 8192\n    end\n    if\
    \ n == 14\n        return 16384\n    end\n    if n == 15\n        return 32768\n\
    \    end\n    if n == 16\n        return 65536\n    end\n    if n == 17\n    \
    \    return 131072\n    end\n    if n == 18\n        return 262144\n    end\n\
    \    if n == 19\n        return 524288\n    end\n    if n == 20\n        return\
    \ 1048576\n    end\n    if n == 21\n        return 2097152\n    end\n    if n\
    \ == 22\n        return 4194304\n    end\n    if n == 23\n        return 8388608\n\
    \    end\n    if n == 24\n        return 16777216\n    end\n    if n == 25\n \
    \       return 33554432\n    end\n    if n == 26\n        return 67108864\n  \
    \  end\n    if n == 27\n        return 134217728\n    end\n    if n == 28\n  \
    \      return 268435456\n    end\n    if n == 29\n        return 536870912\n \
    \   end\n    if n == 30\n        return 1073741824\n    end\n    if n == 31\n\
    \        return 2147483648\n    end\n    if n == 32\n        return 4294967296\n\
    \    end\n    if n == 33\n        return 8589934592\n    end\n    if n == 34\n\
    \        return 1717\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpng8_lnxe.jl:1\nin expression starting at /tmp/tmpng8_lnxe.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        if n % 2 == 0\n            return modp(n/2, p)^2\
    \ % p\n        else\n            return 2 * modp(n-1, p) % p\n        end\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmph33h4db1.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmph33h4db1.jl:19\n  Test threw exception\n\
    \  Expression: candidate(3, 5) == 3\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmph33h4db1.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph33h4db1.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph33h4db1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmph33h4db1.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(1101, 101) == 2\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmph33h4db1.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph33h4db1.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph33h4db1.jl:18\ntest set:\
    \ Error During Test at /tmp/tmph33h4db1.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(3, 11) == 8\n  MethodError: no method matching modp(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmph33h4db1.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmph33h4db1.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /"
  timestamp: 1659749293
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        if n % 2 == 0\n            return modp(n/2, p)^2\
    \ % p\n        else\n            return (2 * modp(n-1, p)) % p\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpdxbt1grf.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpdxbt1grf.jl:19\n  Test threw exception\n\
    \  Expression: candidate(3, 5) == 3\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdxbt1grf.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdxbt1grf.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpdxbt1grf.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(1101, 101) == 2\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdxbt1grf.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdxbt1grf.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpdxbt1grf.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(3, 11) == 8\n  MethodError: no method matching modp(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /"
  timestamp: 1659749293
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return modp(n-1, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu34f5zbn.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpu34f5zbn.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n==0\n      \
    \  return 1\n    else\n        return modp(n-1, p)*2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n==0\n      \
    \  return 1\n    elseif n==1\n        return 2\n    else\n        return (2*modp(n-1,p))%p\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return modp(n-1, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu34f5zbn.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpu34f5zbn.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return (modp(n-1, p)^2) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6ihvb_7w.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp6ihvb_7w.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihv"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return (modp(n-1, p)^2) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6ihvb_7w.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp6ihvb_7w.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihv"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2 * modp(n-1, p)) % p\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        if n % 2\
    \ == 0\n            return modp(n/2, p)^2 % p\n        else\n            return\
    \ 2 * modp(n-1, p) % p\n        end\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101)\
    \ == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpc9ixik1x.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpc9ixik1x.jl:21\n  Test threw exception\n\
    \  Expression: candidate(3, 5) == 3\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpc9ixik1x.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:10\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:12\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc9ixik1x.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc9ixik1x.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpc9ixik1x.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(1101, 101) == 2\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpc9ixik1x.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:10\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:12\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc9ixik1x.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc9ixik1x.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpc9ixik1x.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(3, 11) == 8\n  MethodError: no method matching modp(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpc9ixik1x.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:10\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpc9ixik1x.jl:12\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     "
  timestamp: 1659749293
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (modp(n-1, p) * 2) % p\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2 * modp(n-1, p)) % p\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (modp(n-1,\
    \ p)^2) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\
    \t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphlcozyo1.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmphlcozyo1.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlco"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2^n, p)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101,\
    \ 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\
    \t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31,\
    \ 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpig_s2cr6.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpig_s2cr6.jl:16\n  Expression: candidate(1101,\
    \ 101) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpig_s2cr6.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpig_s2cr6.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpig_s2cr6.jl:19\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpig_s2cr6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpig_s2cr6.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    return mod(2^n,\
    \ p)\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1korssad.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp1korssad.jl:12\n  Expression: candidate(1101,\
    \ 101) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1korssad.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1korssad.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp1korssad.jl:15\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1korssad.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1korssad.jl:10\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  timestamp: 1659749293
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        if n % 2 == 0\n            return modp(n/2, p)^2\
    \ % p\n        else\n            return (2 * modp(n-1, p)) % p\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpdxbt1grf.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpdxbt1grf.jl:19\n  Test threw exception\n\
    \  Expression: candidate(3, 5) == 3\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdxbt1grf.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdxbt1grf.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpdxbt1grf.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(1101, 101) == 2\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdxbt1grf.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdxbt1grf.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpdxbt1grf.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(3, 11) == 8\n  MethodError: no method matching modp(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmpdxbt1grf.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:8\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmpdxbt1grf.jl:10\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /"
  timestamp: 1659749293
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (modp(n-1,\
    \ p)^2) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\
    \t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphlcozyo1.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmphlcozyo1.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlco"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return (modp(n-1, p)^2) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6ihvb_7w.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp6ihvb_7w.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihvb_7w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6ihvb_7w.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6ihvb_7w.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6ihv"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return modp(n-1, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu34f5zbn.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpu34f5zbn.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        half = modp(n \xF7 2, p)\n        half * half\
    \ * (if n % 2 == 0 then 1 else p)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101)\
    \ == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"1\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpescsp9pp.jl:8\nin expression starting at /tmp/tmpescsp9pp.jl:8\n"
  stdout: ''
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (modp(n-1, p) * 2) % p\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return modp(n-1, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpu34f5zbn.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpu34f5zbn.jl:19\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:20\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:22\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:23\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f5zbn.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpu34f5zbn.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpu34f5zbn.jl:24\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpu34f"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2\
    \ * modp(n-1, p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2^n, p)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101,\
    \ 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\
    \t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31,\
    \ 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpig_s2cr6.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpig_s2cr6.jl:16\n  Expression: candidate(1101,\
    \ 101) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpig_s2cr6.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpig_s2cr6.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpig_s2cr6.jl:19\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpig_s2cr6.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpig_s2cr6.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n < 0\n     \
    \   return modp(-n, p)\n    end\n    if n == 0\n        return 1\n    end\n  \
    \  if n == 1\n        return 2\n    end\n    if n % 2 == 0\n        return modp(n/2,\
    \ p)^2 % p\n    else\n        return 2 * modp(n-1, p) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmppxm2h1d_.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmppxm2h1d_.jl:24\n  Test threw exception\n\
    \  Expression: candidate(3, 5) == 3\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmppxm2h1d_.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmppxm2h1d_.jl:14\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmppxm2h1d_.jl:16\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppxm2h1d_.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppxm2h1d_.jl:23\ntest set:\
    \ Error During Test at /tmp/tmppxm2h1d_.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(1101, 101) == 2\n  MethodError: no method matching modp(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmppxm2h1d_.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmppxm2h1d_.jl:14\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmppxm2h1d_.jl:16\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmppxm2h1d_.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmppxm2h1d_.jl:23\ntest set:\
    \ Error During Test at /tmp/tmppxm2h1d_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(3, 11) == 8\n  MethodError: no method matching modp(::Float64, ::Int64)\n\
    \  Closest candidates are:\n    modp(!Matched::Int64, ::Int64) at /tmp/tmppxm2h1d_.jl:3\n\
    \  Stacktrace:\n   [1] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmppxm2h1d_.jl:14\n\
    \   [2] modp(n::Int64, p::Int64)\n     @ Main /tmp/tmppxm2h1d_.jl:16\n   [3] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     "
  timestamp: 1659749294
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    return mod(2^n,\
    \ p)\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1korssad.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp1korssad.jl:12\n  Expression: candidate(1101,\
    \ 101) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1korssad.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1korssad.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp1korssad.jl:15\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1korssad.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1korssad.jl:10\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  timestamp: 1659749293
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0 \n   \
    \     return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n     \
    \   return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n       \
    \ return 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n       \
    \ return 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n      \
    \  return 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n   \
    \     return 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n\
    \        return 4096\n    elseif n == 13\n        return 8192\n    elseif n ==\
    \ 14\n        return 16384\n    elseif n == 15\n        return 32768\n    elseif\
    \ n == 16\n        return 65536\n    elseif n == 17\n        return 131072\n \
    \   elseif n == 18\n        return 262144\n    elseif n == 19\n        return\
    \ 524288\n    elseif n == 20\n        return 1048576\n    elseif n == 21\n   \
    \     return 2097152\n    elseif n == 22\n        return 4194304\n    elseif n\
    \ == 23\n        return 8388608\n    elseif n == 24\n        return 16777216\n\
    \    elseif n == 25\n        return 33554432\n    elseif n == 26\n        return\
    \ 67108864\n    elseif n == 27\n        return 134217728\n    elseif n == 28\n\
    \        return 268435456\n    elseif n == 29\n        return 536870912\n    elseif\
    \ n == 30\n        return 1073741824\n    elseif n == 31\n        return 2147483648\n\
    \    elseif n == 32\n        return 4294967296\n    elseif n == 33\n        return\
    \ 8589934592\n    elseif n == 34\n        return 17179869184\n    elseif n ==\
    \ 35\n        return 34359738368\n    elseif n == 36\n        return 68719476736\n\
    \    elseif n == 37\n        return 137438953472\n    elseif n == 38\n       \
    \ return 274877906944\n    elseif n == 39\n        return 5\nusing Test\n\n@testset\
    \ begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101,\
    \ 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\
    \t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31,\
    \ 5) == 3)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpagmlg4wz.jl:1\nin expression starting at /tmp/tmpagmlg4wz.jl:1\n"
  stdout: ''
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (modp(n-1,\
    \ p)^2) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\
    \t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphlcozyo1.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmphlcozyo1.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlcozyo1.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphlcozyo1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphlcozyo1.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphlco"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n==0\n      \
    \  return 1\n    elseif n==1\n        return 2\n    else\n        return (2*modp(n-1,p))%p\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    return mod(Int64(2)^n,\
    \ p)\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp346_cp_b.jl:8

    '
  stdout: "test set: Test Failed at /tmp/tmp346_cp_b.jl:12\n  Expression: candidate(1101,\
    \ 101) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp346_cp_b.jl:12 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp346_cp_b.jl:10\ntest set: Test\
    \ Failed at /tmp/tmp346_cp_b.jl:15\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp346_cp_b.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp346_cp_b.jl:10\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     2      7\n"
  timestamp: 1659749293
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(2*n, p)^2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpktdxxt.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpkpktdxxt.jl:15\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:16\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:18\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:20\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpktdxxt.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpkpktdxxt.jl:21\n  Expression: candidate(31, 5) == 3\n   Evaluated:\
    \ 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpktdxxt."
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return mod(2*modp(n-1,\
    \ p), p)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        m = modp(n\
    \ \xF7 2, p)\n        if n % 2 == 0\n            return (m^2) % p\n        else\n\
    \            return (2 * m^2) % p\n        end\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101,\
    \ 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\
    \t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31,\
    \ 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749291
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return modp(n-1,\
    \ p)^2 % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpau5xkjkd.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpau5xkjkd.jl:17\n  Expression: candidate(3,\
    \ 5) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:18\n  Expression: candidate(1101, 101) == 2\n\
    \   Evaluated: 81 == 2\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:20\n  Expression: candidate(3, 11) == 8\n   Evaluated:\
    \ 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:21\n  Expression: candidate(100, 101) == 1\n \
    \  Evaluated: 92 == 1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5xkjkd.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpau5xkjkd.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpau5xkjkd.jl:22\n  Expression: candidate(30, 5) == 4\n   Evaluated:\
    \ 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpau5x"
  timestamp: 1659749292
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (modp(n-1, p) * 2) % p\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) ==\
    \ 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t\
    @test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n==0\n      \
    \  return 1\n    elseif n==1\n        return 2\n    else\n        return (2*modp(n-1,p))%p\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3,\
    \ 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\
    \t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30,\
    \ 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return modp(n-1, p) * 2 % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        half = modp(n \xF7 2, p)\n        if n % 2 ==\
    \ 0\n            return half * half % p\n        else\n            return half\
    \ * half * 2 % p\n        end\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101)\
    \ == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    else\n        return (2*modp(n-1, p)) % p\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2\
    \ * modp(n-1, p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 1
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    elseif n == 3\n        return 8\n    elseif n == 4\n        return\
    \ 16\n    elseif n == 5\n        return 32\n    elseif n == 6\n        return\
    \ 64\n    elseif n == 7\n        return 128\n    elseif n == 8\n        return\
    \ 256\n    elseif n == 9\n        return 512\n    elseif n == 10\n        return\
    \ 1024\n    elseif n == 11\n        return 2048\n    elseif n == 12\n        return\
    \ 4096\n    elseif n == 13\n        return 8192\n    elseif n == 14\n        return\
    \ 16384\n    elseif n == 15\n        return 32768\n    elseif n == 16\n      \
    \  return 65536\n    elseif n == 17\n        return 131072\n    elseif n == 18\n\
    \        return 262144\n    elseif n == 19\n        return 524288\n    elseif\
    \ n == 20\n        return 1048576\n    elseif n == 21\n        return 2097152\n\
    \    elseif n == 22\n        return 4194304\n    elseif n == 23\n        return\
    \ 8388608\n    elseif n == 24\n        return 16777216\n    elseif n == 25\n \
    \       return 33554432\n    elseif n == 26\n        return 67108864\n    elseif\
    \ n == 27\n        return 134217728\n    elseif n == 28\n        return 268435456\n\
    \    elseif n == 29\n        return 536870912\n    elseif n == 30\n        return\
    \ 1073741824\n    elseif n == 31\n        return 2147483648\n    elseif n == 32\n\
    \        return 4294967296\n    elseif n == 33\n        return 8589934592\n  \
    \  elseif n == 34\n        return 17179869184\n    elseif n == 35\n        return\
    \ 34359738368\n    elseif n == 36\n        return 68719476736\n    elseif n ==\
    \ 37\n        return 137438953472\n    elseif n == 38\n        return 274877906944\n\
    \    elseif n == 39\n        return 549\nusing Test\n\n@testset begin\n\ncandidate\
    \ = modp;\n\t@test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\
    \t@test(candidate(0, 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100,\
    \ 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ot3v_0s.jl:1\nin expression starting at /tmp/tmp0ot3v_0s.jl:1\n"
  stdout: ''
  timestamp: 1659749291
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    elseif n == 2\n      \
    \  return 4\n    else\n        return mod(2*modp(n-1, p), p)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = modp;\n\t@test(candidate(3, 5) == 3)\n\
    \t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0, 101) == 1)\n\t@test(candidate(3,\
    \ 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\t@test(candidate(30, 5) == 4)\n\
    \t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290
- exit_code: 0
  program: "\"\"\"Return 2^n modulo p (be aware of numerics).\n                  \
    \      \"\"\"\nfunction modp(n::Int64, p::Int64)::Int64 \n    if n == 0\n    \
    \    return 1\n    elseif n == 1\n        return 2\n    else\n        return (2*modp(n-1,\
    \ p)) % p\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = modp;\n\t\
    @test(candidate(3, 5) == 3)\n\t@test(candidate(1101, 101) == 2)\n\t@test(candidate(0,\
    \ 101) == 1)\n\t@test(candidate(3, 11) == 8)\n\t@test(candidate(100, 101) == 1)\n\
    \t@test(candidate(30, 5) == 4)\n\t@test(candidate(31, 5) == 3)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    7      7

    '
  stdout: ''
  timestamp: 1659749290

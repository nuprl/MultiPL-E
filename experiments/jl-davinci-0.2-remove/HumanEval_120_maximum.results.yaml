language: jl
name: HumanEval_120_maximum
results:
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == k\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ arr[n-1], minimum(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ arr[n-1], arr[n-2], minimum(arr)])\n    end\n    if k == 5\n        return sort([maximum(arr),\
    \ arr[n-1], arr[n-2], arr[n-3], minimum(arr)])\n    end\n    if k == 6\n     \
    \   return sort([maximum(arr), arr[n-1], arr[n-2], arr[n-3], arr[n-4], minimum(arr)])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), arr[n-1], arr[n-2],\
    \ arr[n-3], arr[n-4], arr[n-5], minimum(arr)])\n    end\n    if k == 8\n     \
    \   return sort([maximum(arr), arr[n-1], arr[n-2], arr[n-3], arr[n-4], arr[n-5],\
    \ arr[n-6], minimum(arr)])\n    end\n    if k == 9\n        return sort([maximum(arr),\
    \ arr[n-1], arr[n-2], arr[n-3], arr[n-4], arr[n-5], arr[n-6], arr[n-7], minimum(arr)])\n\
    \    end\n    if k == 10\n        return sort([maximum(arr), arr[n-1], arr[n-2],\
    \ arr[n-3], arr[n-4], arr[n-5], arr[n-6], arr[n-7], arr[n-8], minimum(arr)])\n\
    \    end\n    if k == 11\n        return sort([maximum(arr), arr[n-1], arr[n-2],\
    \ arr[n-3], arr[n-4], arr[n-5], arr[n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3d_b2utr.jl:1\nin expression starting at /tmp/tmp3d_b2utr.jl:1\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr)\n    end\n    max_val\
    \ = maximum(arr)\n    max_idx = findall(arr .== max_val)[1]\n    arr[max_idx]\
    \ = minimum(arr)\n    return [max_val] .+ maximum(arr, k-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpum9wnw91.jl:40\n  Test threw
    exception\n  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  MethodError: no
    method matching maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n  Closest
    candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpum9wnw91.jl:19\n  Stacktrace:\n   [1]
    maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpum9wnw91.jl:29\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpum9wnw91.jl:40 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpum9wnw91.jl:38\ntest set: Error
    During Test at /tmp/tmpum9wnw91.jl:41\n  Test threw exception\n  Expression: candidate([-3,
    2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching maximum(::Vector{Int64})\n  You
    may have intended to import Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64},
    !Matched::Int64) at /tmp/tmpum9wnw91.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},
    k::Int64)\n     @ Main /tmp/tmpum9wnw91.jl:24\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpum9wnw91.jl:41 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpum9wnw91.jl:38\ntest set: Error During Test at
    /tmp/tmpum9wnw91.jl:42\n  Test threw exception\n  Expression: candidate([123,
    -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  MethodError: no method matching
    maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n  Closest
    candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpum9wnw91.jl:19\n  Stacktrace:\n   [1]
    maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpum9wnw91.jl:29\n   [2] '
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  # sort the array\n    arr = sort(arr)\n    # get the max k numbers\n    return\
    \ arr[n-k+1:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t\
    @test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    sorted_arr = sort(arr, rev=true)\n\
    \    # return the first k elements\n    return sorted_arr[1:k]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrfvp0j_.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpnrfvp0j_.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sort!(arr)\n    # return the last k elements\n \
    \   return arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == 0\n        return []\n    end\n    if k ==\
    \ 0\n        return []\n    end\n    if k == n\n        return sort(arr, rev=true)\n\
    \    end\n    if k > n\n        return sort(arr, rev=true)\n    end\n    # k <\
    \ n\n    # 1. sort the array\n    # 2. return the first k elements\n    return\
    \ sort(arr, rev=true)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprxf5izjz.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmprxf5izjz.jl:43\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxf5izjz.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxf5izjz.jl:42\ntest set: Test\
    \ Failed at /tmp/tmprxf5izjz.jl:46\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxf5izjz.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxf5izjz.jl:42\ntest set: Test\
    \ Failed at /tmp/tmprxf5izjz.jl:47\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxf5izjz.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxf5izjz.jl:42\ntest set: Test\
    \ Failed at /tmp/tmprxf5izjz.jl:48\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxf5izjz.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxf5izjz.jl:42\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr, rev=true)\n    end\n\
    \    pivot = arr[rand(1:length(arr))]\n    left = [x for x in arr if x > pivot]\n\
    \    right = [x for x in arr if x <= pivot]\n    if length(left) >= k\n      \
    \  return maximum(left, k)\n    else\n        return maximum(left, length(left))\
    \ .* maximum(right, k - length(left))\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmpl8bgyeuz.jl:43\n  Expression: candidate([-3,
    -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8bgyeuz.jl:43 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8bgyeuz.jl:42\ntest set: Error
    During Test at /tmp/tmpl8bgyeuz.jl:44\n  Test threw exception\n  Expression: candidate([4,
    -4, 4], 2) == [4, 4]\n  DimensionMismatch("arrays could not be broadcast to a
    common size; got a dimension with lengths 0 and 2")\n  Stacktrace:\n    [1] _bcs1\n      @
    ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3]
    broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @
    ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281
    [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7]
    maximum(arr::Vector{Int64}, k::Int64) (repeats 4 times)\n      @ Main /tmp/tmpl8bgyeuz.jl:35\n    [8]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [9] macro expansion\n      @ /tmp/tmpl8bgyeuz.jl:44 [inlined]\n   [10]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [11] top-level scope\n      @ /tmp/tmpl8bgyeuz.jl:42\n'''
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), arr[Int(ceil(n/2))]])\n    end\n    if k == 4\n        return\
    \ sort([maximum(arr), minimum(arr), arr[Int(ceil(n/2))], arr[Int(ceil(n/4))]])\n\
    \    end\n    if k == 5\n        return sort([maximum(arr), minimum(arr), arr[Int(ceil(n/2))],\
    \ arr[Int(ceil(n/4))], arr[Int(ceil(3n/4))]])\n    end\n    if k == 6\n      \
    \  return sort([maximum(arr), minimum(arr), arr[Int(ceil(n/2))], arr[Int(ceil(n/4))],\
    \ arr[Int(ceil(3n/4))], arr[Int(ceil(n/8))]])\n    end\n    if k == 7\n      \
    \  return sort([maximum(arr), minimum(arr), arr[Int(ceil(n/2))], arr[Int(ceil(n/4))],\
    \ arr[Int(ceil(3n/4))], arr[Int(ceil(n/8))], arr[Int(ceil(7n/8))]])\n    end\n\
    \    if k == 8\n        return sort([maximum(arr), minimum(arr), arr[Int(ceil(n/2))],\
    \ arr[Int(ceil(n/4))], arr[Int(ceil(3n/4))], arr[Int(ceil(n/8))], arr[Int(ceil(7n/8))],\
    \ arr[Int(ceil(3n/8))]])\n    end\n    if k == 9\n        return sort([maximum(arr),\
    \ minimum(arr), arr[Int(ceil(n/2))], arr[Int(ceil(n/4))], arr[Int(ceil(3\nusing\
    \ Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5],\
    \ 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx3oyx00d.jl:50\nin expression starting at\
    \ /tmp/tmpx3oyx00d.jl:50\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the last k elements\n    sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array and return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8qtcfu6o.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp8qtcfu6o.jl:29\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:30\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:31\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:32\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:34\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted = sort(arr)\n    # return the last k elements\n\
    \    return sorted[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb6od9c6z.jl:50\nin expression starting at\
    \ /tmp/tmpb6od9c6z.jl:50\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    heap = Heap(arr, true)\n    return pop!(heap, k)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4,\
    \ -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmps9_5d5xv.jl:25

    '
  stdout: "test set: Error During Test at /tmp/tmps9_5d5xv.jl:28\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: Heap\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmps9_5d5xv.jl:20\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps9_5d5xv.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps9_5d5xv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmps9_5d5xv.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: Heap not defined\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmps9_5d5xv.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps9_5d5xv.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps9_5d5xv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmps9_5d5xv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: Heap not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmps9_5d5xv.jl:20\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmps9_5d5xv.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps9_5d5xv.jl:27\ntest set:\
    \ Error During Test at /tmp/tmps9_5d5xv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ Heap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int6"
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[1:floor(Int64, n/2)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[1:floor(Int64,\
    \ n/2)]), median(arr[ceil(Int64, n/2):end])])\n    end\n    if k == 6\n      \
    \  return sort([maximum(arr), minimum(arr), median(arr), median(arr[1:floor(Int64,\
    \ n/2)]), median(arr[ceil(Int64, n/2):end]), median(arr[1:floor(Int64, n/2)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[1:floor(Int64, n/2)]), median(arr[ceil(Int64, n/2):end]), median(arr[1:floor(Int64,\
    \ n/2)]), median(arr[ceil(Int64, n/2):end])])\n    end\n    if k == 8\n      \
    \  return sort([maximum(arr), minimum(arr), median(arr), median(arr[1:floor(Int64,\
    \ n/2)]), median(arr[ceil(Int64, n/2):end]), median(arr[1:floor(Int64, n/2)]),\
    \ median(arr[ceil(Int64, n/2):end]), median(arr[1:floor(Int64, n/2)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[1:floor(Int64, n/2)]), median(arr[ceil(\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy_9srspw.jl:52\nin expression starting at\
    \ /tmp/tmpy_9srspw.jl:52\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return arr\n    end\n    pivot = arr[rand(1:length(arr))]\n\
    \    left = [x for x in arr if x < pivot]\n    right = [x for x in arr if x >\
    \ pivot]\n    if length(left) >= k\n        return maximum(left, k)\n    elseif\
    \ length(left) + 1 == k\n        return [maximum(left)]\n    else\n        return\
    \ [maximum(left)] .* maximum(right, k - length(left) - 1)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5],\
    \ 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmpkrzzayzk.jl:45\n  Expression: candidate([-3,
    -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [-3, -4, 5] == [-4, -3, 5]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpkrzzayzk.jl:45 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpkrzzayzk.jl:44\ntest set: Error
    During Test at /tmp/tmpkrzzayzk.jl:46\n  Test threw exception\n  Expression: candidate([4,
    -4, 4], 2) == [4, 4]\n  MethodError: no method matching maximum(::Vector{Int64})\n  You
    may have intended to import Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64},
    !Matched::Int64) at /tmp/tmpkrzzayzk.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},
    k::Int64)\n     @ Main /tmp/tmpkrzzayzk.jl:0\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkrzzayzk.jl:46 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkrzzayzk.jl:44\ntest set: Error
    During Test at /tmp/tmpkrzzayzk.jl:47\n  Test threw exception\n  Expression: candidate([-3,
    2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching maximum(::Vector{Int64})\n  You
    may have intended to import Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64},
    !Matched::Int64) at /tmp/tmpkrzzayzk.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},
    k::Int64)\n     @ Main /tmp/tmpkrzzayzk.jl:24\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpkrzzayzk.jl:47 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n  '
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        a\
    \ = maximum(arr)\n        deleteat!(arr, findall(arr .== a))\n        b = maximum(arr)\n\
    \        return [a, b]\n    end\n    if k == 3\n        a = maximum(arr)\n   \
    \     deleteat!(arr, findall(arr .== a))\n        b = maximum(arr)\n        deleteat!(arr,\
    \ findall(arr .== b))\n        c = maximum(arr)\n        return [a, b, c]\n  \
    \  end\n    if k == 4\n        a = maximum(arr)\n        deleteat!(arr, findall(arr\
    \ .== a))\n        b = maximum(arr)\n        deleteat!(arr, findall(arr .== b))\n\
    \        c = maximum(arr)\n        deleteat!(arr, findall(arr .== c))\n      \
    \  d = maximum(arr)\n        return [a, b, c, d]\n    end\n    if k == 5\n   \
    \     a = maximum(arr)\n        deleteat!(arr, findall(arr .== a))\n        b\
    \ = maximum(arr)\n        deleteat!(arr, findall(arr .== b))\n        c = maximum(arr)\n\
    \        deleteat!(arr, findall(arr .== c))\n        d = maximum(arr)\n      \
    \  deleteat!(arr, findall(arr .== d))\n        e = maximum(arr)\n        return\
    \ [a, b, c, d, e]\n    end\n    if k == 6\n        a = maximum(arr)\n        deleteat!(arr,\
    \ findall(arr .== a))\n        b = maximum(arr)\n        deleteat!(arr, findall(arr\
    \ .== b))\n        c = maximum(arr)\n        deleteat!(arr, findall(arr .== c))\n\
    \        d = maximum(arr)\n        deleteat!(arr, findall(arr .== d))\n      \
    \  e = maximum(arr)\n        deleteat!(arr, find\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmsv7jlu.jl:74\nin expression starting at\
    \ /tmp/tmpcmsv7jlu.jl:74\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ median(arr), minimum(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ median(arr), median(arr[arr .!= median(arr)]), minimum(arr)])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), median(arr), median(arr[arr .!=\
    \ median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]), minimum(arr)])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]), minimum(arr)])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])]),\
    \ minimum(arr)])\n    end\n    if k == 8\n        return sort([maximum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!=\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t\
    @test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqfpu8x3g.jl:1\nin expression starting at /tmp/tmpqfpu8x3g.jl:1\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb6od9c6z.jl:50\nin expression starting at\
    \ /tmp/tmpb6od9c6z.jl:50\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the last k elements\n    return sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr, rev=true)\n    end\n\
    \    if k > length(arr)\n        return sort(arr, rev=true)[1:k]\n    end\n  \
    \  if k < length(arr)\n        return sort(arr, rev=true)[1:k]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4,\
    \ 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmphckpr3u8.jl:41\n  Expression: candidate([-3,
    -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmphckpr3u8.jl:41 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmphckpr3u8.jl:40\ntest set: Error
    During Test at /tmp/tmphckpr3u8.jl:43\n  Test threw exception\n  Expression: candidate([-3,
    2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching maximum(::Vector{Int64})\n  You
    may have intended to import Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64},
    !Matched::Int64) at /tmp/tmphckpr3u8.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},
    k::Int64)\n     @ Main /tmp/tmphckpr3u8.jl:24\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphckpr3u8.jl:43 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphckpr3u8.jl:40\ntest set: Test Failed at /tmp/tmphckpr3u8.jl:44\n  Expression:
    candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123,
    20, 2] == [2, 20, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmphckpr3u8.jl:44 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmphckpr3u8.jl:40\ntest set: Test Failed
    at /tmp/tmphckpr3u8.jl:45\n  Expression: candidate([-123, 20, 0, 1, 2, -3], 4)
    == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/j'
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    # sort(arr, rev=true)[1:k]\n\
    \    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr,\
    \ rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n\
    \    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr,\
    \ rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n\
    \    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr,\
    \ rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n\
    \    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr,\
    \ rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n\
    \    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr,\
    \ rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n\
    \    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr,\
    \ rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n\
    \    # sort(arr, rev=true)[1:k]\n    # sort(arr, rev=true)[1:k]\n    #\nusing\
    \ Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5],\
    \ 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpifqyq66i.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpifqyq66i.jl:1\n\
    in expression starting at /tmp/tmpifqyq66i.jl:1\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == 0\n        return []\n    end\n    if k ==\
    \ n\n        return sort(arr)\n    end\n    # sort the first k elements\n    for\
    \ i = 1:k\n        for j = i:k\n            if arr[i] < arr[j]\n             \
    \   arr[i], arr[j] = arr[j], arr[i]\n            end\n        end\n    end\n \
    \   # compare the remaining elements with the largest element in the first k elements\n\
    \    for i = k+1:n\n        if arr[i] > arr[k]\n            arr[k] = arr[i]\n\
    \            for j = k-1:-1:1\n                if arr[j] < arr[j+1]\n        \
    \            arr[j], arr[j+1] = arr[j+1], arr[j]\n                end\n      \
    \      end\n        end\n    end\n    return arr[1:k]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpix8amz9z.jl:50

    '
  stdout: "test set: Test Failed at /tmp/tmpix8amz9z.jl:56\n  Expression: candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2,\
    \ 20, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpix8amz9z.jl:56 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpix8amz9z.jl:52\ntest set: Test\
    \ Failed at /tmp/tmpix8amz9z.jl:57\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpix8amz9z.jl:57 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpix8amz9z.jl:52\ntest set: Test\
    \ Failed at /tmp/tmpix8amz9z.jl:59\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) == [3, 5]\n   Evaluated: [5, 3] == [3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpix8amz9z.jl:59 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpix8amz9z.jl:52\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     3     11\n"
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr)\n    end\n    pivot\
    \ = arr[rand(1:length(arr))]\n    left = []\n    right = []\n    for i in 1:length(arr)\n\
    \        if arr[i] < pivot\n            push!(left, arr[i])\n        elseif arr[i]\
    \ > pivot\n            push!(right, arr[i])\n        end\n    end\n    if length(left)\
    \ >= k\n        return maximum(left, k)\n    elseif length(left) == k - 1\n  \
    \      return sort([pivot] .+ maximum(right, 1))\n    else\n        return sort(maximum(right,\
    \ k - length(left) - 1) .+ [pivot] .+ maximum(left, length(left)))\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpdqk2ht6_.jl:49

    '
  stdout: "test set: Error During Test at /tmp/tmpdqk2ht6_.jl:53\n  Test threw exception\n\
    \  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  MethodError: no method matching\
    \ maximum(::Vector{Any}, ::Int64)\n  You may have intended to import Base.maximum\n\
    \  Closest candidates are:\n    maximum(!Matched::Vector{Int64}, ::Int64) at /tmp/tmpdqk2ht6_.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpdqk2ht6_.jl:42\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdqk2ht6_.jl:53 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdqk2ht6_.jl:51\ntest set:\
    \ Error During Test at /tmp/tmpdqk2ht6_.jl:54\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching\
    \ maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n \
    \ Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpdqk2ht6_.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpdqk2ht6_.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdqk2ht6_.jl:54 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdqk2ht6_.jl:51\ntest set:\
    \ Error During Test at /tmp/tmpdqk2ht6_.jl:55\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  MethodError: no\
    \ method matching maximum(::Vector{Any}, ::Int64)\n  You may have intended to\
    \ import Base.maximum\n  Closest candidates are:\n    maximum(!Matched::Vector{Int64},\
    \ ::Int64) at /tmp/tmpdqk2ht6_.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmpdqk2ht6_.jl:40\n   [2] macro expansion\n    \
    \ @ /shared/cen"
  timestamp: 1659747133
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    # return the first k elements\n\
    \    sort(arr, rev=true)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1c93knmb.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp1c93knmb.jl:29\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:34\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed "
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Sort the array\n    sort!(arr)\n    # Return the last k elements\n \
    \   return arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    # return the first k elements\n\
    \    return sort(arr, rev=true)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw_gc8xyt.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpw_gc8xyt.jl:29\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_gc8xyt.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_gc8xyt.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpw_gc8xyt.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_gc8xyt.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_gc8xyt.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpw_gc8xyt.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_gc8xyt.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_gc8xyt.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpw_gc8xyt.jl:34\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw_gc8xyt.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw_gc8xyt.jl:28\ntest set: Test\
    \ Failed "
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])])])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!=\
    \ median(arr)])])])])])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr[arr .!=\
    \ median(arr[arr .!= median(arr)])])]), median(arr[\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljgic3i8.jl:1\nin expression starting at /tmp/tmpljgic3i8.jl:1\n"
  stdout: ''
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the last k elements\n    return sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == 0\n        return []\n    end\n    if k ==\
    \ 0\n        return []\n    end\n    if k >= n\n        return sort(arr, rev=true)\n\
    \    end\n    heap = MaxHeap(arr[1:k])\n    for i in k+1:n\n        if arr[i]\
    \ > heap.peek()\n            heap.pop()\n            heap.push(arr[i])\n     \
    \   end\n    end\n    return sort(heap.heap, rev=true)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp38enzoc4.jl:41

    '
  stdout: "test set: Test Failed at /tmp/tmp38enzoc4.jl:44\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp38enzoc4.jl:44 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp38enzoc4.jl:43\ntest set: Error\
    \ During Test at /tmp/tmp38enzoc4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: MaxHeap not defined\n \
    \ Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp38enzoc4.jl:30\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38enzoc4.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38enzoc4.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp38enzoc4.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: MaxHeap not\
    \ defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @\
    \ Main /tmp/tmp38enzoc4.jl:30\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp38enzoc4.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp38enzoc4.jl:43\ntest set:\
    \ Error During Test at /tmp/tmp38enzoc4.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ MaxHeap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n\
    \     @ Main /tmp/tmp38enzoc4.jl:30\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/std"
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    sorted_arr = sort(arr, rev=true)\n\
    \    # return the first k elements\n    return sorted_arr[1:k]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrfvp0j_.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpnrfvp0j_.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Sort the array in descending order\n    sort!(arr, rev=true)\n    #\
    \ Return the first k elements\n    return arr[1:k]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv1xibh4x.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpv1xibh4x.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1xibh4x.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1xibh4x.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpv1xibh4x.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1xibh4x.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1xibh4x.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpv1xibh4x.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1xibh4x.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1xibh4x.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpv1xibh4x.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1xibh4x.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1xibh4x.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747132
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Sort the array\n    sort!(arr)\n    # Return the last k elements\n \
    \   return arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747129
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the last k elements\n    return sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), arr[2]])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), arr[2], arr[3]])\n    end\n    if k == 5\n        return sort([maximum(arr),\
    \ minimum(arr), arr[2], arr[3], arr[4]])\n    end\n    if k == 6\n        return\
    \ sort([maximum(arr), minimum(arr), arr[2], arr[3], arr[4], arr[5]])\n    end\n\
    \    if k == 7\n        return sort([maximum(arr), minimum(arr), arr[2], arr[3],\
    \ arr[4], arr[5], arr[6]])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]])\n    end\n  \
    \  if k == 9\n        return sort([maximum(arr), minimum(arr), arr[2], arr[3],\
    \ arr[4], arr[5], arr[6], arr[7], arr[8]])\n    end\n    if k == 10\n        return\
    \ sort([maximum(arr), minimum(arr), arr[2], arr[3], arr[4], arr[5], arr[6], arr[7],\
    \ arr[8], arr[9]])\n    end\n    if k == 11\n        return sort([maximum(arr),\
    \ minimum(arr), arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9],\
    \ arr[10]])\n    end\n    if k == 12\n        return sort([maximum(arr), minimum(arr),\
    \ arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]])\n\
    \nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz03kccib.jl:1\nin expression starting at /tmp/tmpz03kccib.jl:1\n"
  stdout: ''
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Initialize an empty array to store the maximum k numbers\n    max_k\
    \ = Vector{Int64}()\n    # Iterate over the array\n    for i in 1:length(arr)\n\
    \        # If the length of the array is less than k, push the current element\
    \ into the array\n        if length(max_k) < k\n            push!(max_k, arr[i])\n\
    \        # If the length of the array is equal to k, check if the current element\
    \ is greater than the minimum element in the array\n        elseif length(max_k)\
    \ == k\n            # If the current element is greater than the minimum element\
    \ in the array, replace the minimum element with the current element\n       \
    \     if arr[i] > minimum(max_k)\n                max_k[findmin(max_k)[2]] = arr[i]\n\
    \            end\n        end\n    end\n    # Sort the array in descending order\n\
    \    sort!(max_k, rev=true)\n    # Return the array\n    return max_k\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5],\
    \ 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 7 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmprg4ur629.jl:42

    '
  stdout: "test set: Test Failed at /tmp/tmprg4ur629.jl:45\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprg4ur629.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprg4ur629.jl:44\ntest set: Test\
    \ Failed at /tmp/tmprg4ur629.jl:48\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprg4ur629.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprg4ur629.jl:44\ntest set: Test\
    \ Failed at /tmp/tmprg4ur629.jl:49\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprg4ur629.jl:49 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprg4ur629.jl:44\ntest set: Test\
    \ Failed at /tmp/tmprg4ur629.jl:50\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprg4ur629.jl:50 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprg4ur629.jl:44\ntest set: Test\
    \ Failed "
  timestamp: 1659747133
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == k\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyi32e3jj.jl:50\nin expression starting at\
    \ /tmp/tmpyi32e3jj.jl:50\n"
  stdout: ''
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr, rev=true)\n    end\n\
    \    if k > length(arr)\n        return arr\n    end\n    return sort(arr, rev=true)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 7 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpsttff9mg.jl:36

    '
  stdout: "test set: Test Failed at /tmp/tmpsttff9mg.jl:39\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsttff9mg.jl:39 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsttff9mg.jl:38\ntest set: Error\
    \ During Test at /tmp/tmpsttff9mg.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching\
    \ maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n \
    \ Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpsttff9mg.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpsttff9mg.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsttff9mg.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsttff9mg.jl:38\ntest set:\
    \ Test Failed at /tmp/tmpsttff9mg.jl:42\n  Expression: candidate([123, -123, 20,\
    \ 0, 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsttff9mg.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsttff9mg.jl:38\ntest set: Test\
    \ Failed at /tmp/tmpsttff9mg.jl:43\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n "
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)][arr[arr .!= median(arr)]\
    \ .!= median(arr[arr .!= median(arr)])])])\n    end\n    if k == 6\n        return\
    \ sort([maximum(arr), minimum(arr), median(arr), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)][arr[arr .!= median(arr)] .!= median(arr[arr\
    \ .!= median(arr)])]), median(arr[arr .!= median(arr)][arr[arr .!= median(arr)]\
    \ .!= median(arr[arr .!= median(arr)])][arr[arr .!= median(arr)][arr[arr .!= median(arr)]\
    \ .!= median(arr[arr .!= median(arr)])] .!= median(arr[arr .!= median(arr)][arr[arr\
    \ .!= median(arr)] .!= median(arr[arr .!= median(arr)])])])])\n    end\n    if\
    \ k == 7\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)][arr[arr .!= median(arr)]\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr)][arr[arr\
    \ .!= median(arr)]\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm8yvy5h0.jl:1\nin expression starting at /tmp/tmpm8yvy5h0.jl:1\n"
  stdout: ''
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    sorted_arr = sort(arr, rev=true)\n\
    \    return sorted_arr[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3lq8qbv_.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp3lq8qbv_.jl:29\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3lq8qbv_.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3lq8qbv_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3lq8qbv_.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3lq8qbv_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3lq8qbv_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3lq8qbv_.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3lq8qbv_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3lq8qbv_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp3lq8qbv_.jl:34\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3lq8qbv_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3lq8qbv_.jl:28\ntest set: Test\
    \ Failed "
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the last k elements\n    sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb6od9c6z.jl:50\nin expression starting at\
    \ /tmp/tmpb6od9c6z.jl:50\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # take the first k elements\n    # return the result\n\
    \    return sort(arr)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpvwmocjdi.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpvwmocjdi.jl:31\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvwmocjdi.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvwmocjdi.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpvwmocjdi.jl:32\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvwmocjdi.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvwmocjdi.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpvwmocjdi.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvwmocjdi.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvwmocjdi.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpvwmocjdi.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvwmocjdi.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvwmocjdi.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpvwmocjdi.jl:36\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747133
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == k\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ median(arr), minimum(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ median(arr), minimum(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), median(arr), minimum(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), median(arr), minimum(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), median(arr), minimum(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), median(arr), minimum(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), median(arr), minimum(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp34awb_k6.jl:50\nin expression starting at\
    \ /tmp/tmp34awb_k6.jl:50\n"
  stdout: ''
  timestamp: 1659747132
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])])])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!=\
    \ median(arr)])])])])])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr[arr .!=\
    \ median(arr[arr .!= median(arr)])])]), median(arr[\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljgic3i8.jl:1\nin expression starting at /tmp/tmpljgic3i8.jl:1\n"
  stdout: ''
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array and return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpc7vvjfi5.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpc7vvjfi5.jl:29\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7vvjfi5.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7vvjfi5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpc7vvjfi5.jl:30\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7vvjfi5.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7vvjfi5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpc7vvjfi5.jl:31\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7vvjfi5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7vvjfi5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpc7vvjfi5.jl:32\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7vvjfi5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7vvjfi5.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpc7vvjfi5.jl:34\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747133
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])])])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!=\
    \ median(arr)])])])])])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr[arr .!=\
    \ median(arr[arr .!= median(arr)])])]), median(arr[\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljgic3i8.jl:1\nin expression starting at /tmp/tmpljgic3i8.jl:1\n"
  stdout: ''
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Create a heap with the first k elements of arr\n    heap = Heap(arr[1:k])\n\
    \    # Iterate through the rest of the elements in arr\n    for i in k+1:length(arr)\n\
    \        # If the current element is greater than the root of the heap,\n    \
    \    # pop the root and push the current element\n        if arr[i] > heap.root\n\
    \            pop!(heap)\n            push!(heap, arr[i])\n        end\n    end\n\
    \    # Return the sorted heap\n    sort(heap)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmptmfnf0jc.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmptmfnf0jc.jl:39\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: Heap\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmptmfnf0jc.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptmfnf0jc.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptmfnf0jc.jl:38\ntest set:\
    \ Error During Test at /tmp/tmptmfnf0jc.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: Heap not defined\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmptmfnf0jc.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptmfnf0jc.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptmfnf0jc.jl:38\ntest set:\
    \ Error During Test at /tmp/tmptmfnf0jc.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: Heap not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmptmfnf0jc.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptmfnf0jc.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptmfnf0jc.jl:38\ntest set:\
    \ Error During Test at /tmp/tmptmfnf0jc.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ Heap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int6"
  timestamp: 1659747134
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr, rev=true)\n    end\n\
    \    if k > length(arr)\n        return sort(arr, rev=true)[1:k]\n    end\n  \
    \  if k < length(arr)\n        return sort(arr, rev=true)[1:k]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4,\
    \ 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmphckpr3u8.jl:41\n  Expression: candidate([-3,
    -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmphckpr3u8.jl:41 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmphckpr3u8.jl:40\ntest set: Error
    During Test at /tmp/tmphckpr3u8.jl:43\n  Test threw exception\n  Expression: candidate([-3,
    2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching maximum(::Vector{Int64})\n  You
    may have intended to import Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64},
    !Matched::Int64) at /tmp/tmphckpr3u8.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},
    k::Int64)\n     @ Main /tmp/tmphckpr3u8.jl:24\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmphckpr3u8.jl:43 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmphckpr3u8.jl:40\ntest set: Test Failed at /tmp/tmphckpr3u8.jl:44\n  Expression:
    candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123,
    20, 2] == [2, 20, 123]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmphckpr3u8.jl:44 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmphckpr3u8.jl:40\ntest set: Test Failed
    at /tmp/tmphckpr3u8.jl:45\n  Expression: candidate([-123, 20, 0, 1, 2, -3], 4)
    == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/j'
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr)\n    end\n    if k\
    \ > length(arr)\n        return sort(arr)\n    end\n    if k < length(arr)\n \
    \       return sort(arr)[end-k+1:end]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpzdhv8zvb.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmpzdhv8zvb.jl:43\n  Test threw exception\n\
    \  Expression: candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no\
    \ method matching maximum(::Vector{Int64})\n  You may have intended to import\
    \ Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64)\
    \ at /tmp/tmpzdhv8zvb.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmpzdhv8zvb.jl:24\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpzdhv8zvb.jl:43 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzdhv8zvb.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpzdhv8zvb.jl:48\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 5, -7], 1) == [5]\n  MethodError: no method matching maximum(::Vector{Int64})\n\
    \  You may have intended to import Base.maximum\n  Closest candidates are:\n \
    \   maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpzdhv8zvb.jl:19\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpzdhv8zvb.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzdhv8zvb.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzdhv8zvb.jl:40\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      2     11\n"
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[1:n-1])])\n    end\n    if k == 5\n  \
    \      return sort([maximum(arr), minimum(arr), median(arr), median(arr[1:n-1]),\
    \ median(arr[2:n])])\n    end\n    if k == 6\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[1:n-1]), median(arr[2:n]), median(arr[3:n-1])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[1:n-1]), median(arr[2:n]), median(arr[3:n-1]), median(arr[4:n-1])])\n\
    \    end\n    if k == 8\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[1:n-1]), median(arr[2:n]), median(arr[3:n-1]), median(arr[4:n-1]),\
    \ median(arr[5:n-1])])\n    end\n    if k == 9\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[1:n-1]), median(arr[2:n]), median(arr[3:n-1]),\
    \ median(arr[4:n-1]), median(arr[5:n-1]), median(arr[6:n-1])])\n    end\n    if\
    \ k == 10\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[1:n-1]),\
    \ median(arr[2:n]), median(arr[3:n-1]), median(arr[4:n-\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9xyqbwl3.jl:1\nin expression starting at /tmp/tmp9xyqbwl3.jl:1\n"
  stdout: ''
  timestamp: 1659747132
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    sorted_arr = sort(arr, rev=true)\n\
    \    # return the first k elements\n    return sorted_arr[1:k]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrfvp0j_.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpnrfvp0j_.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    sorted_arr = sort(arr, rev=true)\n\
    \    # return the first k elements\n    return sorted_arr[1:k]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrfvp0j_.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpnrfvp0j_.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == 0\n        return []\n    end\n    if k ==\
    \ 0\n        return []\n    end\n    if k == n\n        return sort(arr, rev=true)\n\
    \    end\n    if k > n\n        return sort(arr, rev=true)\n    end\n    if k\
    \ == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)], rev=true)\n    end\n    if k == 3\n     \
    \   return sort([maximum(arr), arr[2], minimum(arr)], rev=true)\n    end\n   \
    \ if k == 4\n        return sort([maximum(arr), arr[2], arr[3], minimum(arr)],\
    \ rev=true)\n    end\n    if k == 5\n        return sort([maximum(arr), arr[2],\
    \ arr[3], arr[4], minimum(arr)], rev=true)\n    end\n    if k == 6\n        return\
    \ sort([maximum(arr), arr[2], arr[3], arr[4], arr[5], minimum(arr)], rev=true)\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], minimum(arr)], rev=true)\n    end\n    if k == 8\n        return\
    \ sort([maximum(arr), arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], minimum(arr)],\
    \ rev=true)\n    end\n    if k == 9\n        return sort([maximum(arr), arr[2],\
    \ arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], minimum(arr)], rev=true)\n \
    \   end\n    if k == 10\n        return sort([maximum(arr), arr[2], arr[3], arr[4],\
    \ arr[5], arr[6], arr[7], arr[8], arr[9], minimum(arr)], rev=true)\n    end\n\
    \    if k == 11\n        return sort([maximum(arr), arr[2], arr[3], arr[4], arr[5],\
    \ arr[6\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp9w8cypr.jl:1\nin expression starting at /tmp/tmpp9w8cypr.jl:1\n"
  stdout: ''
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    sorted_arr = sort(arr, rev=true)\n\
    \    # return the first k elements\n    return sorted_arr[1:k]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrfvp0j_.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpnrfvp0j_.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), maximum(arr[arr .!= maximum(arr)])])\n    end\n    if k == 4\n\
    \        return sort([maximum(arr), minimum(arr), maximum(arr[arr .!= maximum(arr)]),\
    \ minimum(arr[arr .!= minimum(arr)])])\n    end\n    if k == 5\n        return\
    \ sort([maximum(arr), minimum(arr), maximum(arr[arr .!= maximum(arr)]), minimum(arr[arr\
    \ .!= minimum(arr)]), maximum(arr[arr .!= maximum(arr)][arr .!= minimum(arr)])])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), maximum(arr[arr\
    \ .!= maximum(arr)]), minimum(arr[arr .!= minimum(arr)]), maximum(arr[arr .!=\
    \ maximum(arr)][arr .!= minimum(arr)]), minimum(arr[arr .!= maximum(arr)][arr\
    \ .!= minimum(arr)])])\n    end\n    if k == 7\n        return sort([maximum(arr),\
    \ minimum(arr), maximum(arr[arr .!= maximum(arr)]), minimum(arr[arr .!= minimum(arr)]),\
    \ maximum(arr[arr .!= maximum(arr)][arr .!= minimum(arr)]), minimum(arr[arr .!=\
    \ maximum(arr)][arr .!= minimum(arr)]), maximum(arr[arr .!= maximum(arr)][arr\
    \ .!= minimum(arr)][arr .!= maximum(arr[arr .!= maximum(arr)][arr .!= minimum(arr)])])])\n\
    \    end\n    if k == 8\n        return sort([maximum(arr), minimum(arr), maximum(arr[arr\
    \ .!= maximum(arr)]), minimum(arr[arr .!= minimum(arr)]), maximum(arr[arr .!=\
    \ maximum(arr)\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0839hvo6.jl:1\nin expression starting at /tmp/tmp0839hvo6.jl:1\n"
  stdout: ''
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])])])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!=\
    \ median(arr)])])])])])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr[arr .!=\
    \ median(arr[arr .!= median(arr)])])]), median(arr[\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljgic3i8.jl:1\nin expression starting at /tmp/tmpljgic3i8.jl:1\n"
  stdout: ''
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Create a priority queue\n    pq = PriorityQueue()\n    # Push the first\
    \ k elements into the queue\n    for i in 1:k\n        push!(pq, arr[i])\n   \
    \ end\n    # Iterate through the rest of the array\n    for i in k+1:length(arr)\n\
    \        # If the current element is greater than the smallest element in the\
    \ queue\n        if arr[i] > peek(pq)\n            # Pop the smallest element\n\
    \            pop!(pq)\n            # Push the current element\n            push!(pq,\
    \ arr[i])\n        end\n    end\n    # Sort the queue\n    sort!(pq)\n    # Return\
    \ the queue as an array\n    return collect(pq)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmphsksp7_8.jl:43

    '
  stdout: "test set: Error During Test at /tmp/tmphsksp7_8.jl:46\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: PriorityQueue\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmphsksp7_8.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsksp7_8.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsksp7_8.jl:45\ntest set:\
    \ Error During Test at /tmp/tmphsksp7_8.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: PriorityQueue not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmphsksp7_8.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsksp7_8.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsksp7_8.jl:45\ntest set:\
    \ Error During Test at /tmp/tmphsksp7_8.jl:48\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: PriorityQueue\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmphsksp7_8.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmphsksp7_8.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphsksp7_8.jl:45\ntest set:\
    \ Error During Test at /tmp/tmphsksp7_8.jl:49\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ PriorityQueue not defined\n  Stacktrace:\n   [1]"
  timestamp: 1659747135
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the last k elements\n    sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Sort the array\n    # Return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzs4rbozo.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpzs4rbozo.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzs4rbozo.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzs4rbozo.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzs4rbozo.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzs4rbozo.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzs4rbozo.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzs4rbozo.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzs4rbozo.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzs4rbozo.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzs4rbozo.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzs4rbozo.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzs4rbozo.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzs4rbozo.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  heap = zeros(Int64, k)\n    for i in 1:k\n        heap[i] = arr[i]\n    end\n\
    \    build_max_heap!(heap)\n    for i in k+1:n\n        if arr[i] > heap[1]\n\
    \            heap[1] = arr[i]\n            max_heapify!(heap, 1)\n        end\n\
    \    end\n    return sort(heap)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0c35li5x.jl:39

    '
  stdout: "test set: Error During Test at /tmp/tmp0c35li5x.jl:43\n  Test threw exception\n\
    \  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: build_max_heap!\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmp0c35li5x.jl:28\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0c35li5x.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0c35li5x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0c35li5x.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: build_max_heap!\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmp0c35li5x.jl:28\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0c35li5x.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0c35li5x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0c35li5x.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ build_max_heap! not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmp0c35li5x.jl:28\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp0c35li5x.jl:45 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0c35li5x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0c35li5x.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20]\n  UndefVarError: build_max_heap!\
    \ not define"
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array and return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8qtcfu6o.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp8qtcfu6o.jl:29\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:30\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:31\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:32\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:34\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == 0\n        return []\n    end\n    if k ==\
    \ 0\n        return []\n    end\n    if k == n\n        return sort(arr, rev=true)\n\
    \    end\n    if k > n\n        return sort(arr, rev=true)\n    end\n    # k <\
    \ n\n    # 1. sort the array\n    # 2. return the first k elements\n    return\
    \ sort(arr, rev=true)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprxf5izjz.jl:40

    '
  stdout: "test set: Test Failed at /tmp/tmprxf5izjz.jl:43\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxf5izjz.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxf5izjz.jl:42\ntest set: Test\
    \ Failed at /tmp/tmprxf5izjz.jl:46\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxf5izjz.jl:46 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxf5izjz.jl:42\ntest set: Test\
    \ Failed at /tmp/tmprxf5izjz.jl:47\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxf5izjz.jl:47 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxf5izjz.jl:42\ntest set: Test\
    \ Failed at /tmp/tmprxf5izjz.jl:48\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprxf5izjz.jl:48 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprxf5izjz.jl:42\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    # sort(arr)\n\
    \    # return arr[1:k]\n    # sort(arr, rev=true)\n    # return arr[1:k]\n   \
    \ # sort(arr, by=x->-x)\n    # return arr[1:k]\n    # sort(arr, by=x->-x)[1:k]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\n    # sort(arr, by=x->-x)[end-k+1:end]\n\
    \    # sort(arr, by=x->-x)[end-k+1:end]\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnbje1ub0.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnbje1ub0.jl:1\n\
    in expression starting at /tmp/tmpnbje1ub0.jl:1\n"
  stdout: ''
  timestamp: 1659747133
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), arr[div(n, 2)]])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), arr[div(n, 2)], arr[div(n, 2) + 1]])\n    end\n    if k == 5\n\
    \        return sort([maximum(arr), minimum(arr), arr[div(n, 2)], arr[div(n, 2)\
    \ + 1], arr[div(n, 2) - 1]])\n    end\n    if k == 6\n        return sort([maximum(arr),\
    \ minimum(arr), arr[div(n, 2)], arr[div(n, 2) + 1], arr[div(n, 2) - 1], arr[div(n,\
    \ 2) + 2]])\n    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr),\
    \ arr[div(n, 2)], arr[div(n, 2) + 1], arr[div(n, 2) - 1], arr[div(n, 2) + 2],\
    \ arr[div(n, 2) - 2]])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), arr[div(n, 2)], arr[div(n, 2) + 1], arr[div(n, 2) - 1], arr[div(n,\
    \ 2) + 2], arr[div(n, 2) - 2], arr[div(n, 2) + 3]])\n    end\n    if k == 9\n\
    \        return sort([maximum(arr), minimum(arr), arr[div(n, 2)], arr[div(n, 2)\
    \ + 1], arr[div(n, 2) - 1], arr[div(n, 2) + 2], arr[div(n, 2) - 2], arr[div(n,\
    \ 2) + 3], arr[div(n, 2)\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp62fxl72k.jl:1\nin expression starting at /tmp/tmp62fxl72k.jl:1\n"
  stdout: ''
  timestamp: 1659747133
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the last k elements\n    sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Sort the array\n    # Return the last k elements\n    return sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb6od9c6z.jl:50\nin expression starting at\
    \ /tmp/tmpb6od9c6z.jl:50\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Create a heap\n    heap = Heap{Int64}()\n    # Push the first k elements\
    \ into the heap\n    for i in 1:k\n        push!(heap, arr[i])\n    end\n    #\
    \ Iterate over the rest of the array\n    for i in k+1:length(arr)\n        #\
    \ If the current element is larger than the smallest element in the heap\n   \
    \     if arr[i] > peek(heap)\n            # Pop the smallest element\n       \
    \     pop!(heap)\n            # Push the current element\n            push!(heap,\
    \ arr[i])\n        end\n    end\n    # Return the heap\n    return heap\nend\n\
    using Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4,\
    \ 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmpxw85abtp.jl:41

    '
  stdout: "test set: Error During Test at /tmp/tmpxw85abtp.jl:44\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: Heap\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmpxw85abtp.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxw85abtp.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxw85abtp.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpxw85abtp.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: Heap not defined\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpxw85abtp.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxw85abtp.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxw85abtp.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpxw85abtp.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: Heap not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpxw85abtp.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxw85abtp.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxw85abtp.jl:43\ntest set:\
    \ Error During Test at /tmp/tmpxw85abtp.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ Heap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int6"
  timestamp: 1659747135
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])])])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!=\
    \ median(arr)])])])])])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr[arr .!=\
    \ median(arr[arr .!= median(arr)])])]), median(arr[\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljgic3i8.jl:1\nin expression starting at /tmp/tmpljgic3i8.jl:1\n"
  stdout: ''
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr)\n    end\n    if k\
    \ > length(arr)\n        return []\n    end\n    return sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp2z7gb4mi.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmp2z7gb4mi.jl:41\n  Test threw exception\n\
    \  Expression: candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no\
    \ method matching maximum(::Vector{Int64})\n  You may have intended to import\
    \ Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64)\
    \ at /tmp/tmp2z7gb4mi.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmp2z7gb4mi.jl:24\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp2z7gb4mi.jl:41 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2z7gb4mi.jl:38\ntest set:\
    \ Error During Test at /tmp/tmp2z7gb4mi.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 5, -7], 1) == [5]\n  MethodError: no method matching maximum(::Vector{Int64})\n\
    \  You may have intended to import Base.maximum\n  Closest candidates are:\n \
    \   maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmp2z7gb4mi.jl:19\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp2z7gb4mi.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2z7gb4mi.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2z7gb4mi.jl:38\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      2     11\n"
  timestamp: 1659747135
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb6od9c6z.jl:50\nin expression starting at\
    \ /tmp/tmpb6od9c6z.jl:50\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb6od9c6z.jl:50\nin expression starting at\
    \ /tmp/tmpb6od9c6z.jl:50\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])])])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!=\
    \ median(arr)])])])])])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr[arr .!=\
    \ median(arr[arr .!= median(arr)])])]), median(arr[\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljgic3i8.jl:1\nin expression starting at /tmp/tmpljgic3i8.jl:1\n"
  stdout: ''
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    pivot = median(arr)\n    left = [x\
    \ for x in arr if x < pivot]\n    right = [x for x in arr if x > pivot]\n    if\
    \ k <= length(left)\n        return maximum(left, k)\n    elseif k > n - length(right)\n\
    \        return maximum(right, k - (n - length(right)))\n    else\n        return\
    \ [pivot]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpt_sojz6w.jl:46

    '
  stdout: "test set: Error During Test at /tmp/tmpt_sojz6w.jl:50\n  Test threw exception\n\
    \  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  MethodError: no method matching\
    \ maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n \
    \ Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpt_sojz6w.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpt_sojz6w.jl:28\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt_sojz6w.jl:50 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt_sojz6w.jl:48\ntest set:\
    \ Error During Test at /tmp/tmpt_sojz6w.jl:51\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching\
    \ maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n \
    \ Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpt_sojz6w.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpt_sojz6w.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt_sojz6w.jl:51 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt_sojz6w.jl:48\ntest set:\
    \ Error During Test at /tmp/tmpt_sojz6w.jl:52\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  MethodError: no\
    \ method matching maximum(::Vector{Int64})\n  You may have intended to import\
    \ Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64)\
    \ at /tmp/tmpt_sojz6w.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmpt_sojz6w.jl:31\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7"
  timestamp: 1659747136
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sort!(arr)\n    # return the last k elements\n \
    \   return arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ arr[1], arr[n]])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ arr[1], arr[n], minimum(arr)])\n    end\n    if k == 5\n        return sort([maximum(arr),\
    \ arr[1], arr[n], minimum(arr), arr[2]])\n    end\n    if k == 6\n        return\
    \ sort([maximum(arr), arr[1], arr[n], minimum(arr), arr[2], arr[n-1]])\n    end\n\
    \    if k == 7\n        return sort([maximum(arr), arr[1], arr[n], minimum(arr),\
    \ arr[2], arr[n-1], arr[3]])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ arr[1], arr[n], minimum(arr), arr[2], arr[n-1], arr[3], arr[n-2]])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), arr[1], arr[n], minimum(arr),\
    \ arr[2], arr[n-1], arr[3], arr[n-2], arr[4]])\n    end\n    if k == 10\n    \
    \    return sort([maximum(arr), arr[1], arr[n], minimum(arr), arr[2], arr[n-1],\
    \ arr[3], arr[n-2], arr[4], arr[n-3]])\n    end\n    if k == 11\n        return\
    \ sort([maximum(arr), arr[1], arr[n], minimum(arr), arr[2], arr[n-1], arr[3],\
    \ arr[n-2], arr[4], arr[n-3], arr[5]])\n    end\n    if k == 12\n        return\
    \ sort([maximum(arr), arr[1], arr[n], minimum(arr), arr[2], arr[n-1],\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtz22c10.jl:61\nin expression starting at\
    \ /tmp/tmpgtz22c10.jl:61\n"
  stdout: ''
  timestamp: 1659747133
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    sorted_arr = sort(arr, rev=true)\n\
    \    # return the first k elements\n    return sorted_arr[1:k]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrfvp0j_.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpnrfvp0j_.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr, rev=true)\n    end\n\
    \    pivot = arr[rand(1:length(arr))]\n    left = [x for x in arr if x > pivot]\n\
    \    right = [x for x in arr if x <= pivot]\n    if length(left) == k\n      \
    \  return sort(left, rev=true)\n    elseif length(left) > k\n        return maximum(left,\
    \ k)\n    else\n        return sort(left, rev=true) .* maximum(right, k - length(left))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Test Failed at /tmp/tmpwi5hg0ir.jl:45\n  Expression: candidate([-3,
    -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpwi5hg0ir.jl:45 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpwi5hg0ir.jl:44\ntest set: Error
    During Test at /tmp/tmpwi5hg0ir.jl:46\n  Test threw exception\n  Expression: candidate([4,
    -4, 4], 2) == [4, 4]\n  DimensionMismatch("arrays could not be broadcast to a
    common size; got a dimension with lengths 0 and 2")\n  Stacktrace:\n    [1] _bcs1\n      @
    ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3]
    broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @
    ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281
    [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7]
    maximum(arr::Vector{Int64}, k::Int64) (repeats 5 times)\n      @ Main /tmp/tmpwi5hg0ir.jl:37\n    [8]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [9] macro expansion\n      @ /tmp/tmpwi5hg0ir.jl:46 [inlined]\n   [10]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [11] top-level scope\n      @ /tmp/tmpwi5hg0ir.jl:44\ntest set:
    Error During Test at /tmp/tmpwi5hg0ir.jl:47\n  Test threw exception\n  Expression:
    candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching
    maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n  Closest
    candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpwi5hg0ir.jl:19\n  Stacktrace:\n   [1]
    maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpwi5hg0ir.jl:24\n   [2]
    macro expansion\n     @ /shared/centos7'
  timestamp: 1659747137
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ [maximum(arr), minimum(arr)]\n    end\n    if k == 3\n        return [maximum(arr),\
    \ median(arr), minimum(arr)]\n    end\n    if k == 4\n        return [maximum(arr),\
    \ maximum(arr[1:end-1]), minimum(arr[2:end]), minimum(arr)]\n    end\n    if k\
    \ == 5\n        return [maximum(arr), maximum(arr[1:end-1]), median(arr), minimum(arr[2:end]),\
    \ minimum(arr)]\n    end\n    if k == 6\n        return [maximum(arr), maximum(arr[1:end-1]),\
    \ maximum(arr[2:end-2]), minimum(arr[3:end]), minimum(arr[2:end]), minimum(arr)]\n\
    \    end\n    if k == 7\n        return [maximum(arr), maximum(arr[1:end-1]),\
    \ maximum(arr[2:end-2]), median(arr), minimum(arr[3:end]), minimum(arr[2:end]),\
    \ minimum(arr)]\n    end\n    if k == 8\n        return [maximum(arr), maximum(arr[1:end-1]),\
    \ maximum(arr[2:end-2]), maximum(arr[3:end-3]), minimum(arr[4:end]), minimum(arr[3:end]),\
    \ minimum(arr[2:end]), minimum(arr)]\n    end\n    if k == 9\n        return [maximum(arr),\
    \ maximum(arr[1:end-1]), maximum(arr[2:end-2]), maximum(arr[3:end-3]), median(arr),\
    \ minimum(arr[4:end]), minimum(arr[3:end]), minimum(arr[2:end]), minimum(arr)]\n\
    \    end\n    if k == 10\n        return [maximum(arr), maximum(arr[1:end-1]),\
    \ maximum(arr[2:end-2]), maximum(arr[3:end-3]), maximum(arr[4:end-4]), minimum(arr[5:end]),\
    \ minimum(arr[4:end]), minimum\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl01d_kxi.jl:53\nin expression starting at\
    \ /tmp/tmpl01d_kxi.jl:53\n"
  stdout: ''
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == 0\n        return []\n    end\n    if k ==\
    \ 0\n        return []\n    end\n    if k == n\n        return sort(arr, rev=true)\n\
    \    end\n    if k > n\n        return sort(arr, rev=true)\n    end\n    if k\
    \ == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)], rev=true)\n    end\n    if k == 3\n     \
    \   return sort([maximum(arr), minimum(arr), median(arr)], rev=true)\n    end\n\
    \    if k == 4\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[1:end-1])], rev=true)\n    end\n    if k == 5\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[1:end-1]), median(arr[2:end])], rev=true)\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[1:end-1]), median(arr[2:end]), median(arr[3:end])], rev=true)\n \
    \   end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[1:end-1]), median(arr[2:end]), median(arr[3:end]), median(arr[4:end])],\
    \ rev=true)\n    end\n    if k == 8\n        return sort([maximum(arr), minimum(arr),\
    \ median(arr), median(arr[1:end-1]), median(arr[2:end]), median(arr[3:end]), median(arr[4:end]),\
    \ median(arr[5:end])], rev=true)\n    end\n    if k == 9\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[1:end-1]), median(arr[2:end]), median(arr[3:end]),\
    \ median(arr[4:end]), median(arr[5:end]), median(arr[6:end])], rev=true)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5],\
    \ 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdm1i217r.jl:1\nin expression starting at /tmp/tmpdm1i217r.jl:1\n"
  stdout: ''
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    # return the first k elements\n\
    \    sort(arr, rev=true)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1c93knmb.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp1c93knmb.jl:29\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:34\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed "
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])])])\n\
    \    end\n    if k == 6\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!=\
    \ median(arr)])])])])])\n    end\n    if k == 8\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr[arr .!=\
    \ median(arr[arr .!= median(arr)])])]), median(arr[\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljgic3i8.jl:1\nin expression starting at /tmp/tmpljgic3i8.jl:1\n"
  stdout: ''
  timestamp: 1659747130
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == k\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    pivot = arr[rand(1:n)]\n\
    \    left = [x for x in arr if x < pivot]\n    right = [x for x in arr if x >\
    \ pivot]\n    if length(left) >= k\n        return maximum(left, k)\n    elseif\
    \ length(left) + 1 == k\n        return sort([pivot] + left)\n    else\n     \
    \   return sort([pivot] + maximum(right, k - length(left) - 1))\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4,\
    \ 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: Some tests did not pass: 5 passed, 1 failed, 5 errored,
    0 broken.\nin expression starting at /tmp/tmp6h988d6u.jl:40\n'''
  stdout: 'b''test set: Error During Test at /tmp/tmp6h988d6u.jl:44\n  Test threw
    exception\n  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  MethodError: no
    method matching maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n  Closest
    candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmp6h988d6u.jl:19\n  Stacktrace:\n   [1]
    maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp6h988d6u.jl:25\n   [2]
    maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp6h988d6u.jl:35\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6h988d6u.jl:44 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6h988d6u.jl:42\ntest set: Error
    During Test at /tmp/tmp6h988d6u.jl:45\n  Test threw exception\n  Expression: candidate([-3,
    2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching maximum(::Vector{Int64})\n  You
    may have intended to import Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64},
    !Matched::Int64) at /tmp/tmp6h988d6u.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},
    k::Int64)\n     @ Main /tmp/tmp6h988d6u.jl:25\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp6h988d6u.jl:45 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp6h988d6u.jl:42\ntest set: Error During Test at
    /tmp/tmp6h988d6u.jl:46\n  Test threw exception\n  Expression: candidate([123,
    -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  DimensionMismatch("dimensions must
    match: a has dims (Base.OneTo(1),), b has dims (Base.OneTo(2),), mismatch at 1")\n  Stacktrace:\n   [1]
    promote_shape\n     @ ./indices.jl:178 [inlined]\n   [2] promote_shape\n     @
    ./indices.'
  timestamp: 1659747137
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == k\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ [maximum(arr), minimum(arr)]\n    end\n    if k == 3\n        return [maximum(arr),\
    \ minimum(arr), median(arr)]\n    end\n    if k == 4\n        return [maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])]\n    end\n    if\
    \ k == 5\n        return [maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])])]\n\
    \    end\n    if k == 6\n        return [maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])])]\n\
    \    end\n    if k == 7\n        return [maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr[arr .!= median(arr)])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr)])])]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr[arr .!= median(arr[arr .!=\
    \ median(arr)])])])])]\n    end\n    if k == 8\n        return [maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr[arr .!= median(arr)])]), median(arr[arr .!= median(arr[arr .!=\
    \ median(arr[arr .!= median(arr)])])]), median(arr[arr .!= median(arr[arr\nusing\
    \ Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5],\
    \ 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo7d0b_lb.jl:1\nin expression starting at /tmp/tmpo7d0b_lb.jl:1\n"
  stdout: ''
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpb3pcjnla.jl:42

    '
  stdout: "test set: Error During Test at /tmp/tmpb3pcjnla.jl:46\n  Test threw exception\n\
    \  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  MethodError: no method matching\
    \ maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n \
    \ Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpb3pcjnla.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpb3pcjnla.jl:28\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb3pcjnla.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb3pcjnla.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpb3pcjnla.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching\
    \ maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n \
    \ Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpb3pcjnla.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpb3pcjnla.jl:25\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb3pcjnla.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb3pcjnla.jl:44\ntest set:\
    \ Error During Test at /tmp/tmpb3pcjnla.jl:48\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  MethodError: no\
    \ method matching maximum(::Vector{Int64})\n  You may have intended to import\
    \ Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64)\
    \ at /tmp/tmpb3pcjnla.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmpb3pcjnla.jl:31\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7"
  timestamp: 1659747137
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == k\n        return sort(arr, rev=true)\n \
    \   end\n    if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n\
    \        return sort(arr, rev=true)[1:2]\n    end\n    if k == 3\n        return\
    \ sort(arr, rev=true)[1:3]\n    end\n    if k == 4\n        return sort(arr, rev=true)[1:4]\n\
    \    end\n    if k == 5\n        return sort(arr, rev=true)[1:5]\n    end\n  \
    \  if k == 6\n        return sort(arr, rev=true)[1:6]\n    end\n    if k == 7\n\
    \        return sort(arr, rev=true)[1:7]\n    end\n    if k == 8\n        return\
    \ sort(arr, rev=true)[1:8]\n    end\n    if k == 9\n        return sort(arr, rev=true)[1:9]\n\
    \    end\n    if k == 10\n        return sort(arr, rev=true)[1:10]\n    end\n\
    \    if k == 11\n        return sort(arr, rev=true)[1:11]\n    end\n    if k ==\
    \ 12\n        return sort(arr, rev=true)[1:12]\n    end\n    if k == 13\n    \
    \    return sort(arr, rev=true)[1:13]\n    end\n    if k == 14\n        return\
    \ sort(arr, rev=true)[1:14]\n    end\n    if k == 15\n        return sort(arr,\
    \ rev=true)[1:15]\n    end\n    if k == 16\n        return sort(arr, rev=true)[1:16]\n\
    \    end\n    if k == 17\n        return sort(arr, rev=true)[1:17]\n    end\n\
    \    if k == 18\n        return sort(arr, rev=true)[1:18]\n    end\n    if k ==\
    \ 19\n        return sort(arr, rev=true)[1:19]\n    end\n    if k == 20\n    \
    \    return sort(arr, rev=true)[1:20]\n    end\n    if k == 21\n        return\
    \ sort(\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc5gw8mln.jl:88\nin expression starting at\
    \ /tmp/tmpc5gw8mln.jl:88\n"
  stdout: ''
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Create a heap\n    heap = Heap()\n    # Push the first k elements into\
    \ the heap\n    for i in 1:k\n        push!(heap, arr[i])\n    end\n    # Iterate\
    \ through the rest of the array\n    for i in k+1:length(arr)\n        # If the\
    \ current element is greater than the smallest element in the heap\n        if\
    \ arr[i] > heap[1]\n            # Pop the smallest element from the heap\n   \
    \         pop!(heap)\n            # Push the current element into the heap\n \
    \           push!(heap, arr[i])\n        end\n    end\n    # Sort the heap\n \
    \   sort!(heap)\n    # Return the heap\n    return heap\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 11 errored,
    0 broken.

    in expression starting at /tmp/tmp9dh22qck.jl:43

    '
  stdout: "test set: Error During Test at /tmp/tmp9dh22qck.jl:46\n  Test threw exception\n\
    \  Expression: candidate([-3, -4, 5], 3) == [-4, -3, 5]\n  UndefVarError: Heap\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmp9dh22qck.jl:21\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9dh22qck.jl:46 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9dh22qck.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp9dh22qck.jl:47\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: Heap not defined\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp9dh22qck.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9dh22qck.jl:47 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9dh22qck.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp9dh22qck.jl:48\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: Heap not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp9dh22qck.jl:21\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9dh22qck.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9dh22qck.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp9dh22qck.jl:49\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ Heap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int6"
  timestamp: 1659747136
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k >= n\n        return sort(arr, rev=true)\n \
    \   end\n    heap = Heap(arr[1:k], lt=isless)\n    for i in k+1:n\n        if\
    \ arr[i] > heap.top()\n            heap.pop()\n            heap.push(arr[i])\n\
    \        end\n    end\n    return sort(heap.data, rev=true)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp89byed55.jl:35

    '
  stdout: "test set: Test Failed at /tmp/tmp89byed55.jl:38\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp89byed55.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp89byed55.jl:37\ntest set: Error\
    \ During Test at /tmp/tmp89byed55.jl:39\n  Test threw exception\n  Expression:\
    \ candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: Heap not defined\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp89byed55.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp89byed55.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp89byed55.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp89byed55.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: Heap not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp89byed55.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp89byed55.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp89byed55.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp89byed55.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ Heap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n\
    \     @ Main /tmp/tmp89byed55.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/"
  timestamp: 1659747137
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == 0\n        return []\n    end\n    if k ==\
    \ n\n        return sort(arr)\n    end\n    if k > n\n        return arr\n   \
    \ end\n    # k < n\n    # 1. sort the array\n    # 2. return the last k elements\n\
    \    return sort(arr)[n-k+1:n]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747134
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == 0\n        return []\n    end\n    if k ==\
    \ 0\n        return []\n    end\n    if k == n\n        return sort(arr)\n   \
    \ end\n    if k > n\n        return sort(arr)\n    end\n    if k == 1\n      \
    \  return [maximum(arr)]\n    end\n    if k == 2\n        return sort([maximum(arr),\
    \ minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr), median(arr),\
    \ minimum(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), minimum(arr)])\n    end\n    if k == 5\n \
    \       return sort([maximum(arr), median(arr), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr[arr .!= median(arr)])]), minimum(arr)])\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpeabxah94.jl:51

    '
  stdout: "test set: Error During Test at /tmp/tmpeabxah94.jl:55\n  Test threw exception\n\
    \  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  MethodError: no method matching\
    \ maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n \
    \ Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpeabxah94.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpeabxah94.jl:37\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeabxah94.jl:55 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeabxah94.jl:53\ntest set:\
    \ Error During Test at /tmp/tmpeabxah94.jl:56\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching\
    \ maximum(::Vector{Int64})\n  You may have intended to import Base.maximum\n \
    \ Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmpeabxah94.jl:19\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmpeabxah94.jl:34\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeabxah94.jl:56 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeabxah94.jl:53\ntest set:\
    \ Error During Test at /tmp/tmpeabxah94.jl:57\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  MethodError: no\
    \ method matching maximum(::Vector{Int64})\n  You may have intended to import\
    \ Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64)\
    \ at /tmp/tmpeabxah94.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmpeabxah94.jl:40\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7"
  timestamp: 1659747137
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == 0\n        return []\n    end\n    if k ==\
    \ 0\n        return []\n    end\n    if k == n\n        return sort(arr, rev=true)\n\
    \    end\n    if k > n\n        return []\n    end\n    if k == 1\n        return\
    \ [maximum(arr)]\n    end\n    if k == 2\n        return sort([maximum(arr), minimum(arr)],\
    \ rev=true)\n    end\n    if k == 3\n        return sort([maximum(arr), minimum(arr),\
    \ arr[div(n, 2)]], rev=true)\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), arr[div(n, 2)], arr[div(n, 2) + 1]], rev=true)\n    end\n    if\
    \ k == 5\n        return sort([maximum(arr), minimum(arr), arr[div(n, 2)], arr[div(n,\
    \ 2) + 1], arr[div(n, 2) - 1]], rev=true)\n    end\n    if k == 6\n        return\
    \ sort([maximum(arr), minimum(arr), arr[div(n, 2)], arr[div(n, 2) + 1], arr[div(n,\
    \ 2) - 1], arr[div(n, 2) + 2]], rev=true)\n    end\n    if k == 7\n        return\
    \ sort([maximum(arr), minimum(arr), arr[div(n, 2)], arr[div(n, 2) + 1], arr[div(n,\
    \ 2) - 1], arr[div(n, 2) + 2], arr[div(n, 2) - 2]], rev=true)\n    end\n    if\
    \ k == 8\n        return sort([maximum(arr), minimum(arr), arr[div(n, 2)], arr[div(n,\
    \ 2) + 1], arr[div(n, 2) - 1], arr[div(n, 2) + 2], arr[div(n, 2) - 2], arr[div(n,\
    \ 2) + 3]], rev=true)\n    end\n    if k == 9\n        return sort([maximum(arr),\
    \ minimum(arr), arr[\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t\
    @test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqj8fbguf.jl:1\nin expression starting at /tmp/tmpqj8fbguf.jl:1\n"
  stdout: ''
  timestamp: 1659747135
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    # return the first k elements\n\
    \    sort(arr, rev=true)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1c93knmb.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp1c93knmb.jl:29\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:34\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed "
  timestamp: 1659747131
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr.!=median(arr)])])\n    end\n    if\
    \ k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr.!=median(arr)]),\
    \ median(arr[arr.!=median(arr)])])\n    end\n    if k == 6\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr.!=median(arr)]), median(arr[arr.!=median(arr)]),\
    \ median(arr[arr.!=median(arr)])])\n    end\n    if k == 7\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr.!=median(arr)]), median(arr[arr.!=median(arr)]),\
    \ median(arr[arr.!=median(arr)]), median(arr[arr.!=median(arr)])])\n    end\n\
    \    if k == 8\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr.!=median(arr)]), median(arr[arr.!=median(arr)]), median(arr[arr.!=median(arr)]),\
    \ median(arr[arr.!=median(arr)]), median(arr[arr.!=median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr.!=median(arr)]), median(arr[arr.!=median(arr)]), median(arr[arr.!=median(arr)]),\
    \ median(arr[arr.!=median(\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6e3g5rqu.jl:52\nin expression starting at\
    \ /tmp/tmp6e3g5rqu.jl:52\n"
  stdout: ''
  timestamp: 1659747135
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr, rev=true)\n    end\n\
    \    pivot = arr[rand(1:length(arr))]\n    left = [x for x in arr if x > pivot]\n\
    \    right = [x for x in arr if x <= pivot]\n    if length(left) >= k\n      \
    \  return maximum(left, k)\n    else\n        return maximum(left, length(left))\
    \ .* maximum(right, k - length(left))\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmpl8bgyeuz.jl:43\n  Expression: candidate([-3,
    -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmpl8bgyeuz.jl:43 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmpl8bgyeuz.jl:42\ntest set: Error
    During Test at /tmp/tmpl8bgyeuz.jl:44\n  Test threw exception\n  Expression: candidate([4,
    -4, 4], 2) == [4, 4]\n  DimensionMismatch("arrays could not be broadcast to a
    common size; got a dimension with lengths 0 and 2")\n  Stacktrace:\n    [1] _bcs1\n      @
    ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3]
    broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @
    ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281
    [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7]
    maximum(arr::Vector{Int64}, k::Int64) (repeats 4 times)\n      @ Main /tmp/tmpl8bgyeuz.jl:35\n    [8]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n    [9] macro expansion\n      @ /tmp/tmpl8bgyeuz.jl:44 [inlined]\n   [10]
    macro expansion\n      @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [11] top-level scope\n      @ /tmp/tmpl8bgyeuz.jl:42\n'''
  timestamp: 1659747132
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == 0\n        return []\n    end\n    if k ==\
    \ 0\n        return []\n    end\n    if k == n\n        return sort(arr)\n   \
    \ end\n    if k > n\n        return sort(arr, rev=true)\n    end\n    # k < n\n\
    \    # k > 0\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n    # k < n\n\
    \    # k\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxkx7xh4s.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxkx7xh4s.jl:1\n\
    in expression starting at /tmp/tmpxkx7xh4s.jl:1\n"
  stdout: ''
  timestamp: 1659747135
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  heap = Vector{Int64}(undef, k)\n    for i in 1:k\n        heap[i] = arr[i]\n\
    \    end\n    build_max_heap(heap)\n    for i in k+1:n\n        if arr[i] > heap[1]\n\
    \            heap[1] = arr[i]\n            max_heapify(heap, 1)\n        end\n\
    \    end\n    return heap\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpr6_0vc8m.jl:39

    '
  stdout: "test set: Error During Test at /tmp/tmpr6_0vc8m.jl:43\n  Test threw exception\n\
    \  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: build_max_heap\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmpr6_0vc8m.jl:28\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6_0vc8m.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6_0vc8m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpr6_0vc8m.jl:44\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: build_max_heap\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n \
    \    @ Main /tmp/tmpr6_0vc8m.jl:28\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr6_0vc8m.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6_0vc8m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpr6_0vc8m.jl:45\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ build_max_heap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmpr6_0vc8m.jl:28\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmpr6_0vc8m.jl:45 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr6_0vc8m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpr6_0vc8m.jl:46\n  Test threw exception\n  Expression:\
    \ candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20]\n  UndefVarError: build_max_heap\
    \ not defined\n  "
  timestamp: 1659747137
- exit_code: -1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr, rev=true)\n    end\n\
    \    pivot = arr[1]\n    left = [x for x in arr if x < pivot]\n    right = [x\
    \ for x in arr if x > pivot]\n    if length(left) >= k\n        return maximum(left,\
    \ k)\n    elseif length(left) + 1 == k\n        return sort(left, rev=true)\n\
    \    else\n        return sort(left, rev=true) * maximum(right, k - length(left)\
    \ - 1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t\
    @test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Test Failed at /tmp/tmp6is207dq.jl:45\n  Expression: candidate([-3,
    -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n
    [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp6is207dq.jl:45 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp6is207dq.jl:44\ntest set: Test Failed
    at /tmp/tmp6is207dq.jl:46\n  Expression: candidate([4, -4, 4], 2) == [4, 4]\n   Evaluated:
    [-4] == [4, 4]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n [2] macro expansion\n   @ /tmp/tmp6is207dq.jl:46 [inlined]\n [3] macro
    expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n [4] top-level scope\n   @ /tmp/tmp6is207dq.jl:44\ntest set: Error
    During Test at /tmp/tmp6is207dq.jl:47\n  Test threw exception\n  Expression: candidate([-3,
    2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no method matching maximum(::Vector{Int64})\n  You
    may have intended to import Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64},
    !Matched::Int64) at /tmp/tmp6is207dq.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},
    k::Int64)\n     @ Main /tmp/tmp6is207dq.jl:24\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmp6is207dq.jl:47 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmp6is207dq.jl:44\ntest set: Error During Test at
    /tmp/tmp6is207dq.jl:48\n  Test threw exception\n  Expression: candidate([123,
    -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  MethodError: no method matching
    *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any,
    !Matche'
  timestamp: 1659747139
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr)\n    end\n    if k\
    \ > length(arr)\n        return []\n    end\n    if k < length(arr)\n        return\
    \ sort(arr)[end-k+1:end]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp02exdbem.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmp02exdbem.jl:43\n  Test threw exception\n\
    \  Expression: candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  MethodError: no\
    \ method matching maximum(::Vector{Int64})\n  You may have intended to import\
    \ Base.maximum\n  Closest candidates are:\n    maximum(::Vector{Int64}, !Matched::Int64)\
    \ at /tmp/tmp02exdbem.jl:19\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64},\
    \ k::Int64)\n     @ Main /tmp/tmp02exdbem.jl:24\n   [2] macro expansion\n    \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [3] macro expansion\n     @ /tmp/tmp02exdbem.jl:43 [inlined]\n   [4] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp02exdbem.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp02exdbem.jl:48\n  Test threw exception\n  Expression:\
    \ candidate([1, 0, 5, -7], 1) == [5]\n  MethodError: no method matching maximum(::Vector{Int64})\n\
    \  You may have intended to import Base.maximum\n  Closest candidates are:\n \
    \   maximum(::Vector{Int64}, !Matched::Int64) at /tmp/tmp02exdbem.jl:19\n  Stacktrace:\n\
    \   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp02exdbem.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp02exdbem.jl:48 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp02exdbem.jl:40\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      2     11\n"
  timestamp: 1659747137
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr, rev=true)\n    # return the\
    \ first k elements\n    return sorted_arr[1:k]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7_ea1l_0.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp7_ea1l_0.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_ea1l_0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_ea1l_0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp7_ea1l_0.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_ea1l_0.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_ea1l_0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp7_ea1l_0.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_ea1l_0.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_ea1l_0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp7_ea1l_0.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_ea1l_0.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_ea1l_0.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747136
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    # return the first k elements\n\
    \    sort(arr, rev=true)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1c93knmb.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp1c93knmb.jl:29\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1c93knmb.jl:34\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1c93knmb.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1c93knmb.jl:28\ntest set: Test\
    \ Failed "
  timestamp: 1659747131
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    sorted_arr = sort(arr)\n    # return the last k\
    \ elements\n    return sorted_arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t\
    @test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2,\
    \ 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\
    \t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\
    \t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Sort the array in descending order\n    # Return the first k elements\n\
    \    sort(arr, rev=true)[1:k]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcwv29rxl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpcwv29rxl.jl:29\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcwv29rxl.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcwv29rxl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpcwv29rxl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcwv29rxl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcwv29rxl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpcwv29rxl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcwv29rxl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcwv29rxl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpcwv29rxl.jl:34\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcwv29rxl.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcwv29rxl.jl:28\ntest set: Test\
    \ Failed "
  timestamp: 1659747137
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    if k == 0\n        return []\n    end\n    if k == 1\n        return [maximum(arr)]\n\
    \    end\n    if k == length(arr)\n        return sort(arr, rev=true)\n    end\n\
    \    # k < length(arr)\n    # k > 1\n    # k > 0\n    # k < length(arr)\n    #\
    \ k > 1\n    # k > 0\n    # k < length(arr)\n    # k > 1\n    # k > 0\n    # k\
    \ < length(arr)\n    # k > 1\n    # k > 0\n    # k < length(arr)\n    # k > 1\n\
    \    # k > 0\n    # k < length(arr)\n    # k > 1\n    # k > 0\n    # k < length(arr)\n\
    \    # k > 1\n    # k > 0\n    # k < length(arr)\n    # k > 1\n    # k > 0\n \
    \   # k < length(arr)\n    # k > 1\n    # k > 0\n    # k < length(arr)\n    #\
    \ k > 1\n    # k > 0\n    # k < length(arr)\n    # k > 1\n    # k > 0\n    # k\
    \ < length(arr)\n    # k > 1\n    # k > 0\n    # k < length(arr)\n    # k > 1\n\
    \    # k > 0\n    # k < length(arr)\n    # k > 1\n    # k > 0\n    # k < length(arr)\n\
    \    # k > 1\n    # k > 0\n    # k < length(arr)\n    # k > 1\n    # k > 0\n \
    \   # k < length(arr)\n    # k > 1\n    # k > 0\n    # k < length(arr)\n    #\
    \ k > 1\n    # k > 0\n    # k < length(arr)\n    # k > 1\n    # k > 0\n    # k\
    \ < length(arr)\n    # k > 1\n    # k > 0\n    # k < length(arr)\n    # k > 1\n\
    \    # k > 0\n    # k < length(arr)\n    # k > 1\n    #\nusing Test\n\n@testset\
    \ begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3,\
    \ 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2,\
    \ 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2, -3],\
    \ 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1,\
    \ 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0, 0,\
    \ 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp81dtu8zk.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp81dtu8zk.jl:1\n\
    in expression starting at /tmp/tmp81dtu8zk.jl:1\n"
  stdout: ''
  timestamp: 1659747136
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array in descending order\n    sorted_arr = sort(arr, rev=true)\n\
    \    # return the first k elements\n    return sorted_arr[1:k]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3, -4, 5], 3) ==\
    \ [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t@test(candidate([-3,\
    \ 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123, -123, 20, 0, 1, 2,\
    \ -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0, 1, 2, -3], 4) == [0,\
    \ 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0], 7) == [-13, -8, 0,\
    \ 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2) == [3, 5])\n\t@test(candidate([1,\
    \ 0, 5, -7], 1) == [5])\n\t@test(candidate([4, -4], 2) == [-4, 4])\n\t@test(candidate([-10,\
    \ 10], 2) == [-10, 10])\n\t@test(candidate([1, 2, 3, -23, 243, -400, 0], 0) ==\
    \ Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 7 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpnrfvp0j_.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpnrfvp0j_.jl:30\n  Expression: candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5]\n   Evaluated: [5, -3, -4] == [-4, -3, 5]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:33\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [123, 20, 2] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:34\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [20, 2, 1, 0] == [0, 1, 2, 20]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnrfvp0j_.jl:35\n  Expression: candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15]\n   Evaluated: [15, 5, 3, 0, 0, -8,\
    \ -13] == [-13, -8, 0, 0, 3, 5, 15]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpnrfvp0j_.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpnrfvp0j_.jl:29\ntest set: Test\
    \ Failed "
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  if k == 1\n        return [maximum(arr)]\n    end\n    if k == 2\n        return\
    \ sort([maximum(arr), minimum(arr)])\n    end\n    if k == 3\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr)])\n    end\n    if k == 4\n        return sort([maximum(arr),\
    \ minimum(arr), median(arr), median(arr[arr .!= median(arr)])])\n    end\n   \
    \ if k == 5\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 6\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n\
    \    end\n    if k == 7\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n    if k ==\
    \ 8\n        return sort([maximum(arr), minimum(arr), median(arr), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)])])\n    end\n\
    \    if k == 9\n        return sort([maximum(arr), minimum(arr), median(arr),\
    \ median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr\
    \ .!= median(arr)]), median(arr[arr .!= median(arr)]), median(arr[arr .!= median(arr)]),\
    \ median(arr\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb6od9c6z.jl:50\nin expression starting at\
    \ /tmp/tmpb6od9c6z.jl:50\n"
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array and return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp8qtcfu6o.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmp8qtcfu6o.jl:29\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:30\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:31\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:32\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qtcfu6o.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qtcfu6o.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp8qtcfu6o.jl:34\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if k == n\n        return sort(arr)\n    end\n  \
    \  heap = Heap(arr[1:k])\n    for i in k+1:n\n        if arr[i] > heap.top()\n\
    \            heap.pop()\n            heap.push(arr[i])\n        end\n    end\n\
    \    return sort(heap.heap)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp8fyvq599.jl:35

    '
  stdout: "test set: Error During Test at /tmp/tmp8fyvq599.jl:39\n  Test threw exception\n\
    \  Expression: candidate([4, -4, 4], 2) == [4, 4]\n  UndefVarError: Heap not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp8fyvq599.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8fyvq599.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8fyvq599.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp8fyvq599.jl:40\n  Test threw exception\n  Expression:\
    \ candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2]\n  UndefVarError: Heap not defined\n\
    \  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n     @ Main /tmp/tmp8fyvq599.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8fyvq599.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8fyvq599.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp8fyvq599.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123]\n  UndefVarError:\
    \ Heap not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{Int64}, k::Int64)\n\
    \     @ Main /tmp/tmp8fyvq599.jl:24\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8fyvq599.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8fyvq599.jl:37\ntest set:\
    \ Error During Test at /tmp/tmp8fyvq599.jl:42\n  Test threw exception\n  Expression:\
    \ candidate([-123, 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20]\n  UndefVarError: Heap\
    \ not defined\n  Stacktrace:\n   [1] maximum(arr::Vector{I"
  timestamp: 1659747137
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # Sort the array\n    sort!(arr)\n    # Return the last k elements\n \
    \   return arr[end-k+1:end]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ maximum;\n\t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4,\
    \ -4, 4], 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\
    \t@test(candidate([123, -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123,\
    \ 20, 0, 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13,\
    \ -8, 0], 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3,\
    \ -10], 2) == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    n = length(arr)\n    if n == k\n        return sort(arr)\n    end\n  \
    \  @assert k <= n\n    @assert k > 0\n    # @assert k > 0\n    # @assert k <=\
    \ n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert\
    \ k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <=\
    \ n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert\
    \ k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <=\
    \ n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert\
    \ k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <=\
    \ n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert\
    \ k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <=\
    \ n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert\
    \ k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <=\
    \ n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert\
    \ k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <=\
    \ n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert\
    \ k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <=\
    \ n\n    # @assert k > 0 && k <= n\n    # @assert k > 0 && k <= n\n    # @assert\
    \ k > 0 && k <= n\n   \nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\
    \t@test(candidate([-3, -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4],\
    \ 2) == [4, 4])\n\t@test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdxpmkxo9.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdxpmkxo9.jl:1\n\
    in expression starting at /tmp/tmpdxpmkxo9.jl:1\n"
  stdout: ''
  timestamp: 1659747136
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    return sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpanh7ubdl.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpanh7ubdl.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpanh7ubdl.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpanh7ubdl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpanh7ubdl.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130
- exit_code: 0
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the last k elements\n    return sort(arr)[end-k+1:end]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   11     11

    '
  stdout: ''
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example\
    \ 1:\n\n    \n    Example 2:\n\n    \n    Example 3:\n\n    \n    Note:\n    \
    \    1. The length of the array will be in the range of [1, 1000].\n        2.\
    \ The elements in the array will be in the range of [-1000, 1000].\n        3.\
    \ 0 <= k <= len(arr)\n    \"\"\"\nfunction maximum(arr::Vector{Int64}, k::Int64)::Vector{Int64}\
    \ \n    # sort the array\n    # return the first k elements\n    sort(arr)[1:k]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = maximum;\n\t@test(candidate([-3,\
    \ -4, 5], 3) == [-4, -3, 5])\n\t@test(candidate([4, -4, 4], 2) == [4, 4])\n\t\
    @test(candidate([-3, 2, 1, 2, -1, -2, 1], 1) == [2])\n\t@test(candidate([123,\
    \ -123, 20, 0, 1, 2, -3], 3) == [2, 20, 123])\n\t@test(candidate([-123, 20, 0,\
    \ 1, 2, -3], 4) == [0, 1, 2, 20])\n\t@test(candidate([5, 15, 0, 3, -13, -8, 0],\
    \ 7) == [-13, -8, 0, 0, 3, 5, 15])\n\t@test(candidate([-1, 0, 2, 5, 3, -10], 2)\
    \ == [3, 5])\n\t@test(candidate([1, 0, 5, -7], 1) == [5])\n\t@test(candidate([4,\
    \ -4], 2) == [-4, 4])\n\t@test(candidate([-10, 10], 2) == [-10, 10])\n\t@test(candidate([1,\
    \ 2, 3, -23, 243, -400, 0], 0) == Vector{Int64}([]))\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpztzz9y63.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmpztzz9y63.jl:30\n  Expression: candidate([4,\
    \ -4, 4], 2) == [4, 4]\n   Evaluated: [-4, 4] == [4, 4]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:31\n  Expression: candidate([-3, 2, 1, 2, -1,\
    \ -2, 1], 1) == [2]\n   Evaluated: [-3] == [2]\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:32\n  Expression: candidate([123, -123, 20, 0,\
    \ 1, 2, -3], 3) == [2, 20, 123]\n   Evaluated: [-123, -3, 0] == [2, 20, 123]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:33\n  Expression: candidate([-123, 20, 0, 1, 2,\
    \ -3], 4) == [0, 1, 2, 20]\n   Evaluated: [-123, -3, 0, 1] == [0, 1, 2, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpztzz9y63.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpztzz9y63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpztzz9y63.jl:35\n  Expression: candidate([-1, 0, 2, 5, 3, -10],\
    \ 2) ="
  timestamp: 1659747130

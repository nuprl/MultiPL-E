language: jl
name: HumanEval_5_intersperse
results:
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = zeros(Int64, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9ct8r90o.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp9ct8r90o.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:14 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed as"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    if length(numbers) == 0\n        return\
    \ []\n    elseif length(numbers) == 1\n        return numbers\n    else\n    \
    \    return [numbers[1], delimeter] .+ intersperse(numbers[2:end], delimeter)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm4y15h2u.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpm4y15h2u.jl:18\n  Expression: candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n   Evaluated: [16, 26] == [5, 8, 6, 8,\
    \ 3, 8, 2]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4y15h2u.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4y15h2u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm4y15h2u.jl:19\n  Expression: candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2]\n   Evaluated: [6, 6] == [2, 2, 2, 2, 2]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4y15h2u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4y15h2u.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = [numbers[1]]\n    for i in 2:length(numbers)\n\
    \        result = [result, delimeter, numbers[i]]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpmm4nrxwc.jl:15\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:
    attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]
    getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},
    delimeter::Int64)\n     @ Main /tmp/tmpmm4nrxwc.jl:4\n   [3] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4]
    macro expansion\n     @ /tmp/tmpmm4nrxwc.jl:15 [inlined]\n   [5] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6]
    top-level scope\n     @ /tmp/tmpmm4nrxwc.jl:14\n'''
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)\
    \ - 1)\n    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i\
    \ - 1] = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp13wf3e1u.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp13wf3e1u.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp13wf3e1u.jl:16\ntest set: Error
    During Test at /tmp/tmp13wf3e1u.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmp13wf3e1u.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp13wf3e1u.jl:16\ntest set: Error
    During Test at /tmp/tmp13wf3e1u.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp13wf3e1u.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i != length(numbers)\n            result[2*i] = delimeter\n        end\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpot4lxz8b.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpot4lxz8b.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpot4lxz8b.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpot4lxz8b.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpot4lxz8b.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Int64[]\n    for i in 1:length(numbers)-1\n\
    \        push!(result, numbers[i])\n        push!(result, delimeter)\n    end\n\
    \    push!(result, numbers[end])\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmphzy3zj4n.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmphzy3zj4n.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmphzy3zj4n.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphzy3zj4n.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphzy3zj4n.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = zeros(Int64, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9ct8r90o.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp9ct8r90o.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:14 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed as"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = zeros(Int64, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9ct8r90o.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp9ct8r90o.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:14 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed as"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    out = zeros(Int64, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        out[2*i-1] = numbers[i]\n        if i\
    \ < length(numbers)\n            out[2*i] = delimeter\n        end\n    end\n\
    \    return out\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpwnfw1fz6.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpwnfw1fz6.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmpwnfw1fz6.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpwnfw1fz6.jl:18 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpwnfw1fz6.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = zeros(Int64, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9ct8r90o.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp9ct8r90o.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:14 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed as"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i =\
    \ 1:length(numbers)\n        push!(result, numbers[i])\n        if i != length(numbers)\n\
    \            push!(result, delimeter)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    3      3

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = zeros(Int64, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp1fwpa8v6.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp1fwpa8v6.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp1fwpa8v6.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp1fwpa8v6.jl:18 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp1fwpa8v6.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)\
    \ - 1)\n    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i\
    \ - 1] = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp13wf3e1u.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp13wf3e1u.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp13wf3e1u.jl:16\ntest set: Error
    During Test at /tmp/tmp13wf3e1u.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmp13wf3e1u.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp13wf3e1u.jl:16\ntest set: Error
    During Test at /tmp/tmp13wf3e1u.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp13wf3e1u.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    output = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    output[1:2:end] = numbers\n    output[2:2:end] = delimeter\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp5_u4agxv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp5_u4agxv.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmp5_u4agxv.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5_u4agxv.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5_u4agxv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp5_u4agxv.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp5_u4agxv.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp5_u4agxv.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp5_u4agxv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp5_u4agxv.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i != length(numbers)\n            result[2*i] = delimeter\n        end\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpot4lxz8b.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpot4lxz8b.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpot4lxz8b.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpot4lxz8b.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpot4lxz8b.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    result[1] = numbers[1]\n    for i in 2:length(numbers)\n     \
    \   result[2 * i - 1] = delimeter\n        result[2 * i] = numbers[i]\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp3n5bxgt2.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp3n5bxgt2.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3n5bxgt2.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3n5bxgt2.jl:16\ntest set: Error
    During Test at /tmp/tmp3n5bxgt2.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmp3n5bxgt2.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3n5bxgt2.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3n5bxgt2.jl:16\ntest set: Error
    During Test at /tmp/tmp3n5bxgt2.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp3n5bxgt2.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3n5bxgt2.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = [numbers[1]]\n    for i in 2:length(numbers)\n\
    \        push!(result, delimeter)\n        push!(result, numbers[i])\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp7hsxuyy7.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp7hsxuyy7.jl:16\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp7hsxuyy7.jl:4\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7hsxuyy7.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7hsxuyy7.jl:15\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i = 2:length(numbers)\n        result[2*i-2]\
    \ = delimeter\n        result[2*i-1] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpfjdvralp.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpfjdvralp.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpfjdvralp.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfjdvralp.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfjdvralp.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    for (i, n) in enumerate(numbers)\n        result[2i - 1] = n\n\
    \        result[2i] = delimeter\n    end\n    return result[1:end-1]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpijliep8r.jl:16\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmpijliep8r.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpijliep8r.jl:16 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpijliep8r.jl:15\ntest set: Error
    During Test at /tmp/tmpijliep8r.jl:17\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmpijliep8r.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpijliep8r.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmpijliep8r.jl:15\ntest set: Error
    During Test at /tmp/tmpijliep8r.jl:18\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmpijliep8r.jl:7\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmpijliep8r.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)*2-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpkyv1v_id.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpkyv1v_id.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpkyv1v_id.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkyv1v_id.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkyv1v_id.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    output = []\n    for i in 1:length(numbers)-1\n\
    \        push!(output, numbers[i])\n        push!(output, delimeter)\n    end\n\
    \    push!(output, numbers[end])\n    return output\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp7_66l2ib.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp7_66l2ib.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp7_66l2ib.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7_66l2ib.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7_66l2ib.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i = 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp0tvf1wmk.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp0tvf1wmk.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmp0tvf1wmk.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0tvf1wmk.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0tvf1wmk.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Int64[]\n    for i in 1:length(numbers)-1\n\
    \        push!(result, numbers[i])\n        push!(result, delimeter)\n    end\n\
    \    push!(result, numbers[end])\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmphzy3zj4n.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmphzy3zj4n.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmphzy3zj4n.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphzy3zj4n.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphzy3zj4n.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = zeros(Int64, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9ct8r90o.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp9ct8r90o.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:14 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed as"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i != length(numbers)\n            result[2*i] = delimeter\n        end\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpot4lxz8b.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpot4lxz8b.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpot4lxz8b.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpot4lxz8b.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpot4lxz8b.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    if length(numbers) == 0\n        return\
    \ []\n    elseif length(numbers) == 1\n        return numbers\n    else\n    \
    \    return [numbers[1], delimeter] .+ intersperse(numbers[2:end], delimeter)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm4y15h2u.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpm4y15h2u.jl:18\n  Expression: candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n   Evaluated: [16, 26] == [5, 8, 6, 8,\
    \ 3, 8, 2]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4y15h2u.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4y15h2u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm4y15h2u.jl:19\n  Expression: candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2]\n   Evaluated: [6, 6] == [2, 2, 2, 2, 2]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4y15h2u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4y15h2u.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Int64[]\n    for i in 1:length(numbers)-1\n\
    \        push!(result, numbers[i])\n        push!(result, delimeter)\n    end\n\
    \    push!(result, numbers[end])\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmphzy3zj4n.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmphzy3zj4n.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmphzy3zj4n.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphzy3zj4n.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphzy3zj4n.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    if length(numbers) == 0\n        return\
    \ []\n    elseif length(numbers) == 1\n        return numbers\n    else\n    \
    \    return [numbers[1], delimeter] .+ intersperse(numbers[2:end], delimeter)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm4y15h2u.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpm4y15h2u.jl:18\n  Expression: candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n   Evaluated: [16, 26] == [5, 8, 6, 8,\
    \ 3, 8, 2]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4y15h2u.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4y15h2u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm4y15h2u.jl:19\n  Expression: candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2]\n   Evaluated: [6, 6] == [2, 2, 2, 2, 2]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4y15h2u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4y15h2u.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n\
    \        if i < length(numbers)\n            result[2*i] = delimeter\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\
    \t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2,\
    \ 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpbigy1th0.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpbigy1th0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpbigy1th0.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbigy1th0.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbigy1th0.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    if length(numbers) == 0\n        return\
    \ []\n    elseif length(numbers) == 1\n        return numbers\n    else\n    \
    \    return [numbers[1], delimeter] .+ intersperse(numbers[2:end], delimeter)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm4y15h2u.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpm4y15h2u.jl:18\n  Expression: candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n   Evaluated: [16, 26] == [5, 8, 6, 8,\
    \ 3, 8, 2]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4y15h2u.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4y15h2u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm4y15h2u.jl:19\n  Expression: candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2]\n   Evaluated: [6, 6] == [2, 2, 2, 2, 2]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4y15h2u.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4y15h2u.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     2      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)*2\
    \ - 1)\n    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo5ys6t0u.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpo5ys6t0u.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpo5ys6t0u.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo5ys6t0u.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo5ys6t0u.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpo5ys6t0u.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt\
    \ to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n\
    \     @ Main /tmp/tmpo5ys6t0u.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo5ys6t0u.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpo5ys6t0u.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpo5ys6t0u.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] setindex!\n    \
    \ @ ./array.jl:903 [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n\
    \     @ Main /tmp/tmpo5ys6t0u.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpo5ys6t0u.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n"
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = zeros(Int64, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9ct8r90o.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp9ct8r90o.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:14 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed as"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i != length(numbers)\n            result[2*i] = delimeter\n        end\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpot4lxz8b.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpot4lxz8b.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpot4lxz8b.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpot4lxz8b.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpot4lxz8b.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n \
    \   return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmptk3zfhpw.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmptk3zfhpw.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptk3zfhpw.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptk3zfhpw.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptk3zfhpw.jl:13\ntest set:\
    \ Error During Test at /tmp/tmptk3zfhpw.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmptk3zfhpw.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmptk3zfhpw.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmptk3zfhpw.jl:13\ntest set:\
    \ Error During Test at /tmp/tmptk3zfhpw.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    n = length(numbers)\n    result = zeros(Int64,\
    \ 2*n - 1)\n    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n \
    \   return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpbpoxx61i.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpbpoxx61i.jl:15\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmpbpoxx61i.jl:5\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpbpoxx61i.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpbpoxx61i.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpbpoxx61i.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpbpoxx61i.jl:7\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpbpoxx61i.jl:16 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpbpoxx61i.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpbpoxx61i.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed as"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = zeros(Int64, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9ct8r90o.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp9ct8r90o.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] Array\n     @ ./boot.jl:466 [inlined]\n   [3] zeros\n    \
    \ @ ./array.jl:525 [inlined]\n   [4] zeros\n     @ ./array.jl:521 [inlined]\n\
    \   [5] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:4\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:14 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp9ct8r90o.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9ct8r90o.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9ct8r90o.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp9ct8r90o.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed as"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = []\n    for i in 1:length(numbers)-1\n\
    \        push!(result, numbers[i])\n        push!(result, delimeter)\n    end\n\
    \    push!(result, numbers[end])\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp3bct_gek.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp3bct_gek.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp3bct_gek.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3bct_gek.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3bct_gek.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    output = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        output[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            output[2*i] = delimeter\n        end\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpcm_k26xo.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpcm_k26xo.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpcm_k26xo.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcm_k26xo.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcm_k26xo.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n\
    \        if i < length(numbers)\n            result[2*i] = delimeter\n       \
    \ end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\
    \t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2,\
    \ 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpbigy1th0.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpbigy1th0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpbigy1th0.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbigy1th0.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbigy1th0.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    output = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    output[1:2:end] = numbers\n    output[2:2:end] = delimeter\n    return output\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp5_u4agxv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp5_u4agxv.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmp5_u4agxv.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5_u4agxv.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5_u4agxv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp5_u4agxv.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp5_u4agxv.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmp5_u4agxv.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmp5_u4agxv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmp5_u4agxv.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n \
    \   return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmptk3zfhpw.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmptk3zfhpw.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptk3zfhpw.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptk3zfhpw.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptk3zfhpw.jl:13\ntest set:\
    \ Error During Test at /tmp/tmptk3zfhpw.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmptk3zfhpw.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmptk3zfhpw.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmptk3zfhpw.jl:13\ntest set:\
    \ Error During Test at /tmp/tmptk3zfhpw.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = []\n    for i in 1:length(numbers)-1\n\
    \        push!(result, numbers[i])\n        push!(result, delimeter)\n    end\n\
    \    push!(result, numbers[end])\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp3bct_gek.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp3bct_gek.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp3bct_gek.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3bct_gek.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3bct_gek.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        if i == 1\n            result[i] = numbers[i]\n\
    \        else\n            result[2*i-1] = delimeter\n            result[2*i]\
    \ = numbers[i]\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp154v1frq.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp154v1frq.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmp154v1frq.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp154v1frq.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp154v1frq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp154v1frq.jl:21\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt\
    \ to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n\
    \     @ Main /tmp/tmp154v1frq.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp154v1frq.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp154v1frq.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp154v1frq.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] setindex!\n    \
    \ @ ./array.jl:903 [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n\
    \     @ Main /tmp/tmp154v1frq.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp154v1frq.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined"
  timestamp: 1659747377
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i != length(numbers)\n            result[2*i] = delimeter\n        end\n   \
    \ end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpot4lxz8b.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpot4lxz8b.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpot4lxz8b.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpot4lxz8b.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpot4lxz8b.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Int64[]\n    for i in 1:length(numbers)-1\n\
    \        push!(result, numbers[i])\n        push!(result, delimeter)\n    end\n\
    \    push!(result, numbers[end])\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmphzy3zj4n.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmphzy3zj4n.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmphzy3zj4n.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphzy3zj4n.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphzy3zj4n.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter,\
    \ length(numbers) - 1)\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\
    \t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2,\
    \ 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp9gc6t1l9.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmp9gc6t1l9.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmp9gc6t1l9.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9gc6t1l9.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9gc6t1l9.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Int64[]\n    for i in 1:length(numbers)-1\n\
    \        push!(result, numbers[i])\n        push!(result, delimeter)\n    end\n\
    \    push!(result, numbers[end])\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmphzy3zj4n.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmphzy3zj4n.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmphzy3zj4n.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphzy3zj4n.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphzy3zj4n.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(result, numbers[i])\n        push!(result,\
    \ delimeter)\n    end\n    push!(result, numbers[end])\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpigpb0iy5.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpigpb0iy5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpigpb0iy5.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpigpb0iy5.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpigpb0iy5.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i-1]\
    \ = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmph1mgpdb_.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmph1mgpdb_.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmph1mgpdb_.jl:16\ntest set: Error
    During Test at /tmp/tmph1mgpdb_.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmph1mgpdb_.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmph1mgpdb_.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    result[1] = numbers[1]\n    for i in 2:length(numbers)\n     \
    \   result[2*i-1] = delimeter\n        result[2*i] = numbers[i]\n    end\n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpqeo6i_0h.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpqeo6i_0h.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpqeo6i_0h.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqeo6i_0h.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqeo6i_0h.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpqeo6i_0h.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt\
    \ to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n\
    \     @ Main /tmp/tmpqeo6i_0h.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqeo6i_0h.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqeo6i_0h.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpqeo6i_0h.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] setindex!\n    \
    \ @ ./array.jl:903 [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n\
    \     @ Main /tmp/tmpqeo6i_0h.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqeo6i_0h.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n"
  timestamp: 1659747377
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    output = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    output[1:2:end] = numbers\n    output[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmph5dwv9dm.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmph5dwv9dm.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmph5dwv9dm.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmph5dwv9dm.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmph5dwv9dm.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Int64[]\n    for i in 1:length(numbers)-1\n\
    \        push!(result, numbers[i])\n        push!(result, delimeter)\n    end\n\
    \    push!(result, numbers[end])\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8,\
    \ 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmphzy3zj4n.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmphzy3zj4n.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmphzy3zj4n.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmphzy3zj4n.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmphzy3zj4n.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    output = Vector{Int64}()\n    for i in\
    \ 1:length(numbers)-1\n        push!(output, numbers[i])\n        push!(output,\
    \ delimeter)\n    end\n    push!(output, numbers[end])\n    return output\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmp0f_hek5m.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmp0f_hek5m.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:861 [inlined]\n   [2] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmp0f_hek5m.jl:9\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0f_hek5m.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0f_hek5m.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1] = numbers[1]\n    for i = 2:length(numbers)\n        result[2*i-2]\
    \ = delimeter\n        result[2*i-1] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpfjdvralp.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpfjdvralp.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpfjdvralp.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfjdvralp.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfjdvralp.jl:16\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    result[1] = numbers[1]\n    for i in 2:length(numbers)\n     \
    \   result[2*i-1] = delimeter\n        result[2*i] = numbers[i]\n    end\n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpqeo6i_0h.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpqeo6i_0h.jl:17\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpqeo6i_0h.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqeo6i_0h.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqeo6i_0h.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpqeo6i_0h.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt\
    \ to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n\
    \     @ ./array.jl:903 [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n\
    \     @ Main /tmp/tmpqeo6i_0h.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqeo6i_0h.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqeo6i_0h.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpqeo6i_0h.jl:19\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] setindex!\n    \
    \ @ ./array.jl:903 [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n\
    \     @ Main /tmp/tmpqeo6i_0h.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqeo6i_0h.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n"
  timestamp: 1659747377
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n        if\
    \ i < length(numbers)\n            result[2*i] = delimeter\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmptngvdngy.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptngvdngy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmptngvdngy.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptngvdngy.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptngvdngy.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)\
    \ - 1)\n    result[1] = numbers[1]\n    for i in 2:length(numbers)\n        result[2*i\
    \ - 1] = delimeter\n        result[2*i] = numbers[i]\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp13wf3e1u.jl:17\n  Test threw
    exception\n  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:
    invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp13wf3e1u.jl:4\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:17 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp13wf3e1u.jl:16\ntest set: Error
    During Test at /tmp/tmp13wf3e1u.jl:18\n  Test threw exception\n  Expression: candidate([5,
    6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  BoundsError: attempt to access 7-element
    Vector{Int64} at index [8]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903
    [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @
    Main /tmp/tmp13wf3e1u.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:18 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [6] top-level scope\n     @ /tmp/tmp13wf3e1u.jl:16\ntest set: Error
    During Test at /tmp/tmp13wf3e1u.jl:19\n  Test threw exception\n  Expression: candidate([2,
    2, 2], 2) == [2, 2, 2, 2, 2]\n  BoundsError: attempt to access 5-element Vector{Int64}
    at index [6]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2]
    intersperse(numbers::Vector{Int64}, delimeter::Int64)\n     @ Main /tmp/tmp13wf3e1u.jl:8\n   [3]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [4] macro expansion\n     @ /tmp/tmp13wf3e1u.jl:19 [inlined]\n   [5]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, length(numbers)\
    \ * 2 - 1)\n    for i in 1:length(numbers)\n        result[2*i-1] = numbers[i]\n\
    \        if i != length(numbers)\n            result[2*i] = delimeter\n      \
    \  end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = intersperse;\n\t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\
    \t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2,\
    \ 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxc8k65sf.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxc8k65sf.jl:18\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpxc8k65sf.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxc8k65sf.jl:18 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxc8k65sf.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = delimeter\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\t@test(candidate(Vector{Int64}([]),\
    \ 7) == Vector{Int64}([]))\n\t@test(candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8,\
    \ 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpvt7hxe6c.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpvt7hxe6c.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpvt7hxe6c.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:15\n  Test threw exception\n  Expression:\
    \ candidate([5, 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2]\n  ArgumentError: indexed\
    \ assignment with a single value to possibly many locations is not supported;\
    \ perhaps use broadcasting `.=` instead?\n  Stacktrace:\n   [1] setindex_shape_check(::Int64,\
    \ ::Int64)\n     @ Base ./indices.jl:261\n   [2] _unsafe_setindex!(#unused#::IndexLinear,\
    \ A::Vector{Int64}, x::Int64, I::StepRange{Int64, Int64})\n     @ Base ./multidimensional.jl:903\n\
    \   [3] _setindex!\n     @ ./multidimensional.jl:894 [inlined]\n   [4] setindex!\n\
    \     @ ./abstractarray.jl:1315 [inlined]\n   [5] intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)\n     @ Main /tmp/tmpvt7hxe6c.jl:6\n   [6] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [7] macro expansion\n     @ /tmp/tmpvt7hxe6c.jl:15 [inlined]\n\
    \   [8] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [9] top-level scope\n     @ /tmp/tmpvt7hxe6c.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpvt7hxe6c.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([2, 2, 2], 2) == [2, 2, 2, 2, 2]\n  ArgumentError: indexed assignment\
    \ with a single value to possibly many locations is not supported; perhaps use\
    \ broadcasting `.=` instead?\n  Stacktrace:\n   [1] "
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\" Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n            \"\"\"\nfunction intersperse(numbers::Vector{Int64},\
    \ delimeter::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef, 2*length(numbers)-1)\n\
    \    result[1:2:end] = numbers\n    result[2:2:end] = fill(delimeter, length(numbers)-1)\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = intersperse;\n\
    \t@test(candidate(Vector{Int64}([]), 7) == Vector{Int64}([]))\n\t@test(candidate([5,\
    \ 6, 3, 2], 8) == [5, 8, 6, 8, 3, 8, 2])\n\t@test(candidate([2, 2, 2], 2) == [2,\
    \ 2, 2, 2, 2])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpem4_0cg8.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpem4_0cg8.jl:14\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([]), 7) == Vector{Int64}([])\n  ArgumentError:\
    \ invalid Array dimensions\n  Stacktrace:\n   [1] Array\n     @ ./boot.jl:457\
    \ [inlined]\n   [2] intersperse(numbers::Vector{Int64}, delimeter::Int64)\n  \
    \   @ Main /tmp/tmpem4_0cg8.jl:4\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpem4_0cg8.jl:14 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpem4_0cg8.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    2      1      3\n"
  timestamp: 1659747373

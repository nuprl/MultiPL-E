language: jl
name: HumanEval_57_monotonic
results:
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ (all(l .&gt;= l[1]) || all(l .&lt;= l[1]))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv_pj6p59.jl:4\nin expression starting at /tmp/tmpv_pj6p59.jl:4\n"
  stdout: ''
  timestamp: 1659748983
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)\n         \
    \   if l[i] > l[i-1]\n                return false\n            end\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)\n         \
    \   if l[i] > l[i-1]\n                return false\n            end\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)-1\n       \
    \     if l[i+1] > l[i]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if l[1]\
    \ &lt; l[2]\n        for i in 2:length(l)-1\n            if l[i] &gt; l[i+1]\n\
    \                return false\n            end\n        end\n    elseif l[1] &gt;\
    \ l[2]\n        for i in 2:length(l)-1\n            if l[i] &lt; l[i+1]\n    \
    \            return false\n            end\n        end\n    end\n    return true\n\
    end\n</code>\n\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpayxcnlzk.jl:19\nin expression starting at\
    \ /tmp/tmpayxcnlzk.jl:19\n"
  stdout: ''
  timestamp: 1659748983
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ ismonotonic(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpf6pvwak0.jl:8

    '
  stdout: "test set: Error During Test at /tmp/tmpf6pvwak0.jl:11\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: ismonotonic\
    \ not defined\n  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main\
    \ /tmp/tmpf6pvwak0.jl:4\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf6pvwak0.jl:11 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf6pvwak0.jl:10\ntest set:\
    \ Error During Test at /tmp/tmpf6pvwak0.jl:12\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: ismonotonic not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpf6pvwak0.jl:4\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf6pvwak0.jl:12 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf6pvwak0.jl:10\ntest set:\
    \ Error During Test at /tmp/tmpf6pvwak0.jl:13\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: ismonotonic not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpf6pvwak0.jl:4\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf6pvwak0.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf6pvwak0.jl:10\ntest set:\
    \ Error During Test at /tmp/tmpf6pvwak0.jl:14\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: ismonotonic not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpf6pvwak0.jl:4\n\
    \   [2] macro expansion\n "
  timestamp: 1659748984
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 3:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 3:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n\
    \            if l[i] > l[i+1]\n                return false\n            end\n\
    \        end\n    elseif l[1] > l[2]\n        for i in 2:length(l)-1\n       \
    \     if l[i] < l[i+1]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ ismonotonic(l, lt=lt, lte=lte)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpvngtdsrx.jl:8

    '
  stdout: "test set: Error During Test at /tmp/tmpvngtdsrx.jl:11\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 10]) == true\n  UndefVarError: lt not defined\n\
    \  Stacktrace:\n   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpvngtdsrx.jl:4\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvngtdsrx.jl:11 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvngtdsrx.jl:10\ntest set:\
    \ Error During Test at /tmp/tmpvngtdsrx.jl:12\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 20]) == true\n  UndefVarError: lt not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpvngtdsrx.jl:4\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvngtdsrx.jl:12 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvngtdsrx.jl:10\ntest set:\
    \ Error During Test at /tmp/tmpvngtdsrx.jl:13\n  Test threw exception\n  Expression:\
    \ candidate([1, 20, 4, 10]) == false\n  UndefVarError: lt not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpvngtdsrx.jl:4\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvngtdsrx.jl:13 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvngtdsrx.jl:10\ntest set:\
    \ Error During Test at /tmp/tmpvngtdsrx.jl:14\n  Test threw exception\n  Expression:\
    \ candidate([4, 1, 0, -10]) == true\n  UndefVarError: lt not defined\n  Stacktrace:\n\
    \   [1] monotonic(l::Vector{Int64})\n     @ Main /tmp/tmpvngtdsrx.jl:4\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/sh"
  timestamp: 1659748984
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)-1\n       \
    \     if l[i+1] > l[i]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 0\n        return true\n    end\n    if length(l) == 1\n        return true\n\
    \    end\n    if length(l) == 2\n        return true\n    end\n    if l[1] < l[2]\n\
    \        for i in 2:length(l)-1\n            if l[i] > l[i+1]\n              \
    \  return false\n            end\n        end\n    else\n        for i in 2:length(l)-1\n\
    \            if l[i] < l[i+1]\n                return false\n            end\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)-1\n       \
    \     if l[i+1] > l[i]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 3:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 3:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ (all(l[i] <= l[i+1] for i in 1:length(l)-1) || \n            all(l[i] >= l[i+1]\
    \ for i in 1:length(l)-1))\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n\
    \            if l[i] > l[i+1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i] <\
    \ l[i+1]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] \u2264 l[i+1] for i in 1:length(l)-1) || all(l[i] \u2265 l[i+1] for\
    \ i in 1:length(l)-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n\
    \            if l[i] > l[i+1]\n                return false\n            end\n\
    \        end\n    elseif l[1] > l[2]\n        for i in 2:length(l)-1\n       \
    \     if l[i] < l[i+1]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ <= 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ <= 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 3:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 3:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ <= 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] \u2264 l[i+1] for i in 1:length(l)-1) || all(l[i] \u2265 l[i+1] for\
    \ i in 1:length(l)-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)-1\n       \
    \     if l[i+1] > l[i]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n\
    \            if l[i] > l[i+1]\n                return false\n            end\n\
    \        end\n    elseif l[1] > l[2]\n        for i in 2:length(l)-1\n       \
    \     if l[i] < l[i+1]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] &lt;= l[i+1] for i in 1:length(l)-1) || all(l[i] &gt;= l[i+1] for i\
    \ in 1:length(l)-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1epvytii.jl:4\nin expression starting at /tmp/tmp1epvytii.jl:4\n"
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)-1\n       \
    \     if l[i+1] > l[i]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        return all(l[i]\
    \ <= l[i+1] for i in 1:length(l)-1)\n    else\n        return all(l[i] >= l[i+1]\
    \ for i in 1:length(l)-1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ <= 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)-1\n       \
    \     if l[i+1] > l[i]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l .== sort(l)) || all(l .== sort(l, rev=true))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] - l[1] > 0\n        for i in\
    \ 2:length(l)-1\n            if l[i+1] - l[i] < 0\n                return false\n\
    \            end\n        end\n    elseif l[2] - l[1] < 0\n        for i in 2:length(l)-1\n\
    \            if l[i+1] - l[i] > 0\n                return false\n            end\n\
    \        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\n\
    candidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ isequal(sort(l), l) || isequal(sort(l, rev=true), l)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\
    \t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) ==\
    \ false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4, 1,\
    \ 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n\
    \            if l[i] > l[i+1]\n                return false\n            end\n\
    \        end\n    elseif l[1] > l[2]\n        for i in 2:length(l)-1\n       \
    \     if l[i] < l[i+1]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i = 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i = 2:length(l)-1\n        \
    \    if l[i+1] > l[i]\n                return false\n            end\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)\n         \
    \   if l[i] > l[i-1]\n                return false\n            end\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(x -> x[1] &lt;= x[2], zip(l[1:end-1], l[2:end])) ||\n           all(x ->\
    \ x[1] &gt;= x[2], zip(l[1:end-1], l[2:end]))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwtdr24ej.jl:4\nin expression starting at /tmp/tmpwtdr24ej.jl:4\n"
  stdout: ''
  timestamp: 1659748983
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)\n         \
    \   if l[i] > l[i-1]\n                return false\n            end\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i = 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i = 2:length(l)-1\n        \
    \    if l[i+1] > l[i]\n                return false\n            end\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)\n         \
    \   if l[i] > l[i-1]\n                return false\n            end\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ monotonic(l, l[1] &lt; l[2])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid keyword argument syntax \"l[2]\" around\
    \ /tmp/tmpo0gj96xf.jl:4\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo0gj96xf.jl:1\n\
    in expression starting at /tmp/tmpo0gj96xf.jl:1\n"
  stdout: ''
  timestamp: 1659748983
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ <= 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)\n         \
    \   if l[i] > l[i-1]\n                return false\n            end\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n\
    \            if l[i] > l[i+1]\n                return false\n            end\n\
    \        end\n    elseif l[1] > l[2]\n        for i in 2:length(l)-1\n       \
    \     if l[i] < l[i+1]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] &lt;= l[i+1] for i in 1:length(l)-1) || all(l[i] &gt;= l[i+1] for i\
    \ in 1:length(l)-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1epvytii.jl:4\nin expression starting at /tmp/tmp1epvytii.jl:4\n"
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    elseif l[2] < l[1]\n        for i in 2:length(l)\n         \
    \   if l[i] > l[i-1]\n                return false\n            end\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] \u2264 l[i+1] for i in 1:length(l)-1) || all(l[i] \u2265 l[i+1] for\
    \ i in 1:length(l)-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 1
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] &lt;= l[i+1] for i in 1:length(l)-1) || all(l[i] &gt;= l[i+1] for i\
    \ in 1:length(l)-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"=\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1epvytii.jl:4\nin expression starting at /tmp/tmp1epvytii.jl:4\n"
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)\n\
    \            if l[i] < l[i-1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)\n            if l[i] > l[i-1]\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n\
    \            if l[i] > l[i+1]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i] <\
    \ l[i+1]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(l[i] <= l[i+1] for i in 1:length(l)-1) || all(l[i] >= l[i+1] for i in 1:length(l)-1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\t@test(candidate([1,\
    \ 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) == true)\n\t@test(candidate([1,\
    \ 20, 4, 10]) == false)\n\t@test(candidate([4, 1, 0, -10]) == true)\n\t@test(candidate([4,\
    \ 1, 1, 0]) == true)\n\t@test(candidate([1, 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 60]) == true)\n\t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ < 2\n        return true\n    end\n    if l[2] > l[1]\n        for i in 2:length(l)-1\n\
    \            if l[i+1] < l[i]\n                return false\n            end\n\
    \        end\n    else\n        for i in 2:length(l)-1\n            if l[i+1]\
    \ > l[i]\n                return false\n            end\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = monotonic;\n\
    \t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1, 2, 4, 20]) ==\
    \ true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4, 1,\
    \ 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    if length(l)\
    \ == 1\n        return true\n    end\n    if l[1] < l[2]\n        for i in 2:length(l)-1\n\
    \            if l[i] > l[i+1]\n                return false\n            end\n\
    \        end\n    elseif l[1] > l[2]\n        for i in 2:length(l)-1\n       \
    \     if l[i] < l[i+1]\n                return false\n            end\n      \
    \  end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982
- exit_code: 0
  program: "\"\"\"Return True is list elements are monotonically increasing or decreasing.\n\
    \                \"\"\"\nfunction monotonic(l::Vector{Int64})::Bool \n    return\
    \ all(diff(l) .>= 0) || all(diff(l) .<= 0)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = monotonic;\n\t@test(candidate([1, 2, 4, 10]) == true)\n\t@test(candidate([1,\
    \ 2, 4, 20]) == true)\n\t@test(candidate([1, 20, 4, 10]) == false)\n\t@test(candidate([4,\
    \ 1, 0, -10]) == true)\n\t@test(candidate([4, 1, 1, 0]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 2, 5, 60]) == false)\n\t@test(candidate([1, 2, 3, 4, 5, 60]) == true)\n\
    \t@test(candidate([9, 9, 9, 9]) == true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    8      8

    '
  stdout: ''
  timestamp: 1659748982

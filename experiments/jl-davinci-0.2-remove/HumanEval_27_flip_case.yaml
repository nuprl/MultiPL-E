name: HumanEval_27_flip_case
language: jl
prompt: "\"\"\" For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n        \"\"\"\nfunction flip_case(string::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
  \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
  These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")\nend\n"
completions: ["    flipped_string = \"\"\n    for character in string\n        if\
    \ islower(character)\n            flipped_string = flipped_string * uppercase(character)\n\
    \        else\n            flipped_string = flipped_string * lowercase(character)\n\
    \        end\n    end\n    return flipped_string\nend", "    return string.swapcase()\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            push!(flipped_string, uppercase[findfirst(lowercase, char)])\n  \
    \      elseif char in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ char)])\n        else\n            push!(flipped_string, char)\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    return string[1:end] .|> x -> islower(x) ? uppercase(x) : lowercase(x)\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in string(\"\
    abcdefghijklmnopqrstuvwxyz\")\n            flipped_string = flipped_string * string(char)\n\
    \        elseif char in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            flipped_string\
    \ = flipped_string * string(char)\n        else\n            flipped_string =\
    \ flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n   \
    \         flipped_string *= uppercase[lowercase.index(c)]\n        elseif c in\
    \ uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n   \
    \     else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            flipped_string *= uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    string_flipped = \"\"\n    for i in string\n    \
    \    if islower(i)\n            string_flipped *= uppercase(i)\n        elseif\
    \ isupper(i)\n            string_flipped *= lowercase(i)\n        else\n     \
    \       string_flipped *= i\n        end\n    end\n    return string_flipped\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string = flipped_string * uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string = flipped_string *\
    \ lowercase[uppercase.index(c)]\n        else\n            flipped_string = flipped_string\
    \ * c\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if c in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n          \
    \  flipped_string *= lowercase[uppercase.index(c)]\n        else\n           \
    \ flipped_string *= c\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            push!(flipped_string, uppercase[findfirst(lowercase, char)])\n  \
    \      elseif char in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ char)])\n        else\n            push!(flipped_string, char)\n        end\n\
    \    end\n    return flipped_string\nend", "    return string[1:end] .|> x ->\
    \ x == uppercase(x) ? lowercase(x) : uppercase(x)\nend", "    flipped_string =\
    \ \"\"\n    for character in string\n        if character in lowercase\n     \
    \       flipped_string = flipped_string * uppercase[lowercase.index(character)]\n\
    \        elseif character in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(character)]\n        else\n            flipped_string\
    \ = flipped_string * character\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string = flipped_string * uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(char)]\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped_string = flipped_string * string(c)\n        elseif c in\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string = flipped_string\
    \ * string(c)\n        else\n            flipped_string = flipped_string * c\n\
    \        end\n    end\n    return flipped_string\nend", "    \"\"\"\n    >>> flip_case(\"\
    Hello World\")\n    'hELLO wORLD'\n    \"\"\"\n    new_string = \"\"\n    for\
    \ i in string\n        if i in lowercase\n            new_string *= uppercase[lowercase.index(i)]\n\
    \        elseif i in uppercase\n            new_string *= lowercase[uppercase.index(i)]\n\
    \        else\n            new_string *= i\n        end\n    end\n    return new_string\n\
    end", "    return [uppercase(c) ? lowercase(c) : uppercase(c) for c in string]\n\
    end", "    return replace(string, r\"[a-z]\", \"L\") |> replace(r\"[A-Z]\", \"\
    l\")\nend", "    return [uppercase(x) ? lowercase(x) ? x for x in string]\nend",
  "    flipped = \"\"\n    for c in string\n        if c in lowercase\n          \
    \  flipped *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n \
    \           flipped *= lowercase[uppercase.index(c)]\n        else\n         \
    \   flipped *= c\n        end\n    end\n    return flipped\nend", "    return\
    \ string.swapcase()\nend", "    return [uppercase(c) ? lowercase(c) ? c for c\
    \ in string]\nend", "    flipped_string = \"\"\n    for character in string\n\
    \        if character in lowercase\n            flipped_string *= uppercase[lowercase.index(character)]\n\
    \        elseif character in uppercase\n            flipped_string *= lowercase[uppercase.index(character)]\n\
    \        else\n            flipped_string *= character\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for character\
    \ in string\n        if islower(character)\n            flipped_string *= uppercase(character)\n\
    \        elseif isupper(character)\n            flipped_string *= lowercase(character)\n\
    \        else\n            flipped_string *= character\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n \
    \       if c in lowercase\n            push!(flipped, uppercase[findfirst(lowercase,\
    \ c)])\n        elseif c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            push!(flipped, c)\n        end\n    end\n  \
    \  return flipped\nend", "    flipped = String[]\n    for c in string\n      \
    \  if c in lowercase\n            push!(flipped, uppercase[findfirst(lowercase,\
    \ c)])\n        elseif c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            push!(flipped, c)\n        end\n    end\n  \
    \  return join(flipped)\nend", "    return replace(string, r\"[a-z]\", \"L\",\
    \ ignorecase=true)\nend", "    flipped_string = \"\"\n    for char in string\n\
    \        if char in lowercase\n            flipped_string = flipped_string * uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(char)]\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped = \"\"\n    for c in string\n        if c in lowercase\n          \
    \  append!(flipped, uppercase[findfirst(lowercase, c)])\n        elseif c in uppercase\n\
    \            append!(flipped, lowercase[findfirst(uppercase, c)])\n        else\n\
    \            append!(flipped, c)\n        end\n    end\n    return flipped\nend",
  "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            flipped_string = flipped_string * uppercase(character)\n        elseif\
    \ isupper(character)\n            flipped_string = flipped_string * lowercase(character)\n\
    \        else\n            flipped_string = flipped_string * character\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n \
    \           flipped_string *= string(char)\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= string(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            push!(flipped_string,\
    \ uppercase[findfirst(lowercase, char)])\n        elseif char in uppercase\n \
    \           push!(flipped_string, lowercase[findfirst(uppercase, char)])\n   \
    \     else\n            push!(flipped_string, char)\n        end\n    end\n  \
    \  return flipped_string\nend", "    flipped_string = \"\"\n    for character\
    \ in string\n        if islower(character)\n            flipped_string = flipped_string\
    \ * uppercase(character)\n        else\n            flipped_string = flipped_string\
    \ * lowercase(character)\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for i in string\n        if i in lowercase\n   \
    \         push!(flipped_string, uppercase[findfirst(lowercase, i)])\n        elseif\
    \ i in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ i)])\n        else\n            push!(flipped_string, i)\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for char in\
    \ string\n        if char in lowercase\n            append!(flipped_string, uppercase[findfirst(lowercase,\
    \ char)])\n        elseif char in uppercase\n            append!(flipped_string,\
    \ lowercase[findfirst(uppercase, char)])\n        else\n            append!(flipped_string,\
    \ char)\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            append!(flipped_string,\
    \ uppercase[findfirst(lowercase, char)])\n        elseif char in uppercase\n \
    \           append!(flipped_string, lowercase[findfirst(uppercase, char)])\n \
    \       else\n            append!(flipped_string, char)\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n\
    \        if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n    \
    \    if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    new_string = \"\"\n    for i in string\n        if\
    \ i in \"abcdefghijklmnopqrstuvwxyz\"\n            new_string = new_string * string(i)\n\
    \        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            new_string =\
    \ new_string * string(i)\n        else\n            new_string = new_string *\
    \ i\n        end\n    end\n    return new_string\nend", "    flipped_string =\
    \ \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n       \
    \     flipped_string = flipped_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * string[i]\n        end\n    end\n\
    \    return flipped_string\nend", "    string = replace(string, r\"[a-z]\", \"\
    L\")\n    string = replace(string, r\"[A-Z]\", \"l\")\n    string = replace(string,\
    \ r\"L\", \"\\\\U\\\\1\")\n    string = replace(string, r\"l\", \"\\\\u\\\\1\"\
    )\n    return string\nend", "    flipped = \"\"\n    for c in string\n       \
    \ if islower(c)\n            append!(flipped, uppercase(c))\n        elseif isupper(c)\n\
    \            append!(flipped, lowercase(c))\n        else\n            append!(flipped,\
    \ c)\n        end\n    end\n    return flipped\nend", "    flipped_string = \"\
    \"\n    for char in string\n        if char in string(\"a\"::String, \"b\"::String,\
    \ \"c\"::String, \"d\"::String, \"e\"::String, \"f\"::String, \"g\"::String, \"\
    h\"::String, \"i\"::String, \"j\"::String, \"k\"::String, \"l\"::String, \"m\"\
    ::String, \"n\"::String, \"o\"::String, \"p\"::String, \"q\"::String, \"r\"::String,\
    \ \"s\"::String, \"t\"::String, \"u\"::String, \"v\"::String, \"w\"::String, \"\
    x\"::String, \"y\"::String, \"z\"::String)\n            flipped_string = flipped_string\
    \ * string(char)::String\n        elseif char in string(\"A\"::String, \"B\"::String,\
    \ \"C\"::String, \"D\"::String, \"E\"::String, \"F\"::String, \"G\"::String, \"\
    H\"::String, \"I\"::String, \"J\"::String, \"K\"::String, \"L\"::String, \"M\"\
    ::String, \"N\"::String, \"O\"::String, \"P\"::String, \"Q\"::String, \"R\"::String,\
    \ \"S\"::String, \"T\"::String, \"U\"::String, \"V\"::String, \"W\"::String, \"\
    X\"::String, \"Y\"::String, \"Z\"::String)\n            flipped_string = flipped_string\
    \ * string(char)::String\n        else\n            flipped_string = flipped_string\
    \ * string(char)::String\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            push!(flipped_string, uppercase[findfirst(lowercase, char)])\n  \
    \      elseif char in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ char)])\n        else\n            push!(flipped_string, char)\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in lowercase\n            push!(flipped_string,\
    \ uppercase[findfirst(lowercase, char)])\n        elseif char in uppercase\n \
    \           push!(flipped_string, lowercase[findfirst(uppercase, char)])\n   \
    \     else\n            push!(flipped_string, char)\n        end\n    end\n  \
    \  return flipped_string\nend", "    return [uppercase(c) ? lowercase(c) ? c for\
    \ c in string]\nend", "    flipped_string = \"\"\n    for c in string\n      \
    \  if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    \"\"\"\n    >>> flip_case(\"Hello World\")\n    'hELLO\
    \ wORLD'\n    \"\"\"\n    new_string = \"\"\n    for char in string\n        if\
    \ char in string.lowercase\n            new_string = new_string * char.upper()\n\
    \        else\n            new_string = new_string * char.lower()\n    return\
    \ new_string", "    flipped = \"\"\n    for c in string\n        if c in lowercase\n\
    \            append!(flipped, uppercase[findfirst(lowercase, c)])\n        elseif\
    \ c in uppercase\n            append!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            append!(flipped, c)\n        end\n    end\n\
    \    return flipped\nend", "    flipped = \"\"\n    for c in string\n        if\
    \ c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n     \
    \   elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    return string[1:end] .|> x -> x == x ? x : x == lowercase(x) ? uppercase(x)\
    \ : lowercase(x)\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if islower(char)\n            flipped_string *= uppercase(char)\n    \
    \    elseif isupper(char)\n            flipped_string *= lowercase(char)\n   \
    \     else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for letter in string\n\
    \        if letter in string(\"abcdefghijklmnopqrstuvwxyz\")\n            flipped_string\
    \ = flipped_string * string(letter.upper())\n        elseif letter in string(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            flipped_string = flipped_string * string(letter.lower())\n\
    \        else\n            flipped_string = flipped_string * letter\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in lowercase\n            push!(flipped, uppercase[findfirst(lowercase,\
    \ c)])\n        elseif c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            push!(flipped, c)\n        end\n    end\n  \
    \  return flipped\nend", "    flipped = \"\"\n    for c in string\n        if\
    \ c in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped *= string(c)\n    \
    \    elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped *= string(c)\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(c)]\n        elseif c\
    \ in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            flipped_string *= uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    return [if islower(c) c = uppercase(c) else c = lowercase(c)\
    \ end for c in string]\nend", "    flipped_string = \"\"\n    for character in\
    \ string\n        if islower(character)\n            flipped_string *= uppercase(character)\n\
    \        elseif isupper(character)\n            flipped_string *= lowercase(character)\n\
    \        else\n            flipped_string *= character\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for char in\
    \ string\n        if char in lowercase\n            flipped_string = flipped_string\
    \ * uppercase[lowercase.index(char)]\n        elseif char in uppercase\n     \
    \       flipped_string = flipped_string * lowercase[uppercase.index(char)]\n \
    \       else\n            flipped_string = flipped_string * char\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ character in string\n        if islower(character)\n            flipped_string\
    \ = flipped_string * uppercase(character)\n        elseif isupper(character)\n\
    \            flipped_string = flipped_string * lowercase(character)\n        else\n\
    \            flipped_string = flipped_string * character\n        end\n    end\n\
    \    return flipped_string\nend", "    return string |> String.replace(\"a\",\
    \ \"A\") |> String.replace(\"A\", \"a\")\nend", "    flipped_string = \"\"\n \
    \   for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n    \
    \        flipped_string *= lowercase[uppercase.index(char)]\n        else\n  \
    \          flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for i in string\n        if i in lowercase\n\
    \            push!(flipped_string, uppercase[findfirst(lowercase, i)])\n     \
    \   elseif i in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ i)])\n        else\n            push!(flipped_string, i)\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n\
    \        if islower(c)\n            flipped_string *= uppercase(c)\n        elseif\
    \ isupper(c)\n            flipped_string *= lowercase(c)\n        else\n     \
    \       flipped_string *= c\n        end\n    end\n    return flipped_string\n\
    end", "    return replace(string, r\"[a-z]\", \"L\") |> replace(r\"[A-Z]\", \"\
    l\")\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n      \
    \  if islower(string[i])\n            flipped_string = flipped_string * uppercase(string[i])\n\
    \        elseif isupper(string[i])\n            flipped_string = flipped_string\
    \ * lowercase(string[i])\n        else\n            flipped_string = flipped_string\
    \ * string[i]\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if c in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n          \
    \  flipped_string *= lowercase[uppercase.index(c)]\n        else\n           \
    \ flipped_string *= c\n        end\n    end\n    return flipped_string\nend",
  "    \"\"\"\n    \"\"\"\n    flipped_string = \"\"\n    for i in string\n      \
    \  if i in string.lowercase\n            flipped_string = flipped_string * i.upper()\n\
    \        else\n            flipped_string = flipped_string * i.lower()\n    end\n\
    \    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n \
    \       if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(c)]\n        elseif c\
    \ in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    new_string = \"\"\n    for i in string\n        if\
    \ i in string.lowercase\n            new_string = new_string * i.upper()\n   \
    \     elseif i in string.uppercase\n            new_string = new_string * i.lower()\n\
    \        else\n            new_string = new_string * i\n        end\n    end\n\
    \    return new_string\nend", "    flipped_string = \"\"\n    for character in\
    \ string\n        if character in lowercase\n            flipped_string = flipped_string\
    \ * uppercase[lowercase.index(character)]\n        elseif character in uppercase\n\
    \            flipped_string = flipped_string * lowercase[uppercase.index(character)]\n\
    \        else\n            flipped_string = flipped_string * character\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for i in string\n        if islower(i)\n            append!(flipped_string,\
    \ uppercase(i))\n        elseif isupper(i)\n            append!(flipped_string,\
    \ lowercase(i))\n        else\n            append!(flipped_string, i)\n      \
    \  end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for c in string\n        if islower(c)\n            push!(flipped_string,\
    \ uppercase(c))\n        elseif isupper(c)\n            push!(flipped_string,\
    \ lowercase(c))\n        else\n            push!(flipped_string, c)\n        end\n\
    \    end\n    return flipped_string\nend", "    string = string.lower()\n    string\
    \ = string.replace(\"a\", \"A\")\n    string = string.replace(\"b\", \"B\")\n\
    \    string = string.replace(\"c\", \"C\")\n    string = string.replace(\"d\"\
    , \"D\")\n    string = string.replace(\"e\", \"E\")\n    string = string.replace(\"\
    f\", \"F\")\n    string = string.replace(\"g\", \"G\")\n    string = string.replace(\"\
    h\", \"H\")\n    string = string.replace(\"i\", \"I\")\n    string = string.replace(\"\
    j\", \"J\")\n    string = string.replace(\"k\", \"K\")\n    string = string.replace(\"\
    l\", \"L\")\n    string = string.replace(\"m\", \"M\")\n    string = string.replace(\"\
    n\", \"N\")\n    string = string.replace(\"o\", \"O\")\n    string = string.replace(\"\
    p\", \"P\")\n    string = string.replace(\"q\", \"Q\")\n    string = string.replace(\"\
    r\", \"R\")\n    string = string.replace(\"s\", \"S\")\n    string = string.replace(\"\
    t\", \"T\")\n    string = string.replace(\"u\", \"U\")\n    string = string.replace(\"\
    v\", \"V\")\n    string = string.replace(\"w\", \"W\")\n    string = string.replace(\"\
    x\", \"X\")\n    string = string.replace(\"y\", \"Y\")\n    string = string.replace(\"\
    z\", \"Z\")\n    return string\nend", "    flipped_string = \"\"\n    for char\
    \ in string\n        if char in lowercase\n            flipped_string *= uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    string_flipped = \"\"\n    for i in string\n    \
    \    if i in string.lowercase\n            string_flipped = string_flipped * i.upper()\n\
    \        elseif i in string.uppercase\n            string_flipped = string_flipped\
    \ * i.lower()\n        else\n            string_flipped = string_flipped * i\n\
    \        end\n    end\n    return string_flipped\nend", "    flipped = \"\"\n\
    \    for c in string\n        if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ isupper(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * string[i]\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for c in string\n        if c in lowercase\n            flipped_string *=\
    \ uppercase[lowercase.index(c)]\n        elseif c in uppercase\n            flipped_string\
    \ *= lowercase[uppercase.index(c)]\n        else\n            flipped_string *=\
    \ c\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if c in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n          \
    \  flipped_string *= lowercase[uppercase.index(c)]\n        else\n           \
    \ flipped_string *= c\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n   \
    \         flipped_string = flipped_string * uppercase[lowercase.index(c)]\n  \
    \      elseif c in uppercase\n            flipped_string = flipped_string * lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string = flipped_string * c\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ character in string\n        if islower(character)\n            flipped_string\
    \ = flipped_string * uppercase(character)\n        else\n            flipped_string\
    \ = flipped_string * lowercase(character)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(char)]\n        elseif\
    \ char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            flipped_string *= uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    return string[i] == uppercase(string[i]) ? lowercase(string[i])\
    \ : uppercase(string[i])\nend", "    new_string = \"\"\n    for i in string\n\
    \        if i in string.lowercase\n            new_string = new_string * string.uppercase[string.lowercase.index(i)]\n\
    \        elseif i in string.uppercase\n            new_string = new_string * string.lowercase[string.uppercase.index(i)]\n\
    \        else\n            new_string = new_string * i\n        end\n    end\n\
    \    return new_string\nend", "    return string.swapcase()\nend", "    return\
    \ string |> String.lowercase |> String.uppercase\nend", "    return [uppercase(c)\
    \ ? lowercase(c) : uppercase(c) for c in string]\nend", "    return [uppercase(c)\
    \ ? lowercase(c) ? c for c in string]\nend", "    flipped_string = \"\"\n    for\
    \ i in string\n        if i in lowercase\n            append!(flipped_string,\
    \ uppercase[findfirst(lowercase, i)])\n        elseif i in uppercase\n       \
    \     append!(flipped_string, lowercase[findfirst(uppercase, i)])\n        else\n\
    \            append!(flipped_string, i)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for i in string\n        if i in string.lowercase\n\
    \            flipped_string = flipped_string * i.upper()\n        elseif i in\
    \ string.uppercase\n            flipped_string = flipped_string * i.lower()\n\
    \        else\n            flipped_string = flipped_string * i\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in 'abcdefghijklmnopqrstuvwxyz'\n            flipped *= string(c)\n\
    \        elseif c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n            flipped *= string(c)\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            push!(flipped_string, uppercase[findall(lowercase, char)[1]])\n \
    \       elseif char in uppercase\n            push!(flipped_string, lowercase[findall(uppercase,\
    \ char)[1]])\n        else\n            push!(flipped_string, char)\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ c in string\n        if islower(c)\n            flipped_string *= uppercase(c)\n\
    \        elseif isupper(c)\n            flipped_string *= lowercase(c)\n     \
    \   else\n            flipped_string *= c\n        end\n    end\n    return flipped_string\n\
    end", "    \"\"\"\n    \"\"\"\n    flipped_string = \"\"\n    for char in string\n\
    \        if char in string.lowercase\n            flipped_string = flipped_string\
    \ * char.upper\n        elseif char in string.uppercase\n            flipped_string\
    \ = flipped_string * char.lower\n        else\n            flipped_string = flipped_string\
    \ * char\n        end\n    end\n    return flipped_string\nend", "    return [uppercase(c)\
    \ ? lowercase(c) : uppercase(c) for c in string]\nend", "    flipped_string =\
    \ \"\"\n    for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n    \
    \        flipped_string *= lowercase[uppercase.index(char)]\n        else\n  \
    \          flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    \"\"\"\n    >>> flip_case(\"Hello World\")\n    'hELLO wORLD'\n   \
    \ \"\"\"\n    new_string = \"\"\n    for i in string\n        if i in string.lowercase\n\
    \            new_string = new_string * i.upper()\n        else\n            new_string\
    \ = new_string * i.lower()\n    return new_string", "    \"\"\"\n    >>> flip_case(\"\
    Hello World\")\n    \"hELLO wORLD\"\n    \"\"\"\n    new_string = \"\"\n    for\
    \ char in string\n        if char in \"abcdefghijklmnopqrstuvwxyz\"\n        \
    \    new_string = new_string * char.upper()\n        elseif char in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * char.lower()\n        else\n         \
    \   new_string = new_string * char\n    end\n    return new_string\nend", "  \
    \  new_string = \"\"\n    for i in string\n        if i in string.lowercase\n\
    \            new_string = new_string * i.upper()\n        elseif i in string.uppercase\n\
    \            new_string = new_string * i.lower()\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for i in 1:length(string)\n        if string[i] in lowercase(string)\n\
    \            flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ string[i] in uppercase(string)\n            flipped_string = flipped_string\
    \ * lowercase(string[i])\n        else\n            flipped_string = flipped_string\
    \ * string[i]\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[findfirst(lowercase, char)]\n        elseif char in uppercase\n\
    \            flipped_string *= lowercase[findfirst(uppercase, char)]\n       \
    \ else\n            flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string *= uppercase[findfirst(lowercase, char)]\n       \
    \ elseif char in uppercase\n            flipped_string *= lowercase[findfirst(uppercase,\
    \ char)]\n        else\n            flipped_string *= char\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n\
    \        if islower(string[i])\n            flipped_string = flipped_string *\
    \ uppercase(string[i])\n        elseif isupper(string[i])\n            flipped_string\
    \ = flipped_string * lowercase(string[i])\n        else\n            flipped_string\
    \ = flipped_string * string[i]\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped = flipped * uppercase(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped = flipped * lowercase(i)\n        else\n            flipped\
    \ = flipped * i\n        end\n    end\n    return flipped\nend", "    flipped\
    \ = \"\"\n    for c in string\n        if c in lowercase\n            flipped\
    \ *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n          \
    \  flipped *= lowercase[uppercase.index(c)]\n        else\n            flipped\
    \ *= c\n        end\n    end\n    return flipped\nend", "    flipped_string =\
    \ \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n       \
    \     flipped_string = flipped_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * string[i]\n        end\n    end\n\
    \    return flipped_string\nend", "    new_string = \"\"\n    for i in string\n\
    \        if i in string.lowercase\n            new_string = new_string * i.upper()\n\
    \        elseif i in string.uppercase\n            new_string = new_string * i.lower()\n\
    \        else\n            new_string = new_string * i\n        end\n    end\n\
    \    return new_string\nend", "    flipped_string = \"\"\n    for i in string\n\
    \        if i in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string *=\
    \ i.upper()\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            flipped_string\
    \ *= i.lower()\n        else\n            flipped_string *= i\n        end\n \
    \   end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ i in 1:length(string)\n        if islower(string[i])\n            flipped_string\
    \ = flipped_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * string[i]\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n\
    \        if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            push!(flipped_string, uppercase[findfirst(lowercase,\
    \ char)])\n        elseif char in uppercase\n            push!(flipped_string,\
    \ lowercase[findfirst(uppercase, char)])\n        else\n            push!(flipped_string,\
    \ char)\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n     \
    \       flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ isupper(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * string[i]\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for c in string\n        if c in lowercase\n            flipped_string *=\
    \ uppercase[lowercase.index(c)]\n        elseif c in uppercase\n            flipped_string\
    \ *= lowercase[uppercase.index(c)]\n        else\n            flipped_string *=\
    \ c\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if islower(c)\n            flipped_string\
    \ *= uppercase(c)\n        else\n            flipped_string *= lowercase(c)\n\
    \        end\n    end\n    return flipped_string\nend", "    flipped = \"\"\n\
    \    for c in string\n        if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped = \"\"\n    for i in 1:length(string)\n        if string[i]\
    \ in lowercase(string)\n            flipped = flipped * uppercase(string[i])\n\
    \        else\n            flipped = flipped * lowercase(string[i])\n        end\n\
    \    end\n    return flipped\nend", "    return [uppercase(x) ? lowercase(x) ?\
    \ x for x in string]\nend", "    flipped_string = \"\"\n    for character in string\n\
    \        if character in lowercase\n            flipped_string = flipped_string\
    \ * uppercase[lowercase.index(character)]\n        elseif character in uppercase\n\
    \            flipped_string = flipped_string * lowercase[uppercase.index(character)]\n\
    \        else\n            flipped_string = flipped_string * character\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n    \
    \        flipped_string *= lowercase[uppercase.index(char)]\n        else\n  \
    \          flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in lowercase\n  \
    \          flipped *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n\
    \            flipped *= lowercase[uppercase.index(c)]\n        else\n        \
    \    flipped *= c\n        end\n    end\n    return flipped\nend", "    return\
    \ string |> String.lowercase |> String.uppercase\nend", "    flipped_string =\
    \ \"\"\n    for char in string\n        if char in lowercase\n            push!(flipped_string,\
    \ uppercase[findfirst(lowercase, char)])\n        elseif char in uppercase\n \
    \           push!(flipped_string, lowercase[findfirst(uppercase, char)])\n   \
    \     else\n            push!(flipped_string, char)\n        end\n    end\n  \
    \  return flipped_string\nend", "    new_string = \"\"\n    for i in string\n\
    \        if i \u2208 \"abcdefghijklmnopqrstuvwxyz\"\n            new_string *=\
    \ uppercase(i)\n        elseif i \u2208 \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n     \
    \       new_string *= lowercase(i)\n        else\n            new_string *= i\n\
    \        end\n    end\n    return new_string\nend", "    string = replace(string,\
    \ \"a\", \"A\")\n    string = replace(string, \"b\", \"B\")\n    string = replace(string,\
    \ \"c\", \"C\")\n    string = replace(string, \"d\", \"D\")\n    string = replace(string,\
    \ \"e\", \"E\")\n    string = replace(string, \"f\", \"F\")\n    string = replace(string,\
    \ \"g\", \"G\")\n    string = replace(string, \"h\", \"H\")\n    string = replace(string,\
    \ \"i\", \"I\")\n    string = replace(string, \"j\", \"J\")\n    string = replace(string,\
    \ \"k\", \"K\")\n    string = replace(string, \"l\", \"L\")\n    string = replace(string,\
    \ \"m\", \"M\")\n    string = replace(string, \"n\", \"N\")\n    string = replace(string,\
    \ \"o\", \"O\")\n    string = replace(string, \"p\", \"P\")\n    string = replace(string,\
    \ \"q\", \"Q\")\n    string = replace(string, \"r\", \"R\")\n    string = replace(string,\
    \ \"s\", \"S\")\n    string = replace(string, \"t\", \"T\")\n    string = replace(string,\
    \ \"u\", \"U\")\n    string = replace(string, \"v\", \"V\")\n    string = replace(string,\
    \ \"w\", \"W\")\n    string = replace(string, \"x\", \"X\")\n    string = replace(string,\
    \ \"y\", \"Y\")\n    string = replace(string, \"z\", \"Z\")\n    string = replace(string,\
    \ \"A\", \"a\")\n    string = replace(string, \"B\", \"b\")\n    string = replace(string,\
    \ \"C\", \"c\")\n    string = replace(string, \"D\", \"d\")\n    string = replace(string,\
    \ \"E\", \"e\")\n    string = replace(string, \"F\", \"f\")\n    string = replace(string,\
    \ \"G\", \"g\")\n    string = replace(string, \"H\", \"h\")\n    string = replace(string,\
    \ \"I\", \"i\")\n    string = replace(string, \"J\", \"j\")\n    string = replace(string,",
  "    flipped = \"\"\n    for c in string\n        if c in lowercase\n          \
    \  append!(flipped, uppercase[findfirst(lowercase, c)])\n        elseif c in uppercase\n\
    \            append!(flipped, lowercase[findfirst(uppercase, c)])\n        else\n\
    \            append!(flipped, c)\n        end\n    end\n    return flipped\nend",
  "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(char)]\n        elseif\
    \ char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            push!(flipped_string, uppercase[findfirst(lowercase,\
    \ char)])\n        elseif char in uppercase\n            push!(flipped_string,\
    \ lowercase[findfirst(uppercase, char)])\n        else\n            push!(flipped_string,\
    \ char)\n        end\n    end\n    return flipped_string\nend", "    return replace(string,\
    \ r\"[a-z]\", \"\\\\L\\\\0\")\nend", "    return string |> String.replace(\"a\"\
    , \"A\") |> String.replace(\"A\", \"a\")\nend", "    flipped_string = \"\"\n \
    \   for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n    \
    \        flipped_string *= lowercase[uppercase.index(char)]\n        else\n  \
    \          flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            push!(flipped_string, uppercase[findfirst(lowercase, char)])\n  \
    \      elseif char in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ char)])\n        else\n            push!(flipped_string, char)\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in lowercase\n            push!(flipped_string,\
    \ uppercase[findfirst(lowercase, char)])\n        elseif char in uppercase\n \
    \           push!(flipped_string, lowercase[findfirst(uppercase, char)])\n   \
    \     else\n            push!(flipped_string, char)\n        end\n    end\n  \
    \  return flipped_string\nend", "    flipped = \"\"\n    for c in string\n   \
    \     if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            flipped_string *= uppercase(character)\n        elseif isupper(character)\n\
    \            flipped_string *= lowercase(character)\n        else\n          \
    \  flipped_string *= character\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped *= uppercase(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= lowercase(c)\n        else\n            flipped *= c\n\
    \        end\n    end\n    return flipped\nend", "    return replace(string, r\"\
    [a-z]\", \"L\") |> replace(r\"[A-Z]\", \"l\")\nend", "    flipped = \"\"\n   \
    \ for c in string\n        if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    new_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            new_string = new_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            new_string = new_string * lowercase(string[i])\n        else\n  \
    \          new_string = new_string * string[i]\n        end\n    end\n    return\
    \ new_string\nend", "    flipped_string = \"\"\n    for character in string\n\
    \        if islower(character)\n            flipped_string *= uppercase(character)\n\
    \        elseif isupper(character)\n            flipped_string *= lowercase(character)\n\
    \        else\n            flipped_string *= character\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for char in\
    \ string\n        if char in string(\"abcdefghijklmnopqrstuvwxyz\")\n        \
    \    flipped_string = flipped_string * string(char)\n        elseif char in string(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            flipped_string = flipped_string * string(char)\n\
    \        else\n            flipped_string = flipped_string * string(char)\n  \
    \      end\n    end\n    return flipped_string\nend", "    flipped_string = \"\
    \"\n    for character in string\n        if islower(character)\n            push!(flipped_string,\
    \ uppercase(character))\n        elseif isupper(character)\n            push!(flipped_string,\
    \ lowercase(character))\n        else\n            push!(flipped_string, character)\n\
    \        end\n    end\n    return flipped_string\nend", "    flipped_string =\
    \ \"\"\n    for char in string\n        if char in lowercase\n            flipped_string\
    \ = flipped_string * uppercase[lowercase.index(char)]\n        elseif char in\
    \ uppercase\n            flipped_string = flipped_string * lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string = flipped_string * char\n        end\n\
    \    end\n    return flipped_string\nend", "    return [uppercase(c) ? lowercase(c)\
    \ : uppercase(c) for c in string]\nend", "    flipped_string = \"\"\n    for i\
    \ in 1:length(string)\n        if islower(string[i])\n            flipped_string\
    \ = flipped_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * string[i]\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for char in\
    \ string\n        if char in lowercase\n            flipped_string = flipped_string\
    \ * uppercase[lowercase.index(char)]\n        elseif char in uppercase\n     \
    \       flipped_string = flipped_string * lowercase[uppercase.index(char)]\n \
    \       else\n            flipped_string = flipped_string * char\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in lowercase\n            flipped_string *=\
    \ uppercase[lowercase.index(char)]\n        elseif char in uppercase\n       \
    \     flipped_string *= lowercase[uppercase.index(char)]\n        else\n     \
    \       flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for i in string\n        if islower(i)\n      \
    \      append!(flipped, uppercase(i))\n        elseif isupper(i)\n           \
    \ append!(flipped, lowercase(i))\n        else\n            append!(flipped, i)\n\
    \        end\n    end\n    return flipped\nend", "    flipped_string = \"\"\n\
    \    for i in string\n        if i in lowercase\n            flipped_string =\
    \ flipped_string * uppercase[lowercase.index(i)]\n        elseif i in uppercase\n\
    \            flipped_string = flipped_string * lowercase[uppercase.index(i)]\n\
    \        else\n            flipped_string = flipped_string * i\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in lowercase\n            flipped_string *=\
    \ uppercase[lowercase.index(char)]\n        elseif char in uppercase\n       \
    \     flipped_string *= lowercase[uppercase.index(char)]\n        else\n     \
    \       flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    return join([uppercase(c) for c in string])\nend", "    flipped = \"\
    \"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n    \
    \        flipped *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(c)\n        else\n            flipped *= c\n \
    \       end\n    end\n    return flipped\nend", "    flipped_string = \"\"\n \
    \   for c in string\n        if c in lowercase\n            flipped_string *=\
    \ uppercase[lowercase.index(c)]\n        elseif c in uppercase\n            flipped_string\
    \ *= lowercase[uppercase.index(c)]\n        else\n            flipped_string *=\
    \ c\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if islower(character)\n       \
    \     flipped_string = flipped_string * uppercase(character)\n        elseif isupper(character)\n\
    \            flipped_string = flipped_string * lowercase(character)\n        else\n\
    \            flipped_string = flipped_string * character\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for char in\
    \ string\n        if char in lowercase\n            push!(flipped_string, uppercase[findfirst(lowercase,\
    \ char)])\n        elseif char in uppercase\n            push!(flipped_string,\
    \ lowercase[findfirst(uppercase, char)])\n        else\n            push!(flipped_string,\
    \ char)\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n     \
    \       flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ isupper(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * string[i]\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for char in string\n        if char in string.lowercase\n            flipped_string\
    \ = flipped_string * char.upper\n        elseif char in string.uppercase\n   \
    \         flipped_string = flipped_string * char.lower\n        else\n       \
    \     flipped_string = flipped_string * char\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped = \"\"\n    for c in string\n        if c\
    \ in lowercase\n            flipped *= uppercase[findfirst(lowercase, c)]\n  \
    \      elseif c in uppercase\n            flipped *= lowercase[findfirst(uppercase,\
    \ c)]\n        else\n            flipped *= c\n        end\n    end\n    return\
    \ flipped\nend", "    flipped_string = \"\"\n    for i in string\n        if i\
    \ in string.lowercase\n            flipped_string = flipped_string * i.upper()\n\
    \        else\n            flipped_string = flipped_string * i.lower()\n     \
    \   end\n    end\n    return flipped_string\nend", "    string = replace(string,\
    \ r\"[a-z]\", \"L\")\n    string = replace(string, r\"[A-Z]\", \"l\")\n    string\
    \ = replace(string, r\"L\", \"\\\\U\\\\1\")\n    string = replace(string, r\"\
    l\", \"\\\\u\\\\1\")\n    return string\nend", "    flipped_string = \"\"\n  \
    \  for i in 1:length(string)\n        if islower(string[i])\n            flipped_string\
    \ = flipped_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * string[i]\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n\
    \        if islower(string[i])\n            flipped_string = flipped_string *\
    \ uppercase(string[i])\n        elseif isupper(string[i])\n            flipped_string\
    \ = flipped_string * lowercase(string[i])\n        else\n            flipped_string\
    \ = flipped_string * string[i]\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in string.lowercase\n\
    \            new_string = new_string * i.upper()\n        elseif i in string.uppercase\n\
    \            new_string = new_string * i.lower()\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    flipped\
    \ = \"\"\n    for c in string\n        if c in lowercase\n            push!(flipped,\
    \ uppercase[findfirst(lowercase, c)])\n        elseif c in uppercase\n       \
    \     push!(flipped, lowercase[findfirst(uppercase, c)])\n        else\n     \
    \       push!(flipped, c)\n        end\n    end\n    return flipped\nend", " \
    \   return [uppercase(c) ? lowercase(c) ? c for c in string]\nend", "    new_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            new_string\
    \ = new_string * uppercase[lowercase.index(char)]\n        elseif char in uppercase\n\
    \            new_string = new_string * lowercase[uppercase.index(char)]\n    \
    \    else\n            new_string = new_string * char\n        end\n    end\n\
    \    return new_string\nend", "    flipped_string = \"\"\n    for char in string\n\
    \        if char in lowercase\n            flipped_string *= uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    return [uppercase(c) ? lowercase(c) : uppercase(c)\
    \ for c in string]\nend", "    new_string = \"\"\n    for c in string\n      \
    \  if c in lowercase\n            append!(new_string, uppercase[findfirst(lowercase,\
    \ c)])\n        elseif c in uppercase\n            append!(new_string, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            append!(new_string, c)\n        end\n    end\n\
    \    return new_string\nend", "    flipped_string = \"\"\n    for character in\
    \ string\n        if character in lowercase\n            flipped_string *= uppercase[lowercase.index(character)]\n\
    \        elseif character in uppercase\n            flipped_string *= lowercase[uppercase.index(character)]\n\
    \        else\n            flipped_string *= character\n        end\n    end\n\
    \    return flipped_string\nend", "    string = replace(string, r\"[a-z]\", s->uppercase(s))\n\
    \    string = replace(string, r\"[A-Z]\", s->lowercase(s))\n    return string\n\
    end", "    flipped_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ isupper(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * string[i]\n     \
    \   end\n    end\n    return flipped_string\nend", "    return string[1:end] .|>\
    \ x -> islower(x) ? uppercase(x) : lowercase(x)\nend", "    flipped_string = \"\
    \"\n    for i in string\n        if islower(i)\n            push!(flipped_string,\
    \ uppercase(i))\n        elseif isupper(i)\n            push!(flipped_string,\
    \ lowercase(i))\n        else\n            push!(flipped_string, i)\n        end\n\
    \    end\n    return flipped_string\nend", "    \"\"\"\n    \"\"\"\n    flipped_string\
    \ = \"\"\n    for i in string\n        if islower(i)\n            flipped_string\
    \ *= uppercase(i)\n        elseif isupper(i)\n            flipped_string *= lowercase(i)\n\
    \        else\n            flipped_string *= i\n        end\n    end\n    return\
    \ flipped_string\nend", "    return [uppercase(c) for c in string]\nend", "  \
    \  flipped_string = \"\"\n    for c in string\n        if islower(c)\n       \
    \     flipped_string *= uppercase(c)\n        elseif isupper(c)\n            flipped_string\
    \ *= lowercase(c)\n        else\n            flipped_string *= c\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ character in string\n        if character in lowercase\n            flipped_string\
    \ = flipped_string * uppercase[lowercase.index(character)]\n        elseif character\
    \ in uppercase\n            flipped_string = flipped_string * lowercase[uppercase.index(character)]\n\
    \        else\n            flipped_string = flipped_string * character\n     \
    \   end\n    end\n    return flipped_string\nend", "    new_string = \"\"\n  \
    \  for i in string\n        if i in lowercase\n            push!(new_string, uppercase[findfirst(lowercase,\
    \ i)])\n        elseif i in uppercase\n            push!(new_string, lowercase[findfirst(uppercase,\
    \ i)])\n        else\n            push!(new_string, i)\n        end\n    end\n\
    \    return new_string\nend", "    flipped_string = \"\"\n    for c in string\n\
    \        if islower(c)\n            append!(flipped_string, uppercase(c))\n  \
    \      elseif isupper(c)\n            append!(flipped_string, lowercase(c))\n\
    \        else\n            append!(flipped_string, c)\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n \
    \       if c in lowercase\n            flipped *= uppercase[findfirst(lowercase,\
    \ c)]\n        elseif c in uppercase\n            flipped *= lowercase[findfirst(uppercase,\
    \ c)]\n        else\n            flipped *= c\n        end\n    end\n    return\
    \ flipped\nend", "    return string.swapcase()\nend", "    return string.swapcase()\n\
    end", "    flipped = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            flipped = flipped * string[i]\n        else\n            flipped\
    \ = flipped * uppercase(string[i])\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(c)]\n        elseif c\
    \ in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            flipped_string = flipped_string * uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(char)]\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    return [uppercase(c) ? c : lowercase(c) ? c : c for c in string]\nend", " \
    \   return string[1:end] .|> x -> x == uppercase(x) ? lowercase(x) : uppercase(x)\n\
    end", "    return replace(string, r\"[a-z]\", \"L\")\nend", "    flipped = \"\"\
    \n    for c in string\n        if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            push!(flipped_string, uppercase[findfirst(lowercase, char)])\n  \
    \      elseif char in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ char)])\n        else\n            push!(flipped_string, char)\n        end\n\
    \    end\n    return flipped_string\nend", "    return string.swapcase()\nend",
  "    return string.swapcase()\nend", "    \"\"\"\n    >>> flip_case(\"Hello World\"\
    )\n    'hELLO wORLD'\n    \"\"\"\n    new_string = \"\"\n    for char in string\n\
    \        if char in string.lowercase\n            new_string = new_string * char.upper()\n\
    \        elseif char in string.uppercase\n            new_string = new_string\
    \ * char.lower()\n        else\n            new_string = new_string * char\n \
    \   end\n    return new_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in string.lowercase\n\
    \            flipped_string = flipped_string * c.upper()\n        elseif c in\
    \ string.uppercase\n            flipped_string = flipped_string * c.lower()\n\
    \        else\n            flipped_string = flipped_string * c\n        end\n\
    \    end\n    return flipped_string\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

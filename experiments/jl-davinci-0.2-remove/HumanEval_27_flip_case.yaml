name: HumanEval_27_flip_case
language: jl
prompt: "\"\"\" For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n        \"\"\"\nfunction flip_case(string::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
  \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
  These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")\nend\n"
completions: ["    return string.swapcase()\nend", "    return string[1:end] .|> x\
    \ -> x == uppercase(x) ? lowercase(x) : uppercase(x)\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if c in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n          \
    \  flipped_string *= lowercase[uppercase.index(c)]\n        else\n           \
    \ flipped_string *= c\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ isupper(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * string[i]\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for character in string\n        if islower(character)\n            flipped_string\
    \ = flipped_string * uppercase(character)\n        else\n            flipped_string\
    \ = flipped_string * lowercase(character)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in lowercase\n  \
    \          push!(flipped, uppercase[findfirst(lowercase, c)])\n        elseif\
    \ c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase, c)])\n\
    \        else\n            push!(flipped, c)\n        end\n    end\n    return\
    \ flipped\nend", "    flipped_string = \"\"\n    for c in string\n        if c\
    \ in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    return [uppercase(c) for c in string]\nend", "  \
    \  flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(char)]\n        elseif\
    \ char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n    \
    \    if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for i in string\n    \
    \    if i in lowercase\n            append!(flipped_string, uppercase[findfirst(lowercase,\
    \ i)])\n        elseif i in uppercase\n            append!(flipped_string, lowercase[findfirst(uppercase,\
    \ i)])\n        else\n            append!(flipped_string, i)\n        end\n  \
    \  end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for c\
    \ in string\n        if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n\
    \        if islower(string[i])\n            flipped_string = flipped_string *\
    \ string[i]\n        elseif isupper(string[i])\n            flipped_string = flipped_string\
    \ * lowercase(string[i])\n        else\n            flipped_string = flipped_string\
    \ * string[i]\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if c in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n          \
    \  flipped_string *= lowercase[uppercase.index(c)]\n        else\n           \
    \ flipped_string *= c\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n   \
    \         flipped_string *= uppercase[lowercase.index(c)]\n        elseif c in\
    \ uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n   \
    \     else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            flipped_string = flipped_string * uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(char)]\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for i in string\n        if i in string.lowercase\n\
    \            flipped_string = flipped_string * i.upper()\n        elseif i in\
    \ string.uppercase\n            flipped_string = flipped_string * i.lower()\n\
    \        else\n            flipped_string = flipped_string * i\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in lowercase\n            flipped_string = flipped_string\
    \ * uppercase[lowercase.index(char)]\n        elseif char in uppercase\n     \
    \       flipped_string = flipped_string * lowercase[uppercase.index(char)]\n \
    \       else\n            flipped_string = flipped_string * char\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string\
    \ = flipped_string * i\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n \
    \           flipped_string = flipped_string * i\n        else\n            flipped_string\
    \ = flipped_string * i\n        end\n    end\n    return flipped_string\nend",
  "    return string |> String.lowercase |> String.uppercase\nend", "    return replace(string,\
    \ r\"[a-z]\", \"L\") |> replace(r\"[A-Z]\", \"l\")\nend", "    flipped_string\
    \ = \"\"\n    for i in string\n        if i in lowercase\n            flipped_string\
    \ = flipped_string * uppercase[lowercase.index(i)]\n        elseif i in uppercase\n\
    \            flipped_string = flipped_string * lowercase[uppercase.index(i)]\n\
    \        else\n            flipped_string = flipped_string * i\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string\
    \ *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n         \
    \   flipped_string *= string(c)\n        else\n            flipped_string *= c\n\
    \        end\n    end\n    return flipped_string\nend", "    flipped_string =\
    \ \"\"\n    for c in string\n        if c in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n          \
    \  flipped_string *= lowercase[uppercase.index(c)]\n        else\n           \
    \ flipped_string *= c\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            flipped_string *= uppercase(character)\n        elseif isupper(character)\n\
    \            flipped_string *= lowercase(character)\n        else\n          \
    \  flipped_string *= character\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in lowercase\n  \
    \          flipped *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n\
    \            flipped *= lowercase[uppercase.index(c)]\n        else\n        \
    \    flipped *= c\n        end\n    end\n    return flipped\nend", "    flipped_string\
    \ = \"\"\n    for c in string\n        if c in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n          \
    \  flipped_string *= lowercase[uppercase.index(c)]\n        else\n           \
    \ flipped_string *= c\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for char in string\n        if islower(char)\n \
    \           flipped_string *= uppercase(char)\n        elseif isupper(char)\n\
    \            flipped_string *= lowercase(char)\n        else\n            flipped_string\
    \ *= char\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            flipped_string\
    \ = flipped_string * uppercase[lowercase.index(char)]\n        elseif char in\
    \ uppercase\n            flipped_string = flipped_string * lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string = flipped_string * char\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in lowercase\n            flipped_string *=\
    \ uppercase[lowercase.index(char)]\n        elseif char in uppercase\n       \
    \     flipped_string *= lowercase[uppercase.index(char)]\n        else\n     \
    \       flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in string.lowercase\n\
    \            flipped_string = flipped_string * char.upper()\n        elseif char\
    \ in string.uppercase\n            flipped_string = flipped_string * char.lower()\n\
    \        else\n            flipped_string = flipped_string * char\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped = String[]\n    for c\
    \ in string\n        if c in lowercase\n            push!(flipped, uppercase[findfirst(lowercase,\
    \ c)])\n        elseif c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            push!(flipped, c)\n        end\n    end\n  \
    \  return join(flipped)\nend", "    flipped_string = \"\"\n    for i in string\n\
    \        if islower(i)\n            flipped_string = flipped_string * uppercase(i)\n\
    \        elseif isupper(i)\n            flipped_string = flipped_string * lowercase(i)\n\
    \        else\n            flipped_string = flipped_string * i\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ c in string\n        if c in lowercase\n            flipped_string = flipped_string\
    \ * uppercase[lowercase.index(c)]\n        elseif c in uppercase\n           \
    \ flipped_string = flipped_string * lowercase[uppercase.index(c)]\n        else\n\
    \            flipped_string = flipped_string * c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n\
    \        if islower(string[i])\n            flipped_string = string[i] |> uppercase\
    \ |> string\n        elseif isupper(string[i])\n            flipped_string = string[i]\
    \ |> lowercase |> string\n        else\n            flipped_string = string[i]\
    \ |> string\n        end\n    end\n    return flipped_string\nend", "    return\
    \ string |> String.flip_case\nend", "    flipped_string = \"\"\n    for char in\
    \ string\n        if char in lowercase\n            flipped_string = flipped_string\
    \ * uppercase[lowercase.index(char)]\n        elseif char in uppercase\n     \
    \       flipped_string = flipped_string * lowercase[uppercase.index(char)]\n \
    \       else\n            flipped_string = flipped_string * char\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ char in string\n        if char in lowercase\n            push!(flipped_string,\
    \ uppercase[findfirst(lowercase, char)])\n        elseif char in uppercase\n \
    \           push!(flipped_string, lowercase[findfirst(uppercase, char)])\n   \
    \     else\n            push!(flipped_string, char)\n        end\n    end\n  \
    \  return flipped_string\nend", "    flipped = \"\"\n    for c in string\n   \
    \     if c in lowercase\n            push!(flipped, uppercase[findfirst(lowercase,\
    \ c)])\n        elseif c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            push!(flipped, c)\n        end\n    end\n  \
    \  return flipped\nend", "    flipped = \"\"\n    for c in string\n        if\
    \ c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n     \
    \   elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string = flipped_string * uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string = flipped_string *\
    \ lowercase[uppercase.index(c)]\n        else\n            flipped_string = flipped_string\
    \ * c\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            flipped_string\
    \ = flipped_string * uppercase[lowercase.index(char)]\n        elseif char in\
    \ uppercase\n            flipped_string = flipped_string * lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string = flipped_string * char\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in lowercase\n            push!(flipped, uppercase[findfirst(lowercase,\
    \ c)])\n        elseif c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            push!(flipped, c)\n        end\n    end\n  \
    \  return flipped\nend", "    flipped_string = \"\"\n    for c in string\n   \
    \     if islower(c)\n            flipped_string *= uppercase(c)\n        elseif\
    \ isupper(c)\n            flipped_string *= lowercase(c)\n        else\n     \
    \       flipped_string *= c\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string = flipped_string * uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(char)]\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    new_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            new_string = new_string * uppercase(string[i])\n        else\n  \
    \          new_string = new_string * lowercase(string[i])\n        end\n    end\n\
    \    return new_string\nend", "    string = string.lower()\n    string = string.replace(\"\
    a\", \"A\")\n    string = string.replace(\"b\", \"B\")\n    string = string.replace(\"\
    c\", \"C\")\n    string = string.replace(\"d\", \"D\")\n    string = string.replace(\"\
    e\", \"E\")\n    string = string.replace(\"f\", \"F\")\n    string = string.replace(\"\
    g\", \"G\")\n    string = string.replace(\"h\", \"H\")\n    string = string.replace(\"\
    i\", \"I\")\n    string = string.replace(\"j\", \"J\")\n    string = string.replace(\"\
    k\", \"K\")\n    string = string.replace(\"l\", \"L\")\n    string = string.replace(\"\
    m\", \"M\")\n    string = string.replace(\"n\", \"N\")\n    string = string.replace(\"\
    o\", \"O\")\n    string = string.replace(\"p\", \"P\")\n    string = string.replace(\"\
    q\", \"Q\")\n    string = string.replace(\"r\", \"R\")\n    string = string.replace(\"\
    s\", \"S\")\n    string = string.replace(\"t\", \"T\")\n    string = string.replace(\"\
    u\", \"U\")\n    string = string.replace(\"v\", \"V\")\n    string = string.replace(\"\
    w\", \"W\")\n    string = string.replace(\"x\", \"X\")\n    string = string.replace(\"\
    y\", \"Y\")\n    string = string.replace(\"z\", \"Z\")\n    return string\nend",
  "    flipped = \"\"\n    for c in string\n        if c in lowercase\n          \
    \  flipped *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n \
    \           flipped *= lowercase[uppercase.index(c)]\n        else\n         \
    \   flipped *= c\n        end\n    end\n    return flipped\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if character in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n            flipped_string = flipped_string * string(character)\n        elseif\
    \ character in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            flipped_string\
    \ = flipped_string * string(character)\n        else\n            flipped_string\
    \ = flipped_string * character\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c \u2208 lowercase\n\
    \            append!(flipped, uppercase[findfirst(lowercase, c)])\n        elseif\
    \ c \u2208 uppercase\n            append!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            append!(flipped, c)\n        end\n    end\n\
    \    return flipped\nend", "    flipped_string = \"\"\n    for c in string\n \
    \       if islower(c)\n            flipped_string *= uppercase(c)\n        elseif\
    \ isupper(c)\n            flipped_string *= lowercase(c)\n        else\n     \
    \       flipped_string *= c\n        end\n    end\n    return flipped_string\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in string.lowercase\n\
    \            new_string = new_string * i.upper()\n        elseif i in string.uppercase\n\
    \            new_string = new_string * i.lower()\n        else\n            new_string\
    \ = new_string * i\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n     \
    \       flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ isupper(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * string[i]\n     \
    \   end\n    end\n    return flipped_string\nend", "    new_string = \"\"\n  \
    \  for char in string\n        if char in string(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n            new_string = new_string * string(char)\n        elseif char in\
    \ string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            new_string = new_string\
    \ * string(char)\n        else\n            new_string = new_string * char\n \
    \       end\n    end\n    return new_string\nend", "    flipped_string = \"\"\n\
    \    for c in string\n        if c \u2208 lowercase\n            push!(flipped_string,\
    \ uppercase[findfirst(lowercase, c)])\n        elseif c \u2208 uppercase\n   \
    \         push!(flipped_string, lowercase[findfirst(uppercase, c)])\n        else\n\
    \            push!(flipped_string, c)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(c)]\n        elseif c\
    \ in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    return join([uppercase(x) for x in string])\nend",
  "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(char)]\n        elseif\
    \ char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    return string.swapcase()\nend", "    return string[1:end]\
    \ .|> x -> x >= 'a' ? uppercase(x) : lowercase(x)\nend", "    return [uppercase(c)\
    \ ? lowercase(c) ? c for c in string]\nend", "    return string.swapcase()\nend",
  "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n   \
    \         flipped_string *= uppercase[lowercase.index(c)]\n        elseif c in\
    \ uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n   \
    \     else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for character in string\n\
    \        if islower(character)\n            flipped_string *= uppercase(character)\n\
    \        else\n            flipped_string *= lowercase(character)\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ character in string\n        if islower(character)\n            flipped_string\
    \ *= uppercase(character)\n        elseif isupper(character)\n            flipped_string\
    \ *= lowercase(character)\n        else\n            flipped_string *= character\n\
    \        end\n    end\n    return flipped_string\nend", "    flipped_string =\
    \ \"\"\n    for i in string\n        if i in string.lowercase\n            flipped_string\
    \ = flipped_string * i.upper()\n        elseif i in string.uppercase\n       \
    \     flipped_string = flipped_string * i.lower()\n        else\n            flipped_string\
    \ = flipped_string * i\n        end\n    end\n    return flipped_string\nend",
  "    return string.swapcase()\nend", "    flipped_string = \"\"\n    for char in\
    \ string\n        if islower(char)\n            flipped_string = flipped_string\
    \ * uppercase(char)\n        elseif isupper(char)\n            flipped_string\
    \ = flipped_string * lowercase(char)\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for i in 1:length(string)\n        if string[i]\
    \ == uppercase(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * uppercase(string[i])\n\
    \        end\n    end\n    return flipped_string\nend", "    flipped_string =\
    \ \"\"\n    for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n    \
    \        flipped_string *= lowercase[uppercase.index(char)]\n        else\n  \
    \          flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for i in string\n        if i in lowercase\n  \
    \          append!(flipped, uppercase[findfirst(lowercase, i)])\n        elseif\
    \ i in uppercase\n            append!(flipped, lowercase[findfirst(uppercase,\
    \ i)])\n        else\n            append!(flipped, i)\n        end\n    end\n\
    \    return flipped\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n\
    \        if islower(string[i])\n            flipped_string = flipped_string *\
    \ uppercase(string[i])\n        elseif isupper(string[i])\n            flipped_string\
    \ = flipped_string * lowercase(string[i])\n        else\n            flipped_string\
    \ = flipped_string * string[i]\n        end\n    end\n    return flipped_string\n\
    end", "    string = string.lower()\n    string = string.replace(\"a\", \"A\")\n\
    \    string = string.replace(\"b\", \"B\")\n    string = string.replace(\"c\"\
    , \"C\")\n    string = string.replace(\"d\", \"D\")\n    string = string.replace(\"\
    e\", \"E\")\n    string = string.replace(\"f\", \"F\")\n    string = string.replace(\"\
    g\", \"G\")\n    string = string.replace(\"h\", \"H\")\n    string = string.replace(\"\
    i\", \"I\")\n    string = string.replace(\"j\", \"J\")\n    string = string.replace(\"\
    k\", \"K\")\n    string = string.replace(\"l\", \"L\")\n    string = string.replace(\"\
    m\", \"M\")\n    string = string.replace(\"n\", \"N\")\n    string = string.replace(\"\
    o\", \"O\")\n    string = string.replace(\"p\", \"P\")\n    string = string.replace(\"\
    q\", \"Q\")\n    string = string.replace(\"r\", \"R\")\n    string = string.replace(\"\
    s\", \"S\")\n    string = string.replace(\"t\", \"T\")\n    string = string.replace(\"\
    u\", \"U\")\n    string = string.replace(\"v\", \"V\")\n    string = string.replace(\"\
    w\", \"W\")\n    string = string.replace(\"x\", \"X\")\n    string = string.replace(\"\
    y\", \"Y\")\n    string = string.replace(\"z\", \"Z\")\n    return string\nend",
  "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n   \
    \         push!(flipped_string, uppercase[findfirst(lowercase, c)])\n        elseif\
    \ c in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            push!(flipped_string, c)\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n \
    \       if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    new_string = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            new_string *= uppercase(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string *= lowercase(i)\n        else\n            new_string\
    \ *= i\n        end\n    end\n    return new_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n    \
    \        flipped_string *= lowercase[uppercase.index(char)]\n        else\n  \
    \          flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string = flipped_string * uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(char)]\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n   \
    \         flipped_string = flipped_string * uppercase[lowercase.index(c)]\n  \
    \      elseif c in uppercase\n            flipped_string = flipped_string * lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string = flipped_string * c\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ character in string\n        if islower(character)\n            flipped_string\
    \ *= uppercase(character)\n        else\n            flipped_string *= lowercase(character)\n\
    \        end\n    end\n    return flipped_string\nend", "    flipped_string =\
    \ \"\"\n    for c in string\n        if c in lowercase\n            append!(flipped_string,\
    \ uppercase[findfirst(lowercase, c)])\n        elseif c in uppercase\n       \
    \     append!(flipped_string, lowercase[findfirst(uppercase, c)])\n        else\n\
    \            append!(flipped_string, c)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for char in string\n        if char in lowercase\n\
    \            push!(flipped, uppercase[findfirst(lowercase, char)])\n        elseif\
    \ char in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ char)])\n        else\n            push!(flipped, char)\n        end\n    end\n\
    \    return flipped\nend", "    flipped = \"\"\n    for c in string\n        if\
    \ c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n     \
    \   elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for i in string\n        if islower(i)\n\
    \            append!(flipped_string, uppercase(i))\n        elseif isupper(i)\n\
    \            append!(flipped_string, lowercase(i))\n        else\n           \
    \ append!(flipped_string, i)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if islower(c)\n\
    \            flipped_string = flipped_string * uppercase(c)\n        elseif isupper(c)\n\
    \            flipped_string = flipped_string * lowercase(c)\n        else\n  \
    \          flipped_string = flipped_string * c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped = \"\"\n    for c in string\n        if islower(c)\n\
    \            flipped *= uppercase(c)\n        elseif isupper(c)\n            flipped\
    \ *= lowercase(c)\n        else\n            flipped *= c\n        end\n    end\n\
    \    return flipped\nend", "    flipped_string = \"\"\n    for char in string\n\
    \        if char in lowercase\n            push!(flipped_string, uppercase[findfirst(lowercase,\
    \ char)])\n        elseif char in uppercase\n            push!(flipped_string,\
    \ lowercase[findfirst(uppercase, char)])\n        else\n            push!(flipped_string,\
    \ char)\n        end\n    end\n    return flipped_string\nend", "    return string\
    \ |> String.replace(\"a\", \"A\") |> String.replace(\"A\", \"a\")\nend", "   \
    \ flipped = \"\"\n    for c in string\n        if c in lowercase\n           \
    \ flipped *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n  \
    \          flipped *= lowercase[uppercase.index(c)]\n        else\n          \
    \  flipped *= c\n        end\n    end\n    return flipped\nend", "    new_string\
    \ = \"\"\n    for i in string\n        if i in \"abcdefghijklmnopqrstuvwxyz\"\n\
    \            new_string = new_string * string(i)\n        elseif i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            new_string = new_string * string(lowercase(i))\n        else\n \
    \           new_string = new_string * string(i)\n        end\n    end\n    return\
    \ new_string\nend", "    flipped = \"\"\n    for c in string\n        if c in\
    \ lowercase\n            flipped *= uppercase[lowercase.index(c)]\n        elseif\
    \ c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n     \
    \   else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(c)]\n        elseif c\
    \ in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if islower(char)\n            push!(flipped_string, uppercase(char))\n\
    \        elseif isupper(char)\n            push!(flipped_string, lowercase(char))\n\
    \        else\n            push!(flipped_string, char)\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for i in string\n\
    \        if i in string.lowercase\n            flipped_string = flipped_string\
    \ * i.upper()\n        elseif i in string.uppercase\n            flipped_string\
    \ = flipped_string * i.lower()\n        else\n            flipped_string = flipped_string\
    \ * i\n        end\n    end\n    return flipped_string\nend", "    flipped = \"\
    \"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\n    \
    \        flipped *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(c)\n        else\n            flipped *= c\n \
    \       end\n    end\n    return flipped\nend", "    flipped = \"\"\n    for c\
    \ in string\n        if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            push!(flipped_string, uppercase[findfirst(lowercase, char)])\n  \
    \      elseif char in uppercase\n            push!(flipped_string, lowercase[findfirst(uppercase,\
    \ char)])\n        else\n            push!(flipped_string, char)\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped_string = \"\"\n    for\
    \ c in string\n        if c in lowercase\n            flipped_string = flipped_string\
    \ * uppercase[lowercase.index(c)]\n        elseif c in uppercase\n           \
    \ flipped_string = flipped_string * lowercase[uppercase.index(c)]\n        else\n\
    \            flipped_string = flipped_string * c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for i in string\n    \
    \    if i in lowercase\n            flipped_string *= uppercase[lowercase.index(i)]\n\
    \        elseif i in uppercase\n            flipped_string *= lowercase[uppercase.index(i)]\n\
    \        else\n            flipped_string *= i\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n    \
    \    if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if islower(char)\n            flipped_string *= uppercase(char)\n    \
    \    elseif isupper(char)\n            flipped_string *= lowercase(char)\n   \
    \     else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n    \
    \    if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    return [uppercase(c) for c in string]\nend", "  \
    \  flipped_string = \"\"\n    for c in string\n        if c in lowercase\n   \
    \         flipped_string = flipped_string * uppercase[lowercase.index(c)]\n  \
    \      elseif c in uppercase\n            flipped_string = flipped_string * lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string = flipped_string * c\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in string(\"\
    abcdefghijklmnopqrstuvwxyz\")\n            flipped_string = flipped_string * string(char).upper()\n\
    \        elseif char in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            flipped_string\
    \ = flipped_string * string(char).lower()\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped = \"\"\n    for c in string\n        if c in lowercase\n          \
    \  flipped *= uppercase[lowercase.index(c)]\n        elseif c in uppercase\n \
    \           flipped *= lowercase[uppercase.index(c)]\n        else\n         \
    \   flipped *= c\n        end\n    end\n    return flipped\nend", "    \"\"\"\n\
    \    >>> flip_case(\"Hello World\")\n    'hELLO wORLD'\n    \"\"\"\n    new_string\
    \ = \"\"\n    for i in string\n        if i in string.lowercase\n            new_string\
    \ = new_string * i.upper()\n        else\n            new_string = new_string\
    \ * i.lower()\n    return new_string", "    flipped_string = \"\"\n    for char\
    \ in string\n        if char in lowercase\n            flipped_string *= uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped = \"\"\n    for c in string\n        if c\
    \ in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n       \
    \ elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    return join([uppercase(x) for x in string])\nend", "    return string.swapcase()\n\
    end", "    return [uppercase(c) ? lowercase(c) : uppercase(c) for c in string]\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(char)]\n        elseif\
    \ char in uppercase\n            flipped_string *= lowercase[uppercase.index(char)]\n\
    \        else\n            flipped_string *= char\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            push!(flipped_string, uppercase[findfirst(lowercase,\
    \ char)])\n        elseif char in uppercase\n            push!(flipped_string,\
    \ lowercase[findfirst(uppercase, char)])\n        else\n            push!(flipped_string,\
    \ char)\n        end\n    end\n    return flipped_string\nend", "    return string.swapcase()\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string *= uppercase[lowercase.index(c)]\n        elseif c\
    \ in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n    \
    \    if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n    \
    \    if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n    \
    \    if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped = \"\"\n    for c in string\n        if c\
    \ in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n       \
    \ elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    return [uppercase(c) ? lowercase(c) : uppercase(c) for c in string]\n\
    end", "    flipped_string = \"\"\n    for char in string\n        if islower(char)\n\
    \            push!(flipped_string, uppercase(char))\n        elseif isupper(char)\n\
    \            push!(flipped_string, lowercase(char))\n        else\n          \
    \  push!(flipped_string, char)\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped *= string(c)\n        elseif c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped *= string(c)\n        else\n            flipped *= c\n \
    \       end\n    end\n    return flipped\nend", "    return string[1:end] .|>\
    \ x -> x == uppercase(x) ? lowercase(x) : uppercase(x)\nend", "    flipped = \"\
    \"\n    for c in string\n        if c in lowercase\n            flipped *= uppercase[findfirst(lowercase,\
    \ c)]\n        elseif c in uppercase\n            flipped *= lowercase[findfirst(uppercase,\
    \ c)]\n        else\n            flipped *= c\n        end\n    end\n    return\
    \ flipped\nend", "    flipped_string = \"\"\n    for char in string\n        if\
    \ char in string(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")\n            flipped_string = flipped_string\
    \ * string(char.upper())\n        elseif char in string(\"A\", \"B\", \"C\", \"\
    D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"\
    O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"\
    Z\")\n            flipped_string = flipped_string * string(char.lower())\n   \
    \     else\n            flipped_string = flipped_string * string(char)\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for i in 1:length(string)\n        if islower(string[i])\n            flipped_string\
    \ = string[i] |> uppercase |> string\n        elseif isupper(string[i])\n    \
    \        flipped_string = string[i] |> lowercase |> string\n        else\n   \
    \         flipped_string = string[i] |> string\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n    \
    \    if c in lowercase\n            flipped_string = flipped_string * uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string = flipped_string *\
    \ lowercase[uppercase.index(c)]\n        else\n            flipped_string = flipped_string\
    \ * c\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n    \
    \        flipped_string *= lowercase[uppercase.index(char)]\n        else\n  \
    \          flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            flipped_string *= uppercase(character)\n        elseif isupper(character)\n\
    \            flipped_string *= lowercase(character)\n        else\n          \
    \  flipped_string *= character\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in lowercase\n  \
    \          flipped *= uppercase[findfirst(lowercase, c)]\n        elseif c in\
    \ uppercase\n            flipped *= lowercase[findfirst(uppercase, c)]\n     \
    \   else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    return replace(string, r\"[a-z]\", \"L\", ignorecase=true)\nend", " \
    \   flipped_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ isupper(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * string[i]\n     \
    \   end\n    end\n    return flipped_string\nend", "    return [uppercase(c) ?\
    \ lowercase(c) ? c for c in string]\nend", "    flipped_string = \"\"\n    for\
    \ i in 1:length(string)\n        if islower(string[i])\n            flipped_string\
    \ = flipped_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * string[i]\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n\
    \        if islower(string[i])\n            append!(flipped_string, uppercase(string[i]))\n\
    \        elseif isupper(string[i])\n            append!(flipped_string, lowercase(string[i]))\n\
    \        else\n            append!(flipped_string, string[i])\n        end\n \
    \   end\n    return flipped_string\nend", "    flipped = \"\"\n    for char in\
    \ string\n        if char in lowercase\n            push!(flipped, uppercase[findfirst(lowercase,\
    \ char)])\n        elseif char in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ char)])\n        else\n            push!(flipped, char)\n        end\n    end\n\
    \    return flipped\nend", "    flipped_string = \"\"\n    for c in string\n \
    \       if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for character in string\n\
    \        if character in \"abcdefghijklmnopqrstuvwxyz\"\n            flipped_string\
    \ *= string(character)\n        elseif character in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n            flipped_string *= string(character)\n        else\n            flipped_string\
    \ *= character\n        end\n    end\n    return flipped_string\nend", "    flipped\
    \ = \"\"\n    for c in string\n        if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\
    \            flipped *= lowercase(c)\n        elseif c in \"abcdefghijklmnopqrstuvwxyz\"\
    \n            flipped *= uppercase(c)\n        else\n            flipped *= c\n\
    \        end\n    end\n    return flipped\nend", "    flipped_string = \"\"\n\
    \    for i in 1:length(string)\n        if islower(string[i])\n            flipped_string\
    \ = flipped_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * string[i]\n        end\n    end\n\
    \    return flipped_string\nend", "    return string[1:end] .|> x -> x == uppercase(x)\
    \ ? lowercase(x) : uppercase(x)\nend", "    return replace(string, \"a\"=>\"A\"\
    , \"b\"=>\"B\", \"c\"=>\"C\", \"d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\", \"g\"\
    =>\"G\", \"h\"=>\"H\", \"i\"=>\"I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"=>\"L\"\
    , \"m\"=>\"M\", \"n\"=>\"N\", \"o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\", \"r\"\
    =>\"R\", \"s\"=>\"S\", \"t\"=>\"T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"=>\"W\"\
    , \"x\"=>\"X\", \"y\"=>\"Y\", \"z\"=>\"Z\", \"A\"=>\"a\", \"B\"=>\"b\", \"C\"\
    =>\"c\", \"D\"=>\"d\", \"E\"=>\"e\", \"F\"=>\"f\", \"G\"=>\"g\", \"H\"=>\"h\"\
    , \"I\"=>\"i\", \"J\"=>\"j\", \"K\"=>\"k\", \"L\"=>\"l\", \"M\"=>\"m\", \"N\"\
    =>\"n\", \"O\"=>\"o\", \"P\"=>\"p\", \"Q\"=>\"q\", \"R\"=>\"r\", \"S\"=>\"s\"\
    , \"T\"=>\"t\", \"U\"=>\"u\", \"V\"=>\"v\", \"W\"=>\"w\", \"X\"=>\"x\", \"Y\"\
    =>\"y\", \"Z\"=>\"z\")\nend", "    flipped = \"\"\n    for c in string\n     \
    \   if c in lowercase\n            flipped *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped *= c\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if c in lowercase\n\
    \            flipped_string *= uppercase[findfirst(lowercase, c)]\n        elseif\
    \ c in uppercase\n            flipped_string *= lowercase[findfirst(uppercase,\
    \ c)]\n        else\n            flipped_string *= c\n        end\n    end\n \
    \   return flipped_string\nend", "    return string.swapcase()\nend", "    flipped_string\
    \ = \"\"\n    for character in string\n        if islower(character)\n       \
    \     flipped_string *= uppercase(character)\n        else\n            flipped_string\
    \ *= lowercase(character)\n        end\n    end\n    return flipped_string\nend",
  "    return [uppercase(c) ? lowercase(c) : uppercase(c) for c in string]\nend",
  "    flipped_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            flipped_string = flipped_string * string[i]\n        else\n     \
    \       flipped_string = flipped_string * uppercase(string[i])\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in lowercase\n            push!(flipped, uppercase[findfirst(lowercase,\
    \ c)])\n        elseif c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            push!(flipped, c)\n        end\n    end\n  \
    \  return flipped\nend", "    flipped_string = \"\"\n    for c in string\n   \
    \     if c in lowercase\n            flipped_string *= uppercase[findfirst(lowercase,\
    \ c)]\n        elseif c in uppercase\n            flipped_string *= lowercase[findfirst(uppercase,\
    \ c)]\n        else\n            flipped_string *= c\n        end\n    end\n \
    \   return flipped_string\nend", "    string = string.lower()\n    string = string.replace(\"\
    a\", \"A\")\n    string = string.replace(\"b\", \"B\")\n    string = string.replace(\"\
    c\", \"C\")\n    string = string.replace(\"d\", \"D\")\n    string = string.replace(\"\
    e\", \"E\")\n    string = string.replace(\"f\", \"F\")\n    string = string.replace(\"\
    g\", \"G\")\n    string = string.replace(\"h\", \"H\")\n    string = string.replace(\"\
    i\", \"I\")\n    string = string.replace(\"j\", \"J\")\n    string = string.replace(\"\
    k\", \"K\")\n    string = string.replace(\"l\", \"L\")\n    string = string.replace(\"\
    m\", \"M\")\n    string = string.replace(\"n\", \"N\")\n    string = string.replace(\"\
    o\", \"O\")\n    string = string.replace(\"p\", \"P\")\n    string = string.replace(\"\
    q\", \"Q\")\n    string = string.replace(\"r\", \"R\")\n    string = string.replace(\"\
    s\", \"S\")\n    string = string.replace(\"t\", \"T\")\n    string = string.replace(\"\
    u\", \"U\")\n    string = string.replace(\"v\", \"V\")\n    string = string.replace(\"\
    w\", \"W\")\n    string = string.replace(\"x\", \"X\")\n    string = string.replace(\"\
    y\", \"Y\")\n    string = string.replace(\"z\", \"Z\")\n    return string\nend",
  "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            flipped_string *= uppercase(character)\n        elseif isupper(character)\n\
    \            flipped_string *= lowercase(character)\n        else\n          \
    \  flipped_string *= character\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for c in string\n        if islower(c)\n\
    \            push!(flipped_string, uppercase(c))\n        elseif isupper(c)\n\
    \            push!(flipped_string, lowercase(c))\n        else\n            push!(flipped_string,\
    \ c)\n        end\n    end\n    return flipped_string\nend", "    return [uppercase(c)\
    \ for c in string]\nend", "    new_string = \"\"\n    for c in string\n      \
    \  if c in string(\"abcdefghijklmnopqrstuvwxyz\")\n            new_string = new_string\
    \ * string(c)\n        elseif c in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n  \
    \          new_string = new_string * string(c)\n        else\n            new_string\
    \ = new_string * string(c)\n        end\n    end\n    return new_string\nend",
  "    flipped_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            flipped_string = flipped_string * uppercase(string[i])\n        elseif\
    \ isupper(string[i])\n            flipped_string = flipped_string * lowercase(string[i])\n\
    \        else\n            flipped_string = flipped_string * string[i]\n     \
    \   end\n    end\n    return flipped_string\nend", "    flipped_string = \"\"\n\
    \    for char in string\n        if char in lowercase\n            flipped_string\
    \ *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n    \
    \        flipped_string *= lowercase[uppercase.index(char)]\n        else\n  \
    \          flipped_string *= char\n        end\n    end\n    return flipped_string\n\
    end", "    flipped_string = \"\"\n    for i in string\n        if i in lowercase\n\
    \            flipped_string = flipped_string * uppercase[lowercase.index(i)]\n\
    \        elseif i in uppercase\n            flipped_string = flipped_string *\
    \ lowercase[uppercase.index(i)]\n        else\n            flipped_string = flipped_string\
    \ * i\n        end\n    end\n    return flipped_string\nend", "    flipped_string\
    \ = \"\"\n    for i in 1:length(string)\n        if string[i] in lowercase(string)\n\
    \            flipped_string = flipped_string * uppercase(string[i])\n        else\n\
    \            flipped_string = flipped_string * lowercase(string[i])\n        end\n\
    \    end\n    return flipped_string\nend", "    flipped = \"\"\n    for c in string\n\
    \        if c in lowercase\n            flipped *= uppercase[findfirst(lowercase,\
    \ c)]\n        elseif c in uppercase\n            flipped *= lowercase[findfirst(uppercase,\
    \ c)]\n        else\n            flipped *= c\n        end\n    end\n    return\
    \ flipped\nend", "    flipped = \"\"\n    for i in string\n        if i in string.lowercase\n\
    \            flipped = flipped * i.upper()\n        else\n            flipped\
    \ = flipped * i.lower()\n    end\n    return flipped\nend", "    return string.swapcase()\n\
    end", "    return string.swapcase()\nend", "    flipped_string = \"\"\n    for\
    \ c in string\n        if islower(c)\n            flipped_string *= uppercase(c)\n\
    \        elseif isupper(c)\n            flipped_string *= lowercase(c)\n     \
    \   else\n            flipped_string *= c\n        end\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in lowercase\n  \
    \          append!(flipped, uppercase[findfirst(lowercase, c)])\n        elseif\
    \ c in uppercase\n            append!(flipped, lowercase[findfirst(uppercase,\
    \ c)])\n        else\n            append!(flipped, c)\n        end\n    end\n\
    \    return flipped\nend", "    flipped_string = \"\"\n    for character in string\n\
    \        if character in string(\"abcdefghijklmnopqrstuvwxyz\")\n            flipped_string\
    \ = flipped_string * string(character)\n        elseif character in string(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            flipped_string = flipped_string * string(character)\n\
    \        else\n            flipped_string = flipped_string * character\n     \
    \   end\n    end\n    return flipped_string\nend", "    return string[i] == lowercase(string[i])\
    \ ? uppercase(string[i]) : lowercase(string[i]) for i in 1:length(string)\nend",
  "    return replace(string, r\"[a-z]\", \"L\") |> replace(r\"[A-Z]\", \"l\")\nend",
  "    return string.swapcase()\nend", "    flipped_string = \"\"\n    for character\
    \ in string\n        if character in lowercase\n            flipped_string *=\
    \ uppercase[lowercase.index(character)]\n        elseif character in uppercase\n\
    \            flipped_string *= lowercase[uppercase.index(character)]\n       \
    \ else\n            flipped_string *= character\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            flipped_string = flipped_string * uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(char)]\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped_string = \"\"\n    for char in string\n        if char in lowercase\n\
    \            flipped_string = flipped_string * uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            flipped_string = flipped_string\
    \ * lowercase[uppercase.index(char)]\n        else\n            flipped_string\
    \ = flipped_string * char\n        end\n    end\n    return flipped_string\nend",
  "    flipped = \"\"\n    for char in string\n        if char in lowercase\n    \
    \        flipped *= uppercase[lowercase.index(char)]\n        elseif char in uppercase\n\
    \            flipped *= lowercase[uppercase.index(char)]\n        else\n     \
    \       flipped *= char\n        end\n    end\n    return flipped\nend", "   \
    \ new_string = \"\"\n    for i in 1:length(string)\n        if islower(string[i])\n\
    \            new_string = new_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            new_string = new_string * lowercase(string[i])\n        else\n  \
    \          new_string = new_string * string[i]\n        end\n    end\n    return\
    \ new_string\nend", "    return [uppercase(c) ? lowercase(c) ? c for c in string]\n\
    end", "    return string[1:end] .|> x -> x == uppercase(x) ? lowercase(x) : uppercase(x)\n\
    end", "    return [if islower(c) c = uppercase(c) else c = lowercase(c) end for\
    \ c in string]\nend", "    flipped_string = \"\"\n    for char in string\n   \
    \     if char in lowercase\n            flipped_string *= uppercase[findfirst(lowercase,\
    \ char)]\n        elseif char in uppercase\n            flipped_string *= lowercase[findfirst(uppercase,\
    \ char)]\n        else\n            flipped_string *= char\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for character\
    \ in string\n        if islower(character)\n            flipped_string *= uppercase(character)\n\
    \        else\n            flipped_string *= lowercase(character)\n        end\n\
    \    end\n    return flipped_string\nend", "    new_string = \"\"\n    for i in\
    \ string\n        if i in string.lowercase\n            new_string = new_string\
    \ * i.upper()\n        elseif i in string.uppercase\n            new_string =\
    \ new_string * i.lower()\n        else\n            new_string = new_string *\
    \ i\n        end\n    end\n    return new_string\nend", "    flipped_string =\
    \ \"\"\n    for character in string\n        if islower(character)\n         \
    \   flipped_string *= uppercase(character)\n        else\n            flipped_string\
    \ *= lowercase(character)\n        end\n    end\n    return flipped_string\nend",
  "    flipped = \"\"\n    for c in string\n        if c in string(lowercase)\n  \
    \          flipped = flipped * string(uppercase)[string(lowercase).index(c)]\n\
    \        elseif c in string(uppercase)\n            flipped = flipped * string(lowercase)[string(uppercase).index(c)]\n\
    \        else\n            flipped = flipped * c\n        end\n    end\n    return\
    \ flipped\nend", "    flipped_string = \"\"\n    for char in string\n        if\
    \ char in string.lowercase\n            flipped_string = flipped_string * char.upper\n\
    \        elseif char in string.uppercase\n            flipped_string = flipped_string\
    \ * char.lower\n        else\n            flipped_string = flipped_string * char\n\
    \        end\n    end\n    return flipped_string\nend", "    flipped = \"\"\n\
    \    for c in string\n        if c in string(\"abcdefghijklmnopqrstuvwxyz\")\n\
    \            flipped = flipped * string(c) * string(c)\n        elseif c in string(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            flipped = flipped * string(c) * string(c)\n\
    \        else\n            flipped = flipped * string(c)\n        end\n    end\n\
    \    return flipped\nend", "    flipped = \"\"\n    for i in string\n        if\
    \ i in string.lowercase\n            flipped = flipped * i.upper()\n        elseif\
    \ i in string.uppercase\n            flipped = flipped * i.lower()\n        else\n\
    \            flipped = flipped * i\n        end\n    end\n    return flipped\n\
    end", "    flipped_string = \"\"\n    for character in string\n        if islower(character)\n\
    \            flipped_string = flipped_string * uppercase(character)\n        elseif\
    \ isupper(character)\n            flipped_string = flipped_string * lowercase(character)\n\
    \        else\n            flipped_string = flipped_string * character\n     \
    \   end\n    end\n    return flipped_string\nend", "    return [uppercase(c) ?\
    \ lowercase(c) ? c for c in string]\nend", "    flipped_string = \"\"\n    for\
    \ i in string\n        if islower(i)\n            append!(flipped_string, uppercase(i))\n\
    \        elseif isupper(i)\n            append!(flipped_string, lowercase(i))\n\
    \        else\n            append!(flipped_string, i)\n        end\n    end\n\
    \    return flipped_string\nend", "    flipped_string = \"\"\n    for c in string\n\
    \        if c in lowercase\n            flipped_string *= uppercase[lowercase.index(c)]\n\
    \        elseif c in uppercase\n            flipped_string *= lowercase[uppercase.index(c)]\n\
    \        else\n            flipped_string *= c\n        end\n    end\n    return\
    \ flipped_string\nend", "    return string[i] == uppercase(string[i]) ? lowercase(string[i])\
    \ : uppercase(string[i]) for i in 1:length(string)\nend", "    new_string = \"\
    \"\n    for i in 1:length(string)\n        if islower(string[i])\n           \
    \ new_string = new_string * uppercase(string[i])\n        elseif isupper(string[i])\n\
    \            new_string = new_string * lowercase(string[i])\n        else\n  \
    \          new_string = new_string * string[i]\n        end\n    end\n    return\
    \ new_string\nend", "    flipped_string = \"\"\n    for c in string\n        if\
    \ c in string(\"abcdefghijklmnopqrstuvwxyz\")\n            flipped_string = flipped_string\
    \ * string(c)\n        elseif c in string(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n  \
    \          flipped_string = flipped_string * string(c)\n        else\n       \
    \     flipped_string = flipped_string * string(c)\n        end\n    end\n    return\
    \ flipped_string\nend", "    flipped_string = \"\"\n    for char in string\n \
    \       if char in lowercase\n            char = uppercase[lowercase.index(char)]\n\
    \        elseif char in uppercase\n            char = lowercase[uppercase.index(char)]\n\
    \        end\n        flipped_string *= char\n    end\n    return flipped_string\n\
    end", "    flipped = \"\"\n    for c in string\n        if c in lowercase\n  \
    \          push!(flipped, uppercase[findfirst(lowercase, c)])\n        elseif\
    \ c in uppercase\n            push!(flipped, lowercase[findfirst(uppercase, c)])\n\
    \        else\n            push!(flipped, c)\n        end\n    end\n    return\
    \ flipped\nend", "    flipped_string = \"\"\n    for i in 1:length(string)\n \
    \       if islower(string[i])\n            flipped_string = flipped_string * uppercase(string[i])\n\
    \        elseif isupper(string[i])\n            flipped_string = flipped_string\
    \ * lowercase(string[i])\n        else\n            flipped_string = flipped_string\
    \ * string[i]\n        end\n    end\n    return flipped_string\nend", "    flipped\
    \ = \"\"\n    for i in string\n        if i in string.lowercase\n            flipped\
    \ = flipped * i.upper()\n        elseif i in string.uppercase\n            flipped\
    \ = flipped * i.lower()\n        else\n            flipped = flipped * i\n   \
    \     end\n    end\n    return flipped\nend", "    return [uppercase(c) ? lowercase(c)\
    \ ? c for c in string]\nend", "    return [uppercase(c) ? lowercase(c) : uppercase(c)\
    \ for c in string]\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

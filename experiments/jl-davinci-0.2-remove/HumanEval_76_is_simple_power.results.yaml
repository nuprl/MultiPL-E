language: jl
name: HumanEval_76_is_simple_power
results:
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    # your code here\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpeay3uaf3.jl:14\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:14 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeay3uaf3.jl:13\ntest set: Error
    During Test at /tmp/tmpeay3uaf3.jl:15\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)
    where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.'
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^floor(log(x)/log(n))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==1\n        return true\n\
    \    elseif x%n==0\n        return is_simple_power(x/n,n)\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpddo9_z0a.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpddo9_z0a.jl:20\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpddo9_z0a.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpddo9_z0a.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddo9_z0a.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpddo9_z0a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpddo9_z0a.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpddo9_z0a.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpddo9_z0a.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddo9_z0a.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpddo9_z0a.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpddo9_z0a.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpddo9_z0a.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpddo9_z0a.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpddo9_z0a.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbrtz1oti.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpbrtz1oti.jl:24\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrtz1oti.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrtz1oti.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpbrtz1oti.jl:25\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrtz1oti.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrtz1oti.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    for i in 1:x\n        if n^i\
    \ == x\n            return true\n        end\n    end\n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqnk8322b.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpqnk8322b.jl:28\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqnk8322b.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqnk8322b.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747371
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x % n == 0 && x / n %\
    \ n == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t\
    @test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4,\
    \ 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpobnj7q9w.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpobnj7q9w.jl:19\n  Expression: candidate(24,\
    \ 2) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobnj7q9w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobnj7q9w.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpobnj7q9w.jl:20\n  Expression: candidate(128, 4) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobnj7q9w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobnj7q9w.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpobnj7q9w.jl:23\n  Expression: candidate(1, 12) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobnj7q9w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobnj7q9w.jl:13\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x == 1\n        return true\n    elseif x%n != 0\n        return false\n\
    \    else\n        return is_simple_power(x/n, n)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\
    \t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t\
    @test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpi7b4znlc.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmpi7b4znlc.jl:22\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpi7b4znlc.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpi7b4znlc.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi7b4znlc.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi7b4znlc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpi7b4znlc.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpi7b4znlc.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpi7b4znlc.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi7b4znlc.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpi7b4znlc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpi7b4znlc.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpi7b4znlc.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpi7b4znlc.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpi7b4znlc.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x%n != 0\n        return\
    \ false\n    end\n    if x == n\n        return true\n    end\n    return is_simple_power(x/n,\
    \ n)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcy1rpkee.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpcy1rpkee.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpcy1rpkee.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpcy1rpkee.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpcy1rpkee.jl:19\ntest set: Error During Test at
    /tmp/tmpcy1rpkee.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpcy1rpkee.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpcy1rpkee.jl:13\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcy1rpkee.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcy1rpkee.jl:19\ntest set: Error
    During Test at /tmp/tmpcy1rpkee.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpcy1rpkee.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpcy1rpkee.jl:13\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcy1rpkee.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x == n^2\n        return true\n    elseif x == n^3\n        return\
    \ true\n    elseif x == n^4\n        return true\n    elseif x == n^5\n      \
    \  return true\n    elseif x == n^6\n        return true\n    elseif x == n^7\n\
    \        return true\n    elseif x == n^8\n        return true\n    elseif x ==\
    \ n^9\n        return true\n    elseif x == n^10\n        return true\n    elseif\
    \ x == n^11\n        return true\n    elseif x == n^12\n        return true\n\
    \    elseif x == n^13\n        return true\n    elseif x == n^14\n        return\
    \ true\n    elseif x == n^15\n        return true\n    elseif x == n^16\n    \
    \    return true\n    elseif x == n^17\n        return true\n    elseif x == n^18\n\
    \        return true\n    elseif x == n^19\n        return true\n    elseif x\
    \ == n^20\n        return true\n    elseif x == n^21\n        return true\n  \
    \  elseif x == n^22\n        return true\n    elseif x == n^23\n        return\
    \ true\n    elseif x == n^24\n        return true\n    elseif x == n^25\n    \
    \    return true\n    elseif x == n^26\n        return true\n    elseif x == n^27\n\
    \        return true\n    elseif x == n^28\n        return true\n    elseif x\
    \ == n^29\n        return true\n    elseif x == n^30\n        return true\n  \
    \  elseif x == n^31\n        return true\n    elseif x == n^32\n        return\
    \ true\n    elseif x == n^33\n        return true\n    elseif x == n^34\n    \
    \    return true\n    elseif x == n^35\n        return true\n    elseif x == n^36\n\
    \        return true\n    elseif x == n^37\n        return true\n    elseif x\
    \ == n^38\n        return true\n    elseif x == n^39\n        return true\n  \
    \  elseif x == n^\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoql_t4fs.jl:1\nin expression starting at /tmp/tmpoql_t4fs.jl:1\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^floor(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(floor(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x < n\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpvhv_y_9v.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpvhv_y_9v.jl:19\ntest set: Error During Test at
    /tmp/tmpvhv_y_9v.jl:21\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:21 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvhv_y_9v.jl:19\ntest set: Error
    During Test at /tmp/tmpvhv_y_9v.jl:22\n  Test threw exception\n  Expression: candidate(4,
    2) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:22 [inlined]\n   [4] '
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^round(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdg0d91wj.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpdg0d91wj.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbrtz1oti.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpbrtz1oti.jl:24\n  Expression: candidate(128,\
    \ 4) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrtz1oti.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrtz1oti.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpbrtz1oti.jl:25\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbrtz1oti.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbrtz1oti.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    8     2     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x > n\n        return is_simple_power(x/n, n)\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpg258hud0.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpg258hud0.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpg258hud0.jl:10\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpg258hud0.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpg258hud0.jl:19\ntest set: Error During Test at
    /tmp/tmpg258hud0.jl:21\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpg258hud0.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpg258hud0.jl:10\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg258hud0.jl:21 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg258hud0.jl:19\ntest set: Error
    During Test at /tmp/tmpg258hud0.jl:22\n  Test threw exception\n  Expression: candidate(4,
    2) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpg258hud0.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpg258hud0.jl:10\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg258hud0.jl:22 [inlined]\n   [4] '
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x == n^2\n        return true\n    elseif x == n^3\n        return\
    \ true\n    elseif x == n^4\n        return true\n    elseif x == n^5\n      \
    \  return true\n    elseif x == n^6\n        return true\n    elseif x == n^7\n\
    \        return true\n    elseif x == n^8\n        return true\n    elseif x ==\
    \ n^9\n        return true\n    else\n        return false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpeakbmf4s.jl:31

    '
  stdout: "test set: Test Failed at /tmp/tmpeakbmf4s.jl:43\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpeakbmf4s.jl:43 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpeakbmf4s.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpzm7_80u6.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpzm7_80u6.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpzm7_80u6.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzm7_80u6.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzm7_80u6.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdg0d91wj.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpdg0d91wj.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == 1\n        return true\n\
    \    end\n    if x == n\n        return true\n    end\n    if x % n != 0\n   \
    \     return false\n    end\n    return is_simple_power(x/n, n)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp1jfzdl1o.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmp1jfzdl1o.jl:23\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1jfzdl1o.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1jfzdl1o.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1jfzdl1o.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1jfzdl1o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp1jfzdl1o.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1jfzdl1o.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1jfzdl1o.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1jfzdl1o.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1jfzdl1o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp1jfzdl1o.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp1jfzdl1o.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp1jfzdl1o.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1jfzdl1o.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x%n == 0\n        return is_simple_power(x/n, n)\n    else\n     \
    \   return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpkwid5dxw.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpkwid5dxw.jl:20\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpkwid5dxw.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpkwid5dxw.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwid5dxw.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkwid5dxw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpkwid5dxw.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpkwid5dxw.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpkwid5dxw.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwid5dxw.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkwid5dxw.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpkwid5dxw.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpkwid5dxw.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpkwid5dxw.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwid5dxw.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747375
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return isinteger(log(x)/log(n))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfxnl2zn_.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpfxnl2zn_.jl:22\n  Expression: candidate(1,\
    \ 1) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfxnl2zn_.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfxnl2zn_.jl:13\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x == 1\n        return true\n    elseif x % n != 0\n        return\
    \ false\n    else\n        return is_simple_power(x/n, n)\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmp0re00jm4.jl:19

    '
  stdout: "test set: Error During Test at /tmp/tmp0re00jm4.jl:22\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0re00jm4.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0re00jm4.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0re00jm4.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0re00jm4.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0re00jm4.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0re00jm4.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0re00jm4.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0re00jm4.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0re00jm4.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp0re00jm4.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmp0re00jm4.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmp0re00jm4.jl:14\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0re00jm4.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x < n\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpvhv_y_9v.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpvhv_y_9v.jl:19\ntest set: Error During Test at
    /tmp/tmpvhv_y_9v.jl:21\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:21 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvhv_y_9v.jl:19\ntest set: Error
    During Test at /tmp/tmpvhv_y_9v.jl:22\n  Test threw exception\n  Expression: candidate(4,
    2) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:22 [inlined]\n   [4] '
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x==n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpaii_1yps.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpaii_1yps.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpaii_1yps.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpaii_1yps.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpaii_1yps.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpaii_1yps.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpaii_1yps.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpaii_1yps.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpaii_1yps.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpaii_1yps.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpaii_1yps.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpaii_1yps.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpaii_1yps.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpaii_1yps.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x%n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpsui94_we.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsui94_we.jl:20\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsui94_we.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsui94_we.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsui94_we.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsui94_we.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsui94_we.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsui94_we.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsui94_we.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsui94_we.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsui94_we.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsui94_we.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsui94_we.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsui94_we.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsui94_we.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^round(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return (n^(Int(log(x)/log(n)))\
    \ == x)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t\
    @test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4,\
    \ 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpf_3l4s62.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpf_3l4s62.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpf_3l4s62.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpf_3l4s62.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf_3l4s62.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpf_3l4s62.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpf_3l4s62.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpf_3l4s62.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf_3l4s62.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpf_3l4s62.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpf_3l4s62.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf_3l4s62.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf_3l4s62.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpf_3l4s62.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == 0\n        return false\n\
    \    end\n    if x == 1\n        return true\n    end\n    if x % n != 0\n   \
    \     return false\n    end\n    return is_simple_power(x/n, n)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpd539t5oh.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpd539t5oh.jl:23\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpd539t5oh.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpd539t5oh.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd539t5oh.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd539t5oh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpd539t5oh.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpd539t5oh.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpd539t5oh.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd539t5oh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd539t5oh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpd539t5oh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpd539t5oh.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpd539t5oh.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpd539t5oh.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x < n\n        return false\n    else\n        return is_simple_power(x,\
    \ n^2)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpexdf2koa.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpexdf2koa.jl:29\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexdf2koa.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexdf2koa.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdg0d91wj.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpdg0d91wj.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x < n\n        return false\n    else\n        return is_simple_power(x,\
    \ n^2)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpexdf2koa.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpexdf2koa.jl:29\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexdf2koa.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexdf2koa.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x < n\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpvhv_y_9v.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpvhv_y_9v.jl:19\ntest set: Error During Test at
    /tmp/tmpvhv_y_9v.jl:21\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:21 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvhv_y_9v.jl:19\ntest set: Error
    During Test at /tmp/tmpvhv_y_9v.jl:22\n  Test threw exception\n  Expression: candidate(4,
    2) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpvhv_y_9v.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpvhv_y_9v.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvhv_y_9v.jl:22 [inlined]\n   [4] '
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if n^(round(log(x)/log(n)))\
    \ == x\n        return true\n    else\n        return false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    # your code here\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpeay3uaf3.jl:14\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:14 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeay3uaf3.jl:13\ntest set: Error
    During Test at /tmp/tmpeay3uaf3.jl:15\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)
    where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.'
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x == n^2\n        return true\n    elseif x == n^3\n        return\
    \ true\n    elseif x == n^4\n        return true\n    elseif x == n^5\n      \
    \  return true\n    elseif x == n^6\n        return true\n    elseif x == n^7\n\
    \        return true\n    elseif x == n^8\n        return true\n    elseif x ==\
    \ n^9\n        return true\n    elseif x == n^10\n        return true\n    elseif\
    \ x == n^11\n        return true\n    elseif x == n^12\n        return true\n\
    \    elseif x == n^13\n        return true\n    elseif x == n^14\n        return\
    \ true\n    elseif x == n^15\n        return true\n    elseif x == n^16\n    \
    \    return true\n    elseif x == n^17\n        return true\n    elseif x == n^18\n\
    \        return true\n    elseif x == n^19\n        return true\n    elseif x\
    \ == n^20\n        return true\n    elseif x == n^21\n        return true\n  \
    \  elseif x == n^22\n        return true\n    elseif x == n^23\n        return\
    \ true\n    elseif x == n^24\n        return true\n    elseif x == n^25\n    \
    \    return true\n    elseif x == n^26\n        return true\n    elseif x == n^27\n\
    \        return true\n    elseif x == n^28\n        return true\n    elseif x\
    \ == n^29\n        return true\n    elseif x == n^30\n        return true\n  \
    \  elseif x == n^31\n        return true\n    elseif x == n^32\n        return\
    \ true\n    elseif x == n^33\n        return true\n    elseif x == n^34\n    \
    \    return true\n    elseif x == n^35\n        return true\n    elseif x == n^36\n\
    \        return true\n    elseif x == n^37\n        return true\n    elseif x\
    \ == n^38\n        return true\n    elseif x == n^39\n        return true\n  \
    \  elseif x == n^\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoql_t4fs.jl:1\nin expression starting at /tmp/tmpoql_t4fs.jl:1\n"
  stdout: ''
  timestamp: 1659747371
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x%n==0 && is_simple_power(x/n,n)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 8 errored,
    0 broken.

    in expression starting at /tmp/tmpiwcqabuv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpiwcqabuv.jl:14\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpiwcqabuv.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpiwcqabuv.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwcqabuv.jl:14 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwcqabuv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpiwcqabuv.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpiwcqabuv.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpiwcqabuv.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwcqabuv.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwcqabuv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpiwcqabuv.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpiwcqabuv.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpiwcqabuv.jl:7\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwcqabuv.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/ju"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n\n        return true\n\
    \    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpo3g9uaan.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpo3g9uaan.jl:18\n  Expression: candidate(16,\
    \ 2) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3g9uaan.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3g9uaan.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo3g9uaan.jl:20\n  Expression: candidate(4, 2) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3g9uaan.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3g9uaan.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo3g9uaan.jl:21\n  Expression: candidate(9, 3) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3g9uaan.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3g9uaan.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo3g9uaan.jl:22\n  Expression: candidate(16, 4) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpo3g9uaan.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo3g9uaan.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo3g9uaan.jl:27\n  Expression: candidate(1, 12) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x, n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpcyi3cclz.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpcyi3cclz.jl:14\n  Expression: candidate(16,\
    \ 2) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyi3cclz.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyi3cclz.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpcyi3cclz.jl:16\n  Expression: candidate(4, 2) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyi3cclz.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyi3cclz.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpcyi3cclz.jl:17\n  Expression: candidate(9, 3) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyi3cclz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyi3cclz.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpcyi3cclz.jl:18\n  Expression: candidate(16, 4) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyi3cclz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyi3cclz.jl:13\ntest set: Error\
    \ During Test at /tmp/tmpcyi3cclz.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./floa"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x < n\n        return false\n    else\n        return is_simple_power(x,\
    \ n^2)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpexdf2koa.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpexdf2koa.jl:29\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexdf2koa.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexdf2koa.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdg0d91wj.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpdg0d91wj.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x < n\n        return false\n    else\n        return is_simple_power(x,\
    \ n^2)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpexdf2koa.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpexdf2koa.jl:29\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexdf2koa.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexdf2koa.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x % n == 0\n        return\
    \ true\n    else\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkpa_sxkp.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpkpa_sxkp.jl:23\n  Expression: candidate(24,\
    \ 2) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpa_sxkp.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpa_sxkp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpkpa_sxkp.jl:24\n  Expression: candidate(128, 4) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpa_sxkp.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpa_sxkp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpkpa_sxkp.jl:25\n  Expression: candidate(12, 6) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpa_sxkp.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpa_sxkp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpkpa_sxkp.jl:27\n  Expression: candidate(1, 12) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpa_sxkp.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpa_sxkp.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x%n != 0\n        return\
    \ false\n    end\n    if x == n\n        return true\n    end\n    return is_simple_power(x/n,\
    \ n)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpcy1rpkee.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpcy1rpkee.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpcy1rpkee.jl:13\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpcy1rpkee.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpcy1rpkee.jl:19\ntest set: Error During Test at
    /tmp/tmpcy1rpkee.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpcy1rpkee.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpcy1rpkee.jl:13\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcy1rpkee.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcy1rpkee.jl:19\ntest set: Error
    During Test at /tmp/tmpcy1rpkee.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpcy1rpkee.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpcy1rpkee.jl:13\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcy1rpkee.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^round(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^Int(log(x)/log(n))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpibfmhxrr.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpibfmhxrr.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpibfmhxrr.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpibfmhxrr.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpibfmhxrr.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpibfmhxrr.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpibfmhxrr.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpibfmhxrr.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpibfmhxrr.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpibfmhxrr.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpibfmhxrr.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpibfmhxrr.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpibfmhxrr.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpibfmhxrr.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747375
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(floor(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747373
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(floor(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x > n\n        return is_simple_power(x, n^2)\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf3x0tx7h.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpf3x0tx7h.jl:29\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3x0tx7h.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3x0tx7h.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747375
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if n^(floor(log(x)/log(n)))\
    \ == x\n        return true\n    else\n        return false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747373
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == 1\n        return true\n\
    \    end\n    if x == n\n        return true\n    end\n    if x % n != 0\n   \
    \     return false\n    end\n    is_simple_power(x/n, n)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\
    \t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\t\
    @test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpl9rehop1.jl:20

    '
  stdout: "test set: Error During Test at /tmp/tmpl9rehop1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpl9rehop1.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpl9rehop1.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9rehop1.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9rehop1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpl9rehop1.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpl9rehop1.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpl9rehop1.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9rehop1.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9rehop1.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpl9rehop1.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpl9rehop1.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpl9rehop1.jl:16\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl9rehop1.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747377
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x < n\n        return false\n    else\n        return is_simple_power(x,\
    \ n^2)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpexdf2koa.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpexdf2koa.jl:29\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpexdf2koa.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpexdf2koa.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdg0d91wj.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpdg0d91wj.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdg0d91wj.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpdg0d91wj.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpdg0d91wj.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpdg0d91wj.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpdg0d91wj.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpdg0d91wj.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==1\n        return true\n\
    \    elseif x%n!=0\n        return false\n    else\n        return is_simple_power(x/n,n)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t\
    @test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4,\
    \ 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpzcaxpy3k.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpzcaxpy3k.jl:20\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzcaxpy3k.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzcaxpy3k.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzcaxpy3k.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzcaxpy3k.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpzcaxpy3k.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzcaxpy3k.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzcaxpy3k.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzcaxpy3k.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzcaxpy3k.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpzcaxpy3k.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpzcaxpy3k.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpzcaxpy3k.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzcaxpy3k.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747377
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n^(round(Int64,log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpcvk84a8v.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpcvk84a8v.jl:26\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpcvk84a8v.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcvk84a8v.jl:26 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcvk84a8v.jl:17\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^round(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x%n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpsui94_we.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpsui94_we.jl:20\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsui94_we.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsui94_we.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsui94_we.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsui94_we.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsui94_we.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsui94_we.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsui94_we.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsui94_we.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsui94_we.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpsui94_we.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpsui94_we.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsui94_we.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpsui94_we.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747375
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    for i in 1:100\n        if n^i\
    \ == x\n            return true\n        end\n    end\n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyrv5dggo.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpyrv5dggo.jl:28\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyrv5dggo.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyrv5dggo.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747375
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x % n == 0 && x / n %\
    \ n == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t\
    @test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4,\
    \ 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpobnj7q9w.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpobnj7q9w.jl:19\n  Expression: candidate(24,\
    \ 2) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobnj7q9w.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobnj7q9w.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpobnj7q9w.jl:20\n  Expression: candidate(128, 4) == false\n\
    \   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobnj7q9w.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobnj7q9w.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpobnj7q9w.jl:23\n  Expression: candidate(1, 12) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpobnj7q9w.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpobnj7q9w.jl:13\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    # your code here\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpeay3uaf3.jl:14\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:14 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeay3uaf3.jl:13\ntest set: Error
    During Test at /tmp/tmpeay3uaf3.jl:15\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)
    where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.'
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^round(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^round(log(x)/log(n))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpzm7_80u6.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpzm7_80u6.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpzm7_80u6.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzm7_80u6.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzm7_80u6.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747370
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x, n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 4 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpcyi3cclz.jl:11

    '
  stdout: "test set: Test Failed at /tmp/tmpcyi3cclz.jl:14\n  Expression: candidate(16,\
    \ 2) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyi3cclz.jl:14 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyi3cclz.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpcyi3cclz.jl:16\n  Expression: candidate(4, 2) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyi3cclz.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyi3cclz.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpcyi3cclz.jl:17\n  Expression: candidate(9, 3) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyi3cclz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyi3cclz.jl:13\ntest set: Test\
    \ Failed at /tmp/tmpcyi3cclz.jl:18\n  Expression: candidate(16, 4) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcyi3cclz.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcyi3cclz.jl:13\ntest set: Error\
    \ During Test at /tmp/tmpcyi3cclz.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./floa"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^round(Int64, log(x)/log(n))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpaqw2w404.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpaqw2w404.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpaqw2w404.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpaqw2w404.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpaqw2w404.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747376
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    # your code here\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpeay3uaf3.jl:14\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:14 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeay3uaf3.jl:13\ntest set: Error
    During Test at /tmp/tmpeay3uaf3.jl:15\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)
    where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.'
  timestamp: 1659747374
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^round(log(x)/log(n))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747374
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(Int64(log(x)/log(n)))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpstx0efzv.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpstx0efzv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:15 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpstx0efzv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpstx0efzv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpstx0efzv.jl:13\ntest set:\
    \ Error During Test at /tmp/tmpstx0efzv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == 1\n        return true\n\
    \    end\n    if x % n != 0\n        return false\n    end\n    return is_simple_power(x/n,\
    \ n)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 7 errored,
    0 broken.

    in expression starting at /tmp/tmpbv5mt_4m.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmpbv5mt_4m.jl:20\n  Test threw exception\n\
    \  Expression: candidate(16, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpbv5mt_4m.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpbv5mt_4m.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbv5mt_4m.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbv5mt_4m.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpbv5mt_4m.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(4, 2) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpbv5mt_4m.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpbv5mt_4m.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbv5mt_4m.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbv5mt_4m.jl:19\ntest set:\
    \ Error During Test at /tmp/tmpbv5mt_4m.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(9, 3) == true\n  MethodError: no method matching is_simple_power(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64, ::Int64)\
    \ at /tmp/tmpbv5mt_4m.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpbv5mt_4m.jl:13\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpbv5mt_4m.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share"
  timestamp: 1659747377
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x%n != 0\n        return\
    \ false\n    end\n    while x%n == 0\n        x = x/n\n    end\n    if x == 1\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659747379
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x == n^2\n        return true\n    elseif x == n^3\n        return\
    \ true\n    elseif x == n^4\n        return true\n    elseif x == n^5\n      \
    \  return true\n    elseif x == n^6\n        return true\n    elseif x == n^7\n\
    \        return true\n    elseif x == n^8\n        return true\n    elseif x ==\
    \ n^9\n        return true\n    elseif x == n^10\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_simple_power;\n\t@test(candidate(16, 2) == true)\n\t@test(candidate(143214,\
    \ 16) == false)\n\t@test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) ==\
    \ true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24, 2) == false)\n\
    \t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1,\
    \ 1) == true)\n\t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpipl762eh.jl:33

    '
  stdout: "test set: Test Failed at /tmp/tmpipl762eh.jl:45\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpipl762eh.jl:45 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpipl762eh.jl:35\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747376
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x % n != 0\n        return false\n    else\n        return is_simple_power(x/n,\
    \ n)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgcisb82x.jl:20\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: no method matching
    is_simple_power(::Float64, ::Int64)\n  Closest candidates are:\n    is_simple_power(!Matched::Int64,
    ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1] is_simple_power(x::Int64,
    n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3]
    macro expansion\n     @ /tmp/tmpgcisb82x.jl:20 [inlined]\n   [4] macro expansion\n     @
    /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5]
    top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error During Test at
    /tmp/tmpgcisb82x.jl:22\n  Test threw exception\n  Expression: candidate(4, 2)
    == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:22 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgcisb82x.jl:19\ntest set: Error
    During Test at /tmp/tmpgcisb82x.jl:23\n  Test threw exception\n  Expression: candidate(9,
    3) == true\n  MethodError: no method matching is_simple_power(::Float64, ::Int64)\n  Closest
    candidates are:\n    is_simple_power(!Matched::Int64, ::Int64) at /tmp/tmpgcisb82x.jl:6\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpgcisb82x.jl:12\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgcisb82x.jl:23 [inlined]\n   [4]
    macro e'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n\n        return true\n\
    \    elseif x > n\n        return is_simple_power(x, n^2)\n    else\n        return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpf3x0tx7h.jl:17

    '
  stdout: "test set: Test Failed at /tmp/tmpf3x0tx7h.jl:29\n  Expression: candidate(1,\
    \ 12) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpf3x0tx7h.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpf3x0tx7h.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    9     1     10\n"
  timestamp: 1659747375
- exit_code: -1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    # your code here\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16,\
    \ 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2)\
    \ == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\
    \t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12,\
    \ 6) == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) ==\
    \ true)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpeay3uaf3.jl:14\n  Test threw
    exception\n  Expression: candidate(16, 2) == true\n  MethodError: Cannot `convert`
    an object of type Nothing to an object of type Bool\n  Closest candidates are:\n    convert(::Type{T},
    !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:14 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeay3uaf3.jl:13\ntest set: Error
    During Test at /tmp/tmpeay3uaf3.jl:15\n  Test threw exception\n  Expression: candidate(143214,
    16) == false\n  MethodError: Cannot `convert` an object of type Nothing to an
    object of type Bool\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)
    where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n    convert(::Type{T},
    !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n    convert(::Type{T},
    !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n    ...\n  Stacktrace:\n   [1]
    is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpeay3uaf3.jl:8\n   [2]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [3] macro expansion\n     @ /tmp/tmpeay3uaf3.jl:15 [inlined]\n   [4]
    macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.'
  timestamp: 1659747374
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    return x == n^(round(Int64,\
    \ log(x)/log(n)))\nend\nusing Test\n\n@testset begin\n\ncandidate = is_simple_power;\n\
    \t@test(candidate(16, 2) == true)\n\t@test(candidate(143214, 16) == false)\n\t\
    @test(candidate(4, 2) == true)\n\t@test(candidate(9, 3) == true)\n\t@test(candidate(16,\
    \ 4) == true)\n\t@test(candidate(24, 2) == false)\n\t@test(candidate(128, 4) ==\
    \ false)\n\t@test(candidate(12, 6) == false)\n\t@test(candidate(1, 1) == true)\n\
    \t@test(candidate(1, 12) == true)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 1 errored,
    0 broken.

    in expression starting at /tmp/tmpxslhuu99.jl:11

    '
  stdout: "test set: Error During Test at /tmp/tmpxslhuu99.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1, 1) == true\n  InexactError: trunc(Int64, NaN)\n  Stacktrace:\n\
    \   [1] trunc\n     @ ./float.jl:805 [inlined]\n   [2] round\n     @ ./float.jl:369\
    \ [inlined]\n   [3] is_simple_power(x::Int64, n::Int64)\n     @ Main /tmp/tmpxslhuu99.jl:7\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxslhuu99.jl:22 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxslhuu99.jl:13\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    9      1     10\n"
  timestamp: 1659747372
- exit_code: 1
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x == n^(Int64(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpsxlc0pxv.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpsxlc0pxv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(143214, 16) == false\n  InexactError: Int64(4.281953251437325)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:19 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(24, 2) == false\n  InexactError: Int64(4.584962500721157)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64,\
    \ n::Int64)\n     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:23 [inlined]\n   [5] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(128, 4) == false\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1]\
    \ Int64\n     @ ./float.jl:812 [inlined]\n   [2] is_simple_power(x::Int64, n::Int64)\n\
    \     @ Main /tmp/tmpsxlc0pxv.jl:7\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsxlc0pxv.jl:24 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsxlc0pxv.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpsxlc0pxv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(12, 6) == false\n  InexactError: Int64(1.3868"
  timestamp: 1659747372
- exit_code: 0
  program: "\"\"\"Your task is to write a function that returns true if a number x\
    \ is a simple\n    power of n and false in other cases.\n    x is a simple power\
    \ of n if n**int=x\n    For example:\n                            \"\"\"\nfunction\
    \ is_simple_power(x::Int64, n::Int64)::Bool \n    if x==n^(round(log(x)/log(n)))\n\
    \        return true\n    else\n        return false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_simple_power;\n\t@test(candidate(16, 2) ==\
    \ true)\n\t@test(candidate(143214, 16) == false)\n\t@test(candidate(4, 2) == true)\n\
    \t@test(candidate(9, 3) == true)\n\t@test(candidate(16, 4) == true)\n\t@test(candidate(24,\
    \ 2) == false)\n\t@test(candidate(128, 4) == false)\n\t@test(candidate(12, 6)\
    \ == false)\n\t@test(candidate(1, 1) == true)\n\t@test(candidate(1, 12) == true)\n\
    end\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |   10     10

    '
  stdout: ''
  timestamp: 1659747374

name: HumanEval_8_sum_product
language: js
prompt: "//For a given list of integers, return a tuple consisting of a sum and a\
  \ product of all the integers in a list.\n// Empty sum should be equal to 0 and\
  \ empty product should be equal to 1.\n// >>> sum_product([])\n// [0, 1]\n// >>>\
  \ sum_product([1, 2, 3, 4])\n// [10, 24]\nfunction sum_product(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sum_product;\n  assert.deepEqual(candidate([]),[0, 1]);\n  assert.deepEqual(candidate([1,\
  \ 1, 1]),[3, 1]);\n  assert.deepEqual(candidate([100, 0]),[100, 0]);\n  assert.deepEqual(candidate([3,\
  \ 5, 7]),[15, 105]);\n  assert.deepEqual(candidate([10]),[10, 10]);\n}\n\ntest();"
completions: ["    var sum = 0;\n    var product = 1;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        sum += numbers[i];\n        product *= numbers[i];\n    }\n \
    \   return [sum, product];\n}\n", "    var sum = 0;\n    var product = 1;\n  \
    \  for(var i = 0; i < numbers.length; i++){\n        sum += numbers[i];\n    \
    \    product *= numbers[i];\n    }\n    return [sum, product];\n}\n", "    var\
    \ sum = 0;\n    var product = 1;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        sum += numbers[i];\n        product *= numbers[i];\n    }\n    return\
    \ [sum, product];\n}\n", "    var sum = 0;\n    var product = 1;\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        sum += numbers[i];\n        product\
    \ *= numbers[i];\n    }\n    return [sum, product];\n}\n", "    var sum = 0;\n\
    \    var product = 1;\n    for(var i = 0; i < numbers.length; i++){\n        sum\
    \ += numbers[i];\n        product *= numbers[i];\n    }\n    return [sum, product];\n\
    }\n", "    let sum = 0;\n    let product = 1;\n    for(let i = 0; i < numbers.length;\
    \ i++){\n        sum += numbers[i];\n        product *= numbers[i];\n    }\n \
    \   return [sum, product];\n}\n", "    var sum = 0;\n    var product = 1;\n  \
    \  for(var i = 0; i < numbers.length; i++){\n        sum += numbers[i];\n    \
    \    product *= numbers[i];\n    }\n    return [sum, product];\n}\n", "    var\
    \ sum = 0;\n    var product = 1;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        sum += numbers[i];\n        product *= numbers[i];\n    }\n    return\
    \ [sum, product];\n}\n", "    let sum = 0;\n    let product = 1;\n    for(let\
    \ i = 0; i < numbers.length; i++){\n        sum += numbers[i];\n        product\
    \ *= numbers[i];\n    }\n    return [sum, product];\n}\n", "    var sum = 0;\n\
    \    var product = 1;\n    for(var i = 0; i < numbers.length; i++){\n        sum\
    \ += numbers[i];\n        product *= numbers[i];\n    }\n    return [sum, product];\n\
    }\n", "    let sum = 0;\n    let product = 1;\n    for(let i = 0; i < numbers.length;\
    \ i++){\n        sum += numbers[i];\n        product *= numbers[i];\n    }\n \
    \   return [sum, product];\n}\n", "    var sum = 0;\n    var product = 1;\n  \
    \  for(var i = 0; i < numbers.length; i++){\n        sum += numbers[i];\n    \
    \    product *= numbers[i];\n    }\n    return [sum, product];\n}\n", "    var\
    \ sum = 0;\n    var product = 1;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        sum += numbers[i];\n        product *= numbers[i];\n    }\n    return\
    \ [sum, product];\n}\n", "    var sum = 0;\n    var product = 1;\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        sum += numbers[i];\n        product\
    \ *= numbers[i];\n    }\n    return [sum, product];\n}\n", "    var sum = 0;\n\
    \    var product = 1;\n    for(var i = 0; i < numbers.length; i++){\n        sum\
    \ += numbers[i];\n        product *= numbers[i];\n    }\n    return [sum, product];\n\
    }\n", "    var sum = 0;\n    var product = 1;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        sum += numbers[i];\n        product *= numbers[i];\n    }\n \
    \   return [sum, product];\n}", "    var sum = 0;\n    var product = 1;\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        sum += numbers[i];\n        product\
    \ *= numbers[i];\n    }\n    return [sum, product];\n}\n", "    var sum = 0;\n\
    \    var product = 1;\n    for(var i = 0; i < numbers.length; i++){\n        sum\
    \ += numbers[i];\n        product *= numbers[i];\n    }\n    return [sum, product];\n\
    }\n", "    var sum = 0;\n    var product = 1;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        sum += numbers[i];\n        product *= numbers[i];\n    }\n \
    \   return [sum, product];\n}\n", "    var sum = 0;\n    var product = 1;\n  \
    \  for(var i = 0; i < numbers.length; i++){\n        sum += numbers[i];\n    \
    \    product *= numbers[i];\n    }\n    return [sum, product];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

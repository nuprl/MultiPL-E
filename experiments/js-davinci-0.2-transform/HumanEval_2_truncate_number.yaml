name: HumanEval_2_truncate_number
language: js
prompt: "//Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\n// >>>\
  \ truncate_number(3.5)\n// 0.5\nfunction truncate_number(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = truncate_number;\n  assert.deepEqual(candidate(3.5),0.5);\n  assert.deepEqual(candidate(1.25),0.25);\n\
  \  assert.deepEqual(candidate(123.0),0.0);\n}\n\ntest();"
completions: ["  return number % 1;\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    // your code here\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number % 1;\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var int_part = Math.floor(number);\n\
    \    var dec_part = number - int_part;\n    return dec_part;\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer = Math.floor(number);\n    var decimal = number - integer;\n\
    \    return decimal;\n}\n", "    return number - Math.floor(number);\n}\n", " \
    \   return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer_part = Math.floor(number);\n    var decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}\n", "  return number % 1;\n}\n",
  "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number % 1;\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    var integer_part = Math.floor(number);\n    var decimal_part = number\
    \ - integer_part;\n    return decimal_part;\n}\n", "    //TODO\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var integer = Math.floor(number);\n\
    \    var decimal = number - integer;\n    return decimal;\n}\n", "    return number\
    \ - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n}\n",
  "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    let integer_part = Math.floor(number);\n\
    \    let decimal_part = number - integer_part;\n    return decimal_part;\n}\n",
  "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number % 1;\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "  // your code here\n}\n",
  "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "  return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    // your code here\n\
    }\n", "    return number - Math.floor(number);\n}\n", "  return number % 1;\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    var truncated = Math.floor(number);\n\
    \    var decimals = number - truncated;\n    return decimals;\n}\n", "    return\
    \ number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    return number - Math.floor(number);\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

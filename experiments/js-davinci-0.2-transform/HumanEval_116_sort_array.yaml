name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    let arr1 = arr.map(function(a){\n        return a.toString(2).split('').filter(function(b){\n\
    \            return b == 1;\n        }).length;\n    });\n    let arr2 = arr.map(function(a){\n\
    \        return a.toString(2).split('').filter(function(b){\n            return\
    \ b == 1;\n        }).length;\n    });\n    let arr3 = arr.map(function(a){\n\
    \        return a.toString(2).split('').filter(function(b){\n            return\
    \ b == 1;\n        }).length;\n    });\n    for(let i = 0; i < arr.length; i++){\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr1[i] < arr1[j]){\n\
    \                let temp = arr1[i];\n                arr1[i] = arr1[j];\n   \
    \             arr1[j] = temp;\n            }\n        }\n    }\n    for(let i\
    \ = 0; i < arr.length; i++){\n        for(let j = 0; j < arr.length; j++){\n \
    \           if(arr2[i] == arr2[j] && arr[i] < arr[j]){\n                let temp\
    \ = arr2[i];\n                arr2[i] = arr2[j];\n                arr2[j] = temp;\n\
    \            }\n        }\n    }\n    for(let i = 0; i < arr.length; i++){\n \
    \       for(let j = 0; j < arr.length; j++){\n            if(arr3[i] == arr3[j]\
    \ && arr[i] == arr[j] && arr1[i] == arr1[j] && arr[i] < arr[j]){\n           \
    \     let temp = arr3[i];\n                arr3[i] = arr3[j];\n              \
    \  arr3[j] = temp;\n            }\n        }\n    }\n    return arr;\n}", "  \
    \  let sorted = arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n \
    \       let bBinary = b.toString(2);\n        let aOnes = aBinary.match(/1/g)\
    \ ? aBinary.match(/1/g).length : 0;\n        let bOnes = bBinary.match(/1/g) ?\
    \ bBinary.match(/1/g).length : 0;\n        if (aOnes === bOnes) {\n          \
    \  return a - b;\n        } else {\n            return aOnes - bOnes;\n      \
    \  }\n    });\n    return sorted;\n}\n", "    return arr.sort((a, b) => {\n  \
    \      if (a.toString(2).match(/1/g) === null && b.toString(2).match(/1/g) ===\
    \ null) {\n            return a - b;\n        } else if (a.toString(2).match(/1/g)\
    \ === null) {\n            return -1;\n        } else if (b.toString(2).match(/1/g)\
    \ === null) {\n            return 1;\n        } else if (a.toString(2).match(/1/g).length\
    \ === b.toString(2).match(/1/g).length) {\n            return a - b;\n       \
    \ } else {\n            return a.toString(2).match(/1/g).length - b.toString(2).match(/1/g).length;\n\
    \        }\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(function(x){\n        return x.toString(2);\n\
    \    });\n    arr1.sort(function(a,b){\n        if(a.match(/1/g) === null && b.match(/1/g)\
    \ === null){\n            return a - b;\n        }\n        if(a.match(/1/g) ===\
    \ null){\n            return -1;\n        }\n        if(b.match(/1/g) === null){\n\
    \            return 1;\n        }\n        if(a.match(/1/g).length === b.match(/1/g).length){\n\
    \            return a - b;\n        }\n        return a.match(/1/g).length - b.match(/1/g).length;\n\
    \    });\n    return arr1.map(function(x){\n        return parseInt(x,2);\n  \
    \  });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    let arr1 = arr.map(x\
    \ => x.toString(2).split('').filter(y => y === '1').length);\n    let arr2 = arr.map(x\
    \ => x.toString(2).split('').filter(y => y === '1').length);\n    arr1.sort((a,\
    \ b) => a - b);\n    arr2.sort((a, b) => b - a);\n    let arr3 = [];\n    for\
    \ (let i = 0; i < arr1.length; i++) {\n        arr3.push(arr[arr2.indexOf(arr1[i])]);\n\
    \    }\n    return arr3;\n}\n", "    let ones = [];\n    let zeros = [];\n   \
    \ for(let i = 0; i < arr.length; i++){\n        let binary = arr[i].toString(2);\n\
    \        let count = 0;\n        for(let j = 0; j < binary.length; j++){\n   \
    \         if(binary[j] === '1'){\n                count++;\n            }\n  \
    \      }\n        if(count === 0){\n            zeros.push(arr[i]);\n        }\n\
    \        else{\n            ones.push([arr[i], count]);\n        }\n    }\n  \
    \  ones.sort(function(a, b){\n        if(a[1] === b[1]){\n            return a[0]\
    \ - b[0];\n        }\n        else{\n            return a[1] - b[1];\n       \
    \ }\n    });\n    for(let i = 0; i < ones.length; i++){\n        zeros.push(ones[i][0]);\n\
    \    }\n    return zeros;\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(e => e === '1').length;\n        let bOnes = bBin.split('').filter(e\
    \ => e === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        } else {\n            return aOnes - bOnes;\n        }\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2);\n    const bBin = b.toString(2);\n\
    \    const aOnes = aBin.split('').filter(x => x === '1').length;\n    const bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n    if (aOnes === bOnes) {\n\
    \      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length\
    \ : 0;\n        let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        } else {\n\
    \            return aOnes - bOnes;\n        }\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        return a1 - b1 || a - b;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aOnes === bOnes) return a - b;\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n        let\
    \ bOnes = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(num => num === '1').length;\n     \
    \   let bOnes = bBin.split('').filter(num => num === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        } else {\n         \
    \   return aOnes - bOnes;\n        }\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    let sorted = arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        } else {\n            return aOnes\
    \ - bOnes;\n        }\n    });\n    return sorted;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x == 1).length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x == 1).length;\n    \
    \    if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin =\
    \ b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.split('1').length\
    \ - 1;\n        let bOnes = bBinary.split('1').length - 1;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr2 = arr.map(x\
    \ => x.toString(2));\n    let arr3 = arr2.map(x => x.split('').filter(x => x ===\
    \ '1').length);\n    let arr4 = arr3.map((x, i) => [x, arr[i]]);\n    let arr5\
    \ = arr4.sort((a, b) => a[0] - b[0]);\n    let arr6 = arr5.map(x => x[1]);\n \
    \   return arr6;\n}\n", "    return arr.sort((a, b) => {\n        let aBinary\
    \ = a.toString(2);\n        let bBinary = b.toString(2);\n        let aOnes =\
    \ aBinary.split('').filter(x => x === '1').length;\n        let bOnes = bBinary.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n  \
    \      let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \      if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "  var arr1 = [];\n  var arr2 = [];\n  var arr3\
    \ = [];\n  var arr4 = [];\n  var arr5 = [];\n  var arr6 = [];\n  var arr7 = [];\n\
    \  var arr8 = [];\n  var arr9 = [];\n  var arr10 = [];\n  var arr11 = [];\n  var\
    \ arr12 = [];\n  var arr13 = [];\n  var arr14 = [];\n  var arr15 = [];\n  var\
    \ arr16 = [];\n  var arr17 = [];\n  var arr18 = [];\n  var arr19 = [];\n  var\
    \ arr20 = [];\n  var arr21 = [];\n  var arr22 = [];\n  var arr23 = [];\n  var\
    \ arr24 = [];\n  var arr25 = [];\n  var arr26 = [];\n  var arr27 = [];\n  var\
    \ arr28 = [];\n  var arr29 = [];\n  var arr30 = [];\n  var arr31 = [];\n  var\
    \ arr32 = [];\n  var arr33 = [];\n  var arr34 = [];\n  var arr35 = [];\n  var\
    \ arr36 = [];\n  var arr37 = [];\n  var arr38 = [];\n  var arr39 = [];\n  var\
    \ arr40 = [];\n  var arr41 = [];\n  var arr42 = [];\n  var arr43 = [];\n  var\
    \ arr44 = [];\n  var arr45 = [];\n  var arr46 = [];\n  var arr47 = [];\n  var\
    \ arr48 = [];\n  var arr49 = [];\n  var arr50 = [];\n  var arr51 = [];\n  var\
    \ arr52 = [];\n  var arr53 = [];\n  var arr54 = [];\n  var arr55 = [];\n  var\
    \ arr56 = [];\n  var arr57 = [];\n  var arr58 = [];\n  var arr59 = [];\n  var\
    \ arr60 = [];\n  var arr61 = [];\n  var arr62 = [];\n  var arr63 = [];\n  var\
    \ arr64 = [];\n  var arr65 = [];\n  var arr66 = [];\n  var arr67 = [];\n  var\
    \ arr68 = [];\n  var arr69 = [];\n  var arr70 = [];\n  var arr71 = [];\n  var\
    \ arr72 = [];\n  var arr73 = [];\n", "  return arr.sort((a, b) => {\n    let aBin\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n    let bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n    if (aBin === bBin) {\n      return a - b;\n    }\
    \ else {\n      return aBin - bBin;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(function(x){\n        return x.toString(2);\n    });\n    let arr2\
    \ = arr1.map(function(x){\n        return x.split('').filter(function(y){\n  \
    \          return y === '1';\n        }).length;\n    });\n    let arr3 = arr2.map(function(x,\
    \ i){\n        return [x, arr[i]];\n    });\n    arr3.sort(function(a, b){\n \
    \       if(a[0] > b[0]){\n            return 1;\n        }\n        if(a[0] <\
    \ b[0]){\n            return -1;\n        }\n        if(a[0] === b[0]){\n    \
    \        if(a[1] > b[1]){\n                return 1;\n            }\n        \
    \    if(a[1] < b[1]){\n                return -1;\n            }\n        }\n\
    \    });\n    return arr3.map(function(x){\n        return x[1];\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr3 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr4 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr5 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr6 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr7 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr8 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr9 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr10 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr11 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr12 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr13 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr14 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr15 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n   ", "    let arr1 = arr.map(x => x.toString(2));\n\
    \    let arr2 = arr1.map(x => x.split('').filter(y => y === '1').length);\n  \
    \  let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    arr3.sort((a, b) => a[0] -\
    \ b[0]);\n    return arr3.map(x => x[1]);\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n\
    \        let aOnes = aBinary.split('').filter(x => x === '1').length;\n      \
    \  let bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(function(x){\n        return x.toString(2).split('').filter(function(y){\n\
    \            return y == 1;\n        }).length;\n    });\n    let arr2 = arr.slice();\n\
    \    arr2.sort(function(a, b){\n        return a - b;\n    });\n    let arr3 =\
    \ arr2.map(function(x){\n        return x.toString(2).split('').filter(function(y){\n\
    \            return y == 1;\n        }).length;\n    });\n    let arr4 = [];\n\
    \    for(let i = 0; i < arr1.length; i++){\n        for(let j = 0; j < arr3.length;\
    \ j++){\n            if(arr1[i] == arr3[j]){\n                arr4.push(arr2[j]);\n\
    \                arr3[j] = -1;\n            }\n        }\n    }\n    return arr4;\n\
    }\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n       \
    \ let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        } else {\n            return\
    \ aOnes - bOnes;\n        }\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "  return arr.sort((a, b) => {\n    let aOnes =\
    \ a.toString(2).split('').filter(x => x === '1').length;\n    let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        const aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        const bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBin === bBin) {\n            return a -\
    \ b;\n        }\n        return aBin - bBin;\n    });\n}\n", "    var arr1 = [];\n\
    \    var arr2 = [];\n    var arr3 = [];\n    for(var i = 0; i < arr.length; i++){\n\
    \        if(arr[i] < 0){\n            arr1.push(arr[i]);\n        }else if(arr[i]\
    \ == 0){\n            arr2.push(arr[i]);\n        }else{\n            arr3.push(arr[i]);\n\
    \        }\n    }\n    arr1.sort(function(a, b){return a - b});\n    arr2.sort(function(a,\
    \ b){return a - b});\n    arr3.sort(function(a, b){return a - b});\n    return\
    \ arr1.concat(arr2, arr3);\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr3 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr4 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr5 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr6 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr7 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr8 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr9 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr10 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr11 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr12 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr13 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr14 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr15 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr16 = arr.map(x => x.toString(", "    return\
    \ arr.sort((a, b) => {\n        let binaryA = a.toString(2);\n        let binaryB\
    \ = b.toString(2);\n        let countA = binaryA.split('').filter(x => x === '1').length;\n\
    \        let countB = binaryB.split('').filter(x => x === '1').length;\n     \
    \   if (countA === countB) {\n            return a - b;\n        }\n        return\
    \ countA - countB;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n        let\
    \ bOnes = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.map(x\
    \ => x.toString(2));\n    let arr2 = arr1.map(x => x.split('').filter(y => y ==\
    \ '1').length);\n    let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    let arr4\
    \ = arr3.sort((a, b) => a[0] - b[0]);\n    let arr5 = arr4.map(x => x[1]);\n \
    \   return arr5;\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        if (a.toString(2).match(/1/g) === null) {\n            return\
    \ -1;\n        }\n        if (b.toString(2).match(/1/g) === null) {\n        \
    \    return 1;\n        }\n        if (a.toString(2).match(/1/g).length === b.toString(2).match(/1/g).length)\
    \ {\n            return a - b;\n        }\n        return a.toString(2).match(/1/g).length\
    \ - b.toString(2).match(/1/g).length;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).match(/1/g).length;\n        let bBin\
    \ = b.toString(2).match(/1/g).length;\n        if (aBin === bBin) {\n        \
    \    return a - b;\n        } else {\n            return aBin - bBin;\n      \
    \  }\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(x => x.toString(2));\n    let arr2 = arr1.map(x => x.split('').filter(y\
    \ => y == 1).length);\n    let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    let\
    \ arr4 = arr3.sort((a, b) => a[0] - b[0]);\n    let arr5 = arr4.map(x => x[1]);\n\
    \    return arr5;\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    arr2.sort((a, b) => a - b);\n    let arr3 = [];\n\
    \    for (let i = 0; i < arr2.length; i++) {\n        arr3.push(arr[arr1.indexOf(arr2[i])]);\n\
    \        arr1[arr1.indexOf(arr2[i])] = -1;\n    }\n    return arr3;\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(e => e ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(e => e === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        } else {\n\
    \            return aOnes - bOnes;\n        }\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('1').length - 1;\n        let\
    \ b1 = b.toString(2).split('1').length - 1;\n        if (a1 === b1) {\n      \
    \      return a - b;\n        }\n        return a1 - b1;\n    });\n}\n", "   \
    \ return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let a1 = a.toString(2).split('').filter(x => x === '1').length;\n     \
    \   let b1 = b.toString(2).split('').filter(x => x === '1').length;\n        if\
    \ (a1 === b1) {\n            return a - b;\n        }\n        return a1 - b1;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.match(/1/g) || [];\n\
    \        let bOnes = bBin.match(/1/g) || [];\n        if (aOnes.length === bOnes.length)\
    \ {\n            return a - b;\n        }\n        return aOnes.length - bOnes.length;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n  \
    \      let aOnes = aBinary.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let binA = a.toString(2);\n        let binB = b.toString(2);\n\
    \        let countA = binA.split('').filter(x => x === '1').length;\n        let\
    \ countB = binB.split('').filter(x => x === '1').length;\n        if (countA ===\
    \ countB) {\n            return a - b;\n        }\n        return countA - countB;\n\
    \    });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr3 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr4 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr5 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr6 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr7 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr8 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr9 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr10 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr11 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr12 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr13 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr14 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr15 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n   ", "    let arr1 = [];\n    let arr2 = [];\n    let\
    \ arr3 = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] <\
    \ 0) {\n            arr1.push(arr[i]);\n        } else if (arr[i] === 0) {\n \
    \           arr2.push(arr[i]);\n        } else {\n            arr3.push(arr[i]);\n\
    \        }\n    }\n    arr1.sort((a, b) => b - a);\n    arr3.sort((a, b) => {\n\
    \        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let b1 = b.toString(2).split('').filter(x => x === '1').length;\n      \
    \  if (a1 === b1) {\n            return a - b;\n        } else {\n           \
    \ return a1 - b1;\n        }\n    });\n    return arr1.concat(arr2, arr3);\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n  \
    \      let aOnes = aBinary.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(e => e === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(e => e === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        } else {\n            return aOnes\
    \ - bOnes;\n        }\n    });\n}\n", "    return arr.sort((a, b) => {\n     \
    \   let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n     \
    \   let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n     \
    \   if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}", "    return arr.sort((a, b) => {\n        let aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n\
    \    let arr4 = [];\n    let arr5 = [];\n    let arr6 = [];\n    let arr7 = [];\n\
    \    let arr8 = [];\n    let arr9 = [];\n    let arr10 = [];\n    let arr11 =\
    \ [];\n    let arr12 = [];\n    let arr13 = [];\n    let arr14 = [];\n    let\
    \ arr15 = [];\n    let arr16 = [];\n    let arr17 = [];\n    let arr18 = [];\n\
    \    let arr19 = [];\n    let arr20 = [];\n    let arr21 = [];\n    let arr22\
    \ = [];\n    let arr23 = [];\n    let arr24 = [];\n    let arr25 = [];\n    let\
    \ arr26 = [];\n    let arr27 = [];\n    let arr28 = [];\n    let arr29 = [];\n\
    \    let arr30 = [];\n    let arr31 = [];\n    let arr32 = [];\n    let arr33\
    \ = [];\n    let arr34 = [];\n    let arr35 = [];\n    let arr36 = [];\n    let\
    \ arr37 = [];\n    let arr38 = [];\n    let arr39 = [];\n    let arr40 = [];\n\
    \    let arr41 = [];\n    let arr42 = [];\n    let arr43 = [];\n    let arr44\
    \ = [];\n    let arr45 = [];\n    let arr46 = [];\n    let arr47 = [];\n    let\
    \ arr48 = [];\n    let arr49 = [];\n    let arr50 = [];\n    let arr51 = [];\n\
    \    let arr52 = [];\n    let arr53 = [];\n    let arr54 = [];\n    let arr55\
    \ = [];\n    let arr56 = [];\n    let arr57 = [];\n    let arr58 = [];\n    let\
    \ arr59 = [];\n    let arr60 = [];\n    let arr61 = [];\n    let arr62 = [];\n\
    \    let arr63 = [];\n    let arr64 = [];\n    let arr65 = [];\n    let arr66\
    \ = [];\n    let arr67 = [];\n    let arr68 = [];\n    let arr69 = [];\n    let\
    \ arr70 = [];\n    let arr71 = [];\n    let arr72 = [];\n    let arr73 = [];\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n   \
    \     let bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "    arr.sort(function(a, b){\n        var aBin = a.toString(2);\n     \
    \   var bBin = b.toString(2);\n        var aOnes = aBin.split('1').length - 1;\n\
    \        var bOnes = bBin.split('1').length - 1;\n        if(aOnes === bOnes){\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    \    return arr;\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let a_ones\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let b_ones\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (a_ones\
    \ === b_ones) {\n            return a - b;\n        }\n        return a_ones -\
    \ b_ones;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin =\
    \ a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        if (a === b) {\n   \
    \         return 0;\n        }\n        let aBinary = a.toString(2);\n       \
    \ let bBinary = b.toString(2);\n        let aOnes = aBinary.split('').filter(char\
    \ => char === '1').length;\n        let bOnes = bBinary.split('').filter(char\
    \ => char === '1').length;\n        if (aOnes === bOnes) {\n            return\
    \ a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n       \
    \ let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length\
    \ : 0;\n        let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2).split('').filter(el => el === '1').length;\n \
    \       let bBin = b.toString(2).split('').filter(el => el === '1').length;\n\
    \        if (aBin === bBin) {\n            return a - b;\n        } else {\n \
    \           return aBin - bBin;\n        }\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let a1\
    \ = a.toString(2).split('1').length - 1;\n        let b1 = b.toString(2).split('1').length\
    \ - 1;\n        if (a1 === b1) {\n            return a - b;\n        }\n     \
    \   return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b) => {\n       \
    \ let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n       \
    \ let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n       \
    \ if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    let ones = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let sorted = arr.map((x, i) => [x, ones[i]]).sort((a,\
    \ b) => a[1] - b[1]);\n    return sorted.map(x => x[0]);\n}\n", "    let sorted\
    \ = arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n        let bBinary\
    \ = b.toString(2);\n        let aOnes = aBinary.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBinary.split('').filter(x => x === '1').length;\n      \
    \  if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n    return sorted;\n}\n", "  return arr.sort((a, b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "  return arr.sort((a, b) => {\n    let aBin = a.toString(2);\n\
    \    let bBin = b.toString(2);\n    let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n    let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes\
    \ - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(function(x){\n        return x.toString(2);\n    });\n    let arr2\
    \ = arr1.map(function(x){\n        return x.split('').filter(function(y){\n  \
    \          return y === '1';\n        }).length;\n    });\n    let arr3 = arr2.map(function(x,\
    \ i){\n        return [x, arr[i]];\n    });\n    let arr4 = arr3.sort(function(a,\
    \ b){\n        if(a[0] === b[0]){\n            return a[1] - b[1];\n        }\n\
    \        return a[0] - b[0];\n    });\n    return arr4.map(function(x){\n    \
    \    return x[1];\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n\
    \        let aOnes = aBinary.split('').filter(x => x === '1').length;\n      \
    \  let bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    arr2.sort((a, b) => a - b);\n    let arr3 = [];\n \
    \   for (let i = 0; i < arr2.length; i++) {\n        arr3.push(arr[arr1.indexOf(arr2[i])]);\n\
    \        arr1[arr1.indexOf(arr2[i])] = -1;\n    }\n    return arr3;\n}\n", " \
    \   return arr.sort((a, b) => {\n        if (a === b) return 0;\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('1').length\
    \ - 1;\n        let bOnes = bBin.split('1').length - 1;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(x => x.toString(2));\n    let arr2 = arr1.map(x => x.split('').filter(y\
    \ => y === '1').length);\n    let arr3 = arr2.map((x, i) => [x, arr[i]]);\n  \
    \  arr3.sort((a, b) => a[0] - b[0]);\n    return arr3.map(x => x[1]);\n}", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    let arr1 = [];\n    let arr2 = [];\n\
    \    let arr3 = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ < 0) {\n            arr1.push(arr[i]);\n        } else if (arr[i] === 0) {\n\
    \            arr2.push(arr[i]);\n        } else {\n            arr3.push(arr[i]);\n\
    \        }\n    }\n    arr1.sort((a, b) => b - a);\n    arr3.sort((a, b) => {\n\
    \        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let b1 = b.toString(2).split('').filter(x => x === '1').length;\n      \
    \  if (a1 === b1) {\n            return a - b;\n        } else {\n           \
    \ return a1 - b1;\n        }\n    });\n    return arr1.concat(arr2).concat(arr3);\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    let obj = {};\n \
    \   let arr2 = [];\n    for(let i = 0; i < arr.length; i++){\n        let binary\
    \ = arr[i].toString(2);\n        let count = 0;\n        for(let j = 0; j < binary.length;\
    \ j++){\n            if(binary[j] === '1'){\n                count++;\n      \
    \      }\n        }\n        if(!obj[count]){\n            obj[count] = [arr[i]];\n\
    \        } else {\n            obj[count].push(arr[i]);\n        }\n    }\n  \
    \  for(let key in obj){\n        obj[key].sort((a, b) => a - b);\n        arr2\
    \ = arr2.concat(obj[key]);\n    }\n    return arr2;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n       \
    \ let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let sorted = arr.sort((a, b) => {\n        if (a < 0 || b\
    \ < 0) {\n            return a - b;\n        }\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n    return sorted;\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    let arr1 = arr.map(x\
    \ => x.toString(2));\n    let arr2 = arr1.map(x => x.split('').filter(y => y ===\
    \ '1').length);\n    let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    let arr4\
    \ = arr3.sort((a, b) => a[0] - b[0]);\n    let arr5 = arr4.map(x => x[1]);\n \
    \   return arr5;\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n       \
    \ let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    let result = [];\n\
    \    let sorted = arr.sort((a, b) => {\n        let aOnes = a.toString(2).match(/1/g).length;\n\
    \        let bOnes = b.toString(2).match(/1/g).length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n    for (let i = 0; i < sorted.length; i++) {\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n        let\
    \ aOnes = aBinary.split('').filter(x => x === '1').length;\n        let bOnes\
    \ = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == '1').length);\n    let arr3 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == '1').length);\n    arr1.sort((a, b) => a - b);\n    arr2.sort((a, b)\
    \ => b - a);\n    let arr4 = [];\n    for (let i = 0; i < arr1.length; i++) {\n\
    \        for (let j = 0; j < arr2.length; j++) {\n            if (arr1[i] == arr2[j])\
    \ {\n                arr4.push(arr2[j]);\n                arr2.splice(j, 1);\n\
    \                break;\n            }\n        }\n    }\n    let arr5 = [];\n\
    \    for (let i = 0; i < arr4.length; i++) {\n        for (let j = 0; j < arr3.length;\
    \ j++) {\n            if (arr4[i] == arr3[j]) {\n                arr5.push(arr[j]);\n\
    \                arr3.splice(j, 1);\n                break;\n            }\n \
    \       }\n    }\n    return arr5;\n}", "    let sorted = arr.sort((a, b) => {\n\
    \        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n    return sorted;\n}\n", "  return arr.sort((a,\
    \ b) => {\n    let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x => x === '1').length;\n    if\
    \ (aBin === bBin) {\n      return a - b;\n    } else {\n      return aBin - bBin;\n\
    \    }\n  });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let bBin = b.toString(2).split('').filter(x => x === '1').length;\n    \
    \    if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    arr.sort(function(a,\
    \ b){\n        var aBin = a.toString(2);\n        var bBin = b.toString(2);\n\
    \        var aOnes = aBin.split('1').length - 1;\n        var bOnes = bBin.split('1').length\
    \ - 1;\n        if(aOnes === bOnes){\n            return a - b;\n        }\n \
    \       return aOnes - bOnes;\n    });\n    return arr;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let onesA = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let onesB = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (onesA === onesB) {\n            return a - b;\n        }\n      \
    \  return onesA - onesB;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n  \
    \      let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \      if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ a1 = a.toString(2).split('').filter(x => x === '1').length;\n        let b1\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (a1 ===\
    \ b1) {\n            return a - b;\n        }\n        return a1 - b1;\n    });\n\
    }\n", "    let arr1 = arr.map(function(x){\n        return x.toString(2);\n  \
    \  });\n    let arr2 = arr1.map(function(x){\n        return x.split('').filter(function(y){\n\
    \            return y == 1;\n        }).length;\n    });\n    let arr3 = arr.map(function(x,\
    \ i){\n        return [x, arr2[i]];\n    });\n    arr3.sort(function(a, b){\n\
    \        if(a[1] > b[1]){\n            return 1;\n        }\n        if(a[1] <\
    \ b[1]){\n            return -1;\n        }\n        if(a[1] == b[1]){\n     \
    \       if(a[0] > b[0]){\n                return 1;\n            }\n         \
    \   if(a[0] < b[0]){\n                return -1;\n            }\n        }\n \
    \   });\n    return arr3.map(function(x){\n        return x[0];\n    });\n}\n",
  "    let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        if (arr[i] < 0) {\n            arr1.push(arr[i]);\n\
    \        } else if (arr[i] === 0) {\n            arr2.push(arr[i]);\n        }\
    \ else {\n            arr3.push(arr[i]);\n        }\n    }\n    arr1.sort((a,\
    \ b) => a - b);\n    arr2.sort((a, b) => a - b);\n    arr3.sort((a, b) => {\n\
    \        let a1 = a.toString(2).split('').filter(e => e === '1').length;\n   \
    \     let b1 = b.toString(2).split('').filter(e => e === '1').length;\n      \
    \  if (a1 === b1) {\n            return a - b;\n        } else {\n           \
    \ return a1 - b1;\n        }\n    });\n    return arr1.concat(arr2).concat(arr3);\n\
    }\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr2 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    arr1.sort((a, b) => a - b);\n    let arr3 = [];\n    for (let i = 0; i <\
    \ arr1.length; i++) {\n        let index = arr2.indexOf(arr1[i]);\n        arr3.push(arr[index]);\n\
    \        arr2[index] = -1;\n    }\n    return arr3;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n\
    \        let aOnes = aBinary.split('').filter(x => x === '1').length;\n      \
    \  let bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    let\
    \ aBin = a.toString(2).split('').filter(x => x === '1').length;\n    let bBin\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n    if (aBin === bBin)\
    \ {\n      return a - b;\n    } else {\n      return aBin - bBin;\n    }\n  });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).match(/1/g).length;\n        let\
    \ bOnes = b.toString(2).match(/1/g).length;\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "    let result = [];\n    let ones = [];\n    let zeros = [];\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n            result.push(arr[i]);\n\
    \        } else {\n            let binary = arr[i].toString(2);\n            let\
    \ count = 0;\n            for (let j = 0; j < binary.length; j++) {\n        \
    \        if (binary[j] === '1') {\n                    count++;\n            \
    \    }\n            }\n            if (count === 0) {\n                zeros.push(arr[i]);\n\
    \            } else {\n                ones.push({\n                    value:\
    \ arr[i],\n                    count: count\n                });\n           \
    \ }\n        }\n    }\n    ones.sort((a, b) => {\n        if (a.count === b.count)\
    \ {\n            return a.value - b.value;\n        } else {\n            return\
    \ a.count - b.count;\n        }\n    });\n    for (let i = 0; i < ones.length;\
    \ i++) {\n        result.push(ones[i].value);\n    }\n    for (let i = 0; i <\
    \ zeros.length; i++) {\n        result.push(zeros[i]);\n    }\n    return result;\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n  \
    \      let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(num\
    \ => num === '1').length;\n        let bOnes = bBin.split('').filter(num => num\
    \ === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        } else {\n            return aOnes - bOnes;\n        }\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin =\
    \ b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).match(/1/g)\
    \ || [];\n        let bOnes = b.toString(2).match(/1/g) || [];\n        if (aOnes.length\
    \ === bOnes.length) {\n            return a - b;\n        }\n        return aOnes.length\
    \ - bOnes.length;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n        let\
    \ bOnes = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n    let arr2 = arr1.map(x\
    \ => x.split('').filter(y => y === '1').length);\n    let arr3 = arr2.map((x,\
    \ i) => [x, arr[i]]);\n    let arr4 = arr3.sort((a, b) => a[0] - b[0]);\n    let\
    \ arr5 = arr4.map(x => x[1]);\n    return arr5;\n}\n", "    let arr1 = [];\n \
    \   let arr2 = [];\n    let arr3 = [];\n    let arr4 = [];\n    let arr5 = [];\n\
    \    let arr6 = [];\n    let arr7 = [];\n    let arr8 = [];\n    let arr9 = [];\n\
    \    let arr10 = [];\n    let arr11 = [];\n    let arr12 = [];\n    let arr13\
    \ = [];\n    let arr14 = [];\n    let arr15 = [];\n    let arr16 = [];\n    let\
    \ arr17 = [];\n    let arr18 = [];\n    let arr19 = [];\n    let arr20 = [];\n\
    \    let arr21 = [];\n    let arr22 = [];\n    let arr23 = [];\n    let arr24\
    \ = [];\n    let arr25 = [];\n    let arr26 = [];\n    let arr27 = [];\n    let\
    \ arr28 = [];\n    let arr29 = [];\n    let arr30 = [];\n    let arr31 = [];\n\
    \    let arr32 = [];\n    let arr33 = [];\n    let arr34 = [];\n    let arr35\
    \ = [];\n    let arr36 = [];\n    let arr37 = [];\n    let arr38 = [];\n    let\
    \ arr39 = [];\n    let arr40 = [];\n    let arr41 = [];\n    let arr42 = [];\n\
    \    let arr43 = [];\n    let arr44 = [];\n    let arr45 = [];\n    let arr46\
    \ = [];\n    let arr47 = [];\n    let arr48 = [];\n    let arr49 = [];\n    let\
    \ arr50 = [];\n    let arr51 = [];\n    let arr52 = [];\n    let arr53 = [];\n\
    \    let arr54 = [];\n    let arr55 = [];\n    let arr56 = [];\n    let arr57\
    \ = [];\n    let arr58 = [];\n    let arr59 = [];\n    let arr60 = [];\n    let\
    \ arr61 = [];\n    let arr62 = [];\n    let arr63 = [];\n    let arr64 = [];\n\
    \    let arr65 = [];\n    let arr66 = [];\n    let arr67 = [];\n    let arr68\
    \ = [];\n    let arr69 = [];\n    let arr70 = [];\n    let arr71 = [];\n    let\
    \ arr72 = [];\n    let arr73 = [];\n", "    let sorted = arr.sort((a, b) => {\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        } else {\n            return aOnes - bOnes;\n\
    \        }\n    });\n    return sorted;\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n        let bOnes =\
    \ bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        } else {\n            return aOnes - bOnes;\n\
    \        }\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let bBin = b.toString(2).split('').filter(x => x === '1').length;\n    \
    \    if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let sorted = arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBinary = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aBinary === bBinary) {\n            return a - b;\n        } else\
    \ {\n            return aBinary - bBinary;\n        }\n    });\n    return sorted;\n\
    }\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr2 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr3 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr4 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr5 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr6 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr7 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr8 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr9 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr10 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr11 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr12 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr13 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr14 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    let arr15 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \   ", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBinary = a.toString(2).split('').filter(num => num === '1').length;\n\
    \        let bBinary = b.toString(2).split('').filter(num => num === '1').length;\n\
    \        if (aBinary === bBinary) {\n            return a - b;\n        } else\
    \ {\n            return aBinary - bBinary;\n        }\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBin.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin =\
    \ b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        const aOnes = a.toString(2).split('1').length - 1;\n        const\
    \ bOnes = b.toString(2).split('1').length - 1;\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBinary = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        }\n        return aBinary - bBinary;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n\
    \        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.map(x\
    \ => x.toString(2));\n    let arr2 = arr1.map(x => x.split(\"\").filter(y => y\
    \ === \"1\").length);\n    let arr3 = arr.map((x, i) => [x, arr2[i]]);\n    arr3.sort((a,\
    \ b) => a[1] - b[1]);\n    return arr3.map(x => x[0]);\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2).split('').filter(e => e === '1').length;\n        let bBin =\
    \ b.toString(2).split('').filter(e => e === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        } else {\n            return aBin\
    \ - bBin;\n        }\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n\
    \    let arr2 = arr1.map(x => x.split('').filter(y => y === '1').length);\n  \
    \  let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    arr3.sort((a, b) => a[0] -\
    \ b[0]);\n    return arr3.map(x => x[1]);\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n  \
    \      let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) return a - b;\n        return aBin - bBin;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

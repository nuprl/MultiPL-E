name: HumanEval_111_histogram
language: js
prompt: "//Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n// of the letter with the most repetition and containing the corresponding\
  \ count.\n// If several letters have the same occurrence, return all of them.\n\
  // Example:\n// >>> histogram(\"a b c\")\n// {\"a\": 1, \"b\": 1, \"c\": 1}\n//\
  \ >>> histogram(\"a b b a\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"a b c\
  \ a b\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"b b b b a\")\n// {\"b\": 4}\n\
  // >>> histogram(\"\")\n// {}\nfunction histogram(test){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = histogram;\n  assert.deepEqual(candidate(\"a b b a\"),{\"a\": 2, \"b\": 2});\n\
  \  assert.deepEqual(candidate(\"a b c a b\"),{\"a\": 2, \"b\": 2});\n  assert.deepEqual(candidate(\"\
  a b c d g\"),{\"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\
  r t g\"),{\"r\": 1, \"t\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"b b b\
  \ b a\"),{\"b\": 4});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\": 1, \"t\"\
  : 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\"),{});\n  assert.deepEqual(candidate(\"\
  a\"),{\"a\": 1});\n}\n\ntest();"
completions: ["    var dict = {};\n    var max = 0;\n    var max_list = [];\n    var\
    \ list = test.split(\" \");\n    for (var i = 0; i < list.length; i++){\n    \
    \    if (list[i] in dict){\n            dict[list[i]] += 1;\n        }\n     \
    \   else{\n            dict[list[i]] = 1;\n        }\n    }\n    for (var key\
    \ in dict){\n        if (dict[key] > max){\n            max = dict[key];\n   \
    \         max_list = [key];\n        }\n        else if (dict[key] == max){\n\
    \            max_list.push(key);\n        }\n    }\n    var result = {};\n   \
    \ for (var i = 0; i < max_list.length; i++){\n        result[max_list[i]] = max;\n\
    \    }\n    return result;\n}\n", "    var arr = test.split(\" \");\n    var dict\
    \ = {};\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(dict[arr[i]]){\n\
    \            dict[arr[i]] += 1;\n        }\n        else{\n            dict[arr[i]]\
    \ = 1;\n        }\n        if(dict[arr[i]] > max){\n            max = dict[arr[i]];\n\
    \        }\n    }\n    var newDict = {};\n    for(var key in dict){\n        if(dict[key]\
    \ == max){\n            newDict[key] = dict[key];\n        }\n    }\n    return\
    \ newDict;\n}\n", "    var arr = test.split(\" \");\n    var dict = {};\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] in dict){\n            dict[arr[i]]\
    \ += 1;\n        }else{\n            dict[arr[i]] = 1;\n        }\n    }\n   \
    \ return dict;\n}\n", "    var arr = test.split(\" \");\n    var dict = {};\n\
    \    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(dict[arr[i]]){\n\
    \            dict[arr[i]] += 1;\n        }\n        else{\n            dict[arr[i]]\
    \ = 1;\n        }\n        if(dict[arr[i]] > max){\n            max = dict[arr[i]];\n\
    \        }\n    }\n    var newDict = {};\n    for(var key in dict){\n        if(dict[key]\
    \ == max){\n            newDict[key] = dict[key];\n        }\n    }\n    return\
    \ newDict;\n}\n", "    var arr = test.split(\" \");\n    var dict = {};\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(dict[arr[i]]){\n            dict[arr[i]]\
    \ += 1;\n        }\n        else{\n            dict[arr[i]] = 1;\n        }\n\
    \    }\n    return dict;\n}\n", "    var arr = test.split(\" \");\n    var dict\
    \ = {};\n    var max = 0;\n    var max_key = \"\";\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(dict[arr[i]] == undefined){\n            dict[arr[i]] = 1;\n\
    \        }\n        else{\n            dict[arr[i]] += 1;\n        }\n       \
    \ if(dict[arr[i]] > max){\n            max = dict[arr[i]];\n            max_key\
    \ = arr[i];\n        }\n    }\n    var result = {};\n    for(var key in dict){\n\
    \        if(dict[key] == max){\n            result[key] = max;\n        }\n  \
    \  }\n    return result;\n}\n", "    var result = {};\n    var arr = test.split(\"\
    \ \");\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(result[arr[i]]\
    \ === undefined){\n            result[arr[i]] = 1;\n        }\n        else{\n\
    \            result[arr[i]]++;\n        }\n        if(result[arr[i]] > max){\n\
    \            max = result[arr[i]];\n        }\n    }\n    for(var key in result){\n\
    \        if(result[key] !== max){\n            delete result[key];\n        }\n\
    \    }\n    return result;\n}\n", "    var arr = test.split(\" \");\n    var count\
    \ = {};\n    for(var i = 0; i < arr.length; i++){\n        if(count[arr[i]]){\n\
    \            count[arr[i]]++;\n        }\n        else{\n            count[arr[i]]\
    \ = 1;\n        }\n    }\n    return count;\n}\n", "    var arr = test.split(\"\
    \ \");\n    var dict = {};\n    var max = 0;\n    var max_key = \"\";\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] in dict){\n            dict[arr[i]]\
    \ += 1;\n        }\n        else{\n            dict[arr[i]] = 1;\n        }\n\
    \        if(dict[arr[i]] > max){\n            max = dict[arr[i]];\n          \
    \  max_key = arr[i];\n        }\n    }\n    var result = {};\n    for(var key\
    \ in dict){\n        if(dict[key] == max){\n            result[key] = max;\n \
    \       }\n    }\n    return result;\n}\n", "    var arr = test.split(\" \");\n\
    \    var dict = {};\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n\
    \        if(arr[i] in dict){\n            dict[arr[i]] += 1;\n        }\n    \
    \    else{\n            dict[arr[i]] = 1;\n        }\n        if(dict[arr[i]]\
    \ > max){\n            max = dict[arr[i]];\n        }\n    }\n    var maxDict\
    \ = {};\n    for(var key in dict){\n        if(dict[key] == max){\n          \
    \  maxDict[key] = max;\n        }\n    }\n    return maxDict;\n}\n", "    var\
    \ arr = test.split(\" \");\n    var dict = {};\n    for(var i=0; i<arr.length;\
    \ i++){\n        if(arr[i] in dict){\n            dict[arr[i]] += 1;\n       \
    \ }\n        else{\n            dict[arr[i]] = 1;\n        }\n    }\n    return\
    \ dict;\n}\n", "    var count = {};\n    var max = 0;\n    var max_letter = [];\n\
    \    var test_array = test.split(\" \");\n    for (var i = 0; i < test_array.length;\
    \ i++){\n        var letter = test_array[i];\n        if (count[letter] === undefined){\n\
    \            count[letter] = 1;\n        }\n        else{\n            count[letter]\
    \ += 1;\n        }\n        if (count[letter] > max){\n            max = count[letter];\n\
    \            max_letter = [];\n            max_letter.push(letter);\n        }\n\
    \        else if (count[letter] === max){\n            max_letter.push(letter);\n\
    \        }\n    }\n    var max_dict = {};\n    for (var i = 0; i < max_letter.length;\
    \ i++){\n        max_dict[max_letter[i]] = max;\n    }\n    return max_dict;\n\
    }\n", "    var words = test.split(\" \");\n    var dict = {};\n    for(var i =\
    \ 0; i < words.length; i++){\n        if(words[i] in dict){\n            dict[words[i]]\
    \ += 1;\n        }\n        else{\n            dict[words[i]] = 1;\n        }\n\
    \    }\n    return dict;\n}\n", "    var arr = test.split(\" \");\n    var obj\
    \ = {};\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]){\n\
    \            obj[arr[i]] += 1;\n        }\n        else{\n            obj[arr[i]]\
    \ = 1;\n        }\n    }\n    return obj;\n}\n", "    var arr = test.split(\"\
    \ \");\n    var dict = {};\n    var max = 0;\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] in dict){\n            dict[arr[i]] += 1;\n       \
    \ }\n        else{\n            dict[arr[i]] = 1;\n        }\n        if(dict[arr[i]]\
    \ > max){\n            max = dict[arr[i]];\n        }\n    }\n    var result =\
    \ {};\n    for(var key in dict){\n        if(dict[key] == max){\n            result[key]\
    \ = max;\n        }\n    }\n    return result;\n}\n", "    var arr = test.split(\"\
    \ \");\n    var count = {};\n    var max = 0;\n    var result = {};\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(count[arr[i]]){\n            count[arr[i]]++;\n\
    \        }else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(var\
    \ key in count){\n        if(count[key] > max){\n            max = count[key];\n\
    \        }\n    }\n    for(var key in count){\n        if(count[key] == max){\n\
    \            result[key] = max;\n        }\n    }\n    return result;\n}\n", " \
    \   var arr = test.split(\" \");\n    var dict = {};\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] in dict){\n            dict[arr[i]] += 1;\n       \
    \ }\n        else{\n            dict[arr[i]] = 1;\n        }\n    }\n    return\
    \ dict;\n}\n", "    let count = {};\n    let max = 0;\n    let max_key = [];\n\
    \    let result = {};\n    let arr = test.split(\" \");\n    for(let i = 0; i\
    \ < arr.length; i++){\n        if(count[arr[i]]){\n            count[arr[i]] +=\
    \ 1;\n        }else{\n            count[arr[i]] = 1;\n        }\n    }\n    for(let\
    \ key in count){\n        if(count[key] > max){\n            max = count[key];\n\
    \            max_key = [key];\n        }else if(count[key] === max){\n       \
    \     max_key.push(key);\n        }\n    }\n    for(let i = 0; i < max_key.length;\
    \ i++){\n        result[max_key[i]] = max;\n    }\n    return result;\n}", " \
    \   var testArray = test.split(\" \");\n    var testDict = {};\n    var max =\
    \ 0;\n    var maxKeys = [];\n    for (var i = 0; i < testArray.length; i++){\n\
    \        if (testDict[testArray[i]]){\n            testDict[testArray[i]] += 1;\n\
    \        }\n        else{\n            testDict[testArray[i]] = 1;\n        }\n\
    \    }\n    for (var key in testDict){\n        if (testDict[key] > max){\n  \
    \          max = testDict[key];\n            maxKeys = [key];\n        }\n   \
    \     else if (testDict[key] == max){\n            maxKeys.push(key);\n      \
    \  }\n    }\n    for (var i = 0; i < maxKeys.length; i++){\n        testDict[maxKeys[i]]\
    \ = max;\n    }\n    return testDict;\n}\n", "    var arr = test.split(\" \");\n\
    \    var dict = {};\n    var max = 0;\n    var max_key = [];\n    for(var i =\
    \ 0; i < arr.length; i++){\n        var key = arr[i];\n        if(dict[key] ==\
    \ undefined){\n            dict[key] = 1;\n        }\n        else{\n        \
    \    dict[key] += 1;\n        }\n        if(dict[key] > max){\n            max\
    \ = dict[key];\n            max_key = [key];\n        }\n        else if(dict[key]\
    \ == max){\n            max_key.push(key);\n        }\n    }\n    for(var i =\
    \ 0; i < max_key.length; i++){\n        dict[max_key[i]] = max;\n    }\n    return\
    \ dict;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

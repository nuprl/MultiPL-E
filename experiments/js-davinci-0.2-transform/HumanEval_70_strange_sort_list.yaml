name: HumanEval_70_strange_sort_list
language: js
prompt: "//Given list of integers, return list in strange order.\n// Strange sorting,\
  \ is when you start with the minimum value,\n// then maximum of the remaining integers,\
  \ then minimum and so on.\n// Examples:\n// >>> strange_sort_list([1, 2, 3, 4])\n\
  // [1, 4, 2, 3]\n// >>> strange_sort_list([5, 5, 5, 5])\n// [5, 5, 5, 5]\n// >>>\
  \ strange_sort_list([])\n// []\nfunction strange_sort_list(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strange_sort_list;\n  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 4, 2, 3]);\n\
  \  assert.deepEqual(candidate([5, 6, 7, 8, 9]),[5, 9, 6, 8, 7]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5]),[1, 5, 2, 4, 3]);\n  assert.deepEqual(candidate([5, 6, 7, 8, 9, 1]),[1,\
  \ 9, 5, 8, 6, 7]);\n  assert.deepEqual(candidate([5, 5, 5, 5]),[5, 5, 5, 5]);\n\
  \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3, 4,\
  \ 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5]);\n  assert.deepEqual(candidate([0, 2, 2,\
  \ 2, 5, 5, -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2]);\n  assert.deepEqual(candidate([111111]),[111111]);\n\
  }\n\ntest();"
completions: ["    var result = [];\n    var min = Math.min.apply(null, lst);\n  \
    \  var max = Math.max.apply(null, lst);\n    var minIndex = lst.indexOf(min);\n\
    \    var maxIndex = lst.indexOf(max);\n    var minIndexes = [];\n    var maxIndexes\
    \ = [];\n    var minIndexes = lst.map(function(item, index){\n        if(item\
    \ === min){\n            return index;\n        }\n    });\n    var maxIndexes\
    \ = lst.map(function(item, index){\n        if(item === max){\n            return\
    \ index;\n        }\n    });\n    var minIndexes = minIndexes.filter(function(item){\n\
    \        return item !== undefined;\n    });\n    var maxIndexes = maxIndexes.filter(function(item){\n\
    \        return item !== undefined;\n    });\n    var minIndexes = minIndexes.reverse();\n\
    \    var maxIndexes = maxIndexes.reverse();\n    var minIndexesLength = minIndexes.length;\n\
    \    var maxIndexesLength = maxIndexes.length;\n    var minIndexesLengthHalf =\
    \ Math.floor(minIndexesLength/2);\n    var maxIndexesLengthHalf = Math.floor(maxIndexesLength/2);\n\
    \    var minIndexesLengthHalf = minIndexesLength%2 === 0 ? minIndexesLengthHalf\
    \ : minIndexesLengthHalf+1;\n    var maxIndexesLengthHalf = maxIndexesLength%2\
    \ === 0 ? maxIndexesLengthHalf : maxIndexesLengthHalf+1;\n    var minIndexesFirstHalf\
    \ = minIndexes.slice(0, minIndexesLengthHalf);\n    var minIndexesSecondHalf =\
    \ minIndexes.slice(minIndexesLengthHalf);\n    var maxIndexesFirstHalf = maxIndexes.slice(0,\
    \ maxIndexesLengthHalf);\n    var maxIndexesSecondHalf = maxIndexes.slice(maxIndexesLengthHalf);\n\
    \    var minIndexesFirstHalfLength = minIndexesFirstHalf.length;\n    var minIndexesSecondHalfLength\
    \ = minIndexesSecondHalf.length;\n    var maxIndexesFirstHalfLength = maxIndexesFirstHalf.length;",
  "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            new_lst.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n    \
    \    }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0) {\n        return [];\n \
    \   }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    var lst_copy\
    \ = lst.slice();\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index\
    \ - 1, 1);\n    new_lst.push(min);\n    new_lst.push(max);\n    new_lst = new_lst.concat(strange_sort_list(lst_copy));\n\
    \    return new_lst;\n}\n", "    var new_lst = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var i = 0;\n    while (lst.length\
    \ > 0){\n        if (i % 2 == 0){\n            new_lst.push(min);\n          \
    \  lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null, lst);\n\
    \        }\n        else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return new_lst;\n}\n", "    if(lst.length === 0){\n        return\
    \ [];\n    }\n    var min = lst[0];\n    var max = lst[0];\n    var min_index\
    \ = 0;\n    var max_index = 0;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < min){\n            min = lst[i];\n            min_index = i;\n\
    \        }\n        if(lst[i] > max){\n            max = lst[i];\n           \
    \ max_index = i;\n        }\n    }\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var new_lst = [];\n    new_lst.push(min);\n   \
    \ new_lst.push(max);\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ != min && lst[i] != max){\n            new_lst.push(lst[i]);\n        }\n  \
    \  }\n    return new_lst;\n}\n", "    if (lst.length === 0){\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var index = 0;\n    while (lst.length > 0){\n\
    \        if (index % 2 === 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else {\n\
    \            result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        index++;\n \
    \   }\n    return result;\n}\n", "    if(lst.length == 0) return [];\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst =\
    \ [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n \
    \           new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while\
    \ (lst.length > 0){\n        if (i % 2 == 0){\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length == 0) {\n        return [];\n  \
    \  }\n    var lst_sorted = lst.sort(function(a, b){return a-b});\n    var lst_strange\
    \ = [];\n    var lst_strange_index = 0;\n    var lst_sorted_index = 0;\n    var\
    \ lst_sorted_length = lst_sorted.length;\n    while (lst_sorted_index < lst_sorted_length)\
    \ {\n        lst_strange[lst_strange_index] = lst_sorted[lst_sorted_index];\n\
    \        lst_strange_index += 2;\n        lst_sorted_index += 1;\n    }\n    lst_sorted_index\
    \ = lst_sorted_length - 1;\n    lst_strange_index = 1;\n    while (lst_sorted_index\
    \ >= 0) {\n        lst_strange[lst_strange_index] = lst_sorted[lst_sorted_index];\n\
    \        lst_strange_index += 2;\n        lst_sorted_index -= 1;\n    }\n    return\
    \ lst_strange;\n}\n", "    if (lst.length === 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let lst1 = lst.filter(x => x !== min);\n\
    \    let lst2 = lst.filter(x => x !== max);\n    return [min, max, ...strange_sort_list(lst1),\
    \ ...strange_sort_list(lst2)];\n}\n", "    if(lst.length == 0) return [];\n  \
    \  var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst\
    \ = [];\n    var i = 0;\n    while(i < lst.length){\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        i++;\n    }\n    return new_lst;\n}\n", " \
    \   var sorted = lst.sort(function(a, b){return a-b});\n    var result = [];\n\
    \    var i = 0;\n    var j = sorted.length - 1;\n    while (i <= j){\n       \
    \ result.push(sorted[i]);\n        if (i != j){\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ if(lst.length === 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var minIndex = lst.indexOf(min);\n    var\
    \ maxIndex = lst.indexOf(max);\n    var newLst = [];\n    newLst.push(min);\n\
    \    newLst.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex,\
    \ 1);\n    return newLst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length == 0) return [];\n    var min = Math.min.apply(null, lst);\n   \
    \ var max = Math.max.apply(null, lst);\n    var result = [];\n    var i = 0;\n\
    \    while (lst.length > 0){\n        if (i % 2 == 0){\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    if(lst.length === 0){\n        return [];\n\
    \    }\n    var min = lst[0];\n    var max = lst[0];\n    var min_index = 0;\n\
    \    var max_index = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < min){\n            min = lst[i];\n            min_index = i;\n        }\n\
    \        if(lst[i] > max){\n            max = lst[i];\n            max_index =\
    \ i;\n        }\n    }\n    var new_list = [];\n    new_list.push(min);\n    lst.splice(min_index,\
    \ 1);\n    while(lst.length > 0){\n        var min = lst[0];\n        var min_index\
    \ = 0;\n        var max = lst[0];\n        var max_index = 0;\n        for(var\
    \ i = 0; i < lst.length; i++){\n            if(lst[i] < min){\n              \
    \  min = lst[i];\n                min_index = i;\n            }\n            if(lst[i]\
    \ > max){\n                max = lst[i];\n                max_index = i;\n   \
    \         }\n        }\n        if(new_list.length % 2 === 0){\n            new_list.push(max);\n\
    \            lst.splice(max_index, 1);\n        }\n        else{\n           \
    \ new_list.push(min);\n            lst.splice(min_index, 1);\n        }\n    }\n\
    \    return new_list;\n}\n", "    if(lst.length == 0){\n        return lst;\n\
    \    }\n    lst.sort(function(a, b){return a-b});\n    var new_lst = [];\n   \
    \ var i = 0;\n    while(lst.length > 0){\n        new_lst.push(lst[i]);\n    \
    \    lst.splice(i, 1);\n        if(lst.length > 0){\n            new_lst.push(lst[lst.length\
    \ - 1]);\n            lst.splice(lst.length - 1, 1);\n        }\n    }\n    return\
    \ new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var min_index\
    \ = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var new_list\
    \ = [];\n    new_list.push(min);\n    new_list.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_list.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(min_index, 1);\n        }\n        else{\n           \
    \ new_lst.push(max);\n            lst.splice(max_index, 1);\n        }\n     \
    \   min = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index\
    \ = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n    }\n    return\
    \ new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var min_index\
    \ = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var new_lst\
    \ = [];\n    if(min_index < max_index){\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n  \
    \  }\n    else{\n        new_lst.push(max);\n        new_lst.push(min);\n    \
    \    lst.splice(max_index, 1);\n        lst.splice(min_index - 1, 1);\n    }\n\
    \    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ === 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 === 0){\n            new_lst.push(min);\n          \
    \  lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n   \
    \     }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    let result = [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let min_count = 0;\n    let max_count = 0;\n\
    \    let min_max_count = 0;\n    let max_min_count = 0;\n    let min_max_index\
    \ = 0;\n    let max_min_index = 0;\n    let min_max_lst = [];\n    let max_min_lst\
    \ = [];\n    let min_max_max = 0;\n    let max_min_min = 0;\n    let min_max_max_index\
    \ = 0;\n    let max_min_min_index = 0;\n    let min_max_max_count = 0;\n    let\
    \ max_min_min_count = 0;\n    let min_max_max_lst = [];\n    let max_min_min_lst\
    \ = [];\n    let min_max_max_max = 0;\n    let max_min_min_min = 0;\n    let min_max_max_max_index\
    \ = 0;\n    let max_min_min_min_index = 0;\n    let min_max_max_max_count = 0;\n\
    \    let max_min_min_min_count = 0;\n    let min_max_max_max_lst = [];\n    let\
    \ max_min_min_min_lst = [];\n    let min_max_max_max_max = 0;\n    let max_min_min_min_min\
    \ = 0;\n    let min_max_max_max_max_index = 0;\n    let max_min_min_min_min_index\
    \ = 0;\n    let min_max_max_max_max_count = 0;\n    let max_min_min_min_min_count\
    \ = 0;\n    let min_max_max_max_max_lst = [];\n    let max_min_min_min_min_lst\
    \ = [];\n    let min_max_max_max_max_max = 0;\n", "    var new_lst = [];\n   \
    \ var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var count = 0;\n    while (count < lst.length){\n        if (count % 2 ==\
    \ 0){\n            new_lst.push(min);\n            lst.splice(min_index, 1);\n\
    \            min = Math.min.apply(null, lst);\n            min_index = lst.indexOf(min);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        count += 1;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0){\n        return [];\n    }\n    else if (lst.length == 1){\n        return\
    \ lst;\n    }\n    else{\n        var min = Math.min(...lst);\n        var max\
    \ = Math.max(...lst);\n        var min_index = lst.indexOf(min);\n        var\
    \ max_index = lst.indexOf(max);\n        var new_lst = [];\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n        return new_lst.concat(strange_sort_list(lst));\n    }\n}\n",
  "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_list = [];\n    var i = 0;\n   \
    \ while(new_list.length != lst.length){\n        if(i % 2 == 0){\n           \
    \ new_list.push(min);\n            lst.splice(lst.indexOf(min), 1);\n        \
    \    min = Math.min(...lst);\n        }\n        else{\n            new_list.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_list;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var new_lst = [];\n    var index\
    \ = 0;\n    while (new_lst.length < lst.length) {\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        index += 1;\n        min = Math.min.apply(null,\
    \ lst.slice(index));\n        max = Math.max.apply(null, lst.slice(index));\n\
    \    }\n    return new_lst;\n}\n", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var index = lst.indexOf(min);\n\
    \    lst.splice(index, 1);\n    result.push(min);\n    while(lst.length > 0){\n\
    \        var max = Math.max.apply(null, lst);\n        var index = lst.indexOf(max);\n\
    \        lst.splice(index, 1);\n        result.push(max);\n        if(lst.length\
    \ > 0){\n            var min = Math.min.apply(null, lst);\n            var index\
    \ = lst.indexOf(min);\n            lst.splice(index, 1);\n            result.push(min);\n\
    \        }\n    }\n    return result;\n}\n", "    if (lst.length == 0){\n    \
    \    return [];\n    }\n    var min = Math.min.apply(null, lst);\n    var max\
    \ = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    if (min_index < max_index){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    else {\n        new_lst.push(max);\n\
    \        new_lst.push(min);\n        lst.splice(max_index, 1);\n        lst.splice(min_index\
    \ - 1, 1);\n    }\n    return new_lst.concat(strange_sort_list(lst));\n}\n", " \
    \   if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_list = [];\n    new_list.push(min);\n\
    \    new_list.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_list.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return lst;\n    }\n    var sorted_lst = [];\n    var min =\
    \ Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ min_max_lst = [];\n    var min_max_lst_index = [];\n    var lst_index = [];\n\
    \    var lst_index_min = [];\n    var lst_index_max = [];\n    var lst_index_min_max\
    \ = [];\n    var lst_index_min_max_index = [];\n    var lst_index_min_max_index_min\
    \ = [];\n    var lst_index_min_max_index_max = [];\n    var lst_index_min_max_index_min_max\
    \ = [];\n    var lst_index_min_max_index_min_max_index = [];\n    var lst_index_min_max_index_min_max_index_min\
    \ = [];\n    var lst_index_min_max_index_min_max_index_max = [];\n    var lst_index_min_max_index_min_max_index_min_max\
    \ = [];\n    var lst_index_min_max_index_min_max_index_min_max_index = [];\n \
    \   var lst_index_min_max_index_min_max_index_min_max_index_min = [];\n    var\
    \ lst_index_min_max_index_min_max_index_min_max_index_max = [];\n    var lst_index_min_max_index_min_max_index_min_max_index_min_max\
    \ = [];\n    var lst_index_min_max_index_min_max_index_min_max_index_min_max_index\
    \ = [];\n    var lst_index_min_max_index_min_max_index_min_max_index_min_max_index_min\
    \ = [];\n    var lst_index_min", "    if (lst.length === 0) {\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (i < lst.length) {\n       \
    \ if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) return [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0) return lst;\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i%2 == 0){\n            new_lst.push(min);\n    \
    \        lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0){\n        return [];\n  \
    \  }\n    if (lst.length == 1){\n        return lst;\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var new_lst = [];\n   \
    \ var i = 0;\n    while (new_lst.length < lst.length){\n        if (i % 2 == 0){\n\
    \            new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min.apply(null, lst);\n        }\n        else{\n    \
    \        new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n  \
    \          max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n  \
    \  }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    while(lst.length > 0){\n       \
    \ min = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index\
    \ = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n    }\n    return new_lst;\n}\n", "    var result = [];\n    var min\
    \ = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n   \
    \ var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n \
    \   var min_removed = lst.splice(min_index, 1);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  var min_removed = lst.splice(min_index, 1);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n  \
    \  }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var i = 0;\n    while (lst.length > 0) {\n\
    \        if (i % 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n\
    \    if(lst.length == 1){\n        return lst;\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return lst;\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 == 0){\n            new_lst.push(Math.min(...lst));\n\
    \            var min_index = lst.indexOf(Math.min(...lst));\n            lst.splice(min_index,\
    \ 1);\n        }\n        else{\n            new_lst.push(Math.max(...lst));\n\
    \            var max_index = lst.indexOf(Math.max(...lst));\n            lst.splice(max_index,\
    \ 1);\n        }\n    }\n    return new_lst;\n}\n", "    if (lst.length == 0)\
    \ {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n   \
    \ var max = Math.max.apply(null, lst);\n    var result = [];\n    var i = 0;\n\
    \    while (lst.length > 0) {\n        if (i % 2 == 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return\
    \ [];\n    }\n    var min = lst[0];\n    var max = lst[0];\n    var min_index\
    \ = 0;\n    var max_index = 0;\n    for (var i = 0; i < lst.length; i++) {\n \
    \       if (lst[i] < min) {\n            min = lst[i];\n            min_index\
    \ = i;\n        }\n        if (lst[i] > max) {\n            max = lst[i];\n  \
    \          max_index = i;\n        }\n    }\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    for (var i = 0; i < lst.length; i++) {\n        if\
    \ (i != min_index && i != max_index) {\n            new_lst.push(lst[i]);\n  \
    \      }\n    }\n    return new_lst;\n}\n", "    if(lst.length == 0){\n      \
    \  return [];\n    }\n    var sorted = lst.sort(function(a, b){return a-b});\n\
    \    var result = [];\n    var i = 0;\n    var j = sorted.length - 1;\n    while(i\
    \ <= j){\n        result.push(sorted[i]);\n        i++;\n        if(i <= j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n\
    \    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var min_index\
    \ = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var new_lst\
    \ = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0){\n        return lst;\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    var new_lst = new_lst.concat(strange_sort_list(lst));\n    return new_lst;\n\
    }\n", "    var result = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    var min_lst = lst.slice(0, min_index).concat(lst.slice(min_index\
    \ + 1));\n    var max_lst = lst.slice(0, max_index).concat(lst.slice(max_index\
    \ + 1));\n    var i = 0;\n    while (i < lst.length) {\n        if (i % 2 == 0)\
    \ {\n            result.push(min);\n            min = Math.min.apply(null, min_lst);\n\
    \            min_index = min_lst.indexOf(min);\n            min_lst = min_lst.slice(0,\
    \ min_index).concat(min_lst.slice(min_index + 1));\n        } else {\n       \
    \     result.push(max);\n            max = Math.max.apply(null, max_lst);\n  \
    \          max_index = max_lst.indexOf(max);\n            max_lst = max_lst.slice(0,\
    \ max_index).concat(max_lst.slice(max_index + 1));\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    if(lst.length == 0) return [];\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var min_index\
    \ = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var new_lst\
    \ = [];\n    var new_lst_index = 0;\n    var lst_index = 0;\n    while(lst_index\
    \ < lst.length){\n        if(lst_index == min_index){\n            new_lst[new_lst_index]\
    \ = min;\n            new_lst_index++;\n            lst_index++;\n        }\n\
    \        else if(lst_index == max_index){\n            new_lst[new_lst_index]\
    \ = max;\n            new_lst_index++;\n            lst_index++;\n        }\n\
    \        else{\n            new_lst[new_lst_index] = lst[lst_index];\n       \
    \     new_lst_index++;\n            lst_index++;\n        }\n    }\n    return\
    \ new_lst;\n}\n", "    if(lst.length == 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(i\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var result = [];\n    var sorted = lst.sort(function(a,\
    \ b){return a-b});\n    var min = sorted[0];\n    var max = sorted[sorted.length-1];\n\
    \    var i = 0;\n    var j = sorted.length-1;\n    while (i<j){\n        result.push(min);\n\
    \        result.push(max);\n        min = sorted[i+1];\n        max = sorted[j-1];\n\
    \        i++;\n        j--;\n    }\n    if (i==j){\n        result.push(min);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var i = 0;\n    while (lst.length\
    \ > 0){\n        if (i % 2 == 0){\n            result.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null, lst);\n\
    \        }\n        else{\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n \
    \   var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    var\
    \ sorted = lst.sort(function(a, b){return a-b});\n    var result = [];\n    var\
    \ i = 0;\n    var j = sorted.length - 1;\n    while (i <= j){\n        result.push(sorted[i]);\n\
    \        if (i != j){\n            result.push(sorted[j]);\n        }\n      \
    \  i++;\n        j--;\n    }\n    return result;\n}\n", "    if (lst.length ===\
    \ 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let new_list = [];\n    new_list.push(min);\n    new_list.push(max);\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] !== min && lst[i]\
    \ !== max) {\n            new_list.push(lst[i]);\n        }\n    }\n    return\
    \ new_list;\n}\n", "    var sorted = lst.sort(function(a, b){return a-b});\n \
    \   var result = [];\n    var i = 0;\n    var j = sorted.length - 1;\n    while\
    \ (i <= j){\n        result.push(sorted[i]);\n        i++;\n        if (i <= j){\n\
    \            result.push(sorted[j]);\n            j--;\n        }\n    }\n   \
    \ return result;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n\
    \    else if(lst.length == 1){\n        return lst;\n    }\n    else{\n      \
    \  var min = Math.min(...lst);\n        var max = Math.max(...lst);\n        var\
    \ min_index = lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n \
    \       var new_lst = [];\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n  \
    \      return new_lst.concat(strange_sort_list(lst));\n    }\n}\n", "    if(lst.length\
    \ === 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n\
    \    let newLst = [];\n    let i = 0;\n    while(i < lst.length){\n        if(i\
    \ % 2 === 0){\n            newLst.push(min);\n            lst.splice(minIndex,\
    \ 1);\n            min = Math.min(...lst);\n            minIndex = lst.indexOf(min);\n\
    \        } else {\n            newLst.push(max);\n            lst.splice(maxIndex,\
    \ 1);\n            max = Math.max(...lst);\n            maxIndex = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return newLst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    var sorted = lst.sort(function(a, b)\
    \ {\n        return a - b;\n    });\n    var result = [];\n    var i = 0;\n  \
    \  var j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [min];\n    var lst_copy = lst.slice();\n    lst_copy.splice(lst_copy.indexOf(min),\
    \ 1);\n    while(lst_copy.length > 0){\n        var max = Math.max(...lst_copy);\n\
    \        result.push(max);\n        lst_copy.splice(lst_copy.indexOf(max), 1);\n\
    \        if(lst_copy.length > 0){\n            var min = Math.min(...lst_copy);\n\
    \            result.push(min);\n            lst_copy.splice(lst_copy.indexOf(min),\
    \ 1);\n        }\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while\
    \ (i < lst.length){\n        result.push(min);\n        result.push(max);\n  \
    \      i += 2;\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n\
    \        return [];\n    }\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    var new_list = [];\n    new_list.push(min);\n\
    \    new_list.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_list.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ === 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 === 0){\n            new_lst.push(min);\n          \
    \  lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n   \
    \     }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if(lst.length === 0){\n        return [];\n  \
    \  }\n    if(lst.length === 1){\n        return lst;\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var index_min = lst.indexOf(min);\n    var\
    \ index_max = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(index_min, 1);\n    lst.splice(index_max-1,\
    \ 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    var result\
    \ = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_removed = lst.splice(min_index, 1);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  if (lst.length > 0){\n        result = result.concat(strange_sort_list(lst));\n\
    \    }\n    return result;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var new_lst = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            new_lst.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n    \
    \    }else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0) {\n        return lst;\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var new_lst = [];\n    var i = 0;\n    while (i < lst.length) {\n\
    \        if (i % 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n    \
    \        max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n  \
    \  return new_lst;\n}\n", "    if(lst.length === 0){\n        return [];\n   \
    \ }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var i = 0;\n    while(i < lst.length){\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        i++;\n    }\n    return new_lst;\n}\n", " \
    \   if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var result = [min];\n \
    \   var lst = lst.slice(1);\n    while (lst.length > 0) {\n        var max = Math.max.apply(null,\
    \ lst);\n        result.push(max);\n        lst.splice(lst.indexOf(max), 1);\n\
    \        if (lst.length == 0) {\n            break;\n        }\n        var min\
    \ = Math.min.apply(null, lst);\n        result.push(min);\n        lst.splice(lst.indexOf(min),\
    \ 1);\n    }\n    return result;\n}\n", "    var new_list = [];\n    var min =\
    \ Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ min_list = lst.slice(0, min_index);\n    var max_list = lst.slice(min_index\
    \ + 1, max_index);\n    var min_list_2 = lst.slice(max_index + 1);\n    var max_list_2\
    \ = lst.slice(min_index, max_index + 1);\n    var min_list_3 = min_list.concat(min_list_2);\n\
    \    var max_list_3 = max_list.concat(max_list_2);\n    var min_list_4 = min_list_3.sort(function(a,\
    \ b){return a - b});\n    var max_list_4 = max_list_3.sort(function(a, b){return\
    \ b - a});\n    var min_list_5 = min_list_4.slice(0, min_list_4.length - 1);\n\
    \    var max_list_5 = max_list_4.slice(0, max_list_4.length - 1);\n    var min_list_6\
    \ = min_list_5.concat(min_list_4[min_list_4.length - 1]);\n    var max_list_6\
    \ = max_list_5.concat(max_list_4[max_list_4.length - 1]);\n    var min_list_7\
    \ = min_list_6.slice(0, min_list_6.length - 1);\n    var max_list_7 = max_list_6.slice(0,\
    \ max_list_6.length - 1);\n    var min_list_8 = min_list_7.concat(min_list_6[min_list_6.length\
    \ - 1]);\n    var max_list_8 = max_list_7.concat(max_list_6[max_list_6.length\
    \ - 1]);\n    var min_list", "    if(lst.length == 0){\n        return [];\n \
    \   }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    if (min_index\
    \ < max_index) {\n        new_lst.push(min);\n        new_lst.push(max);\n   \
    \     lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n    }\
    \ else {\n        new_lst.push(max);\n        new_lst.push(min);\n        lst.splice(max_index,\
    \ 1);\n        lst.splice(min_index - 1, 1);\n    }\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length === 0){\n        return [];\n    }\n    if(lst.length\
    \ === 1){\n        return lst;\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var new_lst = [];\n    new_lst.push(min);\n   \
    \ new_lst.push(max);\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ !== min && lst[i] !== max){\n            new_lst.push(lst[i]);\n        }\n\
    \    }\n    return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] != min && lst[i] != max){\n\
    \            new_lst.push(lst[i]);\n        }\n    }\n    return new_lst;\n}\n",
  "    if (lst.length == 0) {\n        return [];\n    }\n    else if (lst.length\
    \ == 1) {\n        return lst;\n    }\n    else {\n        var min = Math.min.apply(null,\
    \ lst);\n        var max = Math.max.apply(null, lst);\n        var min_index =\
    \ lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n        var new_lst\
    \ = [];\n        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n        return new_lst.concat(strange_sort_list(lst));\n\
    \    }\n}\n", "    if(lst.length == 0){\n        return lst;\n    }\n    var min\
    \ = Math.min(...lst);\n    var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    while(lst.length != 0){\n        min = Math.min(...lst);\n   \
    \     max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n       \
    \ max_index = lst.indexOf(max);\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n  \
    \  }\n    return new_lst;\n}\n", "    if (lst.length == 0) return [];\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var res = [min];\n    var lst = lst.filter(function(x){return x != min;});\n\
    \    while (lst.length > 0){\n        var max = Math.max.apply(null, lst);\n \
    \       res.push(max);\n        lst = lst.filter(function(x){return x != max;});\n\
    \        if (lst.length == 0) break;\n        var min = Math.min.apply(null, lst);\n\
    \        res.push(min);\n        lst = lst.filter(function(x){return x != min;});\n\
    \    }\n    return res;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var new_lst = [];\n    var index = 0;\n    while(new_lst.length < lst.length){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(lst.indexOf(min),\
    \ 1);\n        lst.splice(lst.indexOf(max), 1);\n        min = Math.min(...lst);\n\
    \        max = Math.max(...lst);\n    }\n    return new_lst;\n}\n", "    if(lst.length\
    \ == 0){\n        return lst;\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            new_lst.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n    \
    \    }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0) {\n        return lst;\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    var i = 0;\n    while (i < lst.length) {\n       \
    \ if (i % 2 == 0) {\n            new_lst.push(min);\n            lst.splice(min_index,\
    \ 1);\n            min = Math.min.apply(null, lst);\n            min_index = lst.indexOf(min);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var result =\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var index = 0;\n    while(lst.length > 0){\n        if(index % 2\
    \ == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else{\n\
    \            result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        index++;\n \
    \   }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) {\n        return lst;\n    }\n    var min =\
    \ Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n    var\
    \ result = [];\n    var i = 0;\n    while (lst.length > 0) {\n        if (i %\
    \ 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if (lst.length == 0) {\n        return [];\n    }\n\
    \    else {\n        var min = Math.min.apply(null, lst);\n        var max = Math.max.apply(null,\
    \ lst);\n        var new_lst = [];\n        var i = 0;\n        while (lst.length\
    \ > 0) {\n            if (i % 2 == 0) {\n                new_lst.push(min);\n\
    \                lst.splice(lst.indexOf(min), 1);\n                min = Math.min.apply(null,\
    \ lst);\n            }\n            else {\n                new_lst.push(max);\n\
    \                lst.splice(lst.indexOf(max), 1);\n                max = Math.max.apply(null,\
    \ lst);\n            }\n            i++;\n        }\n        return new_lst;\n\
    \    }\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n    var min\
    \ = lst[0];\n    var max = lst[0];\n    var min_index = 0;\n    var max_index\
    \ = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < min){\n\
    \            min = lst[i];\n            min_index = i;\n        }\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n            max_index = i;\n        }\n\
    \    }\n    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    var new_lst\
    \ = new_lst.concat(strange_sort_list(lst));\n    return new_lst;\n}\n", "    if\
    \ (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var lst_min = [];\n   \
    \ var lst_max = [];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == min) {\n            lst_min.push(lst[i]);\n        }\n        else if (lst[i]\
    \ == max) {\n            lst_max.push(lst[i]);\n        }\n    }\n    var lst_new\
    \ = [];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] != min\
    \ && lst[i] != max) {\n            lst_new.push(lst[i]);\n        }\n    }\n \
    \   var lst_new_min = strange_sort_list(lst_new);\n    var lst_new_max = strange_sort_list(lst_new);\n\
    \    var lst_new_min_max = [];\n    for (var i = 0; i < lst_new_min.length; i++)\
    \ {\n        lst_new_min_max.push(lst_new_min[i]);\n        lst_new_min_max.push(lst_new_max[i]);\n\
    \    }\n    var lst_new_min_max_min = [];\n    for (var i = 0; i < lst_new_min_max.length;\
    \ i++) {\n        lst_new_min_max_min.push(lst_new_min_max[i]);\n        lst_new_min_max_min.push(lst_min[i]);\n\
    \    }\n    var lst_new_min_max_min_max = [];\n    for (var i = 0; i < lst_new_min_max_min.length;\
    \ i++) {\n        lst_new_min_max_min_max.push(lst_new_min_max_min[i]);\n", " \
    \   if(lst.length == 0){\n        return lst;\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    var new_lst.push(min);\n\
    \    var new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    var res\
    \ = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_count = 0;\n    var max_count = 0;\n    var i = 0;\n    while (i\
    \ < lst.length){\n        if (min_count == max_count){\n            res.push(min);\n\
    \            min_count += 1;\n            i += 1;\n        }\n        else if\
    \ (min_count > max_count){\n            res.push(max);\n            max_count\
    \ += 1;\n            i += 1;\n        }\n    }\n    return res;\n}\n", "    if\
    \ (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var new_list = [];\n  \
    \  var i = 0;\n    while (new_list.length < lst.length) {\n        if (i % 2 ==\
    \ 0) {\n            new_list.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      new_list.push(max);\n            lst.splice(lst.indexOf(max), 1);\n   \
    \         max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n \
    \   return new_list;\n}\n", "    if (lst.length == 0){\n        return [];\n \
    \   }\n    var lst_sorted = lst.sort(function(a, b){return a-b});\n    var lst_sorted_reversed\
    \ = lst_sorted.reverse();\n    var lst_strange = [];\n    var i = 0;\n    while\
    \ (lst_sorted.length > 0){\n        lst_strange.push(lst_sorted[i]);\n       \
    \ lst_sorted.splice(i, 1);\n        if (lst_sorted_reversed.length > 0){\n   \
    \         lst_strange.push(lst_sorted_reversed[i]);\n            lst_sorted_reversed.splice(i,\
    \ 1);\n        }\n    }\n    return lst_strange;\n}\n", "    if (lst.length ==\
    \ 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst =\
    \ [];\n    var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n\
    \            new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var sorted =\
    \ lst.sort(function(a, b){return a-b});\n    var result = [];\n    var i = 0;\n\
    \    while (sorted.length > 0){\n        result.push(sorted.shift());\n      \
    \  if (sorted.length > 0){\n            result.push(sorted.pop());\n        }\n\
    \    }\n    return result;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n \
    \   var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index, 1);\n    var new_lst = new_lst.concat(strange_sort_list(lst));\n\
    \    return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n  \
    \  }\n    if(lst.length == 1){\n        return lst;\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    var new_lst = new_lst.concat(strange_sort_list(lst));\n    return\
    \ new_lst;\n}\n", "    var new_lst = [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_lst = lst.slice(0, min_index);\n\
    \    var max_lst = lst.slice(min_index + 1, max_index);\n    var min_lst_2 = lst.slice(max_index\
    \ + 1);\n    new_lst.push(min);\n    new_lst.push(max);\n    if (min_lst.length\
    \ > 0){\n        new_lst.push(Math.min.apply(null, min_lst));\n        new_lst.push(Math.max.apply(null,\
    \ min_lst));\n    }\n    if (max_lst.length > 0){\n        new_lst.push(Math.min.apply(null,\
    \ max_lst));\n        new_lst.push(Math.max.apply(null, max_lst));\n    }\n  \
    \  if (min_lst_2.length > 0){\n        new_lst.push(Math.min.apply(null, min_lst_2));\n\
    \        new_lst.push(Math.max.apply(null, min_lst_2));\n    }\n    return new_lst;\n\
    }\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ result = [];\n    var i = 0;\n    while (lst.length > 0){\n        if (i % 2\
    \ == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    let min = lst[0];\n   \
    \ let max = lst[0];\n    let min_index = 0;\n    let max_index = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < min) {\n            min\
    \ = lst[i];\n            min_index = i;\n        }\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n            max_index = i;\n        }\n    }\n\
    \    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n   \
    \ var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    if(min_index < max_index){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    else{\n        new_lst.push(max);\n\
    \        new_lst.push(min);\n        lst.splice(max_index, 1);\n        lst.splice(min_index\
    \ - 1, 1);\n    }\n    return new_lst.concat(strange_sort_list(lst));\n}\n", " \
    \   if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    var new_lst2 = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] != min && lst[i] != max){\n            new_lst2.push(lst[i]);\n\
    \        }\n    }\n    var new_lst3 = [];\n    for(var i = 0; i < new_lst2.length;\
    \ i++){\n        if(i % 2 == 0){\n            new_lst3.push(Math.min(...new_lst2));\n\
    \            new_lst2.splice(new_lst2.indexOf(Math.min(...new_lst2)), 1);\n  \
    \      }\n        else{\n            new_lst3.push(Math.max(...new_lst2));\n \
    \           new_lst2.splice(new_lst2.indexOf(Math.max(...new_lst2)), 1);\n   \
    \     }\n    }\n    return new_lst.concat(new_lst3);\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length == 0) return\
    \ [];\n    var result = [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var minIndex = lst.indexOf(min);\n    var maxIndex = lst.indexOf(max);\n\
    \    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    result.push(min);\n\
    \    result.push(max);\n    return result.concat(strange_sort_list(lst));\n}\n",
  "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst\
    \ = [];\n    var i = 0;\n    while (lst.length > 0){\n        new_lst.push(min);\n\
    \        lst.splice(lst.indexOf(min), 1);\n        if (lst.length > 0){\n    \
    \        new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n  \
    \      }\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n \
    \   }\n    return new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst =\
    \ [];\n    var i = 0;\n    while(new_lst.length < lst.length){\n        if(i %\
    \ 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    var\
    \ result = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = lst.slice(0);\n    new_lst.splice(min_index, 1);\n    new_lst.splice(max_index,\
    \ 1);\n    result.push(min);\n    result.push(max);\n    while (new_lst.length\
    \ > 0){\n        min = Math.min.apply(null, new_lst);\n        max = Math.max.apply(null,\
    \ new_lst);\n        min_index = new_lst.indexOf(min);\n        max_index = new_lst.indexOf(max);\n\
    \        result.push(min);\n        result.push(max);\n        new_lst.splice(min_index,\
    \ 1);\n        new_lst.splice(max_index, 1);\n    }\n    return result;\n}\n",
  "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    if(min_index < max_index){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    else{\n        new_lst.push(max);\n\
    \        new_lst.push(min);\n        lst.splice(max_index, 1);\n        lst.splice(min_index\
    \ - 1, 1);\n    }\n    return new_lst.concat(strange_sort_list(lst));\n}\n", " \
    \   let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n    let i =\
    \ 0;\n    while (sorted.length > 0){\n        result.push(sorted.shift());\n \
    \       if (sorted.length > 0){\n            result.push(sorted.pop());\n    \
    \    }\n    }\n    return result;\n}\n", "    var result = [];\n    var min =\
    \ Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ min_removed = lst.splice(min_index, 1);\n    var max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  if (lst.length > 0){\n        result = result.concat(strange_sort_list(lst));\n\
    \    }\n    return result;\n}\n", "    if (lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    var new_lst = new_lst.concat(strange_sort_list(lst));\n\
    \    return new_lst;\n}\n", "    if (lst.length == 0){\n        return [];\n \
    \   }\n    var lst_sorted = lst.sort(function(a, b){return a-b});\n    var lst_strange\
    \ = [];\n    var i = 0;\n    var j = lst_sorted.length - 1;\n    while (i < j){\n\
    \        lst_strange.push(lst_sorted[i]);\n        lst_strange.push(lst_sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    if (i == j){\n        lst_strange.push(lst_sorted[i]);\n\
    \    }\n    return lst_strange;\n}\n", "    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var temp = lst[min_index];\n    lst[min_index]\
    \ = lst[max_index];\n    lst[max_index] = temp;\n    result.push(min);\n    result.push(max);\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] != min && lst[i]\
    \ != max){\n            result.push(lst[i]);\n        }\n    }\n    return result;\n\
    }\n", "    if(lst.length === 0){\n        return lst;\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 === 0){\n            new_lst.push(min);\n \
    \           lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if(lst.length === 0) return [];\n    var min =\
    \ Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst = [];\n\
    \    var i = 0;\n    while(new_lst.length < lst.length){\n        if(i % 2 ===\
    \ 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ === 0){\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 === 0){\n            new_lst.push(min);\n \
    \           lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    var lst1 = lst.sort(function(a, b){return a-b});\n\
    \    var lst2 = lst.sort(function(a, b){return b-a});\n    var lst3 = [];\n  \
    \  var i = 0;\n    var j = 0;\n    while (i < lst1.length || j < lst2.length){\n\
    \        if (i < lst1.length){\n            lst3.push(lst1[i]);\n            i++;\n\
    \        }\n        if (j < lst2.length){\n            lst3.push(lst2[j]);\n \
    \           j++;\n        }\n    }\n    return lst3;\n}\n", "    if (lst.length\
    \ == 0) {\n        return lst;\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var result = [];\n    var i = 0;\n\
    \    while (lst.length > 0) {\n        if (i % 2 == 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var new_lst = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length == 0){\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    if (lst.length == 0){\n        return new_lst;\n    }\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length == 0){\n\
    \        return [];\n    }\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var result = [min];\n    var i = 0;\n\
    \    while (lst.length > 1){\n        if (i % 2 == 0){\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n        else{\n            result.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null, lst);\n\
    \        }\n        i++;\n    }\n    result.push(lst[0]);\n    return result;\n\
    }\n", "    let result = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    let min_removed = lst.splice(min_index, 1);\n    let max_removed = lst.splice(max_index,\
    \ 1);\n    result.push(min_removed[0]);\n    result.push(max_removed[0]);\n  \
    \  while (lst.length > 0){\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n\
    \        min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        min_removed = lst.splice(min_index, 1);\n        max_removed = lst.splice(max_index,\
    \ 1);\n        result.push(min_removed[0]);\n        result.push(max_removed[0]);\n\
    \    }\n    return result;\n}", "    var res = [];\n    var lst_copy = lst.slice();\n\
    \    var min = Math.min.apply(null, lst_copy);\n    var max = Math.max.apply(null,\
    \ lst_copy);\n    var min_index = lst_copy.indexOf(min);\n    var max_index =\
    \ lst_copy.indexOf(max);\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index,\
    \ 1);\n    res.push(min);\n    res.push(max);\n    while (lst_copy.length > 0){\n\
    \        min = Math.min.apply(null, lst_copy);\n        max = Math.max.apply(null,\
    \ lst_copy);\n        min_index = lst_copy.indexOf(min);\n        max_index =\
    \ lst_copy.indexOf(max);\n        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index,\
    \ 1);\n        res.push(min);\n        res.push(max);\n    }\n    return res;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    var new_lst_index\
    \ = 0;\n    var lst_index = 0;\n    while(lst_index < lst.length){\n        if(lst_index\
    \ == min_index){\n            new_lst[new_lst_index] = min;\n            new_lst_index++;\n\
    \            lst_index++;\n        }\n        else if(lst_index == max_index){\n\
    \            new_lst[new_lst_index] = max;\n            new_lst_index++;\n   \
    \         lst_index++;\n        }\n        else{\n            new_lst[new_lst_index]\
    \ = lst[lst_index];\n            new_lst_index++;\n            lst_index++;\n\
    \        }\n    }\n    return new_lst;\n}\n", "    if (lst.length == 0) {\n  \
    \      return [];\n    }\n    var min = Math.min.apply(null, lst);\n    var max\
    \ = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(i\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0) {\n        return [];\n \
    \   }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    if (min_index < max_index) {\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n    } else {\n        new_lst.push(max);\n        new_lst.push(min);\n\
    \        lst.splice(max_index, 1);\n        lst.splice(min_index - 1, 1);\n  \
    \  }\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    var new_lst = [];\n    var new_lst_2 = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(i == min_index){\n            new_lst.push(min);\n\
    \        }\n        else if(i == max_index){\n            new_lst.push(max);\n\
    \        }\n        else{\n            new_lst_2.push(lst[i]);\n        }\n  \
    \  }\n    return new_lst.concat(strange_sort_list(new_lst_2));\n}\n", "    if\
    \ (lst.length == 0) return [];\n    var min = lst[0];\n    var max = lst[0];\n\
    \    var min_index = 0;\n    var max_index = 0;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < min){\n            min = lst[i];\n            min_index\
    \ = i;\n        }\n        if (lst[i] > max){\n            max = lst[i];\n   \
    \         max_index = i;\n        }\n    }\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (i != min_index && i != max_index){\n            new_lst.push(lst[i]);\n   \
    \     }\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n    \
    \    return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(lst.indexOf(min),\
    \ 1);\n    lst.splice(lst.indexOf(max), 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var max = Math.max.apply(null,\
    \ lst);\n    var min = Math.min.apply(null, lst);\n    var new_lst = [];\n   \
    \ new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(lst.indexOf(min),\
    \ 1);\n    lst.splice(lst.indexOf(max), 1);\n    while (lst.length > 0) {\n  \
    \      max = Math.max.apply(null, lst);\n        min = Math.min.apply(null, lst);\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(lst.indexOf(min),\
    \ 1);\n        lst.splice(lst.indexOf(max), 1);\n    }\n    return new_lst;\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(i\
    \ < lst.length){\n        new_lst.push(min);\n        new_lst.push(max);\n   \
    \     i += 2;\n    }\n    return new_lst;\n}\n", "    if(lst.length == 0) return\
    \ lst;\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var new_lst = [];\n    var index = 0;\n    while(new_lst.length < lst.length){\n\
    \        if(index % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        index++;\n    }\n    return\
    \ new_lst;\n}\n", "    if (lst.length === 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length == 0) return [];\n    var min = Math.min.apply(null, lst);\n   \
    \ var max = Math.max.apply(null, lst);\n    var res = [];\n    var i = 0;\n  \
    \  while (lst.length > 0){\n        if (i % 2 == 0){\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        }\n        else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return res;\n}\n", "    if(lst.length == 0) return [];\n    var min\
    \ = Math.min(...lst);\n    var max = Math.max(...lst);\n    var res = [min];\n\
    \    var lst = lst.filter(x => x != min);\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            res.push(max);\n            lst\
    \ = lst.filter(x => x != max);\n            max = Math.max(...lst);\n        }\n\
    \        else{\n            res.push(min);\n            lst = lst.filter(x =>\
    \ x != min);\n            min = Math.min(...lst);\n        }\n        i++;\n \
    \   }\n    return res;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var new_lst = [];\n    var i = 0;\n    while(i < lst.length){\n        if(i\
    \ % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    if (lst.length\
    \ == 1) {\n        return lst;\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length == 0) {\n\
    \        return lst;\n    }\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    var new_lst = [];\n    var i = 0;\n\
    \    while (i < lst.length) {\n        if (i % 2 == 0) {\n            new_lst.push(min);\n\
    \            lst.splice(min_index, 1);\n            min = Math.min.apply(null,\
    \ lst);\n            min_index = lst.indexOf(min);\n        } else {\n       \
    \     new_lst.push(max);\n            lst.splice(max_index, 1);\n            max\
    \ = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n  \
    \      }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0){\n        return [];\n    }\n    var min = lst[0];\n    var max = lst[0];\n\
    \    var min_index = 0;\n    var max_index = 0;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < min){\n            min = lst[i];\n            min_index\
    \ = i;\n        }\n        if (lst[i] > max){\n            max = lst[i];\n   \
    \         max_index = i;\n        }\n    }\n    var new_lst = [min];\n    var\
    \ new_lst2 = [];\n    for (var i = 0; i < lst.length; i++){\n        if (i !=\
    \ min_index && i != max_index){\n            new_lst2.push(lst[i]);\n        }\n\
    \    }\n    new_lst.push(max);\n    var new_lst3 = strange_sort_list(new_lst2);\n\
    \    for (var i = 0; i < new_lst3.length; i++){\n        new_lst.push(new_lst3[i]);\n\
    \    }\n    return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n   \
    \ var new_lst = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    var new_lst_index\
    \ = 0;\n    var lst_index = 0;\n    while (lst_index < lst.length){\n        if\
    \ (lst_index == min_index){\n            new_lst[new_lst_index] = min;\n     \
    \       new_lst_index++;\n            lst_index++;\n        }\n        else if\
    \ (lst_index == max_index){\n            new_lst[new_lst_index] = max;\n     \
    \       new_lst_index++;\n            lst_index++;\n        }\n        else{\n\
    \            new_lst[new_lst_index] = lst[lst_index];\n            new_lst_index++;\n\
    \            lst_index++;\n        }\n    }\n    return new_lst;\n}\n", "    if\
    \ (lst.length == 0){\n        return lst;\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var new_lst = [];\n   \
    \ var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n        \
    \    new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n      \
    \      min = Math.min.apply(null, lst);\n        }\n        else{\n          \
    \  new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n        \
    \    max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n    return\
    \ new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst =\
    \ [];\n    var i = 0;\n    var j = lst.length - 1;\n    while(i < lst.length){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        i++;\n      \
    \  j--;\n    }\n    return new_lst;\n}\n", "    if (lst.length === 0) {\n    \
    \    return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let res = [min];\n    let lst2 = lst.filter(x => x !== min);\n    while (lst2.length\
    \ > 0) {\n        let min2 = Math.min(...lst2);\n        let max2 = Math.max(...lst2);\n\
    \        res.push(max2);\n        lst2 = lst2.filter(x => x !== max2);\n     \
    \   if (lst2.length > 0) {\n            res.push(min2);\n            lst2 = lst2.filter(x\
    \ => x !== min2);\n        }\n    }\n    return res;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    var new_lst = [];\n    var new_lst_index = 0;\n   \
    \ var lst_index = 0;\n    while(lst_index < lst.length){\n        if(lst_index\
    \ == min_index){\n            new_lst[new_lst_index] = min;\n            new_lst_index++;\n\
    \            lst_index++;\n        }\n        else if(lst_index == max_index){\n\
    \            new_lst[new_lst_index] = max;\n            new_lst_index++;\n   \
    \         lst_index++;\n        }\n        else{\n            new_lst[new_lst_index]\
    \ = lst[lst_index];\n            new_lst_index++;\n            lst_index++;\n\
    \        }\n    }\n    return new_lst;\n}\n", "    if(lst.length == 0) return\
    \ [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length === 0){\n        return lst;\n    }\n    else{\n        var min\
    \ = Math.min(...lst);\n        var max = Math.max(...lst);\n        var min_index\
    \ = lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n        var\
    \ new_lst = [];\n        new_lst.push(min);\n        new_lst.push(max);\n    \
    \    lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n      \
    \  return new_lst.concat(strange_sort_list(lst));\n    }\n}\n", "    if (lst.length\
    \ == 0) {\n        return lst;\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    var i = 0;\n\
    \    while (i < lst.length) {\n        if (i % 2 == 0) {\n            new_lst.push(min);\n\
    \            lst.splice(min_index, 1);\n            min = Math.min.apply(null,\
    \ lst);\n            min_index = lst.indexOf(min);\n        } else {\n       \
    \     new_lst.push(max);\n            lst.splice(max_index, 1);\n            max\
    \ = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n  \
    \      }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0){\n        return lst;\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] != min && lst[i] != max){\n            new_lst.push(lst[i]);\n     \
    \   }\n    }\n    return new_lst;\n}\n", "    if (lst.length == 0){\n        return\
    \ lst;\n    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [min];\n    var index = lst.indexOf(min);\n    lst.splice(index,\
    \ 1);\n    var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n\
    \            var max = Math.max.apply(null, lst);\n            result.push(max);\n\
    \            var index = lst.indexOf(max);\n            lst.splice(index, 1);\n\
    \        }\n        else{\n            var min = Math.min.apply(null, lst);\n\
    \            result.push(min);\n            var index = lst.indexOf(min);\n  \
    \          lst.splice(index, 1);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var sorted = lst.sort(function(a, b){return a-b});\n    var result\
    \ = [];\n    var i = 0;\n    var j = sorted.length - 1;\n    while (i < j){\n\
    \        result.push(sorted[i]);\n        result.push(sorted[j]);\n        i++;\n\
    \        j--;\n    }\n    if (i === j){\n        result.push(sorted[i]);\n   \
    \ }\n    return result;\n}\n", "    if (lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var new_lst = [];\n    var i = 0;\n    while (i < lst.length){\n\
    \        if (i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else {\n\
    \            new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return new_lst;\n}\n", "    var new_lst = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var lst_length = lst.length;\n   \
    \ var i = 0;\n    while (i < lst_length){\n        if (i % 2 == 0){\n        \
    \    new_lst.push(min);\n            lst.splice(min_index, 1);\n            min\
    \ = Math.min.apply(null, lst);\n            min_index = lst.indexOf(min);\n  \
    \      }\n        else {\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}", "    if(lst.length ==\
    \ 0)\n        return [];\n    if(lst.length == 1)\n        return lst;\n    lst.sort(function(a,\
    \ b){return a-b});\n    var result = [];\n    var i = 0;\n    var j = lst.length\
    \ - 1;\n    while(i <= j){\n        result.push(lst[i]);\n        i++;\n     \
    \   if(i <= j){\n            result.push(lst[j]);\n            j--;\n        }\n\
    \    }\n    return result;\n}\n", "    if (lst.length == 0) {\n        return\
    \ [];\n    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var new_lst = [];\n    var i = 0;\n    while (new_lst.length < lst.length)\
    \ {\n        if (i % 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n    \
    \        max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n  \
    \  return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n\
    \    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_list\
    \ = [min];\n    var new_list_2 = [];\n    var new_list_3 = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(lst[i] != min){\n            new_list_2.push(lst[i]);\n\
    \        }\n    }\n    var max_2 = Math.max(...new_list_2);\n    new_list.push(max_2);\n\
    \    for(var i = 0; i < new_list_2.length; i++){\n        if(new_list_2[i] !=\
    \ max_2){\n            new_list_3.push(new_list_2[i]);\n        }\n    }\n   \
    \ var min_2 = Math.min(...new_list_3);\n    new_list.push(min_2);\n    for(var\
    \ i = 0; i < new_list_3.length; i++){\n        if(new_list_3[i] != min_2){\n \
    \           new_list.push(new_list_3[i]);\n        }\n    }\n    return new_list;\n\
    }", "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    if(min_index < max_index){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    else{\n        new_lst.push(max);\n\
    \        new_lst.push(min);\n        lst.splice(max_index, 1);\n        lst.splice(min_index\
    \ - 1, 1);\n    }\n    return new_lst.concat(strange_sort_list(lst));\n}\n", " \
    \   if (lst.length == 0) return [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (lst.length > 0) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0){\n        return lst;\n \
    \   }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var new_lst = [];\n    var i = 0;\n    while (i < lst.length){\n\
    \        if (i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else {\n\
    \            new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n  \
    \  }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let\
    \ result = [];\n    let i = 0;\n    while(lst.length > 0){\n        if(i % 2 ==\
    \ 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    var result = [];\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n  \
    \  var max_index = lst.indexOf(max);\n    var min_count = 0;\n    var max_count\
    \ = 0;\n    var min_max_count = 0;\n    var max_min_count = 0;\n    var min_max_index\
    \ = 0;\n    var max_min_index = 0;\n    var min_max_index_count = 0;\n    var\
    \ max_min_index_count = 0;\n    var min_max_index_count_2 = 0;\n    var max_min_index_count_2\
    \ = 0;\n    var min_max_index_count_3 = 0;\n    var max_min_index_count_3 = 0;\n\
    \    var min_max_index_count_4 = 0;\n    var max_min_index_count_4 = 0;\n    var\
    \ min_max_index_count_5 = 0;\n    var max_min_index_count_5 = 0;\n    var min_max_index_count_6\
    \ = 0;\n    var max_min_index_count_6 = 0;\n    var min_max_index_count_7 = 0;\n\
    \    var max_min_index_count_7 = 0;\n    var min_max_index_count_8 = 0;\n    var\
    \ max_min_index_count_8 = 0;\n    var min_max_index_count_9 = 0;\n    var max_min_index_count_9\
    \ = 0;\n    var min_max_index_count_10 = 0;\n    var max_min_index_count_10 =\
    \ 0;\n    var min_max_index_count_11 = 0;\n    var max_min_index_count_11 = 0;\n\
    \    var min_max_index_count_12 = 0;\n    var max_min_index_count_12 = 0;\n  \
    \  var min_max_index_count_13 = 0;\n    var max_min_index_count_", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = lst[0];\n    var max = lst[0];\n\
    \    var min_index = 0;\n    var max_index = 0;\n    for (var i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n           \
    \ min_index = i;\n        }\n        if (lst[i] > max) {\n            max = lst[i];\n\
    \            max_index = i;\n        }\n    }\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    if (min_index < max_index) {\n        new_lst.push(max);\n        for (var\
    \ i = min_index + 1; i < max_index; i++) {\n            new_lst.push(lst[i]);\n\
    \        }\n    } else {\n        for (var i = min_index + 1; i < lst.length;\
    \ i++) {\n            new_lst.push(lst[i]);\n        }\n        for (var i = 0;\
    \ i < max_index; i++) {\n            new_lst.push(lst[i]);\n        }\n    }\n\
    \    return new_lst;\n}\n", "    if (lst.length == 0) {\n        return [];\n\
    \    }\n    if (lst.length == 1) {\n        return lst;\n    }\n    var min =\
    \ Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n    var\
    \ lst_min = [];\n    var lst_max = [];\n    for (var i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] == min) {\n            lst_min.push(lst[i]);\n       \
    \ }\n        if (lst[i] == max) {\n            lst_max.push(lst[i]);\n       \
    \ }\n    }\n    var lst_new = [];\n    for (var i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] != min && lst[i] != max) {\n            lst_new.push(lst[i]);\n\
    \        }\n    }\n    return lst_min.concat(lst_max).concat(strange_sort_list(lst_new));\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var new_lst = [];\n   \
    \ var i = 0;\n    while (lst.length > 0){\n        if (i % 2 == 0){\n        \
    \    new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n      \
    \      min = Math.min.apply(null, lst);\n        }\n        else {\n         \
    \   new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n       \
    \     max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n    return\
    \ new_lst;\n}\n", "    if (lst.length === 0) {\n        return lst;\n    }\n \
    \   var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while (lst.length > 0) {\n       \
    \ if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n    \
    \        max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n  \
    \  return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n\
    \    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var min_index\
    \ = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var new_lst\
    \ = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index, 1);\n    var new_lst = new_lst.concat(strange_sort_list(lst));\n\
    \    return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n  \
    \  }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length === 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 === 0){\n            new_lst.push(min);\n          \
    \  lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n   \
    \     }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if(lst.length == 0){\n        return [];\n   \
    \ }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var i = 0;\n    while(new_lst.length < lst.length){\n   \
    \     if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    var min = lst[0];\n\
    \    var max = lst[0];\n    var min_index = 0;\n    var max_index = 0;\n    for\
    \ (var i = 0; i < lst.length; i++) {\n        if (lst[i] < min) {\n          \
    \  min = lst[i];\n            min_index = i;\n        }\n        if (lst[i] >\
    \ max) {\n            max = lst[i];\n            max_index = i;\n        }\n \
    \   }\n    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    var new_lst2 = [];\n    for (var j = 0; j < lst.length; j++) {\n        if\
    \ (j !== min_index && j !== max_index) {\n            new_lst2.push(lst[j]);\n\
    \        }\n    }\n    return new_lst.concat(strange_sort_list(new_lst2));\n}\n",
  "    if(lst.length == 0){\n        return [];\n    }\n    var sorted = lst.sort(function(a,\
    \ b){return a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length\
    \ - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n        i++;\n  \
    \      if(i <= j){\n            result.push(sorted[j]);\n            j--;\n  \
    \      }\n    }\n    return result;\n}\n", "    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var arr = [];\n    var i = 0;\n    while\
    \ (lst.length > 0){\n        arr.push(min);\n        lst.splice(lst.indexOf(min),\
    \ 1);\n        if (lst.length > 0){\n            arr.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n        }\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n\
    \    }\n    return arr;\n}\n", "    var new_lst = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var lst_len = lst.length;\n    var\
    \ i = 0;\n    while (i < lst_len){\n        if (i % 2 == 0){\n            new_lst.push(min);\n\
    \            lst.splice(min_index, 1);\n            min = Math.min.apply(null,\
    \ lst);\n            min_index = lst.indexOf(min);\n        }\n        else {\n\
    \            new_lst.push(max);\n            lst.splice(max_index, 1);\n     \
    \       max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    var res = [];\n    var min\
    \ = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n   \
    \ var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n \
    \   var min_max = [min, max];\n    var max_min = [max, min];\n    var min_max_index\
    \ = [min_index, max_index];\n    var max_min_index = [max_index, min_index];\n\
    \    var min_max_max_min = [min, max, max, min];\n    var max_min_min_max = [max,\
    \ min, min, max];\n    var min_max_max_min_index = [min_index, max_index, max_index,\
    \ min_index];\n    var max_min_min_max_index = [max_index, min_index, min_index,\
    \ max_index];\n    if (lst.length == 0){\n        return res;\n    }\n    else\
    \ if (lst.length == 1){\n        return lst;\n    }\n    else if (lst.length ==\
    \ 2){\n        if (lst[0] == lst[1]){\n            return lst;\n        }\n  \
    \      else{\n            return min_max;\n        }\n    }\n    else if (lst.length\
    \ == 3){\n        if (lst[0] == lst[1] && lst[1] == lst[2]){\n            return\
    \ lst;\n        }\n        else if (lst[0] == lst[1] && lst[1] != lst[2]){\n \
    \           return min_max_max_min;\n        }\n        else if (lst[0] != lst[1]\
    \ && lst[1] == lst[2]){\n            return max_min_min_max;\n        }\n    \
    \    else{\n            return min_max_max_min;\n        }\n    }\n    else if\
    \ (lst.length == 4){\n        if (lst[0] == lst[1] && lst[1] ==", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst =\
    \ [];\n    var i = 0;\n    while (i < lst.length){\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        i += 2;\n    }\n    return new_lst;\n}",
  "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    var new_lst_2 = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] != min && lst[i] != max){\n            new_lst_2.push(lst[i]);\n\
    \        }\n    }\n    var new_lst_3 = strange_sort_list(new_lst_2);\n    return\
    \ new_lst.concat(new_lst_3);\n}\n", "    if(lst.length == 0){\n        return\
    \ lst;\n    }\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(result.length < lst.length){\n\
    \        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    while(lst.length > 0){\n        min = Math.min(...lst);\n        max\
    \ = Math.max(...lst);\n        min_index = lst.indexOf(min);\n        max_index\
    \ = lst.indexOf(max);\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n    }\n\
    \    return new_lst;\n}\n", "    if (lst.length == 0) {\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    if (min_index < max_index) {\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n    } else {\n        new_lst.push(max);\n        new_lst.push(min);\n\
    \        lst.splice(max_index, 1);\n        lst.splice(min_index - 1, 1);\n  \
    \  }\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    if(lst.length == 1){\n        return\
    \ lst;\n    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    lst.sort(function(a,\
    \ b){return a-b});\n    var result = [];\n    var i = 0;\n    while (lst.length\
    \ > 0) {\n        result.push(lst[i]);\n        lst.splice(i, 1);\n        if\
    \ (lst.length == 0) {\n            break;\n        }\n        result.push(lst[lst.length\
    \ - 1]);\n        lst.splice(lst.length - 1, 1);\n    }\n    return result;\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_list = [];\n    new_list.push(min);\n\
    \    new_list.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    return new_list.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var new_list = [min];\n    var new_list2 = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] != min){\n      \
    \      new_list2.push(lst[i]);\n        }\n    }\n    for(var i = 0; i < new_list2.length;\
    \ i++){\n        if(i % 2 == 0){\n            new_list.push(Math.max(...new_list2));\n\
    \            new_list2.splice(new_list2.indexOf(Math.max(...new_list2)), 1);\n\
    \        }\n        else{\n            new_list.push(Math.min(...new_list2));\n\
    \            new_list2.splice(new_list2.indexOf(Math.min(...new_list2)), 1);\n\
    \        }\n    }\n    return new_list;\n}\n", "    var new_list = [];\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var min_index_2 = lst.lastIndexOf(min);\n    var max_index_2 = lst.lastIndexOf(max);\n\
    \    var min_index_3 = lst.indexOf(min, min_index + 1);\n    var max_index_3 =\
    \ lst.indexOf(max, max_index + 1);\n    var min_index_4 = lst.lastIndexOf(min,\
    \ min_index_2 - 1);\n    var max_index_4 = lst.lastIndexOf(max, max_index_2 -\
    \ 1);\n    if (min_index_2 == -1){\n        min_index_2 = min_index;\n    }\n\
    \    if (max_index_2 == -1){\n        max_index_2 = max_index;\n    }\n    if\
    \ (min_index_3 == -1){\n        min_index_3 = min_index;\n    }\n    if (max_index_3\
    \ == -1){\n        max_index_3 = max_index;\n    }\n    if (min_index_4 == -1){\n\
    \        min_index_4 = min_index;\n    }\n    if (max_index_4 == -1){\n      \
    \  max_index_4 = max_index;\n    }\n    if (lst.length == 0){\n        return\
    \ [];\n    }\n    if (lst.length == 1){\n        return lst;\n    }\n    if (lst.length\
    \ == 2){\n        return [min, max];\n    }\n    if (lst.length == 3){\n     \
    \   return [min, max, lst[1]];\n    }\n    if (lst.length == 4){\n        return\
    \ [min, max, lst[1], lst[2]];\n    }\n    if (lst.length == 5){\n        return\
    \ [min, max,"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

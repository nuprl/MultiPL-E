name: HumanEval_99_closest_integer
language: js
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
  14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
  15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
completions: ["  return Math.round(value);\n}", "  var num = parseFloat(value);\n\
    \  var num_floor = Math.floor(num);\n  var num_ceil = Math.ceil(num);\n  var num_floor_diff\
    \ = num - num_floor;\n  var num_ceil_diff = num_ceil - num;\n  if (num_floor_diff\
    \ < num_ceil_diff){\n    return num_floor;\n  } else {\n    return num_ceil;\n\
    \  }\n}\n", "  return Math.round(value);\n}", "  return Math.round(value);\n}",
  "  return Math.round(value);\n}\n", "  return Math.round(value);\n}\n", "  return\
    \ Math.round(value);\n}\n", "  var num = parseFloat(value);\n  var num_floor =\
    \ Math.floor(num);\n  var num_ceil = Math.ceil(num);\n  if (num - num_floor <\
    \ num_ceil - num){\n    return num_floor;\n  }\n  else {\n    return num_ceil;\n\
    \  }\n}", "  return Math.round(value);\n}", "  var num = parseFloat(value);\n\
    \  var floor = Math.floor(num);\n  var ceil = Math.ceil(num);\n  if (num - floor\
    \ < ceil - num){\n    return floor;\n  } else {\n    return ceil;\n  }\n}", " \
    \ return Math.round(value);\n}", "  var num = parseFloat(value);\n  var num2 =\
    \ Math.round(num);\n  return num2;\n}\n", "  return Math.round(value);\n}", " \
    \   return Math.round(value);\n}", "  return Math.round(value);\n}", "    return\
    \ Math.round(value);\n}\n", "  var value = parseFloat(value);\n  var integer =\
    \ Math.round(value);\n  return integer;\n}", "  return Math.round(value);\n}\n",
  "  return Math.round(value);\n}", "    return Math.round(value);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

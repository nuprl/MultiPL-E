name: HumanEval_120_maximum
language: js
prompt: "//Given an array arr of integers and a positive integer k, return a sorted\
  \ list \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// >>>\
  \ maximum([-3, -4, 5], 3)\n// [-4, -3, 5]\n// Example 2:\n// >>> maximum([4, -4,\
  \ 4], 2)\n// [4, 4]\n// Example 3:\n// >>> maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n\
  // [2]\n// Note:\n// 1. The length of the array will be in the range of [1, 1000].\n\
  // 2. The elements in the array will be in the range of [-1000, 1000].\n// 3. 0\
  \ <= k <= len(arr)\nfunction maximum(arr, k){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = maximum;\n  assert.deepEqual(candidate([-3, -4, 5], 3),[-4, -3, 5]);\n  assert.deepEqual(candidate([4,\
  \ -4, 4], 2),[4, 4]);\n  assert.deepEqual(candidate([-3, 2, 1, 2, -1, -2, 1], 1),[2]);\n\
  \  assert.deepEqual(candidate([123, -123, 20, 0, 1, 2, -3], 3),[2, 20, 123]);\n\
  \  assert.deepEqual(candidate([-123, 20, 0, 1, 2, -3], 4),[0, 1, 2, 20]);\n  assert.deepEqual(candidate([5,\
  \ 15, 0, 3, -13, -8, 0], 7),[-13, -8, 0, 0, 3, 5, 15]);\n  assert.deepEqual(candidate([-1,\
  \ 0, 2, 5, 3, -10], 2),[3, 5]);\n  assert.deepEqual(candidate([1, 0, 5, -7], 1),[5]);\n\
  \  assert.deepEqual(candidate([4, -4], 2),[-4, 4]);\n  assert.deepEqual(candidate([-10,\
  \ 10], 2),[-10, 10]);\n  assert.deepEqual(candidate([1, 2, 3, -23, 243, -400, 0],\
  \ 0),[]);\n}\n\ntest();"
completions: ["    // your code here\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n   \
    \             max = arr[j];\n                maxIndex = j;\n            }\n  \
    \      }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let result = [];\n    let max = arr[0];\n    let\
    \ maxIndex = 0;\n    for(let i = 0; i < k; i++){\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n        max = arr[0];\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max\
    \ = -Infinity;\n        let maxIndex = -1;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                maxIndex = j;\n    \
    \        }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    let max = arr[0];\n\
    \    let maxIndex = 0;\n    for(let i = 0; i < k; i++){\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > max){\n                max =\
    \ arr[j];\n                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n        max = arr[0];\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max\
    \ = arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > max){\n                max = arr[j];\n              \
    \  index = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        result.push(Math.max(...arr));\n        arr.splice(arr.indexOf(Math.max(...arr)),\
    \ 1);\n    }\n    return result;\n}", "    let result = [];\n    for(let i = 0;\
    \ i < k; i++){\n        let max = arr[0];\n        let index = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                index = j;\n            }\n        }\n     \
    \   result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }\n", "    let result = [];\n    let max = arr[0];\n    let maxIndex = 0;\n  \
    \  for(let i = 0; i < k; i++){\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > max){\n                max = arr[j];\n              \
    \  maxIndex = j;\n            }\n        }\n        result.push(max);\n      \
    \  arr.splice(maxIndex, 1);\n        max = arr[0];\n    }\n    return result;\n\
    }", "    let sorted = arr.sort((a, b) => a - b);\n    return sorted.slice(sorted.length\
    \ - k);\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n      \
    \  let max = arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    let max = 0;\n    let index = 0;\n    for(let i = 0; i < k; i++){\n\
    \        max = arr[i];\n        index = i;\n        for(let j = i; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(max);\n \
    \       arr[index] = arr[i];\n        arr[i] = max;\n    }\n    return result;\n\
    }", "    let sorted = arr.sort((a, b) => a - b);\n    let result = [];\n    for(let\
    \ i = sorted.length - 1; i >= sorted.length - k; i--){\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    for(let i = 0; i\
    \ < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                maxIndex = j;\n            }\n        }\n  \
    \      result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n    \
    \    let max = arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(max);\n \
    \       arr.splice(index, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    let max = arr[0];\n    let maxIndex = 0;\n    for(let i = 0; i <\
    \ k; i++){\n        max = arr[i];\n        maxIndex = i;\n        for(let j =\
    \ i; j < arr.length; j++){\n            if(arr[j] > max){\n                max\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ result.push(max);\n        arr[maxIndex] = arr[i];\n        arr[i] = max;\n\
    \    }\n    return result;\n}\n", "    let sorted = arr.sort((a, b) => b - a);\n\
    \    return sorted.slice(0, k);\n}\n", "    let sorted = arr.sort((a, b) => b\
    \ - a);\n    return sorted.slice(0, k);\n}\n", "    let result = [];\n    let\
    \ max = arr[0];\n    let maxIndex = 0;\n    for(let i = 0; i < k; i++){\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n   \
    \             max = arr[j];\n                maxIndex = j;\n            }\n  \
    \      }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n      \
    \  max = arr[0];\n    }\n    return result;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_51_remove_vowels
language: js
prompt: "//remove_vowels is a function that takes string and returns string without\
  \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
  )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
  aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
  abcdef\nghijklm\"),\"bcdf\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"\
  fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
  acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
  ybcd\"),\"ybcd\");\n}\n\ntest();"
completions: ["    var vowels = \"aeiouAEIOU\";\n    var new_text = \"\";\n    for\
    \ (var i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i]) == -1){\n\
    \            new_text += text[i];\n        }\n    }\n    return new_text;\n}\n",
  "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    var result = \"\";\n\
    \    for (var i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i].toLowerCase())\
    \ == -1){\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n", "    var vowels = \"aeiouAEIOU\";\n    var new_text = \"\";\n    for (var\
    \ i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i]) == -1){\n\
    \            new_text += text[i];\n        }\n    }\n    return new_text;\n}\n",
  "    var vowels = ['a', 'e', 'i', 'o', 'u'];\n    var text_without_vowels = '';\n\
    \    for (var i = 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i])\
    \ == -1) {\n            text_without_vowels += text[i];\n        }\n    }\n  \
    \  return text_without_vowels;\n}\n", "    var vowels = \"aeiouAEIOU\";\n    var\
    \ new_text = \"\";\n    for (var i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i])\
    \ == -1){\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\n", "    var vowels = \"aeiouAEIOU\";\n    var newText = \"\";\n    for (var\
    \ i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i]) == -1){\n\
    \            newText += text[i];\n        }\n    }\n    return newText;\n}\n",
  "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    var newText = \"\";\n\
    \    for (var i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i].toLowerCase())\
    \ == -1){\n            newText += text[i];\n        }\n    }\n    return newText;\n\
    }\n", "    var vowels = \"aeiouAEIOU\";\n    var result = \"\";\n    for(var i\
    \ = 0; i < text.length; i++){\n        if(vowels.indexOf(text[i]) == -1){\n  \
    \          result += text[i];\n        }\n    }\n    return result;\n}\n", " \
    \   var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    var text_without_vowels\
    \ = \"\";\n    for (var i = 0; i < text.length; i++){\n        var char = text[i];\n\
    \        if (vowels.indexOf(char) == -1){\n            text_without_vowels +=\
    \ char;\n        }\n    }\n    return text_without_vowels;\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\";\n    var result = \"\";\n    for(var i = 0; i < text.length;\
    \ i++){\n        if(vowels.indexOf(text[i]) == -1){\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\n", "    var vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    var new_text = \"\";\n    for (var i = 0; i < text.length;\
    \ i++){\n        if (vowels.indexOf(text[i]) == -1){\n            new_text +=\
    \ text[i];\n        }\n    }\n    return new_text;\n}\n", "\tvar vowels = ['a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n\tvar newText = \"\";\n\tfor\
    \ (var i = 0; i < text.length; i++) {\n\t\tif (vowels.indexOf(text[i]) === -1)\
    \ {\n\t\t\tnewText += text[i];\n\t\t}\n\t}\n\treturn newText;\n}\n", "    var\
    \ vowels = \"aeiouAEIOU\";\n    var newText = \"\";\n    for (var i = 0; i < text.length;\
    \ i++){\n        if (vowels.indexOf(text[i]) === -1){\n            newText +=\
    \ text[i];\n        }\n    }\n    return newText;\n}\n", "    var vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    var new_text = \"\";\n    for (var i =\
    \ 0; i < text.length; i++) {\n        if (vowels.indexOf(text[i]) == -1) {\n \
    \           new_text += text[i];\n        }\n    }\n    return new_text;\n}\n",
  "    var vowels = \"aeiouAEIOU\";\n    var new_text = \"\";\n    for (var i = 0;\
    \ i < text.length; i++){\n        if (vowels.indexOf(text[i]) == -1){\n      \
    \      new_text += text[i];\n        }\n    }\n    return new_text;\n}\n", " \
    \   var vowels = \"aeiouAEIOU\";\n    var result = \"\";\n    for(var i = 0; i\
    \ < text.length; i++){\n        if(vowels.indexOf(text[i]) == -1){\n         \
    \   result += text[i];\n        }\n    }\n    return result;\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\";\n    var new_text = \"\";\n    for (var i = 0; i < text.length;\
    \ i++){\n        if (vowels.indexOf(text[i]) == -1){\n            new_text +=\
    \ text[i];\n        }\n    }\n    return new_text;\n}\n", "    var vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    var text_array = text.split(\"\");\n  \
    \  var new_text = \"\";\n    for (var i = 0; i < text_array.length; i++){\n  \
    \      if (vowels.indexOf(text_array[i]) == -1){\n            new_text += text_array[i];\n\
    \        }\n    }\n    return new_text;\n}\n", "    var vowels = \"aeiouAEIOU\"\
    ;\n    var new_text = \"\";\n    for (var i = 0; i < text.length; i++) {\n   \
    \     if (vowels.indexOf(text[i]) == -1) {\n            new_text += text[i];\n\
    \        }\n    }\n    return new_text;\n}\n", "    var vowels = \"aeiouAEIOU\"\
    ;\n    var new_text = \"\";\n    for (var i = 0; i < text.length; i++) {\n   \
    \     if (vowels.indexOf(text[i]) == -1) {\n            new_text += text[i];\n\
    \        }\n    }\n    return new_text;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

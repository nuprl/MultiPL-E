name: HumanEval_122_add_elements
language: js
prompt: "//Given a non-empty array of integers arr and an integer k, return\n// the\
  \ sum of the elements with at most two digits from the first k elements of arr.\n\
  // Example:\n// >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n// 24\n\
  // Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\nfunction\
  \ add_elements(arr, k){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = add_elements;\n  assert.deepEqual(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
  \ 99], 3),-4);\n  assert.deepEqual(candidate([111, 121, 3, 4000, 5, 6], 2),0);\n\
  \  assert.deepEqual(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125);\n  assert.deepEqual(candidate([111,\
  \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24);\n  assert.deepEqual(candidate([1], 1),1);\n\
  }\n\ntest();"
completions: ["    let sum = 0;\n    for(let i = 0; i < k; i++){\n        if(arr[i]\
    \ < 100){\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < k; i++){\n        if(arr[i] < 100){\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < k; i++){\n        if(arr[i] < 100){\n     \
    \       sum += arr[i];\n        }\n    }\n    return sum;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < k; i++){\n        if(arr[i] < 100){\n         \
    \   sum += arr[i];\n        }\n    }\n    return sum;\n}", "    let sum = 0;\n\
    \    for(let i = 0; i < k; i++){\n        if(arr[i] < 100){\n            sum +=\
    \ arr[i];\n        }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let\
    \ i = 0; i < k; i++){\n        if(arr[i] < 100){\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "    let sum = 0;\n    for(let i = 0;\
    \ i < k; i++){\n        if(arr[i] < 100){\n            sum += arr[i];\n      \
    \  }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i <\
    \ k; i++){\n        if(arr[i] < 100){\n            sum += arr[i];\n        }\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < k; i++){\n\
    \        if(arr[i] < 100){\n            sum += arr[i];\n        }\n    }\n   \
    \ return sum;\n}\n", "    var sum = 0;\n    for(var i = 0; i < k; i++){\n    \
    \    if(arr[i] < 100){\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < k; i++){\n        if(arr[i]\
    \ < 100){\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "    let sum = 0;\n    for(let i = 0; i < k; i++){\n        if(arr[i] < 100){\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < k; i++){\n        if(arr[i] < 100){\n     \
    \       sum += arr[i];\n        }\n    }\n    return sum;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < k; i++){\n        if(arr[i] < 100){\n         \
    \   sum += arr[i];\n        }\n    }\n    return sum;\n}\n", "    var sum = 0;\n\
    \    for(var i = 0; i < k; i++){\n        if(arr[i] < 100){\n            sum +=\
    \ arr[i];\n        }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let\
    \ i = 0; i < k; i++){\n        if(arr[i] < 100){\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0;\
    \ i < k; i++){\n        if(arr[i] > 9 && arr[i] < 100){\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0;\
    \ i < k; i++){\n        if(arr[i] < 100){\n            sum += arr[i];\n      \
    \  }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i <\
    \ k; i++){\n        if(arr[i] <= 99){\n            sum += arr[i];\n        }\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < k; i++){\n\
    \        if(arr[i] < 100){\n            sum += arr[i];\n        }\n    }\n   \
    \ return sum;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

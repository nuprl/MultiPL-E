name: HumanEval_40_triples_sum_to_zero
language: js
prompt: "//triples_sum_to_zero takes a list of integers as an input.\n// it returns\
  \ True if there are three distinct elements in the list that\n// sum to zero, and\
  \ False otherwise.\n// >>> triples_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> triples_sum_to_zero([1,\
  \ 3, -2, 1])\n// true\n// >>> triples_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
  \ triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n// true\n// >>> triples_sum_to_zero([1])\n\
  // false\nfunction triples_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = triples_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
  \ assert.deepEqual(candidate([1, 3, 5, -1]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),true);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([1,\
  \ 2, 5, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 9, 7]),true);\n\
  \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([1, 3,\
  \ 5, -100]),false);\n  assert.deepEqual(candidate([100, 3, 5, -100]),false);\n}\n\
  \ntest();"
completions: ["    if (l.length < 3){\n        return false;\n    }\n    for (var\
    \ i = 0; i < l.length; i++){\n        for (var j = i + 1; j < l.length; j++){\n\
    \            for (var k = j + 1; k < l.length; k++){\n                if (l[i]\
    \ + l[j] + l[k] == 0){\n                    return true;\n                }\n\
    \            }\n        }\n    }\n    return false;\n}\n", "    // your code here\n\
    \    if (l.length < 3) {\n        return false;\n    }\n    for (var i = 0; i\
    \ < l.length; i++) {\n        for (var j = i + 1; j < l.length; j++) {\n     \
    \       for (var k = j + 1; k < l.length; k++) {\n                if (l[i] + l[j]\
    \ + l[k] == 0) {\n                    return true;\n                }\n      \
    \      }\n        }\n    }\n    return false;\n}\n", "    var i = 0;\n    var\
    \ j = 0;\n    var k = 0;\n    var sum = 0;\n    for(i = 0; i < l.length; i++){\n\
    \        for(j = i + 1; j < l.length; j++){\n            for(k = j + 1; k < l.length;\
    \ k++){\n                sum = l[i] + l[j] + l[k];\n                if(sum ==\
    \ 0){\n                    return true;\n                }\n            }\n  \
    \      }\n    }\n    return false;\n}\n", "\tfor(var i = 0; i < l.length; i++){\n\
    \t\tfor(var j = i + 1; j < l.length; j++){\n\t\t\tfor(var k = j + 1; k < l.length;\
    \ k++){\n\t\t\t\tif(l[i] + l[j] + l[k] == 0){\n\t\t\t\t\treturn true;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    var i, j, k;\n    for (i =\
    \ 0; i < l.length; i++) {\n        for (j = i + 1; j < l.length; j++) {\n    \
    \        for (k = j + 1; k < l.length; k++) {\n                if (l[i] + l[j]\
    \ + l[k] === 0) {\n                    return true;\n                }\n     \
    \       }\n        }\n    }\n    return false;\n}\n", "    var i = 0;\n    var\
    \ j = 1;\n    var k = 2;\n    while (i < l.length - 2){\n        while (j < l.length\
    \ - 1){\n            while (k < l.length){\n                if (l[i] + l[j] +\
    \ l[k] == 0){\n                    return true;\n                }\n         \
    \       k++;\n            }\n            j++;\n            k = j + 1;\n      \
    \  }\n        i++;\n        j = i + 1;\n        k = j + 1;\n    }\n    return\
    \ false;\n}\n", "    for(let i = 0; i < l.length; i++){\n        for(let j = i\
    \ + 1; j < l.length; j++){\n            for(let k = j + 1; k < l.length; k++){\n\
    \                if(l[i] + l[j] + l[k] == 0){\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "\tif (l.length < 3){\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < l.length; i++){\n\
    \t\tfor (var j = i + 1; j < l.length; j++){\n\t\t\tfor (var k = j + 1; k < l.length;\
    \ k++){\n\t\t\t\tif (l[i] + l[j] + l[k] == 0){\n\t\t\t\t\treturn true;\n\t\t\t\
    \t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "\tvar i = 0;\n\tvar j = 0;\n\
    \tvar k = 0;\n\tvar sum = 0;\n\tvar result = false;\n\tfor(i = 0; i < l.length;\
    \ i++){\n\t\tfor(j = i + 1; j < l.length; j++){\n\t\t\tfor(k = j + 1; k < l.length;\
    \ k++){\n\t\t\t\tsum = l[i] + l[j] + l[k];\n\t\t\t\tif(sum == 0){\n\t\t\t\t\t\
    result = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var\
    \ i = 0;\n    var j = 1;\n    var k = 2;\n    var result = false;\n    while (i\
    \ < l.length){\n        while (j < l.length){\n            while (k < l.length){\n\
    \                if (l[i] + l[j] + l[k] == 0){\n                    result = true;\n\
    \                }\n                k++;\n            }\n            j++;\n  \
    \          k = j + 1;\n        }\n        i++;\n        j = i + 1;\n        k\
    \ = j + 1;\n    }\n    return result;\n}\n", "    var i = 0;\n    var j = 1;\n\
    \    var k = 2;\n    var sum = 0;\n    while (i < l.length){\n        while (j\
    \ < l.length){\n            while (k < l.length){\n                sum = l[i]\
    \ + l[j] + l[k];\n                if (sum == 0){\n                    return true;\n\
    \                }\n                k++;\n            }\n            j++;\n  \
    \          k = j + 1;\n        }\n        i++;\n        j = i + 1;\n        k\
    \ = j + 1;\n    }\n    return false;\n}\n", "  if (l.length < 3) {\n    return\
    \ false;\n  }\n  for (var i = 0; i < l.length; i++) {\n    for (var j = i + 1;\
    \ j < l.length; j++) {\n      for (var k = j + 1; k < l.length; k++) {\n     \
    \   if (l[i] + l[j] + l[k] === 0) {\n          return true;\n        }\n     \
    \ }\n    }\n  }\n  return false;\n}\n", "    var i, j, k;\n    for (i = 0; i <\
    \ l.length; i++){\n        for (j = i + 1; j < l.length; j++){\n            for\
    \ (k = j + 1; k < l.length; k++){\n                if (l[i] + l[j] + l[k] == 0){\n\
    \                    return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n", "    if (l.length < 3){\n        return false;\n\
    \    }\n    for (var i = 0; i < l.length; i++){\n        for (var j = i + 1; j\
    \ < l.length; j++){\n            for (var k = j + 1; k < l.length; k++){\n   \
    \             if (l[i] + l[j] + l[k] == 0){\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "    for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length;\
    \ j++){\n            for(var k = j + 1; k < l.length; k++){\n                if(l[i]\
    \ + l[j] + l[k] == 0){\n                    return true;\n                }\n\
    \            }\n        }\n    }\n    return false;\n}\n", "    var i, j, k;\n\
    \    for (i = 0; i < l.length; i++){\n        for (j = i + 1; j < l.length; j++){\n\
    \            for (k = j + 1; k < l.length; k++){\n                if (l[i] + l[j]\
    \ + l[k] == 0){\n                    return true;\n                }\n       \
    \     }\n        }\n    }\n    return false;\n}\n", "    for(var i = 0; i < l.length;\
    \ i++){\n        for(var j = i + 1; j < l.length; j++){\n            for(var k\
    \ = j + 1; k < l.length; k++){\n                if(l[i] + l[j] + l[k] == 0){\n\
    \                    return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n", "    for(var i = 0; i < l.length; i++){\n   \
    \     for(var j = i + 1; j < l.length; j++){\n            for(var k = j + 1; k\
    \ < l.length; k++){\n                if(l[i] + l[j] + l[k] == 0){\n          \
    \          return true;\n                }\n            }\n        }\n    }\n\
    \    return false;\n}\n", "    if (l.length < 3){\n        return false;\n   \
    \ }\n    for (var i = 0; i < l.length; i++){\n        for (var j = i + 1; j <\
    \ l.length; j++){\n            for (var k = j + 1; k < l.length; k++){\n     \
    \           if (l[i] + l[j] + l[k] == 0){\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "    var i = 0;\n    var j = 1;\n    var k = 2;\n    while (i < l.length){\n   \
    \     while (j < l.length){\n            while (k < l.length){\n             \
    \   if (l[i] + l[j] + l[k] == 0){\n                    return true;\n        \
    \        }\n                k++;\n            }\n            j++;\n          \
    \  k = j + 1;\n        }\n        i++;\n        j = i + 1;\n        k = j + 1;\n\
    \    }\n    return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

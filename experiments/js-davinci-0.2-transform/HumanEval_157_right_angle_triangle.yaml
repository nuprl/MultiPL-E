name: HumanEval_157_right_angle_triangle
language: js
prompt: "//Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
  // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
  \ 2, 3)\n// false\nfunction right_angle_triangle(a, b, c){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
  \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
  \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
  \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
  \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
  \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
completions: ["    if(a*a + b*b == c*c){\n        return true;\n    }\n    else if(a*a\
    \ + c*c == b*b){\n        return true;\n    }\n    else if(b*b + c*c == a*a){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }\n}\n", " \
    \   // your code here\n}\n", "    // your code here\n}\n", "    var a2 = Math.pow(a,\
    \ 2);\n    var b2 = Math.pow(b, 2);\n    var c2 = Math.pow(c, 2);\n    if(a2 +\
    \ b2 == c2 || a2 + c2 == b2 || b2 + c2 == a2){\n        return true;\n    }\n\
    \    return false;\n}\n", "    if (a*a + b*b == c*c){\n        return true;\n\
    \    }\n    else if (a*a + c*c == b*b){\n        return true;\n    }\n    else\
    \ if (b*b + c*c == a*a){\n        return true;\n    }\n    else{\n        return\
    \ false;\n    }\n}\n", "    if (a > b && a > c) {\n        if (a * a == b * b\
    \ + c * c) {\n            return true;\n        }\n    } else if (b > a && b >\
    \ c) {\n        if (b * b == a * a + c * c) {\n            return true;\n    \
    \    }\n    } else if (c > a && c > b) {\n        if (c * c == a * a + b * b)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n", "  \
    \  if (a*a + b*b == c*c){\n        return true;\n    }\n    else if (a*a + c*c\
    \ == b*b){\n        return true;\n    }\n    else if (b*b + c*c == a*a){\n   \
    \     return true;\n    }\n    else{\n        return false;\n    }\n}\n", "  \
    \  // your code here\n    if(a>b && a>c){\n        if(a*a == b*b + c*c){\n   \
    \         return true;\n        }\n    }\n    else if(b>a && b>c){\n        if(b*b\
    \ == a*a + c*c){\n            return true;\n        }\n    }\n    else if(c>a\
    \ && c>b){\n        if(c*c == a*a + b*b){\n            return true;\n        }\n\
    \    }\n    return false;\n}\n", "    var right_angle_triangle = false;\n    if(a\
    \ > b && a > c){\n        if(a*a == b*b + c*c){\n            right_angle_triangle\
    \ = true;\n        }\n    }\n    else if(b > a && b > c){\n        if(b*b == a*a\
    \ + c*c){\n            right_angle_triangle = true;\n        }\n    }\n    else\
    \ if(c > a && c > b){\n        if(c*c == a*a + b*b){\n            right_angle_triangle\
    \ = true;\n        }\n    }\n    return right_angle_triangle;\n}\n", "    if (a\
    \ > b && a > c) {\n        return a*a == b*b + c*c;\n    } else if (b > a && b\
    \ > c) {\n        return b*b == a*a + c*c;\n    } else {\n        return c*c ==\
    \ a*a + b*b;\n    }\n}\n", "    if (a > b && a > c) {\n        return (a * a ==\
    \ b * b + c * c);\n    } else if (b > a && b > c) {\n        return (b * b ==\
    \ a * a + c * c);\n    } else {\n        return (c * c == a * a + b * b);\n  \
    \  }\n}\n", "    var max = Math.max(a, b, c);\n    var sum = a + b + c;\n    if\
    \ (max == a){\n        return (Math.pow(max, 2) == Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n    } else if (max == b){\n        return (Math.pow(max, 2) == Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n    } else {\n        return (Math.pow(max, 2) == Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n    }\n}\n", "    if (a > b && a > c){\n        if (a*a\
    \ == b*b + c*c){\n            return true;\n        }\n    }\n    else if (b >\
    \ a && b > c){\n        if (b*b == a*a + c*c){\n            return true;\n   \
    \     }\n    }\n    else if (c > a && c > b){\n        if (c*c == a*a + b*b){\n\
    \            return true;\n        }\n    }\n    return false;\n}\n", "    if(a\
    \ > b && a > c){\n        return a*a === b*b + c*c;\n    }else if(b > a && b >\
    \ c){\n        return b*b === a*a + c*c;\n    }else{\n        return c*c === a*a\
    \ + b*b;\n    }\n}\n", "    if (a*a + b*b == c*c){\n        return true;\n   \
    \ }\n    else if (a*a + c*c == b*b){\n        return true;\n    }\n    else if\
    \ (b*b + c*c == a*a){\n        return true;\n    }\n    else{\n        return\
    \ false;\n    }\n}\n", "    if(a*a + b*b == c*c){\n        return true;\n    }\n\
    \    else if(a*a + c*c == b*b){\n        return true;\n    }\n    else if(b*b\
    \ + c*c == a*a){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }\n}\n", "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n\
    \    return arr[0]*arr[0] + arr[1]*arr[1] == arr[2]*arr[2];\n}\n", "    if(a >\
    \ b && a > c){\n        return Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c,\
    \ 2);\n    }\n    else if(b > a && b > c){\n        return Math.pow(b, 2) == Math.pow(a,\
    \ 2) + Math.pow(c, 2);\n    }\n    else if(c > a && c > b){\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n    else{\n        return false;\n\
    \    }\n}\n", "    var sides = [a, b, c];\n    sides.sort(function(a, b){return\
    \ a-b});\n    return Math.pow(sides[0], 2) + Math.pow(sides[1], 2) == Math.pow(sides[2],\
    \ 2);\n}\n", "    // Your code here\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

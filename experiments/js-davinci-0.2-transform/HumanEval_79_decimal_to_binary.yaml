name: HumanEval_79_decimal_to_binary
language: js
prompt: "//You will be given a number in decimal form and your task is to convert\
  \ it to\n// binary format. The function should return a string, with each character\
  \ representing a binary\n// number. Each character in the string will be '0' or\
  \ '1'.\n// There will be an extra couple of characters 'db' at the beginning and\
  \ at the end of the string.\n// The extra characters are there to help with the\
  \ format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"db1111db\"\n// >>> decimal_to_binary(32)\n\
  // \"db100000db\"\nfunction decimal_to_binary(decimal){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = decimal_to_binary;\n  assert.deepEqual(candidate(0),\"db0db\");\n  assert.deepEqual(candidate(32),\"\
  db100000db\");\n  assert.deepEqual(candidate(103),\"db1100111db\");\n  assert.deepEqual(candidate(15),\"\
  db1111db\");\n}\n\ntest();"
completions: ["    var binary = \"\";\n    while(decimal > 0){\n        binary = (decimal\
    \ % 2) + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return\
    \ \"db\" + binary + \"db\";\n}\n", "    let binary = \"\";\n    let remainder;\n\
    \    while(decimal > 0){\n        remainder = decimal % 2;\n        decimal =\
    \ Math.floor(decimal / 2);\n        binary = remainder + binary;\n    }\n    return\
    \ \"db\" + binary + \"db\";\n}\n", "    return \"db\" + decimal.toString(2) +\
    \ \"db\";\n}\n", "    var binary = \"\";\n    while(decimal > 0){\n        binary\
    \ = (decimal % 2) + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n\
    \    return \"db\" + binary + \"db\";\n}\n", "    var binary = \"\";\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return \"db\" + binary + \"db\";\n}\n", "    let binary =\
    \ \"\";\n    let binary_string = \"\";\n    while(decimal > 0){\n        binary\
    \ += decimal % 2;\n        decimal = Math.floor(decimal / 2);\n    }\n    for(let\
    \ i = binary.length - 1; i >= 0; i--){\n        binary_string += binary[i];\n\
    \    }\n    return \"db\" + binary_string + \"db\";\n}", "    return \"db\" +\
    \ decimal.toString(2) + \"db\";\n}\n", "    var binary = \"\";\n    var binary_string\
    \ = \"\";\n    while(decimal > 0){\n        binary = decimal % 2;\n        decimal\
    \ = Math.floor(decimal / 2);\n        binary_string = binary + binary_string;\n\
    \    }\n    return \"db\" + binary_string + \"db\";\n}\n", "    var binary = \"\
    \";\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n     \
    \   decimal = Math.floor(decimal / 2);\n    }\n    return \"db\" + binary + \"\
    db\";\n}\n", "    // your code here\n    var binary = \"\";\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return \"db\" + binary + \"db\";\n}\n", "    var bin = \"\"\
    ;\n    while(decimal > 0){\n        bin = (decimal % 2) + bin;\n        decimal\
    \ = Math.floor(decimal / 2);\n    }\n    return \"db\" + bin + \"db\";\n}\n",
  "    var binary = \"\";\n    while(decimal > 0){\n        binary = (decimal % 2)\
    \ + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n    return \"\
    db\" + binary + \"db\";\n}", "    var binary = \"\";\n    while(decimal > 0){\n\
    \        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return \"db\" + binary + \"db\";\n}\n", "    var binary =\
    \ \"\";\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n \
    \       decimal = Math.floor(decimal / 2);\n    }\n    return \"db\" + binary\
    \ + \"db\";\n}\n", "    var binary = \"\";\n    while(decimal>0){\n        binary\
    \ = (decimal%2)+binary;\n        decimal = Math.floor(decimal/2);\n    }\n   \
    \ return \"db\"+binary+\"db\";\n}\n", "    let binary = \"\";\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return \"db\" + binary + \"db\";\n}\n", "    var binary =\
    \ \"\";\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n \
    \       decimal = Math.floor(decimal / 2);\n    }\n    return \"db\" + binary\
    \ + \"db\";\n}\n", "    var binary = \"\";\n    while(decimal > 0){\n        binary\
    \ = (decimal % 2) + binary;\n        decimal = Math.floor(decimal / 2);\n    }\n\
    \    return \"db\" + binary + \"db\";\n}\n", "    var binary = \"\";\n    while(decimal\
    \ > 0){\n        binary = (decimal % 2) + binary;\n        decimal = Math.floor(decimal\
    \ / 2);\n    }\n    return \"db\" + binary + \"db\";\n}\n", "    var binary =\
    \ \"\";\n    while(decimal > 0){\n        binary = (decimal % 2) + binary;\n \
    \       decimal = Math.floor(decimal / 2);\n    }\n    return \"db\" + binary\
    \ + \"db\";\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

language: js
name: HumanEval_20_find_closest_elements
results:
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp77oo4hs8.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp77oo4hs8.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var closest_difference = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var difference = Math.abs(numbers[i] - numbers[j]);\n   \
    \         if (difference < closest_difference){\n                closest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpje182eeq.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpje182eeq.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      min_pair = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return min_pair;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpxte5qz40.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxte5qz40.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = 0; j < numbers.length; j++){\n\
    \            if (i != j){\n                if (Math.abs(numbers[i] - numbers[j])\
    \ < min){\n                    min = Math.abs(numbers[i] - numbers[j]);\n    \
    \                closest = [numbers[i], numbers[j]];\n                }\n    \
    \        }\n        }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_xv4g6zz.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_xv4g6zz.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length - 1; i++){\n        if (Math.abs(numbers[i]\
    \ - numbers[i + 1]) < min){\n            min = Math.abs(numbers[i] - numbers[i\
    \ + 1]);\n            closest = [numbers[i], numbers[i + 1]];\n        }\n   \
    \ }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp3wrueghl.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3wrueghl.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var smallest = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < smallest){\n    \
    \            smallest = Math.abs(numbers[i] - numbers[j]);\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmptz8nxfsf.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmptz8nxfsf.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_1lawya5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_1lawya5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length - 1; i++){\n        for (var j = i + 1;\
    \ j < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp88pjo9x6.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp88pjo9x6.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var diff\
    \ = numbers[1] - numbers[0];\n    var closest = [numbers[0], numbers[1]];\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpes9rpdss.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpes9rpdss.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var smallestDiff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < smallestDiff){\n                smallestDiff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpeymd7qdn.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeymd7qdn.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var min_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < min_diff){\n                min_diff = diff;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp4yoaw4hg.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4yoaw4hg.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < min_diff){\n                min_diff = diff;\n       \
    \         min_pair = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return min_pair;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp6pi_5xd1.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6pi_5xd1.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var difference = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i+1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < difference){\n  \
    \              difference = Math.abs(numbers[i] - numbers[j]);\n             \
    \   closest[0] = numbers[i];\n                closest[1] = numbers[j];\n     \
    \       }\n        }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp6npb_ymf.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6npb_ymf.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = numbers[0];\n    var max = numbers[0];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min){\n            min = numbers[i];\n      \
    \  }\n        if(numbers[i] > max){\n            max = numbers[i];\n        }\n\
    \    }\n    var min_diff = max - min;\n    var min_num = min;\n    var max_num\
    \ = max;\n    for(var i = 0; i < numbers.length; i++){\n        for(var j = 0;\
    \ j < numbers.length; j++){\n            if(i != j){\n                if(Math.abs(numbers[i]\
    \ - numbers[j]) < min_diff){\n                    min_diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                    min_num = numbers[i];\n                \
    \    max_num = numbers[j];\n                }\n            }\n        }\n    }\n\
    \    return [min_num, max_num];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpptpk0883.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmpptpk0883.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length - 1; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                closest[0] =\
    \ numbers[i];\n                closest[1] = numbers[j];\n            }\n     \
    \   }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_g0fg2x4.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_g0fg2x4.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      result = [numbers[i], numbers[j]];\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpnq1pogbb.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnq1pogbb.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpm1rssct3.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm1rssct3.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        for (var j = i + 1; j\
    \ < numbers.length; j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp77oo4hs8.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp77oo4hs8.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ distance){\n                closest = [numbers[i], numbers[j]];\n          \
    \      distance = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp2w4_94cg.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2w4_94cg.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest[0] = numbers[i];\n\
    \                closest[1] = numbers[j];\n            }\n        }\n    }\n \
    \   return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp2jqwyrss.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2jqwyrss.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpm1rssct3.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm1rssct3.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_1lawya5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_1lawya5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      result = [numbers[i], numbers[j]];\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpnq1pogbb.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnq1pogbb.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = numbers[1] - numbers[0];\n    for (var i = 0; i < numbers.length\
    \ - 1; i++){\n        if (numbers[i+1] - numbers[i] < diff){\n            diff\
    \ = numbers[i+1] - numbers[i];\n            closest = [numbers[i], numbers[i+1]];\n\
    \        }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  2.2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpv6fka__l.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv6fka__l.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 2.2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    closest.push(numbers[0]);\n\
    \    closest.push(numbers[1]);\n    for(var i = 0; i < numbers.length; i++){\n\
    \        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < diff){\n                diff = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest[0] = numbers[i];\n                closest[1] = numbers[j];\n\
    \            }\n        }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpv7a3g41h.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv7a3g41h.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var difference = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < difference){\n  \
    \              difference = Math.abs(numbers[i] - numbers[j]);\n             \
    \   closest_elements = [numbers[i], numbers[j]];\n            }\n        }\n \
    \   }\n    return closest_elements;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpxmpgko2p.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxmpgko2p.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var smallestDiff = Math.abs(numbers[0] - numbers[1]);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if(diff < smallestDiff){\n                smallestDiff = diff;\n         \
    \       closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpx4xm4_1e.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx4xm4_1e.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var smallest = numbers[0];\n    var largest = numbers[0];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        if(numbers[i] < smallest){\n     \
    \       smallest = numbers[i];\n        }\n        if(numbers[i] > largest){\n\
    \            largest = numbers[i];\n        }\n    }\n    closest.push(smallest);\n\
    \    closest.push(largest);\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpi1invl0d.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi1invl0d.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpr3qm37fc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3qm37fc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_1lawya5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_1lawya5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var smallest_difference = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) < smallest_difference){\n\
    \                smallest_difference = Math.abs(numbers[i] - numbers[j]);\n  \
    \              closest_elements = [numbers[i], numbers[j]];\n            }\n \
    \       }\n    }\n    return closest_elements;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpkr4g_fvo.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkr4g_fvo.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    let min\
    \ = numbers[0] - numbers[1];\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++){\n        for (let j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpmwmr6qir.js:26:10)\n \
    \   at Object.<anonymous> (/tmp/tmpmwmr6qir.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i+1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpz8pn15kj.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz8pn15kj.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = numbers[0];\n    var max = numbers[0];\n    var min_index = 0;\n    var max_index\
    \ = 0;\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] <\
    \ min){\n            min = numbers[i];\n            min_index = i;\n        }\n\
    \        if(numbers[i] > max){\n            max = numbers[i];\n            max_index\
    \ = i;\n        }\n    }\n    var min_diff = max - min;\n    var min_diff_index\
    \ = [min_index, max_index];\n    for(var i = 0; i < numbers.length; i++){\n  \
    \      for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min_diff){\n                min_diff = Math.abs(numbers[i] -\
    \ numbers[j]);\n                min_diff_index = [i, j];\n            }\n    \
    \    }\n    }\n    return [numbers[min_diff_index[0]], numbers[min_diff_index[1]]];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpj1m35pg3.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj1m35pg3.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      result = [numbers[i], numbers[j]];\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpnq1pogbb.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnq1pogbb.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Number.MAX_VALUE;\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmps6nvmo_s.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmps6nvmo_s.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++) {\n        for\
    \ (var j = i + 1; j < numbers.length; j++) {\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest_elements = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpn5x1wxzm.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn5x1wxzm.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      result = [numbers[i], numbers[j]];\n            }\n        }\n    }\n \
    \   return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpnq1pogbb.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnq1pogbb.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    let closest\
    \ = [numbers[0], numbers[1]];\n    let closestDiff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length - 1; i++) {\n        for (let j = i +\
    \ 1; j < numbers.length; j++) {\n            let diff = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (diff < closestDiff) {\n                closestDiff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwq0m9114.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwq0m9114.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length - 1; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpb_n7ahur.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb_n7ahur.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest[0] = numbers[i];\n\
    \                closest[1] = numbers[j];\n            }\n        }\n    }\n \
    \   return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpujvxdv95.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpujvxdv95.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var smallest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var closest_elements = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < smallest_diff){\n                smallest_diff\
    \ = diff;\n                closest_elements = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_elements;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpemdbdzg8.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpemdbdzg8.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length - 1; i++){\n        if (Math.abs(numbers[i] - numbers[i+1])\
    \ < diff){\n            diff = Math.abs(numbers[i] - numbers[i+1]);\n        \
    \    closest = [numbers[i], numbers[i+1]];\n        }\n    }\n    return closest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpplrn3_6k.js:25:10)\n \
    \   at Object.<anonymous> (/tmp/tmpplrn3_6k.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length - 1; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpb_n7ahur.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb_n7ahur.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpr3qm37fc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3qm37fc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpm1rssct3.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm1rssct3.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = numbers[0];\n    var max = numbers[0];\n    var min_index = 0;\n    var max_index\
    \ = 0;\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] <\
    \ min){\n            min = numbers[i];\n            min_index = i;\n        }\n\
    \        if(numbers[i] > max){\n            max = numbers[i];\n            max_index\
    \ = i;\n        }\n    }\n    var min_diff = max - min;\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        for(var j = 0; j < numbers.length; j++){\n\
    \            if(i != j){\n                if(Math.abs(numbers[i] - numbers[j])\
    \ < min_diff){\n                    min_diff = Math.abs(numbers[i] - numbers[j]);\n\
    \                    min_index = i;\n                    max_index = j;\n    \
    \            }\n            }\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[max_index]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9ydon5rw.js:43:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9ydon5rw.js:49:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_1lawya5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_1lawya5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var smallestDiff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < smallestDiff){\n                smallestDiff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpeymd7qdn.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeymd7qdn.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < min_diff){\n                min_diff = diff;\n       \
    \         min_pair = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return min_pair;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp6pi_5xd1.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6pi_5xd1.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for\
    \ (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < closest_distance){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_distance\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp92url5fu.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp92url5fu.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length - 1; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpcz5c9c0i.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcz5c9c0i.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length - 1; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpmbucu8bj.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmbucu8bj.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_1lawya5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_1lawya5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_1lawya5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_1lawya5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = 0;\n    var min = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if(min === 0){\n         \
    \       min = diff;\n                closest[0] = numbers[i];\n              \
    \  closest[1] = numbers[j];\n            }\n            else if(diff < min){\n\
    \                min = diff;\n                closest[0] = numbers[i];\n     \
    \           closest[1] = numbers[j];\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpw4tmwjoo.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw4tmwjoo.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var smallest_difference = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var difference = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (difference < smallest_difference){\n                smallest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9x2a03jz.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9x2a03jz.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var smallest_difference = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var difference = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (difference < smallest_difference){\n                smallest_difference\
    \ = difference;\n                closest = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpdy4xsvmq.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdy4xsvmq.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance){\n            \
    \    closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpl678oewc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl678oewc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var difference = [];\n    var smallest = 0;\n    var index = 0;\n\
    \    for(var i = 0; i < numbers.length; i++){\n        for(var j = i+1; j < numbers.length;\
    \ j++){\n            difference.push(Math.abs(numbers[i] - numbers[j]));\n   \
    \     }\n    }\n    smallest = Math.min.apply(null, difference);\n    index =\
    \ difference.indexOf(smallest);\n    closest.push(numbers[index]);\n    closest.push(numbers[index+1]);\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  undefined\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmp2wie59_v.js:29:10)\n    at Object.<anonymous> (/tmp/tmp2wie59_v.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ undefined ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min_diff){\n    \
    \            min_diff = Math.abs(numbers[i] - numbers[j]);\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxhrmyt5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwxhrmyt5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpr3qm37fc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3qm37fc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    var\
    \ closest_index = 0;\n    for (var i = 0; i < numbers.length - 1; i++){\n    \
    \    var distance = Math.abs(numbers[i] - numbers[i + 1]);\n        if (distance\
    \ < closest_distance){\n            closest_distance = distance;\n           \
    \ closest_index = i;\n        }\n    }\n    closest_elements.push(numbers[closest_index]);\n\
    \    closest_elements.push(numbers[closest_index + 1]);\n    return closest_elements;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpi3fmv38j.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi3fmv38j.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n  var closest\
    \ = [];\n  var diff = Math.abs(numbers[0] - numbers[1]);\n  for (var i = 0; i\
    \ < numbers.length; i++){\n    for (var j = i + 1; j < numbers.length; j++){\n\
    \      if (Math.abs(numbers[i] - numbers[j]) < diff){\n        diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n        closest = [numbers[i], numbers[j]];\n      }\n    }\n\
    \  }\n  return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqc_qcpgz.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqc_qcpgz.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < min_diff){\n                min_diff = diff;\n       \
    \         min_pair = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return min_pair;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp6pi_5xd1.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6pi_5xd1.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var closest_difference = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var difference = Math.abs(numbers[i] - numbers[j]);\n   \
    \         if (difference < closest_difference){\n                closest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpje182eeq.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpje182eeq.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = numbers[0] - numbers[1];\n    var min_index = [0,1];\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            if(Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_index = [i,j];\n \
    \           }\n        }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpavoql34k.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpavoql34k.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var smallest_diff = numbers[1] - numbers[0];\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < smallest_diff){\n       \
    \         smallest_diff = Math.abs(numbers[i] - numbers[j]);\n               \
    \ closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpzbmuu43e.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzbmuu43e.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i+1; j <\
    \ numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpkwaliqo0.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkwaliqo0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance){\n            \
    \    closest_distance = distance;\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpl678oewc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl678oewc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length - 1; i++){\n        if (Math.abs(numbers[i]\
    \ - numbers[i + 1]) < min){\n            min = Math.abs(numbers[i] - numbers[i\
    \ + 1]);\n            result = [numbers[i], numbers[i + 1]];\n        }\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpu7pqo2bv.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu7pqo2bv.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i+1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpz8pn15kj.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz8pn15kj.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var index = 0;\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        if(Math.abs(numbers[i] - numbers[i+1]) <\
    \ min){\n            min = Math.abs(numbers[i] - numbers[i+1]);\n            index\
    \ = i;\n        }\n    }\n    return [numbers[index], numbers[index+1]];\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqcs20uat.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqcs20uat.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var min_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < min_diff){\n                min_diff = diff;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp4yoaw4hg.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4yoaw4hg.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpr3qm37fc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3qm37fc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpr3qm37fc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3qm37fc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var closest_elements = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < min_diff){\n                min_diff\
    \ = diff;\n                closest_elements = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_elements;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp8_ttq6ep.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8_ttq6ep.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_1lawya5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_1lawya5.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = 0;\n    for (var i\
    \ = 0; i < numbers.length - 1; i++){\n        var diff = Math.abs(numbers[i] -\
    \ numbers[i + 1]);\n        if (diff < min_diff){\n            min_diff = diff;\n\
    \            min_index = i;\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[min_index + 1]];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9b5mp1h4.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9b5mp1h4.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = [];\n    var min = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = 0; j < numbers.length; j++){\n            if(i !=\
    \ j){\n                diff.push(Math.abs(numbers[i] - numbers[j]));\n       \
    \     }\n        }\n    }\n    min = Math.min.apply(null, diff);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = 0; j < numbers.length;\
    \ j++){\n            if(i != j){\n                if(Math.abs(numbers[i] - numbers[j])\
    \ == min){\n                    closest.push(numbers[i]);\n                  \
    \  closest.push(numbers[j]);\n                }\n            }\n        }\n  \
    \  }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3.9,\n  4,\n\
    \  4,\n  3.9\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmp7d1yjlln.js:37:10)\n    at Object.<anonymous> (/tmp/tmp7d1yjlln.js:44:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3.9, 4,\
    \ 4, 3.9 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i+1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest[0] = numbers[i];\n\
    \                closest[1] = numbers[j];\n            }\n        }\n    }\n \
    \   return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp59tyv6da.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp59tyv6da.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var smallest = 0;\n    var largest = 0;\n    var difference = 0;\n\
    \    var smallest_difference = 0;\n    var largest_difference = 0;\n    var smallest_difference_index\
    \ = 0;\n    var largest_difference_index = 0;\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = 0; j < numbers.length; j++){\n            if (i\
    \ != j){\n                difference = Math.abs(numbers[i] - numbers[j]);\n  \
    \              if (difference < smallest_difference || smallest_difference ==\
    \ 0){\n                    smallest_difference = difference;\n               \
    \     smallest_difference_index = i;\n                    largest_difference_index\
    \ = j;\n                }\n            }\n        }\n    }\n    smallest = numbers[smallest_difference_index];\n\
    \    largest = numbers[largest_difference_index];\n    closest.push(smallest);\n\
    \    closest.push(largest);\n    return closest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpg8xddk9b.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg8xddk9b.js:47:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9e01jll2.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9e01jll2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpr3qm37fc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3qm37fc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for (var\
    \ i = 0; i < numbers.length - 1; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpmbucu8bj.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmbucu8bj.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = [];\n    var min = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = 0; j < numbers.length; j++){\n            if(i !=\
    \ j){\n                diff.push(Math.abs(numbers[i] - numbers[j]));\n       \
    \     }\n        }\n    }\n    min = Math.min.apply(null, diff);\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = 0; j < numbers.length;\
    \ j++){\n            if(i != j){\n                if(Math.abs(numbers[i] - numbers[j])\
    \ == min){\n                    closest.push(numbers[i]);\n                  \
    \  closest.push(numbers[j]);\n                }\n            }\n        }\n  \
    \  }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3.9,\n  4,\n\
    \  4,\n  3.9\n]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test\
    \ (/tmp/tmp7d1yjlln.js:37:10)\n    at Object.<anonymous> (/tmp/tmp7d1yjlln.js:44:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3.9, 4,\
    \ 4, 3.9 ],\n  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpilz5cgww.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpilz5cgww.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest_elements\
    \ = [];\n    var closest_difference = Math.abs(numbers[0] - numbers[1]);\n   \
    \ for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var difference = Math.abs(numbers[i] - numbers[j]);\n   \
    \         if (difference < closest_difference){\n                closest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpje182eeq.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpje182eeq.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpudiw85mv.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpudiw85mv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var min\
    \ = numbers[0];\n    var max = numbers[0];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] < min){\n            min = numbers[i];\n      \
    \  }\n        if(numbers[i] > max){\n            max = numbers[i];\n        }\n\
    \    }\n    return [min, max];\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmpx1yt47ff.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx1yt47ff.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest_diff = diff;\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp99qjryoc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp99qjryoc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp5qo3b8eh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qo3b8eh.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpr3qm37fc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr3qm37fc.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748733
- exit_code: 1
  program: "//From a supplied list of numbers (of length at least two) select and\
    \ return two that are the closest to each\n// other and return them in order (smaller\
    \ number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers){\n    var closest\
    \ = [];\n    var difference = 0;\n    var smallest = 0;\n    for(var i = 0; i\
    \ < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length; j++){\n\
    \            difference = Math.abs(numbers[i] - numbers[j]);\n            if(smallest\
    \ == 0 || difference < smallest){\n                smallest = difference;\n  \
    \              closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp1s8__r7s.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1s8__r7s.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748734

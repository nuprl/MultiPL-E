name: HumanEval_41_car_race_collision
language: js
prompt: "//Imagine a road that's a perfectly straight infinitely long line.\n// n\
  \ cars are driving left to right;  simultaneously, a different set of n cars\n//\
  \ are driving right to left.   The two sets of cars start out being very far from\n\
  // each other.  All cars move in the same speed.  Two cars are said to collide\n\
  // when a car that's moving left to right hits a car that's moving right to left.\n\
  // However, the cars are infinitely sturdy and strong; as a result, they continue\
  \ moving\n// in their trajectory as if they did not collide.\n// This function outputs\
  \ the number of such collisions.\nfunction car_race_collision(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
  \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
  }\n\ntest();"
completions: ["    var left = [];\n    var right = [];\n    var collisions = 0;\n\
    \    for(var i = 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n\
    \    }\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n\
    \            if(left[i] == right[j]){\n                collisions++;\n       \
    \     }\n        }\n    }\n    return collisions;\n}\n", "\t//TODO: Implement\
    \ this function\n\treturn 0;\n}\n", "    //TODO: implement this function\n   \
    \ return 0;\n}\n", "    //YOUR CODE HERE\n    return 0;\n}\n", "    // TODO: implement\
    \ this function\n    return 0;\n}\n", "    //TODO: implement this function\n \
    \   return 0;\n}\n", "    var count = 0;\n    for(var i = 0; i < n; i++){\n  \
    \      for(var j = 0; j < n; j++){\n            if(i < j){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n", "  //TODO: implement\
    \ this function\n}\n", "  var count = 0;\n  for(var i = 0; i < n; i++){\n    for(var\
    \ j = 0; j < n; j++){\n      if(i < j){\n        count++;\n      }\n    }\n  }\n\
    \  return count;\n}\n", "    //TODO: implement this function\n    return 0;\n\
    }\n", "  var left_to_right = [];\n  var right_to_left = [];\n  var collisions\
    \ = 0;\n  for(var i = 0; i < n; i++){\n    left_to_right.push(i);\n    right_to_left.push(i);\n\
    \  }\n  while(left_to_right.length > 0 && right_to_left.length > 0){\n    if(left_to_right[0]\
    \ === right_to_left[0]){\n      collisions++;\n      left_to_right.shift();\n\
    \      right_to_left.shift();\n    }\n    else if(left_to_right[0] < right_to_left[0]){\n\
    \      left_to_right.shift();\n    }\n    else{\n      right_to_left.shift();\n\
    \    }\n  }\n  return collisions;\n}\n", "  return n*(n-1)/2;\n}\n", "    //TODO:\
    \ implement this function\n    return 0;\n}\n", "  var count = 0;\n  for(var i\
    \ = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(i < j){\n     \
    \   count++;\n      }\n    }\n  }\n  return count;\n}\n", "    //TODO: Implement\
    \ this function\n    return 0;\n}\n", "  //TODO: Implement this function.\n  return\
    \ 0;\n}\n", "    return n*(n-1);\n}\n", "    var collisions = 0;\n    var left_to_right\
    \ = [];\n    var right_to_left = [];\n    for(var i = 0; i < n; i++){\n      \
    \  left_to_right.push(i);\n        right_to_left.push(i);\n    }\n    for(var\
    \ i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n            if(left_to_right[i]\
    \ === right_to_left[j]){\n                collisions++;\n            }\n     \
    \   }\n    }\n    return collisions;\n}\n", "    var collisions = 0;\n    var\
    \ left_to_right = [];\n    var right_to_left = [];\n    for(var i = 0; i < n;\
    \ i++){\n        left_to_right.push(i);\n        right_to_left.push(i);\n    }\n\
    \    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n      \
    \      if(left_to_right[i] == right_to_left[j]){\n                collisions++;\n\
    \            }\n        }\n    }\n    return collisions;\n}\n", "    return n*(n-1)/2;\n\
    }\n", "    //TODO: implement this function\n    return 0;\n}\n", "    return n\
    \ * (n - 1) / 2;\n}\n", "  var count = 0;\n  for(var i = 0; i < n; i++){\n   \
    \ for(var j = 0; j < n; j++){\n      count++;\n    }\n  }\n  return count;\n}\n",
  "    var left = [];\n    var right = [];\n    var collisions = 0;\n    for(var i\
    \ = 0; i < n; i++){\n        left.push(i);\n        right.push(n - i);\n    }\n\
    \    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n      \
    \      if(left[i] === right[j]){\n                collisions++;\n            }\n\
    \        }\n    }\n    return collisions;\n}\n", "    var num_collisions = 0;\n\
    \    var left_to_right = [];\n    var right_to_left = [];\n    for(var i = 0;\
    \ i < n; i++){\n        left_to_right.push(i);\n        right_to_left.push(i);\n\
    \    }\n    var left_to_right_index = 0;\n    var right_to_left_index = 0;\n \
    \   while(left_to_right_index < left_to_right.length && right_to_left_index <\
    \ right_to_left.length){\n        if(left_to_right[left_to_right_index] === right_to_left[right_to_left_index]){\n\
    \            num_collisions++;\n            left_to_right_index++;\n         \
    \   right_to_left_index++;\n        }\n        else if(left_to_right[left_to_right_index]\
    \ < right_to_left[right_to_left_index]){\n            left_to_right_index++;\n\
    \        }\n        else{\n            right_to_left_index++;\n        }\n   \
    \ }\n    return num_collisions;\n}\n", "    //TODO: Implement this function\n\
    \    return 0;\n}\n", "    var count = 0;\n    for(var i = 0; i < n; i++){\n \
    \       for(var j = 0; j < n; j++){\n            if(i == j){\n               \
    \ count++;\n            }\n        }\n    }\n    return count;\n}\n", "  var collisions\
    \ = 0;\n  var left = [];\n  var right = [];\n  for(var i = 0; i < n; i++){\n \
    \   left.push(i);\n    right.push(i);\n  }\n  for(var i = 0; i < n; i++){\n  \
    \  for(var j = 0; j < n; j++){\n      if(left[i] === right[j]){\n        collisions++;\n\
    \      }\n    }\n  }\n  return collisions;\n}\n", "    return n*(n-1)/2;\n}\n",
  "\tvar count = 0;\n\tfor(var i = 0; i < n; i++){\n\t\tfor(var j = 0; j < n; j++){\n\
    \t\t\tif(i < j){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n",
  "    return n*(n-1)/2;\n}\n", "    //TODO: implement this function\n    return 0;\n\
    }\n", "  let left = 0;\n  let right = 0;\n  let collisions = 0;\n  while(left\
    \ < n && right < n){\n    if(left === right){\n      collisions++;\n    }\n  \
    \  left++;\n    right++;\n  }\n  return collisions;\n}\n", "    //TODO: Implement\
    \ this function\n    return 0;\n}\n", "  var count = 0;\n  for(var i = 0; i <\
    \ n; i++){\n    for(var j = 0; j < n; j++){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "    return n*(n-1)/2;\n}\n", "    //TODO: implement this function\n\
    \    return 0;\n}\n", "    //TODO: Implement this function\n    return 0;\n}\n",
  "    //TODO: fill in the code here\n    return 0;\n}\n", "    //TODO\n    return\
    \ 0;\n}\n", "  //TODO: Implement this function.\n  return 0;\n}\n", "  //TODO:\
    \ Implement this function.\n  return 0;\n}\n", "    //TODO: implement this function\n\
    \    return 0;\n}\n", "    return n*(n-1)/2;\n}\n", "  //TODO: implement this\
    \ function\n}\n", "\treturn n*(n-1)/2;\n}\n", "    var count = 0;\n    for(var\
    \ i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  //TODO: Implement this function.\n\
    \  return n*(n-1)/2;\n}\n", "  //TODO: Implement this function\n  return 0;\n\
    }\n", "    //TODO: implement this function\n    return 0;\n}\n", "    var collisions\
    \ = 0;\n    var left_to_right = [];\n    var right_to_left = [];\n    for(var\
    \ i = 0; i < n; i++){\n        left_to_right.push(i);\n        right_to_left.push(i);\n\
    \    }\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n\
    \            if(left_to_right[i] === right_to_left[j]){\n                collisions++;\n\
    \            }\n        }\n    }\n    return collisions;\n}\n", "    // TODO:\
    \ implement this function\n    return 0;\n}\n", "    //TODO: implement this function\n\
    \    return 0;\n}\n", "    var count = 0;\n    for(var i = 0; i < n; i++){\n \
    \       for(var j = 0; j < n; j++){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "    //TODO: implement this function\n    return 0;\n\
    }\n", "  //TODO: Implement this function\n  return 0;\n}\n", "  var collisions\
    \ = 0;\n  var left_to_right = [];\n  var right_to_left = [];\n  for(var i = 0;\
    \ i < n; i++){\n    left_to_right.push(i);\n    right_to_left.push(n-i);\n  }\n\
    \  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(left_to_right[i]\
    \ == right_to_left[j]){\n        collisions++;\n      }\n    }\n  }\n  return\
    \ collisions;\n}\n", "    let left_to_right = [];\n    let right_to_left = [];\n\
    \    for(let i = 0; i < n; i++){\n        left_to_right.push(i);\n        right_to_left.push(i);\n\
    \    }\n    let count = 0;\n    while(left_to_right.length > 0 && right_to_left.length\
    \ > 0){\n        let left = left_to_right.shift();\n        let right = right_to_left.shift();\n\
    \        if(left === right){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "    var count = 0;\n    var left = [];\n    var right = [];\n\
    \    for(var i = 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n\
    \    }\n    while(left.length > 0 && right.length > 0){\n        if(left[0] ==\
    \ right[0]){\n            count++;\n            left.shift();\n            right.shift();\n\
    \        }\n        else if(left[0] < right[0]){\n            left.shift();\n\
    \        }\n        else{\n            right.shift();\n        }\n    }\n    return\
    \ count;\n}\n", "    //TODO\n}\n", "    var left_to_right = [];\n    var right_to_left\
    \ = [];\n    for(var i = 0; i < n; i++){\n        left_to_right.push(i);\n   \
    \     right_to_left.push(i);\n    }\n    var collision_count = 0;\n    while(left_to_right.length\
    \ > 0){\n        var left_car = left_to_right.shift();\n        var right_car\
    \ = right_to_left.pop();\n        if(left_car === right_car){\n            collision_count++;\n\
    \        }\n    }\n    return collision_count;\n}\n", "    //TODO:  Implement\
    \ this function.\n    return 0;\n}\n", "\tvar count = 0;\n\tfor(var i = 1; i <=\
    \ n; i++){\n\t\tfor(var j = 1; j <= n; j++){\n\t\t\tif(i == j){\n\t\t\t\tcontinue;\n\
    \t\t\t}\n\t\t\tif(i < j){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n\
    }\n", "    //TODO: Implement this function\n    return 0;\n}\n", "    //TODO:\
    \ Implement this function\n    return 0;\n}\n", "    //TODO: Write - Your - Code\n\
    \    return 0;\n}\n", "    var collisions = 0;\n    var left_to_right = [];\n\
    \    var right_to_left = [];\n    for(var i = 0; i < n; i++){\n        left_to_right.push(i);\n\
    \        right_to_left.push(n-i);\n    }\n    for(var i = 0; i < n; i++){\n  \
    \      for(var j = 0; j < n; j++){\n            if(left_to_right[i] == right_to_left[j]){\n\
    \                collisions++;\n            }\n        }\n    }\n    return collisions;\n\
    }\n", "    var left = [];\n    var right = [];\n    var collisions = 0;\n    for(var\
    \ i = 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n    }\n\
    \    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n      \
    \      if(left[i] === right[j]){\n                collisions++;\n            }\n\
    \        }\n    }\n    return collisions;\n}\n", "    var num_collisions = 0;\n\
    \    var left_to_right = [];\n    var right_to_left = [];\n    for(var i = 0;\
    \ i < n; i++){\n        left_to_right.push(i);\n        right_to_left.push(n-i);\n\
    \    }\n    var i = 0;\n    var j = 0;\n    while(i < n && j < n){\n        if(left_to_right[i]\
    \ < right_to_left[j]){\n            i++;\n        }\n        else if(left_to_right[i]\
    \ > right_to_left[j]){\n            j++;\n        }\n        else{\n         \
    \   num_collisions++;\n            i++;\n            j++;\n        }\n    }\n\
    \    return num_collisions;\n}\n", "    return n*(n-1)/2;\n}\n", "    //TODO:\
    \ implement this function\n    return 0;\n}\n", "    //TODO:  Implement this function\n\
    \    return 0;\n}\n", "    return n * (n - 1) / 2;\n}\n", "    //TODO: implement\
    \ this function\n    return 0;\n}\n", "    //TODO: write code here\n    return\
    \ 0;\n}\n", "  return n*(n-1)/2;\n}\n", "    //TODO: Implement this function.\n\
    \    return 0;\n}\n", "    var count = 0;\n    var left = [];\n    var right =\
    \ [];\n    for(var i = 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n\
    \    }\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n\
    \            if(left[i] === right[j]){\n                count++;\n           \
    \ }\n        }\n    }\n    return count;\n}\n", "\t//TODO: implement this function\n\
    \treturn 0;\n}\n", "    return n*(n-1)/2;\n}\n", "  //TODO\n}\n", "    //TODO:\
    \ Implement this function\n    // Hint:  You can use a helper function to make\
    \ this function easier to implement.\n    return 0;\n}\n", "    return n*(n-1)/2;\n\
    }\n", "    var cars = [];\n    var collisions = 0;\n    for(var i = 0; i < n;\
    \ i++){\n        cars.push(i);\n    }\n    for(var i = 0; i < n; i++){\n     \
    \   for(var j = 0; j < n; j++){\n            if(cars[i] > cars[j]){\n        \
    \        collisions++;\n            }\n        }\n    }\n    return collisions;\n\
    }\n", "    //TODO: implement this function\n    return 0;\n}\n", "    //YOUR CODE\
    \ HERE\n    return 0;\n}\n", "    //TODO: implement this function\n    return\
    \ 0;\n}\n", "    //TODO: implement this function\n    return 0;\n}\n", "    var\
    \ count = 0;\n    var left = [];\n    var right = [];\n    for(var i = 0; i <\
    \ n; i++){\n        left.push(i);\n        right.push(i);\n    }\n    for(var\
    \ i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n            if(left[i]\
    \ === right[j]){\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\n", "  return n*(n-1)/2;\n}\n", "    //TODO: Implement\n\
    \    return 0;\n}\n", "  //TODO: Implement this function.\n}\n", "    return n*(n-1)/2;\n\
    }\n", "  //TODO\n  //return 0;\n  var left = [];\n  var right = [];\n  var count\
    \ = 0;\n  for(var i = 0; i < n; i++){\n    left.push(i);\n    right.push(i);\n\
    \  }\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(left[i]\
    \ === right[j]){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n",
  "    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j <\
    \ n; j++){\n            if(i < j){\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\n", "  //TODO: Implement this function\n\
    \  return 0;\n}\n", "  return n * (n - 1) / 2;\n}\n", "  var count = 0;\n  for(var\
    \ i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(i < j){\n   \
    \     count++;\n      }\n    }\n  }\n  return count;\n}\n", "  var left_to_right\
    \ = [];\n  var right_to_left = [];\n  var collisions = 0;\n  for(var i = 0; i\
    \ < n; i++){\n    left_to_right.push(i);\n    right_to_left.push(i);\n  }\n  for(var\
    \ i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(left_to_right[i]\
    \ === right_to_left[j]){\n        collisions++;\n      }\n    }\n  }\n  return\
    \ collisions;\n}\n", "    //TODO: implement this function\n    return 0;\n}\n",
  "  //TODO: implement this function\n  return 0;\n}\n", "    return n*(n-1)/2;\n\
    }\n", "    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j\
    \ = 0; j < n; j++){\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "\t//TODO: Implement this function\n\t//return 0;\n\tvar count = 0;\n\t\
    for(var i = 0; i < n; i++){\n\t\tfor(var j = 0; j < n; j++){\n\t\t\tif(i == j){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n", "    //TODO: Implement\
    \ this function\n    return 0;\n}\n", "  //TODO: Implement this function\n  return\
    \ 0;\n}\n", "    //TODO: Implement this function.\n}\n", "    //TODO: implement\
    \ this function\n    return 0;\n}\n", "    var count = 0;\n    for(var i = 0;\
    \ i < n; i++){\n        for(var j = 0; j < n; j++){\n            if(i == j){\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n", "    //TODO: implement this function\n    return 0;\n}\n", "\treturn n*(n-1)/2;\n\
    }\n", "    //TODO: implement this function\n    return 0;\n}\n", "    //TODO:\
    \ implement this function\n    return 0;\n}\n", "  var left = [];\n  var right\
    \ = [];\n  var collision = 0;\n  for(var i = 0; i < n; i++){\n    left.push(i);\n\
    \    right.push(i);\n  }\n  for(var i = 0; i < n; i++){\n    if(left[i] === right[i]){\n\
    \      collision++;\n    }\n  }\n  return collision;\n}\n", "    //TODO\n    return\
    \ 0;\n}\n", "    var collisions = 0;\n    var left_to_right = [];\n    var right_to_left\
    \ = [];\n    for(var i = 0; i < n; i++){\n        left_to_right.push(i);\n   \
    \     right_to_left.push(n - i - 1);\n    }\n    for(var i = 0; i < n; i++){\n\
    \        for(var j = 0; j < n; j++){\n            if(left_to_right[i] === right_to_left[j]){\n\
    \                collisions++;\n            }\n        }\n    }\n    return collisions;\n\
    }\n", "    //TODO: write your code here\n    return 0;\n}\n", "  var count = 0;\n\
    \  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(i <\
    \ j){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n", "\treturn\
    \ n*(n-1)/2;\n}\n", "  return n*(n-1)/2;\n}\n", "    //TODO: Implement this function\n\
    \    return 0;\n}\n", "    //TODO: Implement this function\n    return 0;\n}\n",
  "    //TODO: Implement this function\n    return 0;\n}\n", "    //TODO: implement\
    \ this function\n    return 0;\n}\n", "    //TODO: Implement this function.\n\
    \    //Hint:  You can use a set to keep track of the cars that are moving right\
    \ to left.\n    //       You can use a hash table to keep track of the cars that\
    \ are moving left to right.\n    //       You can use a hash table to keep track\
    \ of the cars that are moving right to left.\n    //       You can use a hash\
    \ table to keep track of the cars that are moving left to right.\n    //     \
    \  You can use a hash table to keep track of the cars that are moving right to\
    \ left.\n    //       You can use a hash table to keep track of the cars that\
    \ are moving left to right.\n    //       You can use a hash table to keep track\
    \ of the cars that are moving right to left.\n    //       You can use a hash\
    \ table to keep track of the cars that are moving left to right.\n    //     \
    \  You can use a hash table to keep track of the cars that are moving right to\
    \ left.\n    //       You can use a hash table to keep track of the cars that\
    \ are moving left to right.\n    //       You can use a hash table to keep track\
    \ of the cars that are moving right to left.\n    //       You can use a hash\
    \ table to keep track of the cars that are moving left to right.\n    //     \
    \  You can use a hash table to keep track of the cars that are moving right to\
    \ left.\n    //       You can use a hash table to keep track of the cars that\
    \ are moving left to right.\n    //       You can use a hash table to keep track\
    \ of the cars that are moving right to left.\n    //       You can use a hash\
    \ table to keep track of the cars that are moving left to right.\n    //     \
    \  You can use a hash table to keep track of the cars that are moving right to\
    \ left.\n    //       You can use a hash table to keep track of the cars that\
    \ are moving left to right.\n    //       You can use a hash table to keep track\
    \ of the cars that are moving right to left.\n    //       You can use a hash\
    \ table to keep track of the cars that are moving left to right.\n    //     \
    \  You can use a hash table to keep track of the cars that are moving right to\
    \ left.\n    //       You can use a hash table to keep track of the cars", " \
    \ return n*(n-1)/2;\n}\n", "    return n*(n-1)/2;\n}\n", "    //TODO: Implement\
    \ this function\n    return 0;\n}\n", "  //TODO\n}\n", "    //TODO: implement\
    \ this function\n    return 0;\n}\n", "    //TODO: Implement this function\n \
    \   return 0;\n}\n", "    //TODO: implement this function\n}\n", "\tvar count\
    \ = 0;\n\tfor(var i = 0; i < n; i++){\n\t\tfor(var j = 0; j < n; j++){\n\t\t\t\
    count++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    //TODO\n}\n", "    var count\
    \ = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  // TODO:\
    \ your code here\n  return 0;\n}\n", "    var count = 0;\n    for(var i = 0; i\
    \ < n; i++){\n        for(var j = 0; j < n; j++){\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n", "  //TODO: Implement this function\n \
    \ return 0;\n}\n", "    var count = 0;\n    for(var i = 0; i < n; i++){\n    \
    \    for(var j = 0; j < n; j++){\n            if(i == j){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n", "  var count = 0;\n\
    \  var left = [];\n  var right = [];\n  for(var i = 0; i < n; i++){\n    left.push(i);\n\
    \    right.push(i);\n  }\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j\
    \ < n; j++){\n      if(left[i] === right[j]){\n        count++;\n      }\n   \
    \ }\n  }\n  return count;\n}\n", "    //TODO: implement this function\n}\n", " \
    \ //TODO: implement this function\n  return 0;\n}\n", "  //TODO: implement this\
    \ function\n  return 0;\n}\n", "  //TODO: Implement this function\n  return 0;\n\
    }\n", "    var left = [];\n    var right = [];\n    var collisions = 0;\n    for(var\
    \ i = 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n    }\n\
    \    while(left.length > 0){\n        var car = left.shift();\n        var index\
    \ = right.indexOf(car);\n        if(index > -1){\n            collisions++;\n\
    \            right.splice(index, 1);\n        }\n    }\n    return collisions;\n\
    }\n", "    //TODO:\n    return 0;\n}\n", "    return n*(n-1)/2;\n}\n", "  var\
    \ collisions = 0;\n  var left = [];\n  var right = [];\n  for(var i = 0; i < n;\
    \ i++){\n    left.push(i);\n    right.push(i);\n  }\n  for(var i = 0; i < n; i++){\n\
    \    for(var j = 0; j < n; j++){\n      if(left[i] === right[j]){\n        collisions++;\n\
    \      }\n    }\n  }\n  return collisions;\n}\n", "    //TODO: implement this\
    \ function\n    return 0;\n}\n", "  return (n * (n-1)) / 2;\n}\n", "  //TODO:\
    \ Implement this function\n}\n", "\treturn n*(n-1)/2;\n}\n", "    //TODO: implement\
    \ this function\n    return 0;\n}\n", "    //TODO: Implement this function\n \
    \   return 0;\n}\n", "  return n*(n-1)/2;\n}\n", "    return n*(n-1)/2;\n}\n",
  "    //TODO: Implement this function\n    return 0;\n}\n", "\tvar count = 0;\n\t\
    for(var i = 0; i < n; i++){\n\t\tfor(var j = 0; j < n; j++){\n\t\t\tif(i == j){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n", "    //TODO: implement\
    \ this function\n    return 0;\n}\n", "    //TODO: Implement this function\n \
    \   return 0;\n}\n", "    return n * (n - 1) / 2;\n}\n", "    return n*(n-1)/2;\n\
    }\n", "    var left_to_right = [];\n    var right_to_left = [];\n    for(var i\
    \ = 0; i < n; i++){\n        left_to_right.push(i);\n        right_to_left.push(i);\n\
    \    }\n    var collisions = 0;\n    while(left_to_right.length > 0 && right_to_left.length\
    \ > 0){\n        if(left_to_right[0] == right_to_left[0]){\n            collisions++;\n\
    \            left_to_right.shift();\n            right_to_left.shift();\n    \
    \    }\n        else if(left_to_right[0] < right_to_left[0]){\n            left_to_right.shift();\n\
    \        }\n        else{\n            right_to_left.shift();\n        }\n   \
    \ }\n    return collisions;\n}\n", "  //TODO\n}\n", "\tvar count = 0;\n\tfor(var\
    \ i = 0; i < n; i++){\n\t\tfor(var j = 0; j < n; j++){\n\t\t\tcount++;\n\t\t}\n\
    \t}\n\treturn count;\n}\n", "    //TODO: implement this function\n    return 0;\n\
    }\n", "    //TODO\n}\n", "    //TODO: implement this function\n    return 0;\n\
    }\n", "    //TODO: Implement this function\n    return 0;\n}\n", "    //TODO:\
    \ implement this function\n    return 0;\n}\n", "    var count = 0;\n    for(var\
    \ i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    //TODO: implement this function\n\
    \    return 0;\n}\n", "    var left = [];\n    var right = [];\n    for(var i\
    \ = 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n    }\n  \
    \  var collisions = 0;\n    while(left.length > 0 && right.length > 0){\n    \
    \    var left_car = left.shift();\n        var right_car = right.shift();\n  \
    \      if(left_car === right_car){\n            collisions++;\n        }\n   \
    \ }\n    return collisions;\n}\n", "\treturn n*(n-1)/2;\n}\n", "    var count\
    \ = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    //TODO:\
    \ implement this function\n    return 0;\n}\n", "    var left_to_right = [];\n\
    \    var right_to_left = [];\n    var collisions = 0;\n    for(var i = 0; i <\
    \ n; i++){\n        left_to_right.push(i);\n        right_to_left.push(n - i -\
    \ 1);\n    }\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n\
    \            if(left_to_right[i] == right_to_left[j]){\n                collisions++;\n\
    \            }\n        }\n    }\n    return collisions;\n}\n", "    //TODO: implement\
    \ this function\n    return 0;\n}\n", "    //TODO: Implement this function\n \
    \   return 0;\n}\n", "    return n*(n-1)/2;\n}\n", "    //TODO: implement this\
    \ function\n    return 0;\n}\n", "    //TODO: implement this function\n}\n", " \
    \ //TODO: Implement this function\n  return 0;\n}\n", "    //TODO: implement this\
    \ function\n    return 0;\n}\n", "  //TODO: implement this function\n  var collisions\
    \ = 0;\n  var leftToRight = [];\n  var rightToLeft = [];\n  for (var i = 0; i\
    \ < n; i++) {\n    leftToRight.push(i);\n    rightToLeft.push(i);\n  }\n  for\
    \ (var i = 0; i < n; i++) {\n    for (var j = 0; j < n; j++) {\n      if (leftToRight[i]\
    \ === rightToLeft[j]) {\n        collisions++;\n      }\n    }\n  }\n  return\
    \ collisions;\n}\n", "  return n*(n-1)/2;\n}\n", "    //TODO: implement this function\n\
    \    return 0;\n}\n", "    //TODO: Implement this function\n    return 0;\n}\n",
  "    //TODO: implement this function\n    var collisions = 0;\n    var left = [];\n\
    \    var right = [];\n    for (var i = 0; i < n; i++) {\n        left.push(i);\n\
    \        right.push(i);\n    }\n    for (var i = 0; i < n; i++) {\n        for\
    \ (var j = 0; j < n; j++) {\n            if (left[i] == right[j]) {\n        \
    \        collisions++;\n            }\n        }\n    }\n    return collisions;\n\
    }\n", "    //TODO: Implement this function\n    return 0;\n}\n", "    //TODO:\
    \ implement this function\n    return 0;\n}\n", "    return n * (n - 1) / 2;\n\
    }\n", "    //TODO: implement this function\n    //Hint: you may want to use a\
    \ helper function\n    var cars = [];\n    var collisions = 0;\n    for (var i\
    \ = 0; i < n; i++) {\n        cars.push(i);\n    }\n    for (var i = 0; i < n;\
    \ i++) {\n        for (var j = 0; j < n; j++) {\n            if (cars[i] == cars[j])\
    \ {\n                collisions++;\n            }\n        }\n    }\n    return\
    \ collisions;\n}\n", "    //TODO: implement this function\n    return 0;\n}\n",
  "    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j <\
    \ n; j++){\n            if(i < j){\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\n", "    var count = 0;\n    for(var i\
    \ = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    var count = 0;\n    var left\
    \ = [];\n    var right = [];\n    for(var i = 0; i < n; i++){\n        left.push(i);\n\
    \        right.push(i);\n    }\n    while(left.length > 0 && right.length > 0){\n\
    \        if(left[0] === right[0]){\n            count++;\n            left.shift();\n\
    \            right.shift();\n        }\n        else if(left[0] < right[0]){\n\
    \            left.shift();\n        }\n        else{\n            right.shift();\n\
    \        }\n    }\n    return count;\n}\n", "    // TODO: implement this function\n\
    \    return 0;\n}\n", "    //TODO\n    return 0;\n}\n", "    //TODO: implement\
    \ this function\n    return 0;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

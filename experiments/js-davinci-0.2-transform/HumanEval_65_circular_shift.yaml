name: HumanEval_65_circular_shift
language: js
prompt: "//Circular shift the digits of the integer x, shift the digits right by shift\n\
  // and return the result as a string.\n// If shift > number of digits, return digits\
  \ reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12,\
  \ 2)\n// \"12\"\nfunction circular_shift(x, shift){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = circular_shift;\n  assert.deepEqual(candidate(100, 2),\"001\");\n  assert.deepEqual(candidate(12,\
  \ 2),\"12\");\n  assert.deepEqual(candidate(97, 8),\"79\");\n  assert.deepEqual(candidate(12,\
  \ 1),\"21\");\n  assert.deepEqual(candidate(11, 101),\"11\");\n}\n\ntest();"
completions: ["    var str = x.toString();\n    var str_len = str.length;\n    var\
    \ shift_len = shift % str_len;\n    var str_shift = str.substring(shift_len, str_len)\
    \ + str.substring(0, shift_len);\n    return str_shift;\n}\n", "    var str =\
    \ x.toString();\n    var result = \"\";\n    if(shift > str.length){\n       \
    \ for(var i = str.length - 1; i >= 0; i--){\n            result += str[i];\n \
    \       }\n    }\n    else{\n        for(var i = shift; i < str.length; i++){\n\
    \            result += str[i];\n        }\n        for(var i = 0; i < shift; i++){\n\
    \            result += str[i];\n        }\n    }\n    return result;\n}\n", " \
    \   var str = x.toString();\n    var len = str.length;\n    var shift = shift\
    \ % len;\n    var res = str.substring(shift) + str.substring(0, shift);\n    return\
    \ res;\n}\n", "    var x_str = x.toString();\n    var x_len = x_str.length;\n\
    \    var shift_str = \"\";\n    if (shift > x_len){\n        for (var i = x_len\
    \ - 1; i >= 0; i--){\n            shift_str += x_str[i];\n        }\n    }\n \
    \   else{\n        for (var i = x_len - shift; i < x_len; i++){\n            shift_str\
    \ += x_str[i];\n        }\n        for (var i = 0; i < x_len - shift; i++){\n\
    \            shift_str += x_str[i];\n        }\n    }\n    return shift_str;\n\
    }\n", "    var x_str = x.toString();\n    var x_len = x_str.length;\n    var shift_str\
    \ = \"\";\n    if (shift > x_len){\n        for (var i = x_len - 1; i >= 0; i--){\n\
    \            shift_str += x_str[i];\n        }\n    } else {\n        for (var\
    \ i = x_len - shift; i < x_len; i++){\n            shift_str += x_str[i];\n  \
    \      }\n        for (var i = 0; i < x_len - shift; i++){\n            shift_str\
    \ += x_str[i];\n        }\n    }\n    return shift_str;\n}\n", "\tvar str = x.toString();\n\
    \tvar len = str.length;\n\tif(shift > len){\n\t\treturn str.split(\"\").reverse().join(\"\
    \");\n\t}\n\tvar first = str.substring(0, shift);\n\tvar last = str.substring(shift,\
    \ len);\n\treturn last + first;\n}\n", "    var str = x.toString();\n    var len\
    \ = str.length;\n    var shift = shift % len;\n    var result = str.substring(len\
    \ - shift, len) + str.substring(0, len - shift);\n    return result;\n}\n", " \
    \   var x_str = x.toString();\n    var x_str_len = x_str.length;\n    if (shift\
    \ > x_str_len){\n        return x_str.split(\"\").reverse().join(\"\");\n    }\n\
    \    var x_str_shift = x_str.slice(x_str_len - shift);\n    var x_str_remain =\
    \ x_str.slice(0, x_str_len - shift);\n    return x_str_shift + x_str_remain;\n\
    }\n", "    var str = x.toString();\n    var len = str.length;\n    var shift_len\
    \ = shift % len;\n    var result = str.substring(shift_len, len) + str.substring(0,\
    \ shift_len);\n    return result;\n}\n", "    var s = x.toString();\n    var l\
    \ = s.length;\n    if (shift > l) {\n        return s.split(\"\").reverse().join(\"\
    \");\n    }\n    var r = s.substring(l - shift, l);\n    var f = s.substring(0,\
    \ l - shift);\n    return r + f;\n}\n", "  var str = x.toString();\n  var len\
    \ = str.length;\n  if (shift > len){\n    return str.split(\"\").reverse().join(\"\
    \");\n  }\n  else{\n    var first = str.slice(0, shift);\n    var second = str.slice(shift,\
    \ len);\n    return second + first;\n  }\n}\n", "    var str = x.toString();\n\
    \    var len = str.length;\n    var shift = shift % len;\n    var result = str.substring(shift,\
    \ len) + str.substring(0, shift);\n    return result;\n}\n", "    var str = x.toString();\n\
    \    var len = str.length;\n    var shift_len = shift % len;\n    var result =\
    \ str.substring(shift_len, len) + str.substring(0, shift_len);\n    return result;\n\
    }\n", "    var str = x.toString();\n    var len = str.length;\n    if (shift >\
    \ len){\n        return str.split(\"\").reverse().join(\"\");\n    }\n    return\
    \ str.substring(len - shift) + str.substring(0, len - shift);\n}\n", "    var\
    \ str = x.toString();\n    var len = str.length;\n    if (shift > len){\n    \
    \    return str.split(\"\").reverse().join(\"\");\n    }\n    var first = str.slice(0,\
    \ shift);\n    var second = str.slice(shift, len);\n    return second + first;\n\
    }\n", "    var x_str = x.toString();\n    var x_len = x_str.length;\n    var x_shift\
    \ = shift % x_len;\n    var x_shift_str = x_str.slice(x_shift) + x_str.slice(0,\
    \ x_shift);\n    return x_shift_str;\n}\n", "    var str = x.toString();\n   \
    \ var len = str.length;\n    var shift_str = str.slice(len - shift, len) + str.slice(0,\
    \ len - shift);\n    return shift_str;\n}\n", "    var str = x.toString();\n \
    \   var result = \"\";\n    var i = 0;\n    if(shift > str.length){\n        for(i\
    \ = str.length - 1; i >= 0; i--){\n            result += str[i];\n        }\n\
    \    }\n    else{\n        result = str.substring(shift, str.length) + str.substring(0,\
    \ shift);\n    }\n    return result;\n}\n", "    var str = x.toString();\n   \
    \ var len = str.length;\n    var result = \"\";\n    if(shift > len){\n      \
    \  for(var i = len - 1; i >= 0; i--){\n            result += str[i];\n       \
    \ }\n    }\n    else{\n        for(var i = len - 1; i >= len - shift; i--){\n\
    \            result += str[i];\n        }\n        for(var i = 0; i < len - shift;\
    \ i++){\n            result += str[i];\n        }\n    }\n    return result;\n\
    }\n", "    var str = x.toString();\n    var len = str.length;\n    var shift =\
    \ shift % len;\n    var result = str.substring(len - shift, len) + str.substring(0,\
    \ len - shift);\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_130_tri
language: js
prompt: "//Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n// the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n// Tribonacci sequence is defined by the recurrence:\n// tri(1) = 3\n\
  // tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) + tri(n - 2) + tri(n\
  \ + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 / 2) = 2\n// tri(4) =\
  \ 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3 = 8 \n// You are given\
  \ a non-negative integer number n, you have to a return a list of the \n// first\
  \ n + 1 numbers of the Tribonacci sequence.\n// Examples:\n// >>> tri(3)\n// [1,\
  \ 3, 2, 8]\nfunction tri(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = tri;\n  assert.deepEqual(candidate(3),[1, 3, 2, 8]);\n  assert.deepEqual(candidate(4),[1,\
  \ 3, 2, 8, 3]);\n  assert.deepEqual(candidate(5),[1, 3, 2, 8, 3, 15]);\n  assert.deepEqual(candidate(6),[1,\
  \ 3, 2, 8, 3, 15, 4]);\n  assert.deepEqual(candidate(7),[1, 3, 2, 8, 3, 15, 4, 24]);\n\
  \  assert.deepEqual(candidate(8),[1, 3, 2, 8, 3, 15, 4, 24, 5]);\n  assert.deepEqual(candidate(9),[1,\
  \ 3, 2, 8, 3, 15, 4, 24, 5, 35]);\n  assert.deepEqual(candidate(20),[1, 3, 2, 8,\
  \ 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11]);\n  assert.deepEqual(candidate(0),[1]);\n\
  \  assert.deepEqual(candidate(1),[1, 3]);\n}\n\ntest();"
completions: ["  if (n === 0) {\n    return [1];\n  } else if (n === 1) {\n    return\
    \ [1, 3];\n  } else if (n === 2) {\n    return [1, 3, 2];\n  } else {\n    let\
    \ arr = [1, 3, 2];\n    for (let i = 3; i <= n; i++) {\n      if (i % 2 === 0)\
    \ {\n        arr.push(1 + i / 2);\n      } else {\n        arr.push(arr[i - 1]\
    \ + arr[i - 2] + arr[i + 1]);\n      }\n    }\n    return arr;\n  }\n}\n", " \
    \ let arr = [1, 3, 2];\n  if (n === 0) {\n    return [1];\n  } else if (n ===\
    \ 1) {\n    return [1, 3];\n  } else if (n === 2) {\n    return [1, 3, 2];\n \
    \ } else {\n    for (let i = 3; i <= n; i++) {\n      if (i % 2 === 0) {\n   \
    \     arr.push(1 + i / 2);\n      } else {\n        arr.push(arr[i - 1] + arr[i\
    \ - 2] + arr[i + 1]);\n      }\n    }\n  }\n  return arr;\n}\n", "    let arr\
    \ = [1, 3, 2];\n    if (n === 0) {\n        return [1];\n    } else if (n ===\
    \ 1) {\n        return [1, 3];\n    } else if (n === 2) {\n        return [1,\
    \ 3, 2];\n    } else {\n        for (let i = 3; i <= n; i++) {\n            if\
    \ (i % 2 === 0) {\n                arr.push(1 + i / 2);\n            } else {\n\
    \                arr.push(arr[i - 1] + arr[i - 2] + arr[i + 1]);\n           \
    \ }\n        }\n    }\n    return arr;\n}\n", "  let arr = [1, 3, 2];\n  if (n\
    \ === 0) {\n    return [1];\n  } else if (n === 1) {\n    return [1, 3];\n  }\
    \ else if (n === 2) {\n    return [1, 3, 2];\n  } else {\n    for (let i = 3;\
    \ i <= n; i++) {\n      if (i % 2 === 0) {\n        arr.push(1 + i / 2);\n   \
    \   } else {\n        arr.push(arr[i - 1] + arr[i - 2] + arr[i + 1]);\n      }\n\
    \    }\n  }\n  return arr;\n}\n", "  let arr = [1, 3, 2];\n  for (let i = 3; i\
    \ <= n; i++) {\n    if (i % 2 === 0) {\n      arr.push(1 + i / 2);\n    } else\
    \ {\n      arr.push(arr[i - 1] + arr[i - 2] + arr[i + 1]);\n    }\n  }\n  return\
    \ arr;\n}\n", "  let arr = [1, 3, 2];\n  for (let i = 3; i <= n; i++) {\n    if\
    \ (i % 2 === 0) {\n      arr.push(1 + i / 2);\n    } else {\n      arr.push(arr[i\
    \ - 1] + arr[i - 2] + arr[i + 1]);\n    }\n  }\n  return arr;\n}\n", "  let arr\
    \ = [1, 3, 2];\n  for (let i = 3; i <= n; i++) {\n    if (i % 2 === 0) {\n   \
    \   arr.push(1 + i / 2);\n    } else {\n      arr.push(arr[i - 1] + arr[i - 2]\
    \ + arr[i + 1]);\n    }\n  }\n  return arr;\n}\n", "  var arr = [1, 3, 2];\n \
    \ for (var i = 3; i <= n; i++) {\n    if (i % 2 === 0) {\n      arr.push(1 + i\
    \ / 2);\n    } else {\n      arr.push(arr[i - 1] + arr[i - 2] + arr[i + 1]);\n\
    \    }\n  }\n  return arr;\n}\n", "  var arr = [1, 3, 2];\n  for (var i = 3; i\
    \ <= n; i++) {\n    if (i % 2 === 0) {\n      arr.push(1 + i / 2);\n    } else\
    \ {\n      arr.push(arr[i - 1] + arr[i - 2] + arr[i + 1]);\n    }\n  }\n  return\
    \ arr;\n}\n", "    let arr = [1, 3, 2];\n    for(let i = 3; i <= n; i++){\n  \
    \      if(i % 2 === 0){\n            arr.push(1 + i / 2);\n        } else {\n\
    \            arr.push(arr[i - 1] + arr[i - 2] + arr[i + 1]);\n        }\n    }\n\
    \    return arr;\n}\n", "  var tri = [1, 3, 2];\n  for (var i = 3; i <= n; i++)\
    \ {\n    if (i % 2 === 0) {\n      tri.push(1 + i / 2);\n    } else {\n      tri.push(tri[i\
    \ - 1] + tri[i - 2] + tri[i + 1]);\n    }\n  }\n  return tri;\n}\n", "  let arr\
    \ = [1, 3, 2];\n  if (n === 0) {\n    return [1];\n  } else if (n === 1) {\n \
    \   return [1, 3];\n  } else if (n === 2) {\n    return [1, 3, 2];\n  } else {\n\
    \    for (let i = 3; i <= n; i++) {\n      if (i % 2 === 0) {\n        arr.push(1\
    \ + i / 2);\n      } else {\n        arr.push(arr[i - 1] + arr[i - 2] + arr[i\
    \ + 1]);\n      }\n    }\n  }\n  return arr;\n}\n", "    let arr = [1, 3, 2];\n\
    \    if (n === 0) {\n        return [1];\n    } else if (n === 1) {\n        return\
    \ [1, 3];\n    } else if (n === 2) {\n        return [1, 3, 2];\n    } else {\n\
    \        for (let i = 3; i <= n; i++) {\n            if (i % 2 === 0) {\n    \
    \            arr.push(1 + i / 2);\n            } else {\n                arr.push(arr[i\
    \ - 1] + arr[i - 2] + arr[i + 1]);\n            }\n        }\n    }\n    return\
    \ arr;\n}\n", "  let arr = [1, 3, 2];\n  for (let i = 3; i <= n; i++) {\n    if\
    \ (i % 2 === 0) {\n      arr.push(1 + i / 2);\n    } else {\n      arr.push(arr[i\
    \ - 1] + arr[i - 2] + arr[i + 1]);\n    }\n  }\n  return arr;\n}\n", "  let arr\
    \ = [1, 3, 2];\n  for (let i = 3; i <= n; i++) {\n    if (i % 2 === 0) {\n   \
    \   arr.push(1 + i / 2);\n    } else {\n      arr.push(arr[i - 1] + arr[i - 2]\
    \ + arr[i + 1]);\n    }\n  }\n  return arr;\n}\n", "  if (n === 0) {\n    return\
    \ [1];\n  } else if (n === 1) {\n    return [1, 3];\n  } else if (n === 2) {\n\
    \    return [1, 3, 2];\n  } else {\n    let arr = [1, 3, 2];\n    for (let i =\
    \ 3; i <= n; i++) {\n      if (i % 2 === 0) {\n        arr.push(1 + i / 2);\n\
    \      } else {\n        arr.push(arr[i - 1] + arr[i - 2] + arr[i + 1]);\n   \
    \   }\n    }\n    return arr;\n  }\n}\n", "  if (n === 0) {\n    return [];\n\
    \  } else if (n === 1) {\n    return [1];\n  } else if (n === 2) {\n    return\
    \ [1, 3];\n  } else if (n === 3) {\n    return [1, 3, 2];\n  } else {\n    var\
    \ arr = [1, 3, 2];\n    for (var i = 3; i < n; i++) {\n      if (i % 2 === 0)\
    \ {\n        arr.push(1 + i / 2);\n      } else {\n        arr.push(arr[i - 1]\
    \ + arr[i - 2] + arr[i + 1]);\n      }\n    }\n    return arr;\n  }\n}\n", " \
    \ let arr = [1, 3, 2];\n  if (n === 0) {\n    return [1];\n  } else if (n ===\
    \ 1) {\n    return [1, 3];\n  } else if (n === 2) {\n    return [1, 3, 2];\n \
    \ } else {\n    for (let i = 3; i <= n; i++) {\n      if (i % 2 === 0) {\n   \
    \     arr.push(1 + i / 2);\n      } else {\n        arr.push(arr[i - 1] + arr[i\
    \ - 2] + arr[i + 1]);\n      }\n    }\n  }\n  return arr;\n}\n", "    let tribonacci\
    \ = [1, 3, 2];\n    if (n === 0) {\n        return [1];\n    }\n    if (n ===\
    \ 1) {\n        return [1, 3];\n    }\n    if (n === 2) {\n        return [1,\
    \ 3, 2];\n    }\n    for (let i = 3; i <= n; i++) {\n        if (i % 2 === 0)\
    \ {\n            tribonacci.push(1 + i / 2);\n        } else {\n            tribonacci.push(tribonacci[i\
    \ - 1] + tribonacci[i - 2] + tribonacci[i + 1]);\n        }\n    }\n    return\
    \ tribonacci;\n}\n", "  let arr = [1, 3, 2];\n  if (n === 0) {\n    return [1];\n\
    \  } else if (n === 1) {\n    return [1, 3];\n  } else if (n === 2) {\n    return\
    \ [1, 3, 2];\n  } else {\n    for (let i = 3; i <= n; i++) {\n      if (i % 2\
    \ === 0) {\n        arr.push(1 + i / 2);\n      } else {\n        arr.push(arr[i\
    \ - 1] + arr[i - 2] + arr[i + 1]);\n      }\n    }\n  }\n  return arr;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

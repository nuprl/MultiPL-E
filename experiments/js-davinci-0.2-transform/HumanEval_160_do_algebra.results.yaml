language: js
name: HumanEval_160_do_algebra
results:
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpwtm9lda5.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwtm9lda5.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    var result = operand[0];\n    for(var i = 0; i < operator.length; i++){\n\
    \        if(operator[i] == '+'){\n            result += operand[i+1];\n      \
    \  }\n        if(operator[i] == '-'){\n            result -= operand[i+1];\n \
    \       }\n        if(operator[i] == '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] == '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] == '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmppv0pdwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppv0pdwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   switch (operator[i]) {\n      case '+':\n        result += operand[i + 1];\n\
    \        break;\n      case '-':\n        result -= operand[i + 1];\n        break;\n\
    \      case '*':\n        result *= operand[i + 1];\n        break;\n      case\
    \ '//':\n        result = Math.floor(result / operand[i + 1]);\n        break;\n\
    \      case '**':\n        result = Math.pow(result, operand[i + 1]);\n      \
    \  break;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpovatlve1.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpovatlve1.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    var result = operand[0];\n    for(var i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpu73sv2zx.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu73sv2zx.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    //coding and coding..\n    let result = operand[0];\n    for (let i = 0;\
    \ i < operator.length; i++) {\n        if (operator[i] === '+') {\n          \
    \  result += operand[i + 1];\n        } else if (operator[i] === '-') {\n    \
    \        result -= operand[i + 1];\n        } else if (operator[i] === '*') {\n\
    \            result *= operand[i + 1];\n        } else if (operator[i] === '//')\
    \ {\n            result = Math.floor(result / operand[i + 1]);\n        } else\
    \ if (operator[i] === '**') {\n            result = Math.pow(result, operand[i\
    \ + 1]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpd7xl37a7.js:44:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd7xl37a7.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   switch (operator[i]) {\n      case '+':\n        result += operand[i + 1];\n\
    \        break;\n      case '-':\n        result -= operand[i + 1];\n        break;\n\
    \      case '*':\n        result *= operand[i + 1];\n        break;\n      case\
    \ '//':\n        result = Math.floor(result / operand[i + 1]);\n        break;\n\
    \      case '**':\n        result = Math.pow(result, operand[i + 1]);\n      \
    \  break;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpovatlve1.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpovatlve1.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    var result = operand[0];\n    for(var i = 0; i < operator.length; i++){\n\
    \        if(operator[i] == '+'){\n            result += operand[i+1];\n      \
    \  }\n        if(operator[i] == '-'){\n            result -= operand[i+1];\n \
    \       }\n        if(operator[i] == '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] == '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] == '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmppv0pdwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppv0pdwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpqn10w6h0.js:46:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqn10w6h0.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   switch (operator[i]) {\n      case '+':\n        result += operand[i + 1];\n\
    \        break;\n      case '-':\n        result -= operand[i + 1];\n        break;\n\
    \      case '*':\n        result *= operand[i + 1];\n        break;\n      case\
    \ '//':\n        result = Math.floor(result / operand[i + 1]);\n        break;\n\
    \      case '**':\n        result = Math.pow(result, operand[i + 1]);\n      \
    \  break;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpovatlve1.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpovatlve1.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpqn10w6h0.js:46:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqn10w6h0.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpa0xeaqtd.js:48:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa0xeaqtd.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpa0xeaqtd.js:48:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa0xeaqtd.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpqn10w6h0.js:46:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqn10w6h0.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    var result = operand[0];\n    for(var i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpu73sv2zx.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu73sv2zx.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpqn10w6h0.js:46:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqn10w6h0.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    var result = operand[0];\n    for(var i = 0; i < operator.length; i++){\n\
    \        if(operator[i] == '+'){\n            result += operand[i+1];\n      \
    \  }\n        if(operator[i] == '-'){\n            result -= operand[i+1];\n \
    \       }\n        if(operator[i] == '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] == '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] == '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmppv0pdwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppv0pdwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   switch (operator[i]) {\n      case '+':\n        result += operand[i + 1];\n\
    \        break;\n      case '-':\n        result -= operand[i + 1];\n        break;\n\
    \      case '*':\n        result *= operand[i + 1];\n        break;\n      case\
    \ '//':\n        result = Math.floor(result / operand[i + 1]);\n        break;\n\
    \      case '**':\n        result = Math.pow(result, operand[i + 1]);\n      \
    \  break;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpovatlve1.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpovatlve1.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   switch (operator[i]) {\n      case '+':\n        result += operand[i + 1];\n\
    \        break;\n      case '-':\n        result -= operand[i + 1];\n        break;\n\
    \      case '*':\n        result *= operand[i + 1];\n        break;\n      case\
    \ '//':\n        result = Math.floor(result / operand[i + 1]);\n        break;\n\
    \      case '**':\n        result = Math.pow(result, operand[i + 1]);\n      \
    \  break;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpovatlve1.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpovatlve1.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \tvar result = operand[0];\n\tfor(var i = 0; i < operator.length; i++){\n\t\t\
    if(operator[i] == '+'){\n\t\t\tresult += operand[i+1];\n\t\t}\n\t\telse if(operator[i]\
    \ == '-'){\n\t\t\tresult -= operand[i+1];\n\t\t}\n\t\telse if(operator[i] == '*'){\n\
    \t\t\tresult *= operand[i+1];\n\t\t}\n\t\telse if(operator[i] == '//'){\n\t\t\t\
    result = Math.floor(result / operand[i+1]);\n\t\t}\n\t\telse if(operator[i] ==\
    \ '**'){\n\t\t\tresult = Math.pow(result, operand[i+1]);\n\t\t}\n\t}\n\treturn\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"\
    +\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"],\
    \ [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp67zyag_l.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp67zyag_l.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \  let result = operand[0];\n  for (let i = 0; i < operator.length; i++) {\n \
    \   if (operator[i] === '+') {\n      result += operand[i + 1];\n    } else if\
    \ (operator[i] === '-') {\n      result -= operand[i + 1];\n    } else if (operator[i]\
    \ === '*') {\n      result *= operand[i + 1];\n    } else if (operator[i] ===\
    \ '//') {\n      result = Math.floor(result / operand[i + 1]);\n    } else if\
    \ (operator[i] === '**') {\n      result = Math.pow(result, operand[i + 1]);\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"\
    **\", \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\",\
    \ \"*\", \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"\
    ], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp7qf9wgr7.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qf9wgr7.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpqn10w6h0.js:46:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqn10w6h0.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659746579
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }else if(operator[i] === '-'){\n            result -= operand[i+1];\n    \
    \    }else if(operator[i] === '*'){\n            result *= operand[i+1];\n   \
    \     }else if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }else if(operator[i] === '**'){\n            result\
    \ = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmp1txrdv77.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1txrdv77.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        if(operator[i] === '+'){\n            result += operand[i+1];\n     \
    \   }\n        if(operator[i] === '-'){\n            result -= operand[i+1];\n\
    \        }\n        if(operator[i] === '*'){\n            result *= operand[i+1];\n\
    \        }\n        if(operator[i] === '//'){\n            result = Math.floor(result\
    \ / operand[i+1]);\n        }\n        if(operator[i] === '**'){\n           \
    \ result = Math.pow(result, operand[i+1]);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmplfb3hwlm.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplfb3hwlm.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given two lists operator, and operand. The first list has basic algebra\
    \ operations, and \n// the second list is a list of integers. Use the two given\
    \ lists to build the algebric \n// expression and return the evaluation of this\
    \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
    \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
    \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n\
    // result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
    \ list is equal to the length of operand list minus one.\n// Operand is a list\
    \ of of non-negative integers.\n// Operator list has at least one operator, and\
    \ operand list has at least two operands.\nfunction do_algebra(operator, operand){\n\
    \    let result = operand[0];\n    for(let i = 0; i < operator.length; i++){\n\
    \        switch(operator[i]){\n            case '+':\n                result +=\
    \ operand[i+1];\n                break;\n            case '-':\n             \
    \   result -= operand[i+1];\n                break;\n            case '*':\n \
    \               result *= operand[i+1];\n                break;\n            case\
    \ '//':\n                result = Math.floor(result / operand[i+1]);\n       \
    \         break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i+1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = do_algebra;\n  assert.deepEqual(candidate([\"**\", \"*\", \"+\"], [2, 3, 4,\
    \ 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\", \"-\"], [2, 3, 4, 5]),9);\n\
    \  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3, 4]),8);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n9\n    at test (/tmp/tmpbpllhc7t.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbpllhc7t.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 9,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''

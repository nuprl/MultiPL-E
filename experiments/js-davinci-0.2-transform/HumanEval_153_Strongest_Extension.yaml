name: HumanEval_153_Strongest_Extension
language: js
prompt: "//You will be given the name of a class (a string) and a list of extensions.\n\
  // The extensions are to be used to load additional classes to the class. The\n\
  // strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  // letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n// You should find the strongest extension and return a string in this \n//\
  \ format: ClassName.StrongestExtensionName.\n// If there are two or more extensions\
  \ with the same strength, you should\n// choose the one that comes first in the\
  \ list.\n// For example, if you are given \"Slices\" as the class and a list of\
  \ the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n//\
  \ return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"my_class\"\
  , [\"AA\", \"Be\", \"CC\"])\n// \"my_class.AA\"\nfunction Strongest_Extension(class_name,\
  \ extensions){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = Strongest_Extension;\n  assert.deepEqual(candidate(\"Watashi\", [\"tEN\", \"\
  niNE\", \"eIGHt8OKe\"]),\"Watashi.eIGHt8OKe\");\n  assert.deepEqual(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\"\
  );\n  assert.deepEqual(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\"\
  , \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"__YESIMHERE.NuLl__\");\n  assert.deepEqual(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]),\"K.TAR\");\n  assert.deepEqual(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]),\"__HAHA.123\");\n  assert.deepEqual(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\"\
  );\n  assert.deepEqual(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"\
  WoW\"]),\"finNNalLLly.WoW\");\n  assert.deepEqual(candidate(\"_\", [\"Bb\", \"91245\"\
  ]),\"_.Bb\");\n  assert.deepEqual(candidate(\"Sp\", [\"671235\", \"Bb\"]),\"Sp.671235\"\
  );\n}\n\ntest();"
completions: ["    var strength = 0;\n    var strongest = \"\";\n    for(var i = 0;\
    \ i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n  \
    \      for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strength){\n            strength = cap - sm;\n            strongest =\
    \ extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength += 1;\n      \
    \      }\n            else{\n                strength -= 1;\n            }\n \
    \       }\n        if (strength > strongest_strength){\n            strongest\
    \ = extensions[i];\n            strongest_strength = strength;\n        }\n  \
    \  }\n    return class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength += 1;\n         \
    \   }\n            else{\n                strength -= 1;\n            }\n    \
    \    }\n        if (strength > strongest_strength){\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    var strongest_extension = \"\";\n    var strongest_extension_strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            var char = extension[j];\n            if (char.toUpperCase()\
    \ == char) {\n                strength += 1;\n            } else {\n         \
    \       strength -= 1;\n            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_ext = \"\";\n    for(var i =\
    \ 0; i < extensions.length; i++){\n        var strength = 0;\n        for(var\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else{\n                strength--;\n            }\n        }\n   \
    \     if(strength > strongest){\n            strongest = strength;\n         \
    \   strongest_ext = extensions[i];\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_ext;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var cap =\
    \ 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var cap = 0;\n        var sm =\
    \ 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                cap++;\n\
    \            } else {\n                sm++;\n            }\n        }\n     \
    \   var strength = cap - sm;\n        if (strength > strongest) {\n          \
    \  strongest = strength;\n            strongest_extension = extensions[i];\n \
    \       }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = 0;\n    var strongest_extension = '';\n    for (var i = 0;\
    \ i < extensions.length; i++) {\n        var extension = extensions[i];\n    \
    \    var strength = 0;\n        for (var j = 0; j < extension.length; j++) {\n\
    \            var letter = extension[j];\n            if (letter.toUpperCase()\
    \ === letter) {\n                strength++;\n            } else {\n         \
    \       strength--;\n            }\n        }\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n", " \
    \   var strongest_extension = extensions[0];\n    var strongest_strength = 0;\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n\
    \        var strength = 0;\n        for (var j = 0; j < extension.length; j++)\
    \ {\n            var char = extension[j];\n            if (char.toUpperCase()\
    \ == char) {\n                strength++;\n            } else {\n            \
    \    strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength += 1;\n     \
    \       }\n            else{\n                strength -= 1;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest\
    \ = extensions[i];\n            strongest_strength = strength;\n        }\n  \
    \  }\n    return class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = {\n        name: \"\",\n        strength: 0\n    };\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest.strength){\n            strongest.name = extensions[i];\n\
    \            strongest.strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest.name;\n}\n", "    let strongest = extensions[0];\n    let\
    \ strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let extension = extensions[i];\n        let strength = 0;\n        for\
    \ (let j = 0; j < extension.length; j++){\n            let char = extension[j];\n\
    \            if (char.toUpperCase() === char){\n                strength++;\n\
    \            }\n            else{\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest\
    \ = extension;\n            strongest_strength = strength;\n        }\n    }\n\
    \    return class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n \
    \   var strongest_ext = \"\";\n    for(var i = 0; i < extensions.length; i++){\n\
    \        var ext = extensions[i];\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < ext.length; j++){\n            if(ext[j] == ext[j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = ext;\n        }\n    }\n    return class_name + \".\" + strongest_ext;\n}\n",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var cap =\
    \ 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = {\n        name:\
    \ \"\",\n        strength: 0\n    };\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var strength = 0;\n        for(var j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest.strength){\n\
    \            strongest.name = extensions[i];\n            strongest.strength =\
    \ strength;\n        }\n    }\n    return class_name + \".\" + strongest.name;\n\
    }\n", "    var strongest = extensions[0];\n    var strongest_strength = 0;\n \
    \   for (var i = 0; i < extensions.length; i++) {\n        var strength = 0;\n\
    \        for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength += 1;\n            } else {\n                strength\
    \ -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\
    \ else {\n                strength--;\n            }\n        }\n        if (strength\
    \ > strongest_strength){\n            strongest_strength = strength;\n       \
    \     strongest = extensions[i];\n        }\n    }\n    return class_name + \"\
    .\" + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension =\
    \ \"\";\n    for (let i = 0; i < extensions.length; i++){\n        let extension\
    \ = extensions[i];\n        let strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++){\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ == char){\n                strength++;\n            }\n            else{\n \
    \               strength--;\n            }\n        }\n        if (strength >\
    \ strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm =\
    \ 0;\n        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        var\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    var strongest\
    \ = extensions[0];\n    var strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        if (cap - sm > strength) {\n    \
    \        strength = cap - sm;\n            strongest = extensions[i];\n      \
    \  }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var strongest\
    \ = extensions[0];\n    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "\tvar strongest\
    \ = extensions[0];\n\tvar strength = 0;\n\tfor(var i = 0; i < extensions.length;\
    \ i++){\n\t\tvar cap = 0;\n\t\tvar sm = 0;\n\t\tfor(var j = 0; j < extensions[i].length;\
    \ j++){\n\t\t\tif(extensions[i][j] === extensions[i][j].toUpperCase()){\n\t\t\t\
    \tcap++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsm++;\n\t\t\t}\n\t\t}\n\t\tif(cap - sm\
    \ > strength){\n\t\t\tstrongest = extensions[i];\n\t\t\tstrength = cap - sm;\n\
    \t\t}\n\t}\n\treturn class_name + \".\" + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++){\n        let extension = extensions[i];\n        let strength = extension.replace(/[^A-Z]/g,\
    \ \"\").length - extension.replace(/[^a-z]/g, \"\").length;\n        if (strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = {\n        name: \"\",\n        strength: 0\n    };\n\
    \    for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest.strength){\n            strongest.name =\
    \ extensions[i];\n            strongest.strength = strength;\n        }\n    }\n\
    \    return class_name + \".\" + strongest.name;\n}\n", "    var strongest_extension\
    \ = \"\";\n    var strongest_extension_strength = 0;\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var extension = extensions[i];\n        var\
    \ extension_strength = 0;\n        for (var j = 0; j < extension.length; j++)\
    \ {\n            var char = extension[j];\n            if (char.toUpperCase()\
    \ == char) {\n                extension_strength++;\n            } else {\n  \
    \              extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ var strongest = 0;\n    var strongest_extension = \"\";\n    for(var i = 0;\
    \ i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n  \
    \      for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        var\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}", "    var strongest\
    \ = 0;\n    var strongest_extension = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var extension = extensions[i];\n        var strength = 0;\n \
    \       for(var j = 0; j < extension.length; j++){\n            var character\
    \ = extension[j];\n            if(character.toUpperCase() == character){\n   \
    \             strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "  let strongest\
    \ = 0;\n  let strongest_extension = \"\";\n  for (let i = 0; i < extensions.length;\
    \ i++){\n    let cap = 0;\n    let sm = 0;\n    for (let j = 0; j < extensions[i].length;\
    \ j++){\n      if (extensions[i][j] == extensions[i][j].toUpperCase()){\n    \
    \    cap++;\n      }\n      else{\n        sm++;\n      }\n    }\n    let strength\
    \ = cap - sm;\n    if (strength > strongest){\n      strongest = strength;\n \
    \     strongest_extension = extensions[i];\n    }\n  }\n  return class_name +\
    \ \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n  \
    \  let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength){\n     \
    \       strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ==\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if (strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = extensions[0];\n    var strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var cap = 0;\n\
    \        var sm = 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n\
    \            if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n     \
    \           cap++;\n            } else {\n                sm++;\n            }\n\
    \        }\n        if (cap - sm > strength) {\n            strength = cap - sm;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = extensions[0];\n    var strongest_strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            var letter = extension[j];\n            if (letter.toUpperCase()\
    \ == letter) {\n                strength++;\n            } else {\n          \
    \      strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = extensions[0];\n    var strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = 0;\n        var\
    \ sm = 0;\n        for (var j = 0; j < ext.length; j++) {\n            if (ext[j]\
    \ == ext[j].toUpperCase()) {\n                cap++;\n            } else {\n \
    \               sm++;\n            }\n        }\n        var ext_strength = cap\
    \ - sm;\n        if (ext_strength > strength) {\n            strength = ext_strength;\n\
    \            strongest = ext;\n        }\n    }\n    return class_name + \".\"\
    \ + strongest;\n}\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                extension_strength\
    \ += 1;\n            }\n            else{\n                extension_strength\
    \ -= 1;\n            }\n        }\n        if (extension_strength > strongest_extension_strength){\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "  //YOUR CODE HERE\n}\n", "    let strongest = extensions[0];\n    let\
    \ strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ==\
    \ extensions[i][j].toUpperCase()){\n                strength += 1;\n         \
    \   }\n            else{\n                strength -= 1;\n            }\n    \
    \    }\n        if (strength > strongest_strength){\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = extensions[0];\n    var strongest_strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var strength\
    \ = 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            }\n            else {\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = 0;\n    var strongest_extension = \"\";\n    for(var i = 0; i <\
    \ extensions.length; i++){\n        var strength = 0;\n        for(var j = 0;\
    \ j < extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "  var strongest = extensions[0];\n  var strongest_strength = 0;\n  for (var i =\
    \ 0; i < extensions.length; i++) {\n    var extension = extensions[i];\n    var\
    \ strength = extension.match(/[A-Z]/g).length - extension.match(/[a-z]/g).length;\n\
    \    if (strength > strongest_strength) {\n      strongest = extension;\n    \
    \  strongest_strength = strength;\n    }\n  }\n  return class_name + \".\" + strongest;\n\
    }\n", "    var strongest_extension = extensions[0];\n    var strongest_extension_strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var extension_strength = 0;\n        for (var j =\
    \ 0; j < extension.length; j++) {\n            var char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = extensions[0];\n    var strongest_strength = 0;\n \
    \   for (var i = 0; i < extensions.length; i++) {\n        var strength = 0;\n\
    \        for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let current_extension = extensions[i];\n        let current_extension_strength\
    \ = 0;\n        for (let j = 0; j < current_extension.length; j++) {\n       \
    \     let current_letter = current_extension[j];\n            if (current_letter\
    \ === current_letter.toUpperCase()) {\n                current_extension_strength++;\n\
    \            } else {\n                current_extension_strength--;\n       \
    \     }\n        }\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            var char = extension[j];\n            if (char.toUpperCase()\
    \ == char) {\n                strength++;\n            } else {\n            \
    \    strength--;\n            }\n        }\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "\tvar strongest = 0;\n\tvar strongest_extension = \"\";\n\tfor(var i = 0; i < extensions.length;\
    \ i++){\n\t\tvar cap = 0;\n\t\tvar sm = 0;\n\t\tfor(var j = 0; j < extensions[i].length;\
    \ j++){\n\t\t\tif(extensions[i][j] == extensions[i][j].toUpperCase()){\n\t\t\t\
    \tcap++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsm++;\n\t\t\t}\n\t\t}\n\t\tvar strength\
    \ = cap - sm;\n\t\tif(strength > strongest){\n\t\t\tstrongest = strength;\n\t\t\
    \tstrongest_extension = extensions[i];\n\t\t}\n\t}\n\treturn class_name + \".\"\
    \ + strongest_extension;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            var char = extension[j];\n            if (char.toUpperCase()\
    \ == char) {\n                strength++;\n            } else {\n            \
    \    strength--;\n            }\n        }\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n\
    \        var strength = 0;\n        for (var j = 0; j < extension.length; j++)\
    \ {\n            var char = extension[j];\n            if (char == char.toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var i\
    \ = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for (var\
    \ j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()) {\n                strength++;\n           \
    \ } else {\n                strength--;\n            }\n        }\n        if\
    \ (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength){\n            strongest_strength =\
    \ strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength += 1;\n            }\n            else{\n          \
    \      strength -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = 0;\n    var strongest_extension = \"\";\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var extension = extensions[i];\n        var\
    \ strength = 0;\n        for (var j = 0; j < extension.length; j++) {\n      \
    \      var char = extension[j];\n            if (char.toUpperCase() == char) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest) {\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++){\n        let extension = extensions[i];\n        let strength = 0;\n \
    \       for (let j = 0; j < extension.length; j++){\n            if (extension[j]\
    \ == extension[j].toUpperCase()){\n                strength += 1;\n          \
    \  }\n            else{\n                strength -= 1;\n            }\n     \
    \   }\n        if (strength > strongest_strength){\n            strongest = extension;\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                strength\
    \ += 1;\n            }\n            else {\n                strength -= 1;\n \
    \           }\n        }\n        if (strength > strongest_strength){\n      \
    \      strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength += 1;\n         \
    \   }\n            else{\n                strength -= 1;\n            }\n    \
    \    }\n        if (strength > strongest_strength){\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++){\n        let cap =\
    \ 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n\
    \            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n     \
    \           cap += 1;\n            }\n            else{\n                sm +=\
    \ 1;\n            }\n        }\n        if (cap - sm > strongest){\n         \
    \   strongest = cap - sm;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = 0;\n    var strongest_ext = \"\";\n    for(var i=0; i<extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j=0; j<extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_ext;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n\
    \        var caps = 0;\n        var smalls = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            var letter = extension[j];\n            if (letter.toUpperCase()\
    \ == letter) {\n                caps++;\n            } else {\n              \
    \  smalls++;\n            }\n        }\n        var strength = caps - smalls;\n\
    \        if (strength > strongest) {\n            strongest = strength;\n    \
    \        strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let extension = extensions[i];\n        let strength = 0;\n        for\
    \ (let j = 0; j < extension.length; j++){\n            let char = extension[j];\n\
    \            if (char.toUpperCase() === char){\n                strength += 1;\n\
    \            }\n            else{\n                strength -= 1;\n          \
    \  }\n        }\n        if (strength > strongest_strength){\n            strongest\
    \ = extension;\n            strongest_strength = strength;\n        }\n    }\n\
    \    return class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n \
    \   var strongest_extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var strength = 0;\n\
    \        for (var j = 0; j < extension.length; j++) {\n            var char =\
    \ extension[j];\n            if (char.toUpperCase() == char) {\n             \
    \   strength++;\n            } else {\n                strength--;\n         \
    \   }\n        }\n        if (strength > strongest) {\n            strongest =\
    \ strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    var strongest\
    \ = extensions[0];\n    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var i\
    \ = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for (var\
    \ j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()) {\n                strength += 1;\n        \
    \    } else {\n                strength -= 1;\n            }\n        }\n    \
    \    if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] == extensions[i][j].toUpperCase()){\n                strength++;\n\
    \            }\n            else{\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++){\n        let cap =\
    \ 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n\
    \            if (extensions[i][j] == extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        if (cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    var strongest_extension\
    \ = \"\";\n    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for\
    \ (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                strength++;\n\
    \            }\n            else{\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var cap\
    \ = 0;\n        var sm = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        var strength = cap - sm;\n      \
    \  if (strength > strongest) {\n            strongest = strength;\n          \
    \  strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    var strongest_extension = extensions[0];\n\
    \    var strongest_extension_strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var extension_strength\
    \ = 0;\n        for (var j = 0; j < extension.length; j++) {\n            var\
    \ letter = extension[j];\n            if (letter == letter.toUpperCase()) {\n\
    \                extension_strength++;\n            } else {\n               \
    \ extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for\
    \ (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var strength\
    \ = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest){\n            strongest = strength;\n  \
    \          strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    var strongest = 0;\n \
    \   var strongest_extension = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var extension = extensions[i];\n        var strength = 0;\n \
    \       for(var j = 0; j < extension.length; j++){\n            var char = extension[j];\n\
    \            if(char.toUpperCase() == char){\n                strength++;\n  \
    \          }\n            else{\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest){\n            strongest = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    var strongest = extensions[0];\n\
    \    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength += 1;\n         \
    \   }\n            else{\n                strength -= 1;\n            }\n    \
    \    }\n        if (strength > strongest_strength){\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest_extension =\
    \ extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength += 1;\n     \
    \       }\n            else{\n                strength -= 1;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest\
    \ = extensions[i];\n            strongest_strength = strength;\n        }\n  \
    \  }\n    return class_name + \".\" + strongest;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for\
    \ (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++){\n        let extension\
    \ = extensions[i];\n        let cap = 0;\n        let sm = 0;\n        for (let\
    \ j = 0; j < extension.length; j++){\n            let char = extension[j];\n \
    \           if (char.toUpperCase() == char){\n                cap++;\n       \
    \     }\n            else{\n                sm++;\n            }\n        }\n\
    \        let strength = cap - sm;\n        if (strength > strongest){\n      \
    \      strongest = strength;\n            strongest_extension = extension;\n \
    \       }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength\
    \ += 1;\n            } else {\n                extension_strength -= 1;\n    \
    \        }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength += 1;\n            }\n            else{\n          \
    \      strength -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength += 1;\n         \
    \   }\n            else{\n                strength -= 1;\n            }\n    \
    \    }\n        if (strength > strongest_strength){\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    var strongest = extensions[0];\n    var strongest_strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var strength\
    \ = 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            }\n            else {\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var cap =\
    \ 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength += 1;\n      \
    \      }\n            else{\n                strength -= 1;\n            }\n \
    \       }\n        if (strength > strongest_strength){\n            strongest\
    \ = extensions[i];\n            strongest_strength = strength;\n        }\n  \
    \  }\n    return class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n\
    \    var strongest_extension = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var extension = extensions[i];\n        var cap = 0;\n      \
    \  var sm = 0;\n        for(var j = 0; j < extension.length; j++){\n         \
    \   var letter = extension[j];\n            if(letter == letter.toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var extension = extensions[i];\n\
    \        var strength = 0;\n        for(var j = 0; j < extension.length; j++){\n\
    \            var char = extension[j];\n            if(char.toUpperCase() == char){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var i = 0;\
    \ i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n  \
    \      for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        var\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength += 1;\n            }\n            else{\n          \
    \      strength -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = 0;\n    let strongest_extension = \"\";\n    for (let i = 0; i <\
    \ extensions.length; i++){\n        let extension = extensions[i];\n        let\
    \ strength = 0;\n        for (let j = 0; j < extension.length; j++){\n       \
    \     let char = extension[j];\n            if (char.toUpperCase() == char){\n\
    \                strength += 1;\n            }\n            else{\n          \
    \      strength -= 1;\n            }\n        }\n        if (strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for\
    \ (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength += 1;\n     \
    \       } else {\n                strength -= 1;\n            }\n        }\n \
    \       if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = extensions[0];\n    var strongest_strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var strength\
    \ = 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength\
    \ += 1;\n            } else {\n                strength -= 1;\n            }\n\
    \        }\n        if (strength > strongest_strength) {\n            strongest\
    \ = extensions[i];\n            strongest_strength = strength;\n        }\n  \
    \  }\n    return class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n\
    \    var strongest_extension = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var strength = 0;\n        for(var j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++){\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++){\n\
    \            if (extension[j] === extension[j].toUpperCase()){\n             \
    \   strength += 1;\n            }\n            else{\n                strength\
    \ -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return `${class_name}.${strongest}`;\n}\n", "    var strongest\
    \ = {\n        name: \"\",\n        strength: 0\n    };\n    for(var i = 0; i\
    \ < extensions.length; i++){\n        var extension = extensions[i];\n       \
    \ var strength = 0;\n        for(var j = 0; j < extension.length; j++){\n    \
    \        var char = extension[j];\n            if(char === char.toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest.strength){\n\
    \            strongest.name = extension;\n            strongest.strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest.name;\n}\n", "  \
    \  var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for\
    \ (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest_extension = extensions[0];\n\
    \    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest = 0;\n    let strongest_ext = \"\";\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + \".\" + strongest_ext;\n}\n", "    var strongest = extensions[0];\n\
    \    var strength = 0;\n    for (var i = 0; i < extensions.length; i++) {\n  \
    \      var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = extensions[0];\n\
    \    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            }\n            else {\n        \
    \        strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++){\n        let extension = extensions[i];\n        let strength = 0;\n \
    \       for (let j = 0; j < extension.length; j++){\n            let letter =\
    \ extension[j];\n            if (letter.toUpperCase() == letter){\n          \
    \      strength += 1;\n            } else {\n                strength -= 1;\n\
    \            }\n        }\n        if (strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++){\n        let extension = extensions[i];\n        let strength = 0;\n \
    \       for (let j = 0; j < extension.length; j++){\n            if (extension[j]\
    \ >= 'A' && extension[j] <= 'Z'){\n                strength += 1;\n          \
    \  }\n            else if (extension[j] >= 'a' && extension[j] <= 'z'){\n    \
    \            strength -= 1;\n            }\n        }\n        if (strength >\
    \ strongest_strength){\n            strongest = extension;\n            strongest_strength\
    \ = strength;\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength += 1;\n     \
    \       }\n            else{\n                strength -= 1;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest\
    \ = extensions[i];\n            strongest_strength = strength;\n        }\n  \
    \  }\n    return class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n\
    \    var strongest_extension = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm =\
    \ 0;\n        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        var\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    var strongest\
    \ = 0;\n    var strongest_extension = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var strength = 0;\n        for(var\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++){\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++){\n\
    \            let letter = extension[j];\n            if (letter.toUpperCase()\
    \ === letter){\n                strength += 1;\n            }\n            else{\n\
    \                strength -= 1;\n            }\n        }\n        if (strength\
    \ > strongest_strength){\n            strongest = extension;\n            strongest_strength\
    \ = strength;\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strength = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var cap\
    \ = 0;\n        var sm = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}", "    var strongest\
    \ = extensions[0];\n    var strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for(var j = 0; j < extension.length;\
    \ j++){\n            var char = extension[j];\n            if(char === char.toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++){\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++){\n\
    \            let letter = extension[j];\n            if (letter.toUpperCase()\
    \ === letter){\n                strength += 1;\n            } else {\n       \
    \         strength -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest_extension = extensions[0];\n    var strongest_extension_strength =\
    \ 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var extension_strength = 0;\n        for (var j =\
    \ 0; j < extension.length; j++) {\n            var char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "  var strongest = extensions[0];\n  var strongest_strength = 0;\n  for\
    \ (var i = 0; i < extensions.length; i++) {\n    var strength = 0;\n    for (var\
    \ j = 0; j < extensions[i].length; j++) {\n      if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n        strength++;\n      } else {\n        strength--;\n      }\n    }\n\
    \    if (strength > strongest_strength) {\n      strongest_strength = strength;\n\
    \      strongest = extensions[i];\n    }\n  }\n  return class_name + \".\" + strongest;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var strength = 0;\n        for(var\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for\
    \ (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                strength\
    \ += 1;\n            }\n            else{\n                strength -= 1;\n  \
    \          }\n        }\n        if (strength > strongest_strength){\n       \
    \     strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = 0;\n    var strongest_ext = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_ext;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var extension = extensions[i];\n\
    \        var strength = 0;\n        for(var j = 0; j < extension.length; j++){\n\
    \            var char = extension[j];\n            if(char.toUpperCase() == char){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest_extension = extensions[0];\n    var strongest_extension_strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var extension_strength = 0;\n        for (var j =\
    \ 0; j < extension.length; j++) {\n            var char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "  var strongest = extensions[0];\n  var strength = 0;\n  for (var i = 0;\
    \ i < extensions.length; i++) {\n    var ext = extensions[i];\n    var cap = 0;\n\
    \    var sm = 0;\n    for (var j = 0; j < ext.length; j++) {\n      if (ext[j]\
    \ === ext[j].toUpperCase()) {\n        cap++;\n      } else {\n        sm++;\n\
    \      }\n    }\n    if (cap - sm > strength) {\n      strength = cap - sm;\n\
    \      strongest = ext;\n    }\n  }\n  return class_name + \".\" + strongest;\n\
    }\n", "    var strongest = extensions[0];\n    var strongest_strength = 0;\n \
    \   for (var i = 0; i < extensions.length; i++) {\n        var strength = 0;\n\
    \        for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    }\n            else {\n                strength--;\n            }\n     \
    \   }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "  var strongest\
    \ = -Infinity;\n  var strongest_ext = \"\";\n  for(var i = 0; i < extensions.length;\
    \ i++){\n    var extension = extensions[i];\n    var strength = 0;\n    for(var\
    \ j = 0; j < extension.length; j++){\n      var char = extension[j];\n      if(char.toUpperCase()\
    \ == char){\n        strength += 1;\n      }\n      else{\n        strength -=\
    \ 1;\n      }\n    }\n    if(strength > strongest){\n      strongest = strength;\n\
    \      strongest_ext = extension;\n    }\n  }\n  return class_name + \".\" + strongest_ext;\n\
    }\n", "    var strongest = extensions[0];\n    var strongest_strength = 0;\n \
    \   for (var i = 0; i < extensions.length; i++) {\n        var strength = 0;\n\
    \        for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                strength++;\n\
    \            }\n            else{\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for(var j = 0; j < extension.length;\
    \ j++){\n            var character = extension[j];\n            if(character.toUpperCase()\
    \ == character){\n                strength += 1;\n            }\n            else{\n\
    \                strength -= 1;\n            }\n        }\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] == extensions[i][j].toUpperCase()){\n                extension_strength++;\n\
    \            }\n            else{\n                extension_strength--;\n   \
    \         }\n        }\n        if (extension_strength > strongest_extension_strength){\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = extensions[0];\n    var strongest_strength = 0;\n \
    \   for (var i = 0; i < extensions.length; i++) {\n        var strength = 0;\n\
    \        for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                strength++;\n\
    \            }\n            else{\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength += 1;\n            }\n            else{\n          \
    \      strength -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = 0;\n    var strongest_extension = \"\";\n    for(var i = 0; i <\
    \ extensions.length; i++){\n        var extension = extensions[i];\n        var\
    \ strength = 0;\n        for(var j = 0; j < extension.length; j++){\n        \
    \    var char = extension[j];\n            if(char.toUpperCase() == char){\n \
    \               strength++;\n            }\n            else{\n              \
    \  strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var i = 0;\
    \ i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n  \
    \      for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        var\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    var strongest\
    \ = 0;\n    var strongest_extension = \"\";\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var extension = extensions[i];\n        var strength = 0;\n \
    \       for(var j = 0; j < extension.length; j++){\n            var char = extension[j];\n\
    \            if(char.toUpperCase() == char){\n                strength++;\n  \
    \          }\n            else{\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest){\n            strongest = strength;\n\
    \            strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for(var i = 0; i < extensions.length; i++){\n        var cap =\
    \ 0;\n        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var strength = 0;\n        for(var\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++){\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++){\n\
    \            let char = extension[j];\n            if (char.toUpperCase() ===\
    \ char){\n                strength += 1;\n            }\n            else{\n \
    \               strength -= 1;\n            }\n        }\n        if (strength\
    \ > strongest_strength){\n            strongest = extension;\n            strongest_strength\
    \ = strength;\n        }\n    }\n    return class_name + \".\" + strongest;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++){\n\
    \            if (extension[j] === extension[j].toUpperCase()){\n             \
    \   strength += 1;\n            }\n            else{\n                strength\
    \ -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let letter = extension[j];\n  \
    \          if (letter.toUpperCase() === letter) {\n                extension_strength\
    \ += 1;\n            } else {\n                extension_strength -= 1;\n    \
    \        }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for(var\
    \ i = 0; i < extensions.length; i++){\n        var strength = 0;\n        for(var\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= \"\
    A\" && extensions[i][j] <= \"Z\"){\n                strength++;\n            }\n\
    \            else if(extensions[i][j] >= \"a\" && extensions[i][j] <= \"z\"){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength += 1;\n     \
    \       }\n            else {\n                strength -= 1;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest\
    \ = extensions[i];\n            strongest_strength = strength;\n        }\n  \
    \  }\n    return class_name + \".\" + strongest;\n}", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++){\n        let extension = extensions[i];\n        let strength = 0;\n \
    \       for (let j = 0; j < extension.length; j++){\n            let char = extension[j];\n\
    \            if (char.toUpperCase() === char){\n                strength++;\n\
    \            }\n            else{\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    var strongest\
    \ = extensions[0];\n    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var strength = 0;\n\
    \        for (var j = 0; j < extension.length; j++) {\n            var letter\
    \ = extension[j];\n            if (letter.toUpperCase() == letter) {\n       \
    \         strength++;\n            } else {\n                strength--;\n   \
    \         }\n        }\n        if (strength > strongest_strength) {\n       \
    \     strongest = extension;\n            strongest_strength = strength;\n   \
    \     }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var strongest\
    \ = extensions[0];\n    var strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap += 1;\n            } else {\n                sm += 1;\n\
    \            }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = extensions[0];\n    var strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = '';\n    for (var i = 0; i < extensions.length; i++) {\n        var cap =\
    \ 0;\n        var sm = 0;\n        for (var j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                cap++;\n            } else {\n                sm++;\n       \
    \     }\n        }\n        var strength = cap - sm;\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++){\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++){\n\
    \            if (extension[j] == extension[j].toUpperCase()){\n              \
    \  strength += 1;\n            }\n            else{\n                strength\
    \ -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = 0;\n    var strongest_extension = \"\";\n    for(var i = 0; i <\
    \ extensions.length; i++){\n        var extension = extensions[i];\n        var\
    \ strength = 0;\n        for(var j = 0; j < extension.length; j++){\n        \
    \    var char = extension[j];\n            if(char.toUpperCase() == char){\n \
    \               strength += 1;\n            }\n            else{\n           \
    \     strength -= 1;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength\
    \ += 1;\n            } else {\n                extension_strength -= 1;\n    \
    \        }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = extensions[0];\n    var strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var cap = 0;\n        var sm =\
    \ 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                cap++;\n\
    \            } else {\n                sm++;\n            }\n        }\n     \
    \   if (cap - sm > strength) {\n            strength = cap - sm;\n           \
    \ strongest = extensions[i];\n        }\n    }\n    return class_name + \".\"\
    \ + strongest;\n}", "  let strongest = extensions[0];\n  let strongest_strength\
    \ = 0;\n  for (let i = 0; i < extensions.length; i++) {\n    let strength = 0;\n\
    \    for (let j = 0; j < extensions[i].length; j++) {\n      if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n        strength++;\n      } else {\n\
    \        strength--;\n      }\n    }\n    if (strength > strongest_strength) {\n\
    \      strongest_strength = strength;\n      strongest = extensions[i];\n    }\n\
    \  }\n  return class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n\
    \    var strongest_extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var upper = 0;\n        var lower = 0;\n        for (var j =\
    \ 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                upper++;\n            } else {\n                lower++;\n\
    \            }\n        }\n        var strength = upper - lower;\n        if (strength\
    \ > strongest) {\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }", "    var strongest = extensions[0];\n    var strength = 0;\n    for (var i\
    \ = 0; i < extensions.length; i++) {\n        var cap = 0;\n        var sm = 0;\n\
    \        for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strength) {\n            strength = cap - sm;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ==\
    \ extensions[i][j].toUpperCase()){\n                strength += 1;\n         \
    \   }\n            else{\n                strength -= 1;\n            }\n    \
    \    }\n        if (strength > strongest_strength){\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = \"\";\n    var strength = 0;\n\
    \    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n     \
    \   var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n    \
    \        if(extensions[i][j] == extensions[i][j].toUpperCase()){\n           \
    \     cap++;\n            }\n            else{\n                sm++;\n      \
    \      }\n        }\n        if(cap - sm > strength){\n            strength =\
    \ cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var cap\
    \ = 0;\n        var sm = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        var strength = cap - sm;\n        if (strength\
    \ > strongest) {\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strength = 0;\n    let strongest\
    \ = '';\n    for (let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n\
    \            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n     \
    \           cap++;\n            } else {\n                sm++;\n            }\n\
    \        }\n        if (cap - sm > strength){\n            strength = cap - sm;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            var char = extension[j];\n            if (char.toUpperCase()\
    \ == char) {\n                strength++;\n            } else {\n            \
    \    strength--;\n            }\n        }\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for\
    \ (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                strength++;\n\
    \            }\n            else{\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++){\n        let extension\
    \ = extensions[i];\n        let strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++){\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ == char){\n                strength += 1;\n            }\n            else {\n\
    \                strength -= 1;\n            }\n        }\n        if (strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_extension = \"\";\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var cap = 0;\n        var sm =\
    \ 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                cap++;\n\
    \            } else {\n                sm++;\n            }\n        }\n     \
    \   var strength = cap - sm;\n        if (strength > strongest) {\n          \
    \  strongest = strength;\n            strongest_extension = extensions[i];\n \
    \       }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for\
    \ (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++){\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()){\n                strength++;\n\
    \            }\n            else{\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var CAP\
    \ = 0;\n        var SM = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                CAP += 1;\n            } else {\n                SM += 1;\n\
    \            }\n        }\n        var strength = CAP - SM;\n        if (strength\
    \ > strongest) {\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++){\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if (strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = '';\n    let strongest_extension_strength = 0;\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        let extension_strength =\
    \ 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n            if\
    \ (extensions[i][j] === extensions[i][j].toUpperCase()) {\n                extension_strength\
    \ += 1;\n            } else {\n                extension_strength -= 1;\n    \
    \        }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\n", "    let strongest = extensions[0];\n  \
    \  let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++){\n            if (extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength += 1;\n            }\n            else{\n          \
    \      strength -= 1;\n            }\n        }\n        if (strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = 0;\n    var strongest_extension = \"\";\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var strength = 0;\n        for (var j = 0;\
    \ j < extensions[i].length; j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            }\n            else {\n        \
    \        strength--;\n            }\n        }\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = 0;\n    var strongest_extension = \"\";\n    for (var i = 0;\
    \ i < extensions.length; i++) {\n        var cap = 0;\n        var sm = 0;\n \
    \       for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        var strength\
    \ = cap - sm;\n        if (strength > strongest) {\n            strongest = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    var strongest = extensions[0];\n\
    \    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength += 1;\n            } else {\n                strength\
    \ -= 1;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var i\
    \ = 0; i < extensions.length; i++) {\n        var strength = 0;\n        for (var\
    \ j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ==\
    \ extensions[i][j].toUpperCase()) {\n                strength++;\n           \
    \ } else {\n                strength--;\n            }\n        }\n        if\
    \ (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var strength\
    \ = 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest) {\n            strongest = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    var strongest = 0;\n \
    \   var strongest_extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var strength = 0;\n\
    \        for (var j = 0; j < extension.length; j++) {\n            var char =\
    \ extension[j];\n            if (char.toUpperCase() == char) {\n             \
    \   strength++;\n            } else {\n                strength--;\n         \
    \   }\n        }\n        if (strength > strongest) {\n            strongest =\
    \ strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "\tvar strongest\
    \ = 0;\n\tvar strongest_extension = \"\";\n\tfor(var i = 0; i < extensions.length;\
    \ i++){\n\t\tvar cap = 0;\n\t\tvar sm = 0;\n\t\tfor(var j = 0; j < extensions[i].length;\
    \ j++){\n\t\t\tif(extensions[i][j] == extensions[i][j].toUpperCase()){\n\t\t\t\
    \tcap++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsm++;\n\t\t\t}\n\t\t}\n\t\tvar strength\
    \ = cap - sm;\n\t\tif(strength > strongest){\n\t\t\tstrongest = strength;\n\t\t\
    \tstrongest_extension = extensions[i];\n\t\t}\n\t}\n\treturn class_name + \".\"\
    \ + strongest_extension;\n}\n", "    var strongest = extensions[0];\n    var strongest_strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var strength\
    \ = 0;\n        for (var j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            }\n            else {\n                strength--;\n            }\n\
    \        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    var strongest = extensions[0];\n\
    \    var strongest_strength = 0;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++){\n        let strength = 0;\n        for (let\
    \ j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength += 1;\n         \
    \   }\n            else{\n                strength -= 1;\n            }\n    \
    \    }\n        if (strength > strongest_strength){\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var cap\
    \ = 0;\n        var sm = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        var strength = cap - sm;\n        if (strength\
    \ > strongest) {\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = extensions[0];\n    var strongest_strength = 0;\n \
    \   for (var i = 0; i < extensions.length; i++) {\n        var strength = 0;\n\
    \        for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var strength = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            var char = extension[j];\n            if (char.toUpperCase()\
    \ == char) {\n                strength++;\n            } else {\n            \
    \    strength--;\n            }\n        }\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = 0;\n    var strongest_extension = \"\";\n    for (var i = 0;\
    \ i < extensions.length; i++) {\n        var extension = extensions[i];\n    \
    \    var strength = 0;\n        for (var j = 0; j < extension.length; j++) {\n\
    \            var letter = extension[j];\n            if (letter.toUpperCase()\
    \ == letter) {\n                strength += 1;\n            } else {\n       \
    \         strength -= 1;\n            }\n        }\n        if (strength > strongest)\
    \ {\n            strongest = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    var strongest = extensions[0];\n    var strongest_strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n\
    \        var strength = 0;\n        for (var j = 0; j < extension.length; j++)\
    \ {\n            var char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    var\
    \ strongest = 0;\n    var strongest_extension = \"\";\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var current_extension = extensions[i];\n\
    \        var current_strength = 0;\n        for (var j = 0; j < current_extension.length;\
    \ j++) {\n            var current_letter = current_extension[j];\n           \
    \ if (current_letter == current_letter.toUpperCase()) {\n                current_strength++;\n\
    \            } else {\n                current_strength--;\n            }\n  \
    \      }\n        if (current_strength > strongest) {\n            strongest =\
    \ current_strength;\n            strongest_extension = current_extension;\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++){\n        let current_strength = 0;\n   \
    \     for (let j = 0; j < extensions[i].length; j++){\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                current_strength += 1;\n\
    \            }\n            else{\n                current_strength -= 1;\n  \
    \          }\n        }\n        if (current_strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = current_strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strongest = 0;\n    var strongest_ext = \"\";\n    for(var i =\
    \ 0; i < extensions.length; i++){\n        var cap = 0;\n        var sm = 0;\n\
    \        for(var j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        var\
    \ strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + \".\" + strongest_ext;\n}\n", "    var strongest = 0;\n\
    \    var strongest_extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var strength = 0;\n        for (var j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest) {\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

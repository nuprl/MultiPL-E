name: HumanEval_23_strlen
language: js
prompt: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
  abc\")\n// 3\nfunction strlen(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
completions: ["    return string.length;\n}\n", "    var i = 0;\n    while(string[i]\
    \ != undefined){\n        i++;\n    }\n    return i;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    return string.length;\n}\n", "  \
    \  return string.length;\n}\n", "    return string.length;\n}\n", "    return\
    \ string.length;\n}\n", "  return string.length;\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "    return string.length;\n}\n", "  \
    \  var length = 0;\n    while(string[length] != undefined){\n        length++;\n\
    \    }\n    return length;\n}\n", "    var length = 0;\n    for(var i = 0; i <\
    \ string.length; i++){\n        length++;\n    }\n    return length;\n}\n", " \
    \   return string.length;\n}\n", "    return string.length;\n}\n", "    return\
    \ string.length;\n}\n", "    return string.length;\n}\n", "    var length = 0;\n\
    \    while(string[length] != undefined){\n        length++;\n    }\n    return\
    \ length;\n}\n", "    var count = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        count++;\n    }\n    return count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

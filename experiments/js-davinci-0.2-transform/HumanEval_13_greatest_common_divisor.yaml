name: HumanEval_13_greatest_common_divisor
language: js
prompt: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
  \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
  \ b){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
  \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
  \ 60),12);\n}\n\ntest();"
completions: ["    if (a < b) {\n        var temp = a;\n        a = b;\n        b\
    \ = temp;\n    }\n    if (a % b == 0) {\n        return b;\n    }\n    else {\n\
    \        return greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (b ==\
    \ 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (a < b) {\n\
    \        var temp = a;\n        a = b;\n        b = temp;\n    }\n    while (b\
    \ != 0) {\n        var temp = a % b;\n        a = b;\n        b = temp;\n    }\n\
    \    return a;\n}\n", "    if (a == 0 || b == 0) {\n        return 0;\n    }\n\
    \    if (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a == 0 || b == 0) {\n        return a + b;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    var\
    \ divisor = 2,\n        greatestDivisor = 1;\n\n    //if u pass a -ve number this\
    \ will not work. fix it dude!!\n    if (a < 2 || b < 2)\n        return 1;\n\n\
    \    while(a >= divisor && b >= divisor){\n        if(a %divisor == 0 && b% divisor\
    \ ==0){\n            greatestDivisor = divisor;\n        }\n        divisor++;\n\
    \    }\n    return greatestDivisor;\n}\n", "    if (b == 0)\n        return a;\n\
    \    return greatest_common_divisor(b, a % b);\n}\n", "    if (a == 0)\n     \
    \   return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n    return\
    \ greatest_common_divisor(a, b-a);\n}\n", "    if(b == 0){\n        return a;\n\
    \    }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if(a === 0){\n\
    \        return b;\n    }\n    if(b === 0){\n        return a;\n    }\n    if(a\
    \ === b){\n        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (b == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if(a === 0 || b === 0){\n        return a + b;\n\
    \    }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if (b == 0)\
    \ {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a === 0) return b;\n    if (b === 0) return a;\n\
    \    if (a === b) return a;\n    if (a > b) return greatest_common_divisor(a -\
    \ b, b);\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n\
    \    return greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0) {\n     \
    \   return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", " \
    \   if (a > b){\n        var temp = a;\n        a = b;\n        b = temp;\n  \
    \  }\n    if (a == 0){\n        return b;\n    }\n    return greatest_common_divisor(b\
    \ % a, a);\n}\n", "    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a\
    \ == b){\n        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n\
    \    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n     \
    \   return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

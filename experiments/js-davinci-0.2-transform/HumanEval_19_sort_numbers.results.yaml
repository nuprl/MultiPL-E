language: js
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp44rp90gk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var num = numbers.split(\" \");\n  var nums\
    \ = [];\n  for(var i = 0; i < num.length; i++){\n    if(num[i] === \"zero\"){\n\
    \      nums.push(0);\n    }\n    else if(num[i] === \"one\"){\n      nums.push(1);\n\
    \    }\n    else if(num[i] === \"two\"){\n      nums.push(2);\n    }\n    else\
    \ if(num[i] === \"three\"){\n      nums.push(3);\n    }\n    else if(num[i] ===\
    \ \"four\"){\n      nums.push(4);\n    }\n    else if(num[i] === \"five\"){\n\
    \      nums.push(5);\n    }\n    else if(num[i] === \"six\"){\n      nums.push(6);\n\
    \    }\n    else if(num[i] === \"seven\"){\n      nums.push(7);\n    }\n    else\
    \ if(num[i] === \"eight\"){\n      nums.push(8);\n    }\n    else if(num[i] ===\
    \ \"nine\"){\n      nums.push(9);\n    }\n  }\n  nums.sort(function(a, b){return\
    \ a-b});\n  var result = [];\n  for(var i = 0; i < nums.length; i++){\n    if(nums[i]\
    \ === 0){\n      result.push(\"zero\");\n    }\n    else if(nums[i] === 1){\n\
    \      result.push(\"one\");\n    }\n    else if(nums[i] === 2){\n      result.push(\"\
    two\");\n    }\n    else if(nums[i] === 3){\n      result.push(\"three\");\n \
    \   }\n    else if(nums[i] === 4){\n      result.push(\"four\");\n    }\n    else\
    \ if(nums[i] === 5){\n      result.push(\"five\");\n    }\n    else if(nums[i]\
    \ === 6){\n      result.push(\"six\");\n    }\n    else if\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpjsg8arse.js:66\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_int = [];\n  for (var i = 0; i\
    \ < nums.length; i++) {\n    nums_int.push(nums_map[nums[i]]);\n  }\n  nums_int.sort(function(a,\
    \ b){return a-b});\n  var nums_str = [];\n  for (var i = 0; i < nums_int.length;\
    \ i++) {\n    for (var key in nums_map) {\n      if (nums_map[key] === nums_int[i])\
    \ {\n        nums_str.push(key);\n      }\n    }\n  }\n  return nums_str.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_int.push(nums_map[nums[i]]);\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        for (var key in nums_map){\n            if (nums_map[key] ==\
    \ nums_int[i]){\n                nums_str.push(key);\n            }\n        }\n\
    \    }\n    return nums_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] == \"zero\"){\n            nums_int.push(0);\n  \
    \      }\n        else if (nums[i] == \"one\"){\n            nums_int.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var\
    \ i = 0; i < nums_int.length; i++){\n        if (nums_int[i] == 0){\n        \
    \    nums_str.push(\"zero\");\n        }\n        else if (nums_int[i] == 1){\n\
    \            nums_str.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2){\n            nums_str.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3){\n            nums_str.push(\"three\");\n        }\n        else if (nums_int[i]\
    \ == 4){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvnawkcjp.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var number_map = {\n    'zero': 0,\n    'one':\
    \ 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six':\
    \ 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var numbers_array\
    \ = numbers.split(' ');\n  var sorted_numbers = numbers_array.sort(function(a,\
    \ b){\n    return number_map[a] - number_map[b];\n  });\n  return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    var nums_sorted = [];\n    for (var\
    \ i = 0; i < nums.length; i++){\n        if (nums[i] == \"zero\"){\n         \
    \   nums_int.push(0);\n        }\n        else if (nums[i] == \"one\"){\n    \
    \        nums_int.push(1);\n        }\n        else if (nums[i] == \"two\"){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == \"three\"\
    ){\n            nums_int.push(3);\n        }\n        else if (nums[i] == \"four\"\
    ){\n            nums_int.push(4);\n        }\n        else if (nums[i] == \"five\"\
    ){\n            nums_int.push(5);\n        }\n        else if (nums[i] == \"six\"\
    ){\n            nums_int.push(6);\n        }\n        else if (nums[i] == \"seven\"\
    ){\n            nums_int.push(7);\n        }\n        else if (nums[i] == \"eight\"\
    ){\n            nums_int.push(8);\n        }\n        else if (nums[i] == \"nine\"\
    ){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        if\
    \ (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n        }\n     \
    \   else if (nums_int[i] == 1){\n            nums_str.push(\"one\");\n       \
    \ }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"two\");\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfbv8key4.js:58\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var sorted_array = num_array.sort(function(a, b){\n        return\
    \ num_dict[a] - num_dict[b];\n    });\n    return sorted_array.join(\" \");\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    for (var i = 0; i <\
    \ nums.length; i++){\n        nums_sorted.push(nums[i]);\n    }\n    nums_sorted.sort();\n\
    \    for (var i = 0; i < nums_sorted.length; i++){\n        nums_sorted_str +=\
    \ nums_sorted[i] + \" \";\n    }\n    return nums_sorted_str.trim();\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five nine three'\n\
    \nshould loosely deep-equal\n\n'three five nine'\n    at test (/tmp/tmpj0nvr3mn.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj0nvr3mn.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_array_int[i]){\n                num_array_str.push(key);\n            }\n\
    \        }\n    }\n    return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n   \
    \     'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ nums_sorted = nums.sort(function(a, b){\n        return nums_map[a] - nums_map[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return convert_to_number(a)\
    \ - convert_to_number(b);\n    });\n    return nums_sorted.join(\" \");\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcsz9l01k.js:9\n        return convert_to_number(a) - convert_to_number(b);\n\
    \        ^\n\nReferenceError: convert_to_number is not defined\n    at /tmp/tmpcsz9l01k.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpcsz9l01k.js:8:28)\n\
    \    at test (/tmp/tmpcsz9l01k.js:21:20)\n    at Object.<anonymous> (/tmp/tmpcsz9l01k.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var num_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(num_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var j = 0; j < nums_sorted.length;\
    \ j++){\n    for (var key in num_dict){\n      if (num_dict[key] === nums_sorted[j]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp44rp90gk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ek29iyt.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        switch (nums_int[i]){\n\
    \            case 0:\n                nums[i] = \"zero\";\n                break;\n\
    \            case 1:\n                nums[i] = \"one\";\n                break;\n\
    \            case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] =\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdeqtnbf4.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar nums = numbers.split(\" \");\n\tvar nums_sorted\
    \ = [];\n\tvar nums_sorted_str = \"\";\n\tvar num_dict = {\n\t\t\"zero\": 0,\n\
    \t\t\"one\": 1,\n\t\t\"two\": 2,\n\t\t\"three\": 3,\n\t\t\"four\": 4,\n\t\t\"\
    five\": 5,\n\t\t\"six\": 6,\n\t\t\"seven\": 7,\n\t\t\"eight\": 8,\n\t\t\"nine\"\
    : 9\n\t};\n\tfor (var i = 0; i < nums.length; i++){\n\t\tnums_sorted.push(num_dict[nums[i]]);\n\
    \t}\n\tnums_sorted.sort(function(a, b){return a-b});\n\tfor (var i = 0; i < nums_sorted.length;\
    \ i++){\n\t\tfor (var key in num_dict){\n\t\t\tif (num_dict[key] == nums_sorted[i]){\n\
    \t\t\t\tnums_sorted_str += key + \" \";\n\t\t\t}\n\t\t}\n\t}\n\treturn nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp44rp90gk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums[a] - nums[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpdj_kmitf.js:22:10)\n    at Object.<anonymous> (/tmp/tmpdj_kmitf.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwl6vunv2.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpwl6vunv2.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwl6vunv2.js:8:26)\n\
    \    at test (/tmp/tmpwl6vunv2.js:21:20)\n    at Object.<anonymous> (/tmp/tmpwl6vunv2.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        'zero': 0,\n  \
    \      'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_arr = numbers.split(' ');\n    var\
    \ num_arr_int = [];\n    for (var i = 0; i < num_arr.length; i++){\n        num_arr_int.push(num_dict[num_arr[i]]);\n\
    \    }\n    num_arr_int.sort(function(a, b){return a-b});\n    var num_arr_str\
    \ = [];\n    for (var i = 0; i < num_arr_int.length; i++){\n        for (var key\
    \ in num_dict){\n            if (num_dict[key] === num_arr_int[i]){\n        \
    \        num_arr_str.push(key);\n            }\n        }\n    }\n    return num_arr_str.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_numbers[a] -\
    \ nums_to_numbers[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpiqlgletd.js:9\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpiqlgletd.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpiqlgletd.js:8:28)\n\
    \    at test (/tmp/tmpiqlgletd.js:21:20)\n    at Object.<anonymous> (/tmp/tmpiqlgletd.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpx5rpgvbn.js:9\n    return num_to_int(a) - num_to_int(b);\n    ^\n\
    \nReferenceError: num_to_int is not defined\n    at /tmp/tmpx5rpgvbn.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpx5rpgvbn.js:8:26)\n\
    \    at test (/tmp/tmpx5rpgvbn.js:21:20)\n    at Object.<anonymous> (/tmp/tmpx5rpgvbn.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_array_int[i]){\n                num_array_str.push(key);\n            }\n\
    \        }\n    }\n    return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var num_map = {\n    'zero': 0,\n    'one':\
    \ 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six':\
    \ 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var num_array =\
    \ numbers.split(' ');\n  var num_array_int = [];\n  for (var i = 0; i < num_array.length;\
    \ i++) {\n    num_array_int.push(num_map[num_array[i]]);\n  }\n  num_array_int.sort(function(a,\
    \ b){return a-b});\n  var num_array_string = [];\n  for (var i = 0; i < num_array_int.length;\
    \ i++) {\n    for (var key in num_map) {\n      if (num_map[key] === num_array_int[i])\
    \ {\n        num_array_string.push(key);\n      }\n    }\n  }\n  return num_array_string.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {};\n    var nums_sorted = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums_map[nums[i]] === undefined){\n            nums_map[nums[i]]\
    \ = 1;\n        }\n        else{\n            nums_map[nums[i]] += 1;\n      \
    \  }\n    }\n    for (var i = 0; i < nums.length; i++){\n        var num = nums[i];\n\
    \        if (nums_map[num] > 0){\n            nums_sorted.push(num);\n       \
    \     nums_map[num] -= 1;\n        }\n    }\n    return nums_sorted.join(\" \"\
    );\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpzfzkrqqf.js:36:10)\n    at Object.<anonymous> (/tmp/tmpzfzkrqqf.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n\
    \        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ num_array_int = [];\n    for (var i = 0; i < num_array.length; i++){\n     \
    \   num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_array_int[i]){\n                num_array_str.push(key);\n            }\n\
    \        }\n    }\n    return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    let nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwl6vunv2.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpwl6vunv2.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwl6vunv2.js:8:26)\n\
    \    at test (/tmp/tmpwl6vunv2.js:21:20)\n    at Object.<anonymous> (/tmp/tmpwl6vunv2.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo5g8m47q.js:9\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpo5g8m47q.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpo5g8m47q.js:8:28)\n\
    \    at test (/tmp/tmpo5g8m47q.js:21:20)\n    at Object.<anonymous> (/tmp/tmpo5g8m47q.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfrwp530o.js:9\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \        ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmpfrwp530o.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpfrwp530o.js:8:28)\n\
    \    at test (/tmp/tmpfrwp530o.js:21:20)\n    at Object.<anonymous> (/tmp/tmpfrwp530o.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  for (var i = 0; i < nums.length; i++)\
    \ {\n    nums_sorted.push(numbers_to_digits(nums[i]));\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_sorted.length; i++) {\n    nums_sorted_str\
    \ += digits_to_numbers(nums_sorted[i]) + \" \";\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpovvssf_l.js:11\n    nums_sorted.push(numbers_to_digits(nums[i]));\n\
    \                ^\n\nReferenceError: numbers_to_digits is not defined\n    at\
    \ sort_numbers (/tmp/tmpovvssf_l.js:11:17)\n    at test (/tmp/tmpovvssf_l.js:25:20)\n\
    \    at Object.<anonymous> (/tmp/tmpovvssf_l.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four':\
    \ 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var nums_sorted = nums.sort(function(a, b){\n    return nums_map[a]\
    \ - nums_map[b];\n  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var arr = numbers.split(\" \");\n    var\
    \ nums = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] ===\
    \ \"zero\"){\n            nums.push(0);\n        }\n        else if(arr[i] ===\
    \ \"one\"){\n            nums.push(1);\n        }\n        else if(arr[i] ===\
    \ \"two\"){\n            nums.push(2);\n        }\n        else if(arr[i] ===\
    \ \"three\"){\n            nums.push(3);\n        }\n        else if(arr[i] ===\
    \ \"four\"){\n            nums.push(4);\n        }\n        else if(arr[i] ===\
    \ \"five\"){\n            nums.push(5);\n        }\n        else if(arr[i] ===\
    \ \"six\"){\n            nums.push(6);\n        }\n        else if(arr[i] ===\
    \ \"seven\"){\n            nums.push(7);\n        }\n        else if(arr[i] ===\
    \ \"eight\"){\n            nums.push(8);\n        }\n        else if(arr[i] ===\
    \ \"nine\"){\n            nums.push(9);\n        }\n    }\n    nums.sort(function(a,\
    \ b){return a-b});\n    var result = \"\";\n    for(var i = 0; i < nums.length;\
    \ i++){\n        if(nums[i] === 0){\n            result += \"zero \";\n      \
    \  }\n        else if(nums[i] === 1){\n            result += \"one \";\n     \
    \   }\n        else if(nums[i] === 2){\n            result += \"two \";\n    \
    \    }\n        else if(nums[i] === 3){\n            result += \"three \";\n \
    \       }\n        else if(nums[i] === 4){\n            result += \"four \";\n\
    \        }\n        else if(nums[i] === 5){\n            result += \"five \";\n\
    \        }\n        else if(nums[i] === 6){\n            result += \"six \";\n\
    \        }\n        else\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpm41b_hak.js:66\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_ints[a] - nums_to_ints[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8di7tui7.js:9\n        return nums_to_ints[a] - nums_to_ints[b];\n\
    \        ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmp8di7tui7.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp8di7tui7.js:8:28)\n\
    \    at test (/tmp/tmp8di7tui7.js:21:20)\n    at Object.<anonymous> (/tmp/tmp8di7tui7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo5g8m47q.js:9\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpo5g8m47q.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpo5g8m47q.js:8:28)\n\
    \    at test (/tmp/tmpo5g8m47q.js:21:20)\n    at Object.<anonymous> (/tmp/tmpo5g8m47q.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_numbers[a] -\
    \ nums_to_numbers[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpiqlgletd.js:9\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpiqlgletd.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpiqlgletd.js:8:28)\n\
    \    at test (/tmp/tmpiqlgletd.js:21:20)\n    at Object.<anonymous> (/tmp/tmpiqlgletd.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        nums_int.push(num_to_int(nums[i]));\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var i = 0; i\
    \ < nums_int.length; i++){\n        nums_int[i] = int_to_num(nums_int[i]);\n \
    \   }\n    return nums_int.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpzuauio2m.js:10\n        nums_int.push(num_to_int(nums[i]));\n \
    \                ^\n\nReferenceError: num_to_int is not defined\n    at sort_numbers\
    \ (/tmp/tmpzuauio2m.js:10:18)\n    at test (/tmp/tmpzuauio2m.js:24:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpzuauio2m.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6,\
    \ 'seven':7, 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){return\
    \ nums_map[a] - nums_map[b]});\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sorted = nums.sort(function(a,\
    \ b){\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] == \"zero\"){\n            nums_int.push(0);\n  \
    \      }\n        else if (nums[i] == \"one\"){\n            nums_int.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var\
    \ i = 0; i < nums_int.length; i++){\n        if (nums_int[i] == 0){\n        \
    \    nums_str.push(\"zero\");\n        }\n        else if (nums_int[i] == 1){\n\
    \            nums_str.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2){\n            nums_str.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3){\n            nums_str.push(\"three\");\n        }\n        else if (nums_int[i]\
    \ == 4){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvnawkcjp.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6,\
    \ 'seven':7, 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){\n\
    \        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2c7laovt.js:9\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \    ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmp2c7laovt.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp2c7laovt.js:8:26)\n\
    \    at test (/tmp/tmp2c7laovt.js:21:20)\n    at Object.<anonymous> (/tmp/tmp2c7laovt.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwl6vunv2.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpwl6vunv2.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwl6vunv2.js:8:26)\n\
    \    at test (/tmp/tmpwl6vunv2.js:21:20)\n    at Object.<anonymous> (/tmp/tmpwl6vunv2.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        switch (nums_int[i]){\n\
    \            case 0:\n                nums[i] = \"zero\";\n                break;\n\
    \            case 1:\n                nums[i] = \"one\";\n                break;\n\
    \            case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] =\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdeqtnbf4.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sorted = nums.sort(function(a,\
    \ b){\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ek29iyt.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwl6vunv2.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpwl6vunv2.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwl6vunv2.js:8:26)\n\
    \    at test (/tmp/tmpwl6vunv2.js:21:20)\n    at Object.<anonymous> (/tmp/tmpwl6vunv2.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwl6vunv2.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpwl6vunv2.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwl6vunv2.js:8:26)\n\
    \    at test (/tmp/tmpwl6vunv2.js:21:20)\n    at Object.<anonymous> (/tmp/tmpwl6vunv2.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_obj\
    \ = {};\n  var nums_sorted = [];\n  var nums_sorted_str = \"\";\n  for (var i\
    \ = 0; i < nums.length; i++) {\n    if (nums[i] === \"zero\") {\n      nums_obj[nums[i]]\
    \ = 0;\n    } else if (nums[i] === \"one\") {\n      nums_obj[nums[i]] = 1;\n\
    \    } else if (nums[i] === \"two\") {\n      nums_obj[nums[i]] = 2;\n    } else\
    \ if (nums[i] === \"three\") {\n      nums_obj[nums[i]] = 3;\n    } else if (nums[i]\
    \ === \"four\") {\n      nums_obj[nums[i]] = 4;\n    } else if (nums[i] === \"\
    five\") {\n      nums_obj[nums[i]] = 5;\n    } else if (nums[i] === \"six\") {\n\
    \      nums_obj[nums[i]] = 6;\n    } else if (nums[i] === \"seven\") {\n     \
    \ nums_obj[nums[i]] = 7;\n    } else if (nums[i] === \"eight\") {\n      nums_obj[nums[i]]\
    \ = 8;\n    } else if (nums[i] === \"nine\") {\n      nums_obj[nums[i]] = 9;\n\
    \    }\n  }\n  for (var key in nums_obj) {\n    nums_sorted.push(nums_obj[key]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var j = 0; j < nums_sorted.length;\
    \ j++) {\n    if (nums_sorted[j] === 0) {\n      nums_sorted_str += \"zero \"\
    ;\n    } else if (nums_sorted[j] === 1) {\n      nums_sorted_str +=\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfye8mgks.js:43\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ek29iyt.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1mmp4nbo.js:9\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmp1mmp4nbo.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp1mmp4nbo.js:8:26)\n\
    \    at test (/tmp/tmp1mmp4nbo.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1mmp4nbo.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        'zero': 0,\n  \
    \      'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_list = numbers.split(' ');\n    var\
    \ num_list_int = [];\n    for (var i = 0; i < num_list.length; i++){\n       \
    \ num_list_int.push(num_dict[num_list[i]]);\n    }\n    num_list_int.sort(function(a,\
    \ b){return a-b});\n    var num_list_str = [];\n    for (var i = 0; i < num_list_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_list_int[i]){\n                num_list_str.push(key);\n            }\n\
    \        }\n    }\n    return num_list_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_int = [];\n    for (let i = 0; i < nums.length; i++){\n        nums_int.push(parseInt(nums[i]));\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    let nums_str = [];\n\
    \    for (let i = 0; i < nums_int.length; i++){\n        nums_str.push(nums_int[i].toString());\n\
    \    }\n    return nums_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpszqu_sqi.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpszqu_sqi.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n \
    \ expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpajw_ii58.js:9\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \    ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmpajw_ii58.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpajw_ii58.js:8:26)\n\
    \    at test (/tmp/tmpajw_ii58.js:21:20)\n    at Object.<anonymous> (/tmp/tmpajw_ii58.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var num_map = {\n  \
    \      \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(num_map[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in num_map){\n         \
    \   if (num_map[key] === nums_sorted[i]){\n                nums_sorted_str +=\
    \ key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo5g8m47q.js:9\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpo5g8m47q.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpo5g8m47q.js:8:28)\n\
    \    at test (/tmp/tmpo5g8m47q.js:21:20)\n    at Object.<anonymous> (/tmp/tmpo5g8m47q.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\":\
    \ 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n\
    \    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\": 9\n  };\n  for (var i = 0;\
    \ i < nums.length; i++) {\n    nums_sorted.push(nums_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_sorted.length; i++) {\n    for\
    \ (var key in nums_dict) {\n      if (nums_dict[key] === nums_sorted[i]) {\n \
    \       nums_sorted[i] = key;\n      }\n    }\n  }\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var numbers = numbers.split(\" \");\n  var\
    \ nums = [];\n  for (var i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ === \"zero\") {\n      nums.push(0);\n    } else if (numbers[i] === \"one\"\
    ) {\n      nums.push(1);\n    } else if (numbers[i] === \"two\") {\n      nums.push(2);\n\
    \    } else if (numbers[i] === \"three\") {\n      nums.push(3);\n    } else if\
    \ (numbers[i] === \"four\") {\n      nums.push(4);\n    } else if (numbers[i]\
    \ === \"five\") {\n      nums.push(5);\n    } else if (numbers[i] === \"six\"\
    ) {\n      nums.push(6);\n    } else if (numbers[i] === \"seven\") {\n      nums.push(7);\n\
    \    } else if (numbers[i] === \"eight\") {\n      nums.push(8);\n    } else if\
    \ (numbers[i] === \"nine\") {\n      nums.push(9);\n    }\n  }\n  nums.sort(function(a,\
    \ b){return a-b});\n  var nums_words = [];\n  for (var i = 0; i < nums.length;\
    \ i++) {\n    if (nums[i] === 0) {\n      nums_words.push(\"zero\");\n    } else\
    \ if (nums[i] === 1) {\n      nums_words.push(\"one\");\n    } else if (nums[i]\
    \ === 2) {\n      nums_words.push(\"two\");\n    } else if (nums[i] === 3) {\n\
    \      nums_words.push(\"three\");\n    } else if (nums[i] === 4) {\n      nums_words.push(\"\
    four\");\n    } else if (nums[i] === 5) {\n      nums_words.push(\"five\");\n\
    \    } else if (nums[i] === 6) {\n      nums_words.\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpth7cxyhb.js:49\nconst assert = require('node:assert');\n      ^^^^^^\n\
    \nSyntaxError: Unexpected identifier\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < num_array_int.length; i++){\n    \
    \    for (var key in num_dict){\n            if (num_dict[key] == num_array_int[i]){\n\
    \                num_array_int[i] = key;\n            }\n        }\n    }\n  \
    \  return num_array_int.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpdcel1jl8.js:9\n        return nums_dict[a] - nums_dict[b];\n  \
    \      ^\n\nReferenceError: nums_dict is not defined\n    at /tmp/tmpdcel1jl8.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpdcel1jl8.js:8:28)\n\
    \    at test (/tmp/tmpdcel1jl8.js:21:20)\n    at Object.<anonymous> (/tmp/tmpdcel1jl8.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums[a] - nums[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpdj_kmitf.js:22:10)\n    at Object.<anonymous> (/tmp/tmpdj_kmitf.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num = numbers.split(\" \");\n    var\
    \ num_sort = num.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return num_sort.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphu7uy01k.js:9\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmphu7uy01k.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmphu7uy01k.js:8:24)\n\
    \    at test (/tmp/tmphu7uy01k.js:21:20)\n    at Object.<anonymous> (/tmp/tmphu7uy01k.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var num_array = numbers.split(\" \");\n  var\
    \ num_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\"\
    : 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n\
    \    \"eight\": 8,\n    \"nine\": 9\n  };\n  var num_array_int = [];\n  for (var\
    \ i = 0; i < num_array.length; i++) {\n    num_array_int.push(num_dict[num_array[i]]);\n\
    \  }\n  num_array_int.sort(function(a, b){return a-b});\n  var num_array_str =\
    \ [];\n  for (var i = 0; i < num_array_int.length; i++) {\n    for (var key in\
    \ num_dict) {\n      if (num_dict[key] === num_array_int[i]) {\n        num_array_str.push(key);\n\
    \      }\n    }\n  }\n  return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var num_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var num_arr = [];\n  for (var i = 0; i <\
    \ nums.length; i++) {\n    num_arr.push(num_map[nums[i]]);\n  }\n  num_arr.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < num_arr.length; i++) {\n    for (var\
    \ key in num_map) {\n      if (num_map[key] === num_arr[i]) {\n        num_arr[i]\
    \ = key;\n      }\n    }\n  }\n  return num_arr.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ek29iyt.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_numbers[a] -\
    \ nums_to_numbers[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpiqlgletd.js:9\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpiqlgletd.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpiqlgletd.js:8:28)\n\
    \    at test (/tmp/tmpiqlgletd.js:21:20)\n    at Object.<anonymous> (/tmp/tmpiqlgletd.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1mmp4nbo.js:9\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmp1mmp4nbo.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp1mmp4nbo.js:8:26)\n\
    \    at test (/tmp/tmp1mmp4nbo.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1mmp4nbo.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2c7laovt.js:9\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \    ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmp2c7laovt.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp2c7laovt.js:8:26)\n\
    \    at test (/tmp/tmp2c7laovt.js:21:20)\n    at Object.<anonymous> (/tmp/tmp2c7laovt.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_array_sorted = [];\n    var num_array_sorted_string = \"\";\n    var\
    \ num_array_sorted_string_final = \"\";\n    var num_array_sorted_string_final_array\
    \ = [];\n    var num_array_sorted_string_final_array_final = [];\n    var num_array_sorted_string_final_array_final_string\
    \ = \"\";\n    var num_array_sorted_string_final_array_final_string_final = \"\
    \";\n    var num_array_sorted_string_final_array_final_string_final_array = [];\n\
    \    var num_array_sorted_string_final_array_final_string_final_array_final =\
    \ [];\n    var num_array_sorted_string_final_array_final_string_final_array_final_string\
    \ = \"\";\n    var num_array_sorted_string_final_array_final_string_final_array_final_string_final\
    \ = \"\";\n    var num_array_sorted_string_final_array_final_string_final_array_final_string_final_array\
    \ = [];\n    var num_array_sorted_string_final_array_final_string_final_array_final_string_final_array_final\
    \ = [];\n    var num_array_sorted_string_final_array_final_string_final_array_final_string_final_array_final_string\
    \ = \"\";\n    var num_array_sorted_string_final_array_final_string_final_array_final_string_final_array_final_string_final\
    \ = \"\";\n    var num_array_sorted_string_final_array_final_string_final_array_final_string_final_array_final_string_final_array\
    \ = [];\n    var num_array_sorted_string_final_array_final_string_final_array_final_string_final_array_final_string_final_array_final\
    \ = [];\n    var num_array_sorted_string_final_array_final_string_final_array_final_string_final_array_\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp6lf4c5y1.js:38\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_ints[a] - nums_to_ints[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8di7tui7.js:9\n        return nums_to_ints[a] - nums_to_ints[b];\n\
    \        ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmp8di7tui7.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp8di7tui7.js:8:28)\n\
    \    at test (/tmp/tmp8di7tui7.js:21:20)\n    at Object.<anonymous> (/tmp/tmp8di7tui7.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp44rp90gk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_array_int[i]){\n                num_array_str.push(key);\n            }\n\
    \        }\n    }\n    return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sort = nums.sort(function(a,b){\n        var num_a = convert_numeral(a);\n\
    \        var num_b = convert_numeral(b);\n        return num_a - num_b;\n    });\n\
    \    return nums_sort.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpac2ymqiz.js:9\n        var num_a = convert_numeral(a);\n      \
    \              ^\n\nReferenceError: convert_numeral is not defined\n    at /tmp/tmpac2ymqiz.js:9:21\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpac2ymqiz.js:8:26)\n\
    \    at test (/tmp/tmpac2ymqiz.js:23:20)\n    at Object.<anonymous> (/tmp/tmpac2ymqiz.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var j = 0; j < nums_sorted.length;\
    \ j++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[j]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var j = 0; j < nums_sorted.length;\
    \ j++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[j]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        'zero': 0,\n  \
    \      'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_list = numbers.split(' ');\n    var\
    \ num_list_int = [];\n    for (var i = 0; i < num_list.length; i++){\n       \
    \ num_list_int.push(num_dict[num_list[i]]);\n    }\n    num_list_int.sort(function(a,\
    \ b){return a-b});\n    var num_list_str = [];\n    for (var i = 0; i < num_list_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_list_int[i]){\n                num_list_str.push(key);\n            }\n\
    \        }\n    }\n    return num_list_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four':\
    \ 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var nums_sorted = nums.sort(function(a, b){\n    return nums_map[a]\
    \ - nums_map[b];\n  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sort\
    \ = [];\n  var nums_sort_str = \"\";\n  for (var i = 0; i < nums.length; i++){\n\
    \    nums_sort.push(num_to_int(nums[i]));\n  }\n  nums_sort.sort(function(a, b){return\
    \ a-b});\n  for (var i = 0; i < nums_sort.length; i++){\n    nums_sort_str +=\
    \ int_to_num(nums_sort[i]) + \" \";\n  }\n  return nums_sort_str.trim();\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpt1jnt1h4.js:11\n    nums_sort.push(num_to_int(nums[i]));\n    \
    \          ^\n\nReferenceError: num_to_int is not defined\n    at sort_numbers\
    \ (/tmp/tmpt1jnt1h4.js:11:15)\n    at test (/tmp/tmpt1jnt1h4.js:25:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpt1jnt1h4.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp44rp90gk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sorted = nums.sort(function(a,\
    \ b){\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ num_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var num_arr = [];\n    for (var i = 0; i < nums.length; i++){\n \
    \       num_arr.push(num_map[nums[i]]);\n    }\n    num_arr.sort(function(a, b){return\
    \ a-b});\n    var num_str = \"\";\n    for (var j = 0; j < num_arr.length; j++){\n\
    \        for (var key in num_map){\n            if (num_map[key] === num_arr[j]){\n\
    \                num_str += key + \" \";\n            }\n        }\n    }\n  \
    \  return num_str.trim();\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo5g8m47q.js:9\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpo5g8m47q.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpo5g8m47q.js:8:28)\n\
    \    at test (/tmp/tmpo5g8m47q.js:21:20)\n    at Object.<anonymous> (/tmp/tmpo5g8m47q.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_to_sort = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_to_sort.push(0);\n        }\n        else if\
    \ (nums[i] == \"one\"){\n            nums_to_sort.push(1);\n        }\n      \
    \  else if (nums[i] == \"two\"){\n            nums_to_sort.push(2);\n        }\n\
    \        else if (nums[i] == \"three\"){\n            nums_to_sort.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_to_sort.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_to_sort.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_to_sort.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_to_sort.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_to_sort.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_to_sort.push(9);\n\
    \        }\n    }\n    nums_to_sort.sort(function(a, b){return a-b});\n    var\
    \ sorted_nums = [];\n    for (var i = 0; i < nums_to_sort.length; i++){\n    \
    \    if (nums_to_sort[i] == 0){\n            sorted_nums.push(\"zero\");\n   \
    \     }\n        else if (nums_to_sort[i] == 1){\n            sorted_nums.push(\"\
    one\");\n        }\n        else if (nums_to_sort[i] == 2){\n            sorted_nums.push(\"\
    two\");\n        }\n        else if (nums_to_sort[\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmplxgny1zn.js:54\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_array_int[i]){\n                num_array_str.push(key);\n            }\n\
    \        }\n    }\n    return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        \"zero\": 0,\n\
    \        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\"\
    : 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n     \
    \   \"eight\": 8,\n        \"nine\": 9\n    };\n    var num_list = numbers.split(\"\
    \ \");\n    var num_list_int = [];\n    for (var i = 0; i < num_list.length; i++){\n\
    \        num_list_int.push(num_dict[num_list[i]]);\n    }\n    num_list_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < num_list_int.length; i++){\n     \
    \   for (var key in num_dict){\n            if (num_dict[key] == num_list_int[i]){\n\
    \                num_list[i] = key;\n            }\n        }\n    }\n    return\
    \ num_list.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var j = 0; j < nums_int.length; j++){\n    if (nums_int[j] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[j] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[j] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[j] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[j] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpu6yz85ra.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwl6vunv2.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpwl6vunv2.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwl6vunv2.js:8:26)\n\
    \    at test (/tmp/tmpwl6vunv2.js:21:20)\n    at Object.<anonymous> (/tmp/tmpwl6vunv2.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_array_int[i]){\n                num_array_str.push(key);\n            }\n\
    \        }\n    }\n    return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp44rp90gk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwl6vunv2.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpwl6vunv2.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwl6vunv2.js:8:26)\n\
    \    at test (/tmp/tmpwl6vunv2.js:21:20)\n    at Object.<anonymous> (/tmp/tmpwl6vunv2.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n\
    \        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ num_array_int = [];\n    for (var i = 0; i < num_array.length; i++){\n     \
    \   num_array_int.push(num_map[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_map){\n            if (num_map[key] === num_array_int[i]){\n\
    \                num_array_str.push(key);\n            }\n        }\n    }\n \
    \   return num_array_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpajw_ii58.js:9\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \    ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmpajw_ii58.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpajw_ii58.js:8:26)\n\
    \    at test (/tmp/tmpajw_ii58.js:21:20)\n    at Object.<anonymous> (/tmp/tmpajw_ii58.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_dict[a]\
    \ - nums_dict[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var num_array = numbers.split(\" \");\n  var\
    \ num_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\"\
    : 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n\
    \    \"eight\": 8,\n    \"nine\": 9\n  };\n  var num_array_int = [];\n  for (var\
    \ i = 0; i < num_array.length; i++) {\n    num_array_int.push(num_dict[num_array[i]]);\n\
    \  }\n  num_array_int.sort(function(a, b){return a-b});\n  var num_array_str =\
    \ [];\n  for (var i = 0; i < num_array_int.length; i++) {\n    for (var key in\
    \ num_dict) {\n      if (num_dict[key] === num_array_int[i]) {\n        num_array_str.push(key);\n\
    \      }\n    }\n  }\n  return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ num_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n    \
    \    'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ num_list = [];\n    for (var i = 0; i < nums.length; i++){\n        num_list.push(num_map[nums[i]]);\n\
    \    }\n    num_list.sort(function(a, b){return a-b});\n    var num_string = \"\
    \";\n    for (var i = 0; i < num_list.length; i++){\n        num_string += num_list[i]\
    \ + \" \";\n    }\n    return num_string.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'undefined'\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmp0klygup1.js:37:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp0klygup1.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'undefined',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] == \"zero\"){\n            nums_int.push(0);\n  \
    \      }\n        else if (nums[i] == \"one\"){\n            nums_int.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var\
    \ i = 0; i < nums_int.length; i++){\n        if (nums_int[i] == 0){\n        \
    \    nums_str.push(\"zero\");\n        }\n        else if (nums_int[i] == 1){\n\
    \            nums_str.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2){\n            nums_str.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3){\n            nums_str.push(\"three\");\n        }\n        else if (nums_int[i]\
    \ == 4){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvnawkcjp.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    switch(nums[i]){\n    \
    \  case \"zero\":\n        nums_int.push(0);\n        break;\n      case \"one\"\
    :\n        nums_int.push(1);\n        break;\n      case \"two\":\n        nums_int.push(2);\n\
    \        break;\n      case \"three\":\n        nums_int.push(3);\n        break;\n\
    \      case \"four\":\n        nums_int.push(4);\n        break;\n      case \"\
    five\":\n        nums_int.push(5);\n        break;\n      case \"six\":\n    \
    \    nums_int.push(6);\n        break;\n      case \"seven\":\n        nums_int.push(7);\n\
    \        break;\n      case \"eight\":\n        nums_int.push(8);\n        break;\n\
    \      case \"nine\":\n        nums_int.push(9);\n        break;\n    }\n  }\n\
    \  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for (var\
    \ i = 0; i < nums_int.length; i++){\n    switch(nums_int[i]){\n      case 0:\n\
    \        nums_str.push(\"zero\");\n        break;\n      case 1:\n        nums_str.push(\"\
    one\");\n        break;\n      case 2:\n        nums_str.push(\"two\");\n    \
    \    break;\n      case 3:\n        nums_str.push(\"three\");\n        break;\n\
    \      case 4:\n        nums_str.push(\"four\");\n        break;\n      case 5:\n\
    \        nums_str.push(\"five\");\n        break;\n      case 6:\n        nums_str.push(\"\
    six\");\n        break;\n      case 7:\n        nums_str.push(\"seven\");\n  \
    \      break;\n      case 8:\n        nums_str.push(\"eight\");\n        break;\n\
    \      case 9\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpzxr9jd1o.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ek29iyt.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    let nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar nums = numbers.split(\" \");\n\tvar nums_sorted\
    \ = [];\n\tvar nums_dict = {\n\t\t\"zero\": 0,\n\t\t\"one\": 1,\n\t\t\"two\":\
    \ 2,\n\t\t\"three\": 3,\n\t\t\"four\": 4,\n\t\t\"five\": 5,\n\t\t\"six\": 6,\n\
    \t\t\"seven\": 7,\n\t\t\"eight\": 8,\n\t\t\"nine\": 9\n\t};\n\tfor (var i = 0;\
    \ i < nums.length; i++){\n\t\tnums_sorted.push(nums_dict[nums[i]]);\n\t}\n\tnums_sorted.sort(function(a,\
    \ b){return a-b});\n\tfor (var i = 0; i < nums_sorted.length; i++){\n\t\tfor (var\
    \ key in nums_dict){\n\t\t\tif (nums_dict[key] == nums_sorted[i]){\n\t\t\t\tnums_sorted[i]\
    \ = key;\n\t\t\t}\n\t\t}\n\t}\n\treturn nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpx5rpgvbn.js:9\n    return num_to_int(a) - num_to_int(b);\n    ^\n\
    \nReferenceError: num_to_int is not defined\n    at /tmp/tmpx5rpgvbn.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpx5rpgvbn.js:8:26)\n\
    \    at test (/tmp/tmpx5rpgvbn.js:21:20)\n    at Object.<anonymous> (/tmp/tmpx5rpgvbn.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums2 = [];\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] ==\
    \ \"zero\"){\n            nums2.push(0);\n        }\n        else if(nums[i] ==\
    \ \"one\"){\n            nums2.push(1);\n        }\n        else if(nums[i] ==\
    \ \"two\"){\n            nums2.push(2);\n        }\n        else if(nums[i] ==\
    \ \"three\"){\n            nums2.push(3);\n        }\n        else if(nums[i]\
    \ == \"four\"){\n            nums2.push(4);\n        }\n        else if(nums[i]\
    \ == \"five\"){\n            nums2.push(5);\n        }\n        else if(nums[i]\
    \ == \"six\"){\n            nums2.push(6);\n        }\n        else if(nums[i]\
    \ == \"seven\"){\n            nums2.push(7);\n        }\n        else if(nums[i]\
    \ == \"eight\"){\n            nums2.push(8);\n        }\n        else if(nums[i]\
    \ == \"nine\"){\n            nums2.push(9);\n        }\n    }\n    nums2.sort(function(a,\
    \ b){return a-b});\n    var nums3 = [];\n    for(var i = 0; i < nums2.length;\
    \ i++){\n        if(nums2[i] == 0){\n            nums3.push(\"zero\");\n     \
    \   }\n        else if(nums2[i] == 1){\n            nums3.push(\"one\");\n   \
    \     }\n        else if(nums2[i] == 2){\n            nums3.push(\"two\");\n \
    \       }\n        else if(nums2[i] == 3){\n            nums3.push(\"three\");\n\
    \        }\n        else if(nums2[i] == 4){\n            nums3.push(\"four\");\n\
    \        }\n        else if(nums2[i\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpl2ijsrrh.js:60\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var num_dict = {\n    'zero': 0,\n    'one':\
    \ 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six':\
    \ 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var num_array =\
    \ numbers.split(' ');\n  var sorted_array = num_array.sort(function(a, b){\n \
    \   return num_dict[a] - num_dict[b];\n  });\n  return sorted_array.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ num_vals = [];\n    for (var i = 0; i < nums.length; i++){\n        num_vals.push(num_to_int(nums[i]));\n\
    \    }\n    num_vals.sort(function(a, b){return a-b});\n    for (var i = 0; i\
    \ < num_vals.length; i++){\n        num_vals[i] = int_to_num(num_vals[i]);\n \
    \   }\n    return num_vals.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwp7gk6se.js:10\n        num_vals.push(num_to_int(nums[i]));\n \
    \                ^\n\nReferenceError: num_to_int is not defined\n    at sort_numbers\
    \ (/tmp/tmpwp7gk6se.js:10:18)\n    at test (/tmp/tmpwp7gk6se.js:24:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpwp7gk6se.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    // Your code here\n    var nums = numbers.split(\"\
    \ \");\n    var nums_int = [];\n    for (var i = 0; i < nums.length; i++) {\n\
    \        if (nums[i] == \"zero\") {\n            nums_int.push(0);\n        }\n\
    \        else if (nums[i] == \"one\") {\n            nums_int.push(1);\n     \
    \   }\n        else if (nums[i] == \"two\") {\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\") {\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\") {\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\") {\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\") {\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\") {\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\") {\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\") {\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    var nums_str\
    \ = [];\n    for (var i = 0; i < nums_int.length; i++) {\n        if (nums_int[i]\
    \ == 0) {\n            nums_str.push(\"zero\");\n        }\n        else if (nums_int[i]\
    \ == 1) {\n            nums_str.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2) {\n            nums_str.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3) {\n            nums_str.push(\"three\");\n        }\n        else if (\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpeb0mlfdn.js:58\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    var nums_sorted = [];\n    for (var\
    \ i = 0; i < nums.length; i++){\n        switch (nums[i]){\n            case \"\
    zero\":\n                nums_int.push(0);\n                break;\n         \
    \   case \"one\":\n                nums_int.push(1);\n                break;\n\
    \            case \"two\":\n                nums_int.push(2);\n              \
    \  break;\n            case \"three\":\n                nums_int.push(3);\n  \
    \              break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        switch (nums_int[i]){\n\
    \            case 0:\n                nums_str.push(\"zero\");\n             \
    \   break;\n            case 1:\n                nums_str.push(\"one\");\n   \
    \             break;\n            case 2:\n                nums_str.push(\"two\"\
    );\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpbe2ah1i6.js:73\n                nums_str.push(\"\n            \
    \                  ^\n\nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_dict = {\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in nums_dict){\n            if (nums_dict[key] == nums_sorted[i]){\n\
    \                nums_sorted[i] = key;\n            }\n        }\n    }\n    return\
    \ nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpajw_ii58.js:9\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \    ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmpajw_ii58.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpajw_ii58.js:8:26)\n\
    \    at test (/tmp/tmpajw_ii58.js:21:20)\n    at Object.<anonymous> (/tmp/tmpajw_ii58.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ek29iyt.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        'zero': 0,\n  \
    \      'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_list = numbers.split(' ');\n    var\
    \ num_list_int = [];\n    for (var i = 0; i < num_list.length; i++){\n       \
    \ num_list_int.push(num_dict[num_list[i]]);\n    }\n    num_list_int.sort(function(a,\
    \ b){return a-b});\n    var num_list_str = [];\n    for (var i = 0; i < num_list_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_list_int[i]){\n                num_list_str.push(key);\n            }\n\
    \        }\n    }\n    return num_list_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5,\
    \ 'six':6, 'seven':7, 'eight':8, 'nine':9};\n    var num_array_int = [];\n   \
    \ for (var i = 0; i < num_array.length; i++){\n        num_array_int.push(num_dict[num_array[i]]);\n\
    \    }\n    num_array_int.sort(function(a, b){return a-b});\n    for (var i =\
    \ 0; i < num_array_int.length; i++){\n        for (var key in num_dict){\n   \
    \         if (num_dict[key] == num_array_int[i]){\n                num_array_int[i]\
    \ = key;\n            }\n        }\n    }\n    return num_array_int.join(\" \"\
    );\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_numbers[a] -\
    \ nums_to_numbers[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpiqlgletd.js:9\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpiqlgletd.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpiqlgletd.js:8:28)\n\
    \    at test (/tmp/tmpiqlgletd.js:21:20)\n    at Object.<anonymous> (/tmp/tmpiqlgletd.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] == \"zero\"){\n            nums_int.push(0);\n  \
    \      }\n        else if (nums[i] == \"one\"){\n            nums_int.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var\
    \ i = 0; i < nums_int.length; i++){\n        if (nums_int[i] == 0){\n        \
    \    nums_str.push(\"zero\");\n        }\n        else if (nums_int[i] == 1){\n\
    \            nums_str.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2){\n            nums_str.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3){\n            nums_str.push(\"three\");\n        }\n        else if (nums_int[i]\
    \ == 4){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpvnawkcjp.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ek29iyt.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_numbers = [];\n    for (var i = 0; i < nums.length; i++){\n        switch\
    \ (nums[i]){\n            case \"zero\":\n                nums_numbers.push(0);\n\
    \                break;\n            case \"one\":\n                nums_numbers.push(1);\n\
    \                break;\n            case \"two\":\n                nums_numbers.push(2);\n\
    \                break;\n            case \"three\":\n                nums_numbers.push(3);\n\
    \                break;\n            case \"four\":\n                nums_numbers.push(4);\n\
    \                break;\n            case \"five\":\n                nums_numbers.push(5);\n\
    \                break;\n            case \"six\":\n                nums_numbers.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_numbers.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_numbers.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_numbers.push(9);\n\
    \                break;\n        }\n    }\n    nums_numbers.sort(function(a, b){return\
    \ a-b});\n    var nums_words = [];\n    for (var i = 0; i < nums_numbers.length;\
    \ i++){\n        switch (nums_numbers[i]){\n            case 0:\n            \
    \    nums_words.push(\"zero\");\n                break;\n            case 1:\n\
    \                nums_words.push(\"one\");\n                break;\n         \
    \   case 2:\n                nums_words.push(\"two\");\n                break;\n\
    \            case 3:\n                nums_words.push(\"three\");\n          \
    \      break;\n            case 4:\n                nums_words.push(\"four\");\n\
    \                break;\n            case 5:\n                nums_words.push(\"\
    five\");\n                break;\n            case 6:\n                nums_words.push(\"\
    six\");\n                break;\n            case 7:\n                nums_words.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfcipj1qn.js:85\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    switch(nums[i]){\n    \
    \  case \"zero\":\n        nums_int.push(0);\n        break;\n      case \"one\"\
    :\n        nums_int.push(1);\n        break;\n      case \"two\":\n        nums_int.push(2);\n\
    \        break;\n      case \"three\":\n        nums_int.push(3);\n        break;\n\
    \      case \"four\":\n        nums_int.push(4);\n        break;\n      case \"\
    five\":\n        nums_int.push(5);\n        break;\n      case \"six\":\n    \
    \    nums_int.push(6);\n        break;\n      case \"seven\":\n        nums_int.push(7);\n\
    \        break;\n      case \"eight\":\n        nums_int.push(8);\n        break;\n\
    \      case \"nine\":\n        nums_int.push(9);\n        break;\n    }\n  }\n\
    \  nums_int.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_int.length;\
    \ i++){\n    switch(nums_int[i]){\n      case 0:\n        nums_int[i] = \"zero\"\
    ;\n        break;\n      case 1:\n        nums_int[i] = \"one\";\n        break;\n\
    \      case 2:\n        nums_int[i] = \"two\";\n        break;\n      case 3:\n\
    \        nums_int[i] = \"three\";\n        break;\n      case 4:\n        nums_int[i]\
    \ = \"four\";\n        break;\n      case 5:\n        nums_int[i] = \"five\";\n\
    \        break;\n      case 6:\n        nums_int[i] = \"six\";\n        break;\n\
    \      case 7:\n        nums_int[i] = \"seven\";\n        break;\n      case 8:\n\
    \        nums_int[i] = \"eight\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmppzh5vo7g.js:71\n        nums_int[i] = \"eight\n               \
    \       ^^^^^^\n\nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    var nums_sorted = [];\n    for (var\
    \ i = 0; i < nums.length; i++){\n        if (nums[i] == \"zero\"){\n         \
    \   nums_int.push(0);\n        }\n        else if (nums[i] == \"one\"){\n    \
    \        nums_int.push(1);\n        }\n        else if (nums[i] == \"two\"){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == \"three\"\
    ){\n            nums_int.push(3);\n        }\n        else if (nums[i] == \"four\"\
    ){\n            nums_int.push(4);\n        }\n        else if (nums[i] == \"five\"\
    ){\n            nums_int.push(5);\n        }\n        else if (nums[i] == \"six\"\
    ){\n            nums_int.push(6);\n        }\n        else if (nums[i] == \"seven\"\
    ){\n            nums_int.push(7);\n        }\n        else if (nums[i] == \"eight\"\
    ){\n            nums_int.push(8);\n        }\n        else if (nums[i] == \"nine\"\
    ){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        if\
    \ (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n        }\n     \
    \   else if (nums_int[i] == 1){\n            nums_str.push(\"one\");\n       \
    \ }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"two\");\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfbv8key4.js:58\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_string = \"\";\n  var nums_sorted_string_final = \"\
    \";\n  var nums_sorted_string_final_final = \"\";\n  var nums_sorted_string_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final = \"\";\n  var nums_sorted_string_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final = \"\"\
    ;\n  var nums_sorted_string_final_final_final_final_final_final_final = \"\";\n\
    \  var nums_sorted_string_final_final_final_final_final_final_final_final = \"\
    \";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpfj50ao51.js:38\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        'zero': 0,\n  \
    \      'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_list = numbers.split(' ');\n    var\
    \ num_list_int = [];\n    for (var i = 0; i < num_list.length; i++){\n       \
    \ num_list_int.push(num_dict[num_list[i]]);\n    }\n    num_list_int.sort(function(a,\
    \ b){return a-b});\n    var num_list_str = [];\n    for (var i = 0; i < num_list_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_list_int[i]){\n                num_list_str.push(key);\n            }\n\
    \        }\n    }\n    return num_list_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return convert_to_number(a)\
    \ - convert_to_number(b);\n    });\n    return nums_sorted.join(\" \");\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcsz9l01k.js:9\n        return convert_to_number(a) - convert_to_number(b);\n\
    \        ^\n\nReferenceError: convert_to_number is not defined\n    at /tmp/tmpcsz9l01k.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpcsz9l01k.js:8:28)\n\
    \    at test (/tmp/tmpcsz9l01k.js:21:20)\n    at Object.<anonymous> (/tmp/tmpcsz9l01k.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_obj\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_arr = [];\n  for (var i = 0; i\
    \ < nums.length; i++) {\n    nums_arr.push(nums_obj[nums[i]]);\n  }\n  nums_arr.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_arr.length; i++) {\n    for (var\
    \ key in nums_obj) {\n      if (nums_obj[key] === nums_arr[i]) {\n        nums_arr[i]\
    \ = key;\n      }\n    }\n  }\n  return nums_arr.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_sorted = [];\n    var nums_sorted_str = \"\";\n\
    \    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == \"zero\"){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == \"one\"\
    ){\n            nums_int.push(1);\n        }\n        else if (nums[i] == \"two\"\
    ){\n            nums_int.push(2);\n        }\n        else if (nums[i] == \"three\"\
    ){\n            nums_int.push(3);\n        }\n        else if (nums[i] == \"four\"\
    ){\n            nums_int.push(4);\n        }\n        else if (nums[i] == \"five\"\
    ){\n            nums_int.push(5);\n        }\n        else if (nums[i] == \"six\"\
    ){\n            nums_int.push(6);\n        }\n        else if (nums[i] == \"seven\"\
    ){\n            nums_int.push(7);\n        }\n        else if (nums[i] == \"eight\"\
    ){\n            nums_int.push(8);\n        }\n        else if (nums[i] == \"nine\"\
    ){\n            nums_int.push(9);\n        }\n    }\n    nums_sorted = nums_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  if (nums_sorted[i] == 0){\n            nums_sorted_str += \"zero \";\n    \
    \    }\n        else if (nums_sorted[i] == 1){\n            nums_sorted_str +=\
    \ \"one \";\n        }\n        else if (nums_sorted[i] == 2){\n            nums_sorted_str\
    \ += \"two \";\n        }\n        else if (nums_sorted[\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmplqnnrdat.js:55\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp_ek29iyt.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp680ud5ge.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp680ud5ge.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp680ud5ge.js:8:28)\n\
    \    at test (/tmp/tmp680ud5ge.js:21:20)\n    at Object.<anonymous> (/tmp/tmp680ud5ge.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp44rp90gk.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        \"zero\": 0,\n\
    \        \"one\": 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\"\
    : 4,\n        \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n     \
    \   \"eight\": 8,\n        \"nine\": 9\n    };\n    var num_list = numbers.split(\"\
    \ \");\n    var num_list_sorted = num_list.sort(function(a, b){\n        return\
    \ num_dict[a] - num_dict[b];\n    });\n    return num_list_sorted.join(\" \");\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ num_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n    \
    \    'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ num_list = [];\n    for (var i = 0; i < nums.length; i++){\n        num_list.push(num_map[nums[i]]);\n\
    \    }\n    num_list.sort(function(a, b){return a-b});\n    var num_map_reverse\
    \ = {\n        0: 'zero',\n        1: 'one',\n        2: 'two',\n        3: 'three',\n\
    \        4: 'four',\n        5: 'five',\n        6: 'six',\n        7: 'seven',\n\
    \        8: 'eight',\n        9: 'nine'\n    };\n    var result = \"\";\n    for\
    \ (var i = 0; i < num_list.length; i++){\n        result += num_map_reverse[num_list[i]]\
    \ + \" \";\n    }\n    return result.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'undefined'\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmph96g_mlq.js:49:10)\n   \
    \ at Object.<anonymous> (/tmp/tmph96g_mlq.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'undefined',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_sorted = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] == \"zero\"){\n            nums_int.push(0);\n  \
    \      }\n        else if (nums[i] == \"one\"){\n            nums_int.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var\
    \ i = 0; i < nums_int.length; i++){\n        if (nums_int[i] == 0){\n        \
    \    nums_sorted.push(\"zero\");\n        }\n        else if (nums_int[i] == 1){\n\
    \            nums_sorted.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2){\n            nums_sorted.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3){\n            nums_sorted.push(\"three\");\n        }\n        else if\
    \ (nums_int[\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpdhq2ahwp.js:57\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfrwp530o.js:9\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \        ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmpfrwp530o.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpfrwp530o.js:8:28)\n\
    \    at test (/tmp/tmpfrwp530o.js:21:20)\n    at Object.<anonymous> (/tmp/tmpfrwp530o.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp7ttqun5b.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo5g8m47q.js:9\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpo5g8m47q.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpo5g8m47q.js:8:28)\n\
    \    at test (/tmp/tmpo5g8m47q.js:21:20)\n    at Object.<anonymous> (/tmp/tmpo5g8m47q.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748361
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_dict = {\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in nums_dict){\n            if (nums_dict[key] == nums_sorted[i]){\n\
    \                nums_sorted[i] = key;\n            }\n        }\n    }\n    return\
    \ nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748361

name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["    var result = [];\n    for(var i = 0; i < l1.length; i++){\n   \
    \     for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", "\t\
    var l3 = [];\n\tfor(var i = 0; i < l1.length; i++){\n\t\tfor(var j = 0; j < l2.length;\
    \ j++){\n\t\t\tif(l1[i] == l2[j]){\n\t\t\t\tl3.push(l1[i]);\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn l3;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ != -1;\n    }).sort(function(a, b){\n        return a - b;\n    });\n}\n", " \
    \   return l1.filter(function(n){\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    }).filter(function(item, pos, ary){\n      \
    \  return !pos || item != ary[pos - 1];\n    });\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    var result = [];\n \
    \   for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    return l1.filter(function(val){\n\
    \        return l2.indexOf(val) !== -1;\n    }).sort(function(a, b){\n       \
    \ return a - b;\n    }).filter(function(val, index, arr){\n        return arr.indexOf(val)\
    \ === index;\n    });\n}\n", "    return l1.filter(function(n){\n        return\
    \ l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return a - b;\n\
    \    }).filter(function(item, pos, ary){\n        return !pos || item != ary[pos\
    \ - 1];\n    });\n}\n", "    let set1 = new Set(l1);\n    let set2 = new Set(l2);\n\
    \    let common = new Set([...set1].filter(x => set2.has(x)));\n    return Array.from(common).sort();\n\
    }\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n       \
    \ for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n    \
    \            result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ != -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    result.push(l1[i]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "  var l3 = [];\n  for (var i = 0; i < l1.length; i++) {\n    for (var j\
    \ = 0; j < l2.length; j++) {\n      if (l1[i] == l2[j]) {\n        l3.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l3;\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    var l3 = l1.concat(l2);\n\
    \    var l4 = l3.filter(function(item, pos) {\n        return l3.indexOf(item)\
    \ == pos;\n    });\n    var l5 = l4.sort(function(a, b){return a-b});\n    var\
    \ l6 = [];\n    for (var i = 0; i < l5.length; i++){\n        if (l1.indexOf(l5[i])\
    \ > -1 && l2.indexOf(l5[i]) > -1){\n            l6.push(l5[i]);\n        }\n \
    \   }\n    return l6;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

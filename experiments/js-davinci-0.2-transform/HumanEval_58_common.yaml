name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["    var result = [];\n    for(var i = 0; i < l1.length; i++){\n   \
    \     for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", "\t\
    var l3 = [];\n\tfor(var i = 0; i < l1.length; i++){\n\t\tfor(var j = 0; j < l2.length;\
    \ j++){\n\t\t\tif(l1[i] == l2[j]){\n\t\t\t\tl3.push(l1[i]);\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn l3;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ != -1;\n    }).sort(function(a, b){\n        return a - b;\n    });\n}\n", " \
    \   return l1.filter(function(n){\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    }).filter(function(item, pos, ary){\n      \
    \  return !pos || item != ary[pos - 1];\n    });\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    var result = [];\n \
    \   for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    return l1.filter(function(val){\n\
    \        return l2.indexOf(val) !== -1;\n    }).sort(function(a, b){\n       \
    \ return a - b;\n    }).filter(function(val, index, arr){\n        return arr.indexOf(val)\
    \ === index;\n    });\n}\n", "    return l1.filter(function(n){\n        return\
    \ l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return a - b;\n\
    \    }).filter(function(item, pos, ary){\n        return !pos || item != ary[pos\
    \ - 1];\n    });\n}\n", "    let set1 = new Set(l1);\n    let set2 = new Set(l2);\n\
    \    let common = new Set([...set1].filter(x => set2.has(x)));\n    return Array.from(common).sort();\n\
    }\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n       \
    \ for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n    \
    \            result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ != -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    result.push(l1[i]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "  var l3 = [];\n  for (var i = 0; i < l1.length; i++) {\n    for (var j\
    \ = 0; j < l2.length; j++) {\n      if (l1[i] == l2[j]) {\n        l3.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l3;\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    var l3 = l1.concat(l2);\n\
    \    var l4 = l3.filter(function(item, pos) {\n        return l3.indexOf(item)\
    \ == pos;\n    });\n    var l5 = l4.sort(function(a, b){return a-b});\n    var\
    \ l6 = [];\n    for (var i = 0; i < l5.length; i++){\n        if (l1.indexOf(l5[i])\
    \ > -1 && l2.indexOf(l5[i]) > -1){\n            l6.push(l5[i]);\n        }\n \
    \   }\n    return l6;\n}\n", "    let l3 = l1.filter(x => l2.includes(x));\n \
    \   return [...new Set(l3)];\n}\n", "    let result = [];\n    for(let i = 0;\
    \ i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] === l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result.sort();\n}\n", "    return l1.filter(function(item){\n\
    \        return l2.indexOf(item) > -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, index, arr){\n        return arr.indexOf(item)\
    \ === index;\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    l3.sort();\n    for(var i = 0; i < l3.length; i++){\n        for(var j =\
    \ i + 1; j < l3.length; j++){\n            if(l3[i] == l3[j]){\n             \
    \   l3.splice(j, 1);\n                j--;\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    let result = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result.sort();\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] === l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    var l3 = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    return l3;\n}\n", "\tvar l3 = [];\n\tfor(var i = 0; i <\
    \ l1.length; i++){\n\t\tfor(var j = 0; j < l2.length; j++){\n\t\t\tif(l1[i] ==\
    \ l2[j]){\n\t\t\t\tl3.push(l1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn l3;\n}\n", " \
    \   let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    let commonElements =\
    \ [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                commonElements.push(l1[i]);\n\
    \            }\n        }\n    }\n    return commonElements.sort();\n}\n", " \
    \ var l3 = [];\n  for (var i = 0; i < l1.length; i++) {\n    for (var j = 0; j\
    \ < l2.length; j++) {\n      if (l1[i] == l2[j]) {\n        l3.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l3;\n}\n", "    var result = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] === l2[j]){\n                result.push(l1[i]);\n        \
    \    }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    return l1.filter(function(el){\n     \
    \   return l2.indexOf(el) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(el, i, arr){\n        return arr.indexOf(el)\
    \ === i;\n    });\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l1.filter(function(n){\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    }).filter(function(item, pos, ary){\n      \
    \  return !pos || item != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(x\
    \ => l2.includes(x)).sort((a, b) => a - b).filter((x, i, a) => a.indexOf(x) ===\
    \ i);\n}\n", "    let result = [];\n    for(let i = 0; i < l1.length; i++){\n\
    \        for(let j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result.sort();\n}\n", "    let common = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                common.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return common.sort((a, b) => a - b);\n}\n", "    var result = [];\n \
    \   for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(value){\n\
    \        return l2.indexOf(value) != -1;\n    }).sort(function(a, b){\n      \
    \  return a - b;\n    });\n}\n", "    var result = [];\n    for(var i = 0; i <\
    \ l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i]\
    \ === l2[j]){\n                result.push(l1[i]);\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    return l1.filter(function(n){\n        return\
    \ l2.indexOf(n) != -1;\n    }).sort(function(a, b){\n        return a - b;\n \
    \   });\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   let common = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    common.push(l1[i]);\n            }\n        }\n    }\n    return common.sort().filter((item,\
    \ index) => common.indexOf(item) === index);\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result;\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) != -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    let result = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result.sort((a, b) => a - b);\n}\n", "    var l1 = l1.sort();\n\
    \    var l2 = l2.sort();\n    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        if(l2.indexOf(l1[i]) != -1){\n            l3.push(l1[i]);\n \
    \       }\n    }\n    return l3;\n}\n", "    return l1.filter(function(item){\n\
    \        return l2.indexOf(item) !== -1;\n    }).sort(function(a, b){\n      \
    \  return a - b;\n    }).filter(function(item, index, arr){\n        return index\
    \ === arr.indexOf(item);\n    });\n}\n", "  var result = [];\n  for(var i = 0;\
    \ i < l1.length; i++){\n    for(var j = 0; j < l2.length; j++){\n      if(l1[i]\
    \ === l2[j]){\n        result.push(l1[i]);\n      }\n    }\n  }\n  return result;\n\
    }\n", "    return l1.filter(function(n){\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \ var l3 = [];\n  for (var i = 0; i < l1.length; i++) {\n    for (var j = 0; j\
    \ < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        l3.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l3;\n}\n", "    let result = [];\n    for(let i\
    \ = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] === l2[j]){\n                result.push(l1[i]);\n        \
    \    }\n        }\n    }\n    return result.sort();\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var common = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                common.push(l1[i]);\n\
    \            }\n        }\n    }\n    return common.sort(function(a, b){return\
    \ a - b});\n}\n", "\tvar l3 = [];\n\tfor(var i = 0; i < l1.length; i++){\n\t\t\
    for(var j = 0; j < l2.length; j++){\n\t\t\tif(l1[i] == l2[j]){\n\t\t\t\tl3.push(l1[i]);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn l3;\n}\n", "    let set1 = new Set(l1);\n    let\
    \ set2 = new Set(l2);\n    let common = new Set([...set1].filter(x => set2.has(x)));\n\
    \    return Array.from(common).sort();\n}\n", "    var l3 = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] === l2[j]){\n                result.push(l1[i]);\n        \
    \    }\n        }\n    }\n    return result;\n}\n", "    let set1 = new Set(l1);\n\
    \    let set2 = new Set(l2);\n    let common = new Set([...set1].filter(x => set2.has(x)));\n\
    \    return [...common].sort();\n}\n", "    return l1.filter(function(n){\n  \
    \      return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    return l1.filter(function(n){\n      \
    \  return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return a\
    \ - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item !=\
    \ ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    let common = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                common.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return common.sort((a, b) => a - b);\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    let result = [];\n    for(let i = 0; i\
    \ < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n          \
    \  if(l1[i] === l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result.sort();\n}\n", "    return l1.filter(function(item){\n\
    \        return l2.indexOf(item) > -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, index, arr){\n        return arr.indexOf(item)\
    \ === index;\n    });\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, self){\n        return self.indexOf(item) == pos;\n    });\n}\n", "   \
    \ return l1.filter(function(value){\n        return l2.indexOf(value) != -1;\n\
    \    }).sort().filter(function(value, index, array){\n        return array.indexOf(value)\
    \ == index;\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l1.filter(function(item){\n        return l2.indexOf(item) > -1;\n\
    \    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ index, arr){\n        return arr.indexOf(item) === index;\n    });\n}\n", " \
    \   return l1.filter(function(n){\n        return l2.indexOf(n) != -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    }).filter(function(item, pos, ary){\n      \
    \  return !pos || item != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let result =\
    \ [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort((a, b) => a - b);\n}\n",
  "    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a, b) => a - b);\n\
    }\n", "    return l1.filter(function(n){\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   let result = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    result.push(l1[i]);\n            }\n        }\n    }\n    return result.sort();\n\
    }\n", "    var result = [];\n    var l1_unique = unique(l1);\n    var l2_unique\
    \ = unique(l2);\n    for (var i = 0; i < l1_unique.length; i++){\n        for\
    \ (var j = 0; j < l2_unique.length; j++){\n            if (l1_unique[i] == l2_unique[j]){\n\
    \                result.push(l1_unique[i]);\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    var common = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                common.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return common.sort();\n}\n", "    return _.intersection(l1, l2);\n}\n",
  "    let result = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    result.push(l1[i]);\n            }\n        }\n    }\n    return result.sort();\n\
    }\n", "    var l3 = [];\n    for(var i=0; i<l1.length; i++){\n        for(var\
    \ j=0; j<l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(item){\n\
    \        return l2.indexOf(item) > -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, index, arr){\n        return arr.indexOf(item)\
    \ === index;\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    return l1.filter(function(n){\n        return\
    \ l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return a - b;\n\
    \    }).filter(function(item, pos, ary){\n        return !pos || item != ary[pos\
    \ - 1];\n    });\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n\
    \        for(let j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \ var result = [];\n  for(var i = 0; i < l1.length; i++){\n    for(var j = 0;\
    \ j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    return l1.filter(function(x){\n\
    \        return l2.indexOf(x) > -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    });\n}\n", "    let common = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                common.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return common.sort((a, b) => a - b);\n}\n", "    return l1.filter(function(x){\n\
    \        return l2.indexOf(x) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    });\n}\n", "    let set1 = new Set(l1);\n    let set2 = new Set(l2);\n\
    \    let common = new Set([...set1].filter(x => set2.has(x)));\n    return Array.from(common).sort((a,\
    \ b) => a - b);\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    return l1.filter(x => l2.includes(x)).sort((a, b)\
    \ => a - b).filter((x, i, arr) => arr.indexOf(x) === i);\n}\n", "    let set1\
    \ = new Set(l1);\n    let set2 = new Set(l2);\n    let common = new Set([...set1].filter(x\
    \ => set2.has(x)));\n    return [...common].sort();\n}\n", "    return l1.filter(function(x){\n\
    \        return l2.indexOf(x) >= 0;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    });\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l1.filter(function(n){\n        return l2.indexOf(n) != -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    }).filter(function(item, pos, ary){\n      \
    \  return !pos || item != ary[pos - 1];\n    });\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) != -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    return l1.filter(function(e){\n        return l2.indexOf(e)\
    \ > -1;\n    }).sort(function(a, b){\n        return a - b;\n    });\n}\n", " \
    \   return l1.filter(function(n){\n        return l2.indexOf(n) != -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    });\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => a.indexOf(x) === i);\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) != -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \ var l3 = [];\n  for (var i = 0; i < l1.length; i++) {\n    for (var j = 0; j\
    \ < l2.length; j++) {\n      if (l1[i] === l2[j]) {\n        l3.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l3;\n}\n", "    var result = [];\n    var l1_unique\
    \ = unique(l1);\n    var l2_unique = unique(l2);\n    for (var i = 0; i < l1_unique.length;\
    \ i++){\n        for (var j = 0; j < l2_unique.length; j++){\n            if (l1_unique[i]\
    \ == l2_unique[j]){\n                result.push(l1_unique[i]);\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort();\n}\n", "    return\
    \ l1.filter(x => l2.includes(x)).sort((a, b) => a - b).filter((x, i, arr) => arr.indexOf(x)\
    \ === i);\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    l3.sort();\n    for(var i = 0; i < l3.length; i++){\n\
    \        for(var j = i + 1; j < l3.length; j++){\n            if(l3[i] == l3[j]){\n\
    \                l3.splice(j, 1);\n                j--;\n            }\n     \
    \   }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] === l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    var result = [];\n    l1.forEach(function(item){\n\
    \        if(l2.indexOf(item) > -1){\n            result.push(item);\n        }\n\
    \    });\n    return result.sort(function(a, b){return a - b;});\n}\n", "    let\
    \ l1Set = new Set(l1);\n    let l2Set = new Set(l2);\n    let commonSet = new\
    \ Set();\n    for(let item of l1Set){\n        if(l2Set.has(item)){\n        \
    \    commonSet.add(item);\n        }\n    }\n    return Array.from(commonSet).sort((a,\
    \ b) => a - b);\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    l3.sort();\n\
    \    for(var i = 0; i < l3.length; i++){\n        for(var j = i + 1; j < l3.length;\
    \ j++){\n            if(l3[i] == l3[j]){\n                l3.splice(j, 1);\n \
    \               j--;\n            }\n        }\n    }\n    return l3;\n}\n", " \
    \   let result = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    result.push(l1[i]);\n            }\n        }\n    }\n    return result.sort();\n\
    }\n", "    let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    l3.push(l1[i]);\n            }\n        }\n    }\n    let l4 = l3.filter(function(item,\
    \ pos) {\n        return l3.indexOf(item) == pos;\n    })\n    return l4.sort();\n\
    }\n", "    return l1.filter(x => l2.includes(x)).sort((a, b) => a - b);\n}\n",
  "    return l1.filter(function(x){\n        return l2.indexOf(x) != -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    });\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n\
    \        for(let j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    l3.sort();\n\
    \    for(let i = 0; i < l3.length; i++){\n        if(l3[i] === l3[i+1]){\n   \
    \         l3.splice(i, 1);\n            i--;\n        }\n    }\n    return l3;\n\
    }\n", "    let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    l3.push(l1[i]);\n            }\n        }\n    }\n    return l3;\n}\n", " \
    \   let result = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    result.push(l1[i]);\n            }\n        }\n    }\n    return result.sort();\n\
    }\n", "    return l1.filter(function(n){\n        return l2.indexOf(n) != -1;\n\
    \    }).sort().filter(function(item, pos, ary) {\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    var result = [];\n    for(var i = 0; i\
    \ < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n          \
    \  if(l1[i] === l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    var common = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                common.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return common.sort(function(a, b){return a - b});\n\
    }\n", "    return l1.filter(function(n){\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b);\n}\n", "    var common = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                common.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return common.sort(function(a, b){return a - b});\n}\n", "  let result\
    \ = [];\n  l1.forEach(function(item){\n    if(l2.includes(item) && !result.includes(item)){\n\
    \      result.push(item);\n    }\n  });\n  return result.sort();\n}\n", "    let\
    \ l3 = l1.filter(x => l2.includes(x));\n    return l3.filter((x, i) => l3.indexOf(x)\
    \ === i);\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return [...new Set(l1.filter(x => l2.includes(x)))].sort((a, b) => a - b);\n\
    }\n", "    return l1.filter(function(n){\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "  var result = [];\n\
    \  for(var i = 0; i < l1.length; i++){\n    for(var j = 0; j < l2.length; j++){\n\
    \      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n      }\n    }\n  }\n\
    \  return result;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary){\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l1.filter(function(n){\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    }).filter(function(item, pos, ary){\n      \
    \  return !pos || item != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    let result = [];\n\
    \    let l1Set = new Set(l1);\n    let l2Set = new Set(l2);\n    for (let item\
    \ of l1Set){\n        if (l2Set.has(item)){\n            result.push(item);\n\
    \        }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    l3.sort();\n    var l4 = [];\n    for(var i = 0; i\
    \ < l3.length; i++){\n        if(l3[i] != l3[i+1]){\n            l4.push(l3[i]);\n\
    \        }\n    }\n    return l4;\n}\n", "    let result = [];\n    for(let i\
    \ = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] === l2[j]){\n                result.push(l1[i]);\n        \
    \    }\n        }\n    }\n    return result.sort();\n}\n", "    return l1.filter(function(item){\n\
    \        return l2.indexOf(item) != -1;\n    }).sort(function(a, b){\n       \
    \ return a - b;\n    });\n}\n", "  return l1.filter(function(n){\n    return l2.indexOf(n)\
    \ !== -1;\n  }).sort(function(a, b){\n    return a - b;\n  }).filter(function(item,\
    \ pos, ary){\n    return !pos || item != ary[pos - 1];\n  });\n}\n", "    var\
    \ l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j\
    \ < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var common =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                common.push(l1[i]);\n\
    \            }\n        }\n    }\n    return common.sort();\n}\n", "    let l3\
    \ = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n \
    \           }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) != -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    });\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    let common = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                common.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return common.sort((a, b) => a - b);\n}\n", "    var result = [];\n \
    \   for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    return l1.filter(function(n){\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b){\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary){\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n\
    \        for(let j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    return l1.filter(function(n){\n        return l2.indexOf(n)\
    \ != -1;\n    }).sort(function(a, b){\n        return a - b;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_88_sort_array
language: js
prompt: "//Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n// Note:\n// * don't\
  \ change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n// >>> sort_array([5])\n\
  // [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0, 1, 2, 3, 4, 5]\n// >>> sort_array([2,\
  \ 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2, 1, 0]\nfunction sort_array(array){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
  \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
  \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
  \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42,\
  \ 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\n\
  test();"
completions: ["    if(array.length === 0 || array.length === 1) return array;\n  \
    \  if((array[0] + array[array.length - 1]) % 2 === 0) {\n        return array.sort((a,\
    \ b) => b - a);\n    } else {\n        return array.sort((a, b) => a - b);\n \
    \   }\n}\n", "    let sum = array[0] + array[array.length - 1];\n    if (sum %\
    \ 2 === 0) {\n        return array.sort((a, b) => b - a);\n    } else {\n    \
    \    return array.sort((a, b) => a - b);\n    }\n}", "  if(array.length === 0\
    \ || array.length === 1) return array;\n  if((array[0] + array[array.length -\
    \ 1]) % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return\
    \ array.sort((a, b) => a - b);\n  }\n}\n", "    if(array.length == 0 || array.length\
    \ == 1) return array;\n    if((array[0] + array[array.length - 1]) % 2 == 0) {\n\
    \        return array.sort(function(a, b){return b - a});\n    } else {\n    \
    \    return array.sort(function(a, b){return a - b});\n    }\n}\n", "    if (array.length\
    \ === 0) {\n        return array;\n    }\n    if (array.length === 1) {\n    \
    \    return array;\n    }\n    if (array.length > 1) {\n        if ((array[0]\
    \ + array[array.length - 1]) % 2 === 0) {\n            return array.sort(function(a,\
    \ b) {\n                return b - a;\n            });\n        } else {\n   \
    \         return array.sort(function(a, b) {\n                return a - b;\n\
    \            });\n        }\n    }\n}\n", "    let sum = array[0] + array[array.length\
    \ - 1];\n    if (sum % 2 === 0) {\n        return array.sort((a, b) => b - a);\n\
    \    } else {\n        return array.sort((a, b) => a - b);\n    }\n}\n", "   \
    \ if(array.length === 0 || array.length === 1){\n        return array;\n    }\n\
    \    if((array[0] + array[array.length - 1]) % 2 === 0){\n        return array.sort((a,\
    \ b) => b - a);\n    }\n    return array.sort((a, b) => a - b);\n}", "    if(array.length\
    \ === 0 || array.length === 1) return array;\n    if((array[0] + array[array.length\
    \ - 1]) % 2 === 0) return array.sort((a, b) => b - a);\n    return array.sort((a,\
    \ b) => a - b);\n}\n", "  if (array.length === 0 || array.length === 1) {\n  \
    \  return array;\n  }\n  if ((array[0] + array[array.length - 1]) % 2 === 0) {\n\
    \    return array.sort(function(a, b) {\n      return b - a;\n    });\n  } else\
    \ {\n    return array.sort(function(a, b) {\n      return a - b;\n    });\n  }\n\
    }\n", "    if(array.length === 0 || array.length === 1) return array;\n    if((array[0]\
    \ + array[array.length - 1]) % 2 === 0) {\n        return array.sort((a, b) =>\
    \ b - a);\n    }\n    return array.sort((a, b) => a - b);\n}\n", "    if(array.length\
    \ === 0 || array.length === 1){\n        return array;\n    }\n    if((array[0]\
    \ + array[array.length - 1]) % 2 === 0){\n        return array.sort(function(a,\
    \ b){\n            return b - a;\n        });\n    }\n    return array.sort(function(a,\
    \ b){\n        return a - b;\n    });\n}\n", "    if(array.length === 0 || array.length\
    \ === 1) return array;\n    let sum = array[0] + array[array.length - 1];\n  \
    \  if(sum % 2 === 0){\n        return array.sort((a, b) => b - a);\n    } else\
    \ {\n        return array.sort((a, b) => a - b);\n    }\n}\n", "    if(array.length\
    \ === 0 || array.length === 1){\n        return array;\n    }\n    let sum = array[0]\
    \ + array[array.length - 1];\n    if(sum % 2 === 0){\n        return array.sort((a,\
    \ b) => b - a);\n    }\n    return array.sort((a, b) => a - b);\n}\n", "    if(array.length\
    \ === 0){\n        return array;\n    }\n    if(array.length === 1){\n       \
    \ return array;\n    }\n    if(array.length > 1){\n        if((array[0] + array[array.length\
    \ - 1]) % 2 === 0){\n            return array.sort(function(a, b){\n         \
    \       return b - a;\n            });\n        }\n        else{\n           \
    \ return array.sort(function(a, b){\n                return a - b;\n         \
    \   });\n        }\n    }\n}\n", "    if(array.length === 0 || array.length ===\
    \ 1) return array;\n    if((array[0] + array[array.length - 1]) % 2 === 0) {\n\
    \        return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
    \ b) => a - b);\n    }\n}\n", "    if(array.length == 0 || array.length == 1)\
    \ return array;\n    if((array[0] + array[array.length - 1]) % 2 == 0) {\n   \
    \     return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
    \ b) => a - b);\n    }\n}\n", "    if(array.length == 0 || array.length == 1)\
    \ return array;\n    if((array[0] + array[array.length - 1]) % 2 == 0) {\n   \
    \     return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
    \ b) => a - b);\n    }\n}\n", "    if(array.length === 0 || array.length === 1){\n\
    \        return array;\n    }\n    if((array[0] + array[array.length - 1]) % 2\
    \ === 0){\n        return array.sort((a, b) => b - a);\n    }\n    return array.sort((a,\
    \ b) => a - b);\n}\n", "    if(array.length == 0){\n        return array;\n  \
    \  }\n    if(array.length == 1){\n        return array;\n    }\n    if(array.length\
    \ > 1){\n        if((array[0] + array[array.length - 1]) % 2 == 0){\n        \
    \    return array.sort(function(a, b){return b - a});\n        }\n        else{\n\
    \            return array.sort(function(a, b){return a - b});\n        }\n   \
    \ }\n}\n", "    if(array.length === 0 || array.length === 1) return array;\n \
    \   if((array[0] + array[array.length - 1]) % 2 === 0) {\n        return array.sort((a,\
    \ b) => b - a);\n    } else {\n        return array.sort((a, b) => a - b);\n \
    \   }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

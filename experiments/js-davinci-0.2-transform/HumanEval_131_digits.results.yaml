language: js
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString().split(\"\");\n    for(var i = 0; i\
    \ < num.length; i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8xgqrudv.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8xgqrudv.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString();\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa8vosg42.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa8vosg42.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 != 0){\n            product *= parseInt(str[i]);\n\
    \        }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp433jqbga.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp433jqbga.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n>0){\n        var digit = n%10;\n        if(digit%2!=0){\n\
    \            product = product*digit;\n        }\n        n = Math.floor(n/10);\n\
    \    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpnetrecbg.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnetrecbg.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString().split('');\n    for(let i = 0; i <\
    \ num.length; i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpe7cpm243.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe7cpm243.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n;\n    while(num > 0){\n        let digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpo_wx_cjq.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_wx_cjq.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var n = n.toString();\n    for (var i = 0; i < n.length; i++){\n\
    \        if (n[i] % 2 !== 0){\n            product *= n[i];\n        }\n    }\n\
    \    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6epqtcdc.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6epqtcdc.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphzbz3kn7.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphzbz3kn7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 != 0){\n            product *= str[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfey9m5pa.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfey9m5pa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1l93byic.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1l93byic.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 != 0){\n            product *= digit;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvn3tkqfd.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvn3tkqfd.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 != 0){\n            product *= digit;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvn3tkqfd.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvn3tkqfd.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ result = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6iy197q4.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6iy197q4.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= parseInt(num[i]);\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp49o_yalm.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp49o_yalm.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString().split('');\n    for(let i = 0; i <\
    \ num.length; i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpe7cpm243.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe7cpm243.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            product *= str[i];\n    \
    \    }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa3e02l2r.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa3e02l2r.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (parseInt(str[i]) % 2 !== 0){\n            product *= parseInt(str[i]);\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpnt2d8qin.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnt2d8qin.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 != 0){\n            product *= digit;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvn3tkqfd.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvn3tkqfd.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= parseInt(num[i]);\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp49o_yalm.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp49o_yalm.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n;\n    while(num > 0){\n        let digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpo_wx_cjq.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_wx_cjq.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdkdwxqv5.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdkdwxqv5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ result = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            result *= str[i];\n     \
    \   }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpt2rptpyi.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt2rptpyi.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            product *= parseInt(str[i]);\n\
    \        }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwukh2o55.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwukh2o55.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpmkqtxmsj.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmkqtxmsj.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 == 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp58yjc9bw.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp58yjc9bw.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n;\n    while(num > 0){\n        let digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpo_wx_cjq.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_wx_cjq.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (parseInt(str[i]) % 2 !== 0){\n            product *= parseInt(str[i]);\n\
    \        }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv_hflvl6.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv_hflvl6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            product *= str[i];\n    \
    \    }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpb1ra4vc_.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1ra4vc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var digit = 0;\n    while (n > 0){\n        digit = n % 10;\n\
    \        if (digit % 2 != 0){\n            product *= digit;\n        }\n    \
    \    n = Math.floor(n / 10);\n    }\n    return product;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_qawt521.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_qawt521.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 != 0){\n            product *= str[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpekyimvp7.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpekyimvp7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n;\n    while(num > 0){\n        let digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4f2ab323.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4f2ab323.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ sum = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 != 0){\n            sum *= num[i];\n        }\n    }\n\
    \    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6qei7wnw.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6qei7wnw.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ sum = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 != 0){\n            sum *= num[i];\n        }\n    }\n\
    \    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6qei7wnw.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6qei7wnw.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString().split('');\n    for(let i = 0; i <\
    \ num.length; i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n\
    \        }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpc9t389wl.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc9t389wl.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n>0){\n        let digit = n%10;\n        if(digit%2!==0){\n\
    \            product*=digit;\n        }\n        n=Math.floor(n/10);\n    }\n\
    \    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxqp2st45.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxqp2st45.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 != 0){\n            product *= str[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpekyimvp7.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpekyimvp7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ result = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            result *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8h9xdxi4.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8h9xdxi4.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphzbz3kn7.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphzbz3kn7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            product *= str[i];\n    \
    \    }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa3e02l2r.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa3e02l2r.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 != 0){\n            product *= str[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfey9m5pa.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfey9m5pa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var lastDigit = n % 10;\n        if(lastDigit\
    \ % 2 != 0){\n            product *= lastDigit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpj3gj8kwk.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj3gj8kwk.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var digit;\n    while (n > 0){\n        digit = n % 10;\n\
    \        if (digit % 2 !== 0){\n            product *= digit;\n        }\n   \
    \     n = Math.floor(n / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpzn_c4pac.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzn_c4pac.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            product *= str[i];\n    \
    \    }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa3e02l2r.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa3e02l2r.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphzbz3kn7.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphzbz3kn7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var number = n.toString();\n    for (var i = 0; i < number.length;\
    \ i++){\n        if (number[i] % 2 != 0){\n            product *= number[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1h7nxne_.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1h7nxne_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString().split(\"\");\n    for(var i = 0; i\
    \ < num.length; i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp8xgqrudv.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8xgqrudv.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 == 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp58yjc9bw.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp58yjc9bw.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let lastDigit = n % 10;\n        if(lastDigit\
    \ % 2 != 0){\n            product *= lastDigit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcegpjqln.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcegpjqln.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpmkqtxmsj.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmkqtxmsj.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ sum = 1;\n    let str = n.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 !== 0){\n            sum *= str[i];\n        }\n    }\n\
    \    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpuwy19h63.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuwy19h63.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= parseInt(num[i]);\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp49o_yalm.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp49o_yalm.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var n = n.toString();\n    for (var i = 0; i < n.length; i++){\n\
    \        if (n[i] % 2 !== 0){\n            product *= n[i];\n        }\n    }\n\
    \    return product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcg20e08o.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcg20e08o.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphzbz3kn7.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphzbz3kn7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n;\n    while(num > 0){\n        let digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpo_wx_cjq.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_wx_cjq.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ num = n.toString();\n    var result = 1;\n    for (var i = 0; i < num.length;\
    \ i++){\n        if (num[i] % 2 !== 0){\n            result *= num[i];\n     \
    \   }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpg1vn5bww.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpg1vn5bww.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString().split(\"\");\n    for(var i = 0; i\
    \ < num.length; i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n\
    \        }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpio_54dt5.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpio_54dt5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 === 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpots__0wg.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpots__0wg.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5rnnl7m9.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5rnnl7m9.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 === 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4ltz30ms.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4ltz30ms.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    //\
    \ your code here\n    var product = 1;\n    var num = n.toString();\n    for (var\
    \ i = 0; i < num.length; i++){\n        if (num[i] % 2 !== 0){\n            product\
    \ *= num[i];\n        }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpn9keh8m5.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn9keh8m5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    //\
    \ your code here\n    let product = 1;\n    let num = n;\n    while (num > 0)\
    \ {\n        let digit = num % 10;\n        if (digit % 2 !== 0) {\n         \
    \   product *= digit;\n        }\n        num = Math.floor(num / 10);\n    }\n\
    \    return product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpjji988c_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjji988c_.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString();\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyz1p5ttr.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz1p5ttr.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 === 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpots__0wg.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpots__0wg.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            product *= str[i];\n    \
    \    }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpb1ra4vc_.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1ra4vc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString();\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyz1p5ttr.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz1p5ttr.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var n = n.toString();\n    for (var i = 0; i < n.length; i++){\n\
    \        if (n[i] % 2 != 0){\n            product *= n[i];\n        }\n    }\n\
    \    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp5trras6s.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5trras6s.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString();\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa8vosg42.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa8vosg42.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var lastDigit = n % 10;\n        if(lastDigit\
    \ % 2 !== 0){\n            product *= lastDigit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpkhqyqv9k.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkhqyqv9k.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 === 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4ltz30ms.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4ltz30ms.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n;\n    while(num > 0){\n        let digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4f2ab323.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4f2ab323.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 === 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4ltz30ms.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4ltz30ms.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString();\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyz1p5ttr.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz1p5ttr.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ prod = 1;\n    while (n > 0){\n        var digit = n % 10;\n        if (digit\
    \ % 2 != 0){\n            prod *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return prod;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpw52bs330.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw52bs330.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 == 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp58yjc9bw.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp58yjc9bw.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 != 0){\n            product *= digit;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return product;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprcyo9bd_.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprcyo9bd_.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdkdwxqv5.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdkdwxqv5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString().split(\"\");\n    for(var i = 0; i\
    \ < num.length; i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprkccfmsj.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprkccfmsj.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var lastDigit = n % 10;\n        if(lastDigit\
    \ % 2 != 0){\n            product *= lastDigit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvqclwj10.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvqclwj10.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ result = 1;\n    while(n>0){\n        var digit = n%10;\n        if(digit%2!=0){\n\
    \            result *= digit;\n        }\n        n = Math.floor(n/10);\n    }\n\
    \    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpt1tzlp0u.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt1tzlp0u.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n;\n    while(num > 0){\n        let digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpo_wx_cjq.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo_wx_cjq.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 === 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmptyskyje_.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptyskyje_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var number = n.toString();\n    for (var i = 0; i < number.length;\
    \ i++){\n        if (number[i] % 2 != 0){\n            product *= number[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1h7nxne_.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1h7nxne_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphzbz3kn7.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphzbz3kn7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmphzbz3kn7.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphzbz3kn7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 == 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp58yjc9bw.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp58yjc9bw.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= parseInt(num[i]);\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpfohv_s5r.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfohv_s5r.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 != 0){\n            product *= digit;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvn3tkqfd.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvn3tkqfd.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ result = 1;\n    let str = n.toString();\n    for (let i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            result *= str[i];\n     \
    \   }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp6g6ec5qa.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6g6ec5qa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdkdwxqv5.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdkdwxqv5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpur3iboz1.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur3iboz1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n      \
    \  }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpdkdwxqv5.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdkdwxqv5.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var nString = n.toString();\n    for (var i = 0; i < nString.length;\
    \ i++){\n        if (nString[i] % 2 !== 0){\n            product *= nString[i];\n\
    \        }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_9731fj2.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_9731fj2.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var digit;\n    while (n > 0){\n        digit = n % 10;\n\
    \        if (digit % 2 != 0){\n            product *= digit;\n        }\n    \
    \    n = Math.floor(n / 10);\n    }\n    return product;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpu_6tqc1s.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu_6tqc1s.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 === 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4ltz30ms.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4ltz30ms.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 != 0){\n            product *= digit;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvn3tkqfd.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvn3tkqfd.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var n = n.toString().split(\"\");\n    for(var i = 0; i <\
    \ n.length; i++){\n        if(n[i] % 2 !== 0){\n            product *= n[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpri8u96qw.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpri8u96qw.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n>0){\n        var digit = n%10;\n        if(digit%2!=0){\n\
    \            product *= digit;\n        }\n        n = Math.floor(n/10);\n   \
    \ }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpkffsqgqy.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkffsqgqy.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var n = n.toString();\n    for (var i = 0; i < n.length; i++){\n\
    \        if (n[i] % 2 !== 0){\n            product *= n[i];\n        }\n    }\n\
    \    return product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n \
    \ assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpcg20e08o.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcg20e08o.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString().split(\"\");\n    for(var i = 0; i\
    \ < num.length; i++){\n        if(num[i] % 2 != 0){\n            product *= num[i];\n\
    \        }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprkccfmsj.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprkccfmsj.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString();\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyz1p5ttr.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz1p5ttr.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp3_7n7s75.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3_7n7s75.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpur3iboz1.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur3iboz1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ result = 1;\n    var arr = n.toString().split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 !== 0){\n            result *= arr[i];\n      \
    \  }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0w67ybyt.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0w67ybyt.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            product *= str[i];\n    \
    \    }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa3e02l2r.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa3e02l2r.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    while(n > 0){\n        let digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpsyz26l9j.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyz26l9j.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1ein4xuv.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ein4xuv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1l93byic.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1l93byic.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ odd = 1;\n    let num = n.toString();\n    for(let i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 !== 0){\n            odd *= num[i];\n        }\n    }\n\
    \    return odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
    \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmptixv69l_.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptixv69l_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpyrohdl_0.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrohdl_0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var str = n.toString();\n    for (var i = 0; i < str.length;\
    \ i++){\n        if (str[i] % 2 !== 0){\n            product *= str[i];\n    \
    \    }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpb1ra4vc_.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1ra4vc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1l93byic.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1l93byic.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1f3c67el.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f3c67el.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 !== 0){\n            product *= digit;\n       \
    \ }\n        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpmkqtxmsj.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmkqtxmsj.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748857
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 != 0){\n            product *= digit;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvn3tkqfd.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvn3tkqfd.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n;\n    while(num > 0){\n        var digit = num\
    \ % 10;\n        if(digit % 2 != 0){\n            product *= digit;\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return product;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digits;\n\
    \  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n \
    \ assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
    \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
    \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpvn3tkqfd.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvn3tkqfd.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 === 1){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpots__0wg.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpots__0wg.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    var num = n.toString();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpv1i_ckki.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1i_ckki.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 !== 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpur3iboz1.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpur3iboz1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659748858
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    let\
    \ product = 1;\n    let num = n.toString();\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 !== 0){\n            product *= num[i];\n     \
    \   }\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpa8vosg42.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpa8vosg42.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n    var\
    \ product = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit\
    \ % 2 != 0){\n            product *= digit;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digits;\n  assert.deepEqual(candidate(5),5);\n\
    \  assert.deepEqual(candidate(54),5);\n  assert.deepEqual(candidate(120),1);\n\
    \  assert.deepEqual(candidate(5014),5);\n  assert.deepEqual(candidate(98765),315);\n\
    \  assert.deepEqual(candidate(5576543),2625);\n  assert.deepEqual(candidate(2468),0);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1l93byic.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1l93byic.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''

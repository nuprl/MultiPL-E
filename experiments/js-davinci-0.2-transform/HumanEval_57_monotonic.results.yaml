language: js
name: HumanEval_57_monotonic
results:
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var i = 0;\n    var j = 1;\n    var inc = true;\n    var dec = true;\n   \
    \ while (j < l.length){\n        if (l[i] > l[j]){\n            inc = false;\n\
    \        }\n        if (l[i] < l[j]){\n            dec = false;\n        }\n \
    \       i++;\n        j++;\n    }\n    return inc || dec;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length <= 1){\n        return true;\n    }\n    var inc = l[0] < l[1];\n\
    \    for(var i = 1; i < l.length; i++){\n        if(inc){\n            if(l[i-1]\
    \ > l[i]){\n                return false;\n            }\n        }\n        else{\n\
    \            if(l[i-1] < l[i]){\n                return false;\n            }\n\
    \        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var flag = true;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i]\
    \ < l[i+1]){\n            flag = true;\n        }\n        else if(l[i] > l[i+1]){\n\
    \            flag = true;\n        }\n        else{\n            flag = false;\n\
    \            break;\n        }\n    }\n    return flag;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpaqrt38i6.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpaqrt38i6.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var inc = true;\n    var dec = true;\n    for(var i = 0; i < l.length - 1;\
    \ i++){\n        if(l[i] > l[i+1]){\n            inc = false;\n        }\n   \
    \     if(l[i] < l[i+1]){\n            dec = false;\n        }\n    }\n    return\
    \ inc || dec;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length-1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var inc = true;\n    var dec = true;\n    for(var i = 0; i < l.length - 1;\
    \ i++){\n        if(l[i] > l[i+1]){\n            inc = false;\n        }\n   \
    \     if(l[i] < l[i+1]){\n            dec = false;\n        }\n    }\n    return\
    \ inc || dec;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var isIncreasing = true;\n    var isDecreasing = true;\n    for(var i = 0;\
    \ i < l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            isIncreasing\
    \ = false;\n        }\n        if(l[i] < l[i+1]){\n            isDecreasing =\
    \ false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var inc = true;\n    var dec = true;\n    for(var i = 0; i < l.length-1; i++){\n\
    \        if(l[i] > l[i+1]){\n            inc = false;\n        }\n        if(l[i]\
    \ < l[i+1]){\n            dec = false;\n        }\n    }\n    return inc || dec;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var isIncreasing = true;\n    var isDecreasing = true;\n    for(var i = 0;\
    \ i < l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            isIncreasing\
    \ = false;\n        }\n        if(l[i] < l[i+1]){\n            isDecreasing =\
    \ false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var increasing = true;\n  var decreasing = true;\n  for(var i = 0; i < l.length\
    \ - 1; i++){\n    if(l[i] > l[i+1]){\n      increasing = false;\n    }\n    if(l[i]\
    \ < l[i+1]){\n      decreasing = false;\n    }\n  }\n  return increasing || decreasing;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var i = 0;\n    var j = 1;\n    var k = 2;\n    var increasing = false;\n\
    \    var decreasing = false;\n    while(i < l.length && j < l.length && k < l.length){\n\
    \        if(l[i] < l[j] && l[j] < l[k]){\n            increasing = true;\n   \
    \     }\n        if(l[i] > l[j] && l[j] > l[k]){\n            decreasing = true;\n\
    \        }\n        i++;\n        j++;\n        k++;\n    }\n    return increasing\
    \ || decreasing;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmimihxtf.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmimihxtf.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length-1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var inc = true;\n\tvar dec = true;\n\tfor(var i = 0; i < l.length - 1; i++){\n\
    \t\tif(l[i] > l[i+1]){\n\t\t\tinc = false;\n\t\t}\n\t\tif(l[i] < l[i+1]){\n\t\t\
    \tdec = false;\n\t\t}\n\t}\n\treturn inc || dec;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Return True is list elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var inc = true;\n  var dec = true;\n  for(var i = 0; i < l.length-1; i++){\n\
    \    if(l[i] > l[i+1]){\n      inc = false;\n    }\n    if(l[i] < l[i+1]){\n \
    \     dec = false;\n    }\n  }\n  return inc || dec;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''

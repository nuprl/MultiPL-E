name: HumanEval_55_fib
language: js
prompt: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n//\
  \ 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
  \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n \
  \ assert.deepEqual(candidate(12),144);\n}\n\ntest();"
completions: ["    if(n === 0){\n        return 0;\n    }\n    if(n === 1){\n    \
    \    return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n === 0){\n\
    \        return 0;\n    }\n    if(n === 1){\n        return 1;\n    }\n    return\
    \ fib(n-1) + fib(n-2);\n}\n", "    if(n == 1 || n == 2){\n        return 1;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n==1){\n        return\
    \ 1;\n    }\n    else if(n==2){\n        return 1;\n    }\n    else{\n       \
    \ return fib(n-1)+fib(n-2);\n    }\n}\n", "    if(n <= 2){\n        return 1;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n === 0){\n        return\
    \ 0;\n    }\n    if(n === 1){\n        return 1;\n    }\n    return fib(n-1) +\
    \ fib(n-2);\n}\n", "    if(n==1){\n        return 1;\n    }\n    else if(n==2){\n\
    \        return 1;\n    }\n    else{\n        return fib(n-1)+fib(n-2);\n    }\n\
    }\n", "    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n        return\
    \ 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n<=2){\n        return\
    \ 1;\n    }\n    return fib(n-1)+fib(n-2);\n}\n", "    if(n === 0){\n        return\
    \ 0;\n    }\n    if(n === 1){\n        return 1;\n    }\n    return fib(n-1) +\
    \ fib(n-2);\n}\n", "    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n\
    \        return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n <=\
    \ 2){\n        return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n<=1){\n\
    \        return n;\n    }\n    return fib(n-1)+fib(n-2);\n}\n", "    if(n<=2){\n\
    \        return 1;\n    }\n    else{\n        return fib(n-1)+fib(n-2);\n    }\n\
    }\n", "    if(n == 1 || n == 2){\n        return 1;\n    }\n    return fib(n-1)\
    \ + fib(n-2);\n}\n", "    if(n === 0){\n        return 0;\n    }\n    if(n ===\
    \ 1){\n        return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n\
    \ === 0){\n        return 0;\n    }\n    if(n === 1){\n        return 1;\n   \
    \ }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n <= 2){\n        return 1;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n == 0){\n        return\
    \ 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return fib(n-1) +\
    \ fib(n-2);\n}\n", "    if(n <= 2){\n        return 1;\n    }\n    return fib(n-1)\
    \ + fib(n-2);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

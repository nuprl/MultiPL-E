language: js
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    let result = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    result = char_set.size;\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i].toLowerCase()) == -1){\n       \
    \     unique.push(string[i].toLowerCase());\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct = [];\n    for (var i = 0; i < string.length; i++){\n      \
    \  if (distinct.indexOf(string[i].toLowerCase()) === -1){\n            distinct.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(arr.indexOf(string[i].toLowerCase()) === -1){\n          \
    \  arr.push(string[i].toLowerCase());\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (!char_set.has(string[i])){\n            char_set.add(string[i]);\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpzbrptb4o.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzbrptb4o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        var char = string[i];\n\
    \        if(characters[char] === undefined){\n            characters[char] = true;\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_array = string.split(\"\");\n    var string_array_lower\
    \ = string.toLowerCase().split(\"\");\n    for (var i = 0; i < string_array.length;\
    \ i++) {\n        if (string_array_lower.indexOf(string_array_lower[i]) == i)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuy74rka2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuy74rka2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i <\
    \ arr.length; i++){\n        if(arr.indexOf(arr[i]) == i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpp23xj1y1.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp23xj1y1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (characters[string[i].toLowerCase()] === undefined){\n   \
    \         characters[string[i].toLowerCase()] = 1;\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var lower = string.toLowerCase();\n    for (var i = 0;\
    \ i < lower.length; i++){\n        if (lower.indexOf(lower[i]) == i){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var seen = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (seen[string[i].toLowerCase()] === undefined){\n         \
    \   count++;\n            seen[string[i].toLowerCase()] = true;\n        }\n \
    \   }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(arr.indexOf(string[i].toLowerCase()) === -1){\n          \
    \  arr.push(string[i].toLowerCase());\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let string_lower = string.toLowerCase();\n    for (let\
    \ i = 0; i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = string.toLowerCase().split(\"\");\n\
    \    for(var i = 0; i < characters.length; i++){\n        if(characters.indexOf(characters[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2lrfb7qt.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2lrfb7qt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) == i){\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i]);\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpxuc2vhkf.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxuc2vhkf.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = [];\n    var string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        if(arr.indexOf(string[i])\
    \ == -1){\n            arr.push(string[i]);\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ == -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var distinct = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(distinct.indexOf(string[i].toLowerCase()) == -1){\n      \
    \      distinct.push(string[i].toLowerCase());\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct = [];\n    for (var i = 0; i < string.length; i++){\n      \
    \  if (distinct.indexOf(string[i].toLowerCase()) === -1){\n            distinct.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (characters.indexOf(string[i].toLowerCase()) == -1){\n   \
    \         characters.push(string[i].toLowerCase());\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i <\
    \ arr.length; i++){\n        if(arr.indexOf(arr[i]) == i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpp23xj1y1.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp23xj1y1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var string = string.toLowerCase();\n    var count = 0;\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvr5iw6yn.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvr5iw6yn.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \  var count = 0;\n  var seen = {};\n  for (var i = 0; i < string.length; i++)\
    \ {\n    if (seen[string[i].toLowerCase()] === undefined) {\n      count++;\n\
    \      seen[string[i].toLowerCase()] = true;\n    }\n  }\n  return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ == -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvr5iw6yn.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvr5iw6yn.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \  var count = 0;\n  var string = string.toLowerCase();\n  for (var i = 0; i <\
    \ string.length; i++) {\n    if (string.indexOf(string[i]) === i) {\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (char_set.indexOf(string[i].toLowerCase()) == -1){\n     \
    \       char_set.push(string[i].toLowerCase());\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvr5iw6yn.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvr5iw6yn.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var result = 0;\n    var array = string.split(\"\");\n    var newArray =\
    \ [];\n    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            result++;\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) === i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(arr.indexOf(string[i].toLowerCase()) == -1){\n           \
    \ arr.push(string[i].toLowerCase());\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let arr = string.split(\"\");\n    let newArr = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(!newArr.includes(arr[i].toLowerCase())){\n\
    \            newArr.push(arr[i].toLowerCase());\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuy74rka2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuy74rka2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var seen = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (!seen[string[i].toLowerCase()]){\n            seen[string[i].toLowerCase()]\
    \ = true;\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var chars = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (chars[string[i].toLowerCase()] === undefined){\n        \
    \    chars[string[i].toLowerCase()] = 1;\n            count++;\n        }\n  \
    \  }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var str = string.toLowerCase();\n    for(var i = 0; i\
    \ < str.length; i++){\n        if(str.indexOf(str[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (characters.indexOf(string[i].toLowerCase()) == -1){\n   \
    \         characters.push(string[i].toLowerCase());\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var arr = string.split(\"\");\n    var newArr = [];\n    for(var i = 0; i\
    \ < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase()) === -1){\n\
    \            newArr.push(arr[i].toLowerCase());\n        }\n    }\n    return\
    \ newArr.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2lrfb7qt.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2lrfb7qt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) == i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4w7tohs5.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4w7tohs5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \  var count = 0;\n  var distinct = [];\n  for (var i = 0; i < string.length;\
    \ i++) {\n    if (distinct.indexOf(string[i].toLowerCase()) === -1) {\n      distinct.push(string[i].toLowerCase());\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_lower = string.toLowerCase();\n    for (var\
    \ i = 0; i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count += 1;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n     \
    \   if (unique.indexOf(string[i]) == -1) {\n            unique += string[i];\n\
    \        }\n    }\n    return unique.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpiq35nqc4.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiq35nqc4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuy74rka2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuy74rka2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = string.toLowerCase().split(\"\");\n\
    \    for(var i = 0; i < characters.length; i++){\n        if(characters.indexOf(characters[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) == i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4w7tohs5.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4w7tohs5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvr5iw6yn.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvr5iw6yn.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (string.indexOf(string[i]) == i){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7hezoole.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7hezoole.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (char_set.indexOf(string[i].toLowerCase()) == -1){\n     \
    \       char_set.push(string[i].toLowerCase());\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2lrfb7qt.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2lrfb7qt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var unique = array.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp0tx2s_bv.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0tx2s_bv.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = string.toLowerCase().split(\"\");\n\
    \    for(var i = 0; i < characters.length; i++){\n        if(characters.indexOf(characters[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2lrfb7qt.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2lrfb7qt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \  var count = 0;\n  var unique = \"\";\n  for (var i = 0; i < string.length;\
    \ i++) {\n    if (unique.indexOf(string[i].toLowerCase()) == -1) {\n      unique\
    \ += string[i].toLowerCase();\n      count++;\n    }\n  }\n  return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.lastIndexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2lrfb7qt.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2lrfb7qt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_lower = string.toLowerCase();\n    for (var\
    \ i = 0; i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) == i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4w7tohs5.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4w7tohs5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (char_set.indexOf(string[i].toLowerCase()) == -1){\n     \
    \       char_set.push(string[i].toLowerCase());\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (!char_set.has(string[i])){\n            char_set.add(string[i]);\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpzbrptb4o.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzbrptb4o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let unique = [];\n    for(let i = 0; i < string.length;\
    \ i++){\n        if(!unique.includes(string[i].toLowerCase())){\n            unique.push(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var new_string = string.toLowerCase();\n    var count = 0;\n    for (var\
    \ i = 0; i < new_string.length; i++){\n        if (new_string.indexOf(new_string[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_array = string.split(\"\");\n    var string_array_lowercase\
    \ = string.toLowerCase().split(\"\");\n    for (var i = 0; i < string_array.length;\
    \ i++){\n        if (string_array_lowercase.indexOf(string_array_lowercase[i])\
    \ == i){\n            count += 1;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var char_set = \"\";\n    for (var i = 0; i < string.length; i++) {\n   \
    \     if (char_set.indexOf(string.charAt(i).toLowerCase()) == -1) {\n        \
    \    char_set += string.charAt(i).toLowerCase();\n        }\n    }\n    return\
    \ char_set.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(array.indexOf(string[i].toLowerCase()) === -1){\n        \
    \    array.push(string[i].toLowerCase());\n            count++;\n        }\n \
    \   }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (!char_set.has(string[i])){\n            char_set.add(string[i]);\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpzbrptb4o.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzbrptb4o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct_characters = 0;\n    var characters = string.toLowerCase().split(\"\
    \");\n    var unique_characters = [];\n    for (var i = 0; i < characters.length;\
    \ i++){\n        if (unique_characters.indexOf(characters[i]) == -1){\n      \
    \      unique_characters.push(characters[i]);\n        }\n    }\n    return unique_characters.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (!char_set.has(string[i])){\n            char_set.add(string[i]);\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpzbrptb4o.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzbrptb4o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    var stringArray\
    \ = string.split(\"\");\n    var distinctArray = [];\n    for(var i = 0; i < stringArray.length;\
    \ i++){\n        if(distinctArray.indexOf(stringArray[i]) === -1){\n         \
    \   distinctArray.push(stringArray[i]);\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string2 = string.toLowerCase();\n    for (var i =\
    \ 0; i < string2.length; i++){\n        if (string2.indexOf(string2[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    for (var i = 0; i < string.length; i++){\n        var\
    \ char = string[i];\n        if (string.indexOf(char) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpr1lfmji6.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr1lfmji6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2lrfb7qt.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2lrfb7qt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var str = string.toLowerCase();\n    var count = 0;\n    for(var i = 0; i\
    \ < str.length; i++){\n        if(str.indexOf(str[i]) == i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var string = string.toLowerCase();\n    var count = 0;\n    var arr = [];\n\
    \    for(var i = 0; i < string.length; i++){\n        if(arr.indexOf(string[i])\
    \ == -1){\n            arr.push(string[i]);\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuy74rka2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuy74rka2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var dict = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (dict[string[i].toLowerCase()] == undefined){\n          \
    \  dict[string[i].toLowerCase()] = 1;\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuy74rka2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuy74rka2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \tvar result = 0;\n\tvar char_set = new Set();\n\tfor (var i = 0; i < string.length;\
    \ i++){\n\t\tchar_set.add(string[i].toLowerCase());\n\t}\n\treturn char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        var current = array[i];\n        if(array.indexOf(current)\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpy9ce4u9c.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9ce4u9c.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ == -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_lower = string.toLowerCase();\n    for (var\
    \ i = 0; i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count += 1;\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (characters.indexOf(string[i].toLowerCase()) == -1){\n   \
    \         characters.push(string[i].toLowerCase());\n            count++;\n  \
    \      }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_array = string.split(\"\");\n    var unique_array\
    \ = [];\n    for (var i = 0; i < string_array.length; i++){\n        if (unique_array.indexOf(string_array[i].toLowerCase())\
    \ == -1){\n            unique_array.push(string_array[i].toLowerCase());\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_array = string.split(\"\");\n    var distinct_array\
    \ = [];\n    for (var i = 0; i < string_array.length; i++){\n        if (distinct_array.indexOf(string_array[i].toLowerCase())\
    \ === -1){\n            distinct_array.push(string_array[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvr5iw6yn.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvr5iw6yn.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp2lrfb7qt.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2lrfb7qt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i].toLowerCase()) == -1){\n          \
    \  char.push(string[i].toLowerCase());\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n\
    \        if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n  \
    \          distinct_characters.push(string[i].toLowerCase());\n        }\n   \
    \ }\n    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_lower = string.toLowerCase();\n    for (var\
    \ i = 0; i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n\
    \        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n \
    \           distinct_characters.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    let result = [];\n    for (let i = 0; i < string.length; i++){\n        if\
    \ (result.indexOf(string[i].toLowerCase()) === -1){\n            result.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return result.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvr5iw6yn.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvr5iw6yn.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n\
    \        if (distinct_characters.indexOf(string[i].toLowerCase()) == -1){\n  \
    \          distinct_characters.push(string[i].toLowerCase());\n        }\n   \
    \ }\n    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var string = string.toLowerCase();\n    var count = 0;\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.lastIndexOf(string[i]) == string.indexOf(string[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp6hrj37it.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6hrj37it.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) == i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4w7tohs5.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4w7tohs5.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    return new Set(string.toLowerCase()).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \  var char_set = new Set();\n  for (var i = 0; i < string.length; i++) {\n  \
    \  char_set.add(string[i].toLowerCase());\n  }\n  return char_set.size;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var lower = string.toLowerCase();\n    var distinct = \"\";\n    for (var\
    \ i = 0; i < lower.length; i++){\n        if (distinct.indexOf(lower[i]) == -1){\n\
    \            distinct += lower[i];\n        }\n    }\n    return distinct.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = string.toLowerCase().split(\"\");\n\
    \    var unique = characters.filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; });\n    return unique.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        var char = string[i];\n\
    \        if(characters[char] === undefined){\n            characters[char] = true;\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct = 0;\n    var char_array = string.split(\"\");\n    for (var\
    \ i = 0; i < char_array.length; i++){\n        if (char_array.indexOf(char_array[i])\
    \ == i){\n            distinct++;\n        }\n    }\n    return distinct;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7qev6nt6.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qev6nt6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuy74rka2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuy74rka2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i].toLowerCase()) == -1){\n       \
    \     unique.push(string[i].toLowerCase());\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n     \
    \   if (unique.indexOf(string[i]) == -1) {\n            unique += string[i];\n\
    \        }\n    }\n    return unique.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpiq35nqc4.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpiq35nqc4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(arr.indexOf(string[i].toLowerCase()) === -1){\n          \
    \  arr.push(string[i].toLowerCase());\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_array = string.split(\"\");\n    var unique_array\
    \ = [];\n    for (var i = 0; i < string_array.length; i++){\n        if (unique_array.indexOf(string_array[i].toLowerCase())\
    \ == -1){\n            unique_array.push(string_array[i].toLowerCase());\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct = \"\";\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (distinct.indexOf(string[i].toLowerCase()) == -1){\n            distinct\
    \ += string[i].toLowerCase();\n        }\n    }\n    return distinct.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var lowercase = string.toLowerCase();\n    for (var i\
    \ = 0; i < lowercase.length; i++){\n        if (lowercase.indexOf(lowercase[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var string = string.toLowerCase();\n    var count = 0;\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split(\"\");\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpuy74rka2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuy74rka2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.6.0\n"
  stdout: ''
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \  var count = 0;\n  var string = string.toLowerCase();\n  for (var i = 0; i <\
    \ string.length; i++) {\n    if (string.indexOf(string[i]) === i) {\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \tvar count = 0;\n\tvar arr = string.split(\"\");\n\tvar newArr = [];\n\tfor(var\
    \ i = 0; i < arr.length; i++){\n\t\tif(newArr.indexOf(arr[i].toLowerCase()) ===\
    \ -1){\n\t\t\tnewArr.push(arr[i].toLowerCase());\n\t\t\tcount++;\n\t\t}\n\t}\n\
    \treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i].toLowerCase()) === -1){\n         \
    \   char.push(string[i].toLowerCase());\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var string = string.toLowerCase();\n    var count = 0;\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805527
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(arr.indexOf(string[i].toLowerCase()) == -1){\n           \
    \ arr.push(string[i].toLowerCase());\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805526
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var unique = array.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp0tx2s_bv.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0tx2s_bv.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805527
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n\
    // >>> count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (!characters[string[i]]){\n            characters[string[i]]\
    \ = true;\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpbw7k7pyp.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbw7k7pyp.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659805527

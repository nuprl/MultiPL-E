name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n\
  // 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["    var sorted = l.sort(function(a,b){return a-b});\n    var half =\
    \ Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort();\n    var len = sorted.length;\n    var mid = Math.floor(len/2);\n\
    \    if (len % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n   \
    \ }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var len = l.length;\n\
    \    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n        return (l[mid]\
    \ + l[mid-1])/2;\n    }\n    else{\n        return l[mid];\n    }\n}\n", "   \
    \ var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var m = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2 - 1] + sorted[len/2])/2;\n\
    \    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var length = sorted.length;\n    if\
    \ (length % 2 == 0){\n        return (sorted[length/2-1] + sorted[length/2])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(length/2)];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var length = sorted.length;\n\
    \    if (length % 2 == 0){\n        return (sorted[length/2 - 1] + sorted[length/2])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(length/2)];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 === 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n\
    \    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var l\
    \ = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(l.length/2);\n\
    \    if(l.length % 2 == 0){\n        return (l[mid-1] + l[mid])/2;\n    }\n  \
    \  else{\n        return l[mid];\n    }\n}\n", "    l.sort(function(a, b){return\
    \ a-b});\n    var mid = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n\
    \        return (l[mid] + l[mid-1])/2;\n    }\n    else{\n        return l[mid];\n\
    \    }\n}\n", "    var m = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n\
    \        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n \
    \   }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2-1] +\
    \ sorted[len/2])/2;\n    }\n    else{\n        return sorted[(len-1)/2];\n   \
    \ }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len =\
    \ sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var l = l.sort();\n    var len = l.length;\n    if (len % 2 == 0){\n\
    \        return (l[len/2] + l[len/2 - 1])/2;\n    }\n    else{\n        return\
    \ l[(len-1)/2];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

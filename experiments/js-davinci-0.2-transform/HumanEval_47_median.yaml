name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n\
  // 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["    var sorted = l.sort(function(a,b){return a-b});\n    var half =\
    \ Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort();\n    var len = sorted.length;\n    var mid = Math.floor(len/2);\n\
    \    if (len % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n   \
    \ }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var len = l.length;\n\
    \    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n        return (l[mid]\
    \ + l[mid-1])/2;\n    }\n    else{\n        return l[mid];\n    }\n}\n", "   \
    \ var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var m = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2 - 1] + sorted[len/2])/2;\n\
    \    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var length = sorted.length;\n    if\
    \ (length % 2 == 0){\n        return (sorted[length/2-1] + sorted[length/2])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(length/2)];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var length = sorted.length;\n\
    \    if (length % 2 == 0){\n        return (sorted[length/2 - 1] + sorted[length/2])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(length/2)];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 === 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n\
    \    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var l\
    \ = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(l.length/2);\n\
    \    if(l.length % 2 == 0){\n        return (l[mid-1] + l[mid])/2;\n    }\n  \
    \  else{\n        return l[mid];\n    }\n}\n", "    l.sort(function(a, b){return\
    \ a-b});\n    var mid = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n\
    \        return (l[mid] + l[mid-1])/2;\n    }\n    else{\n        return l[mid];\n\
    \    }\n}\n", "    var m = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n\
    \        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n \
    \   }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2-1] +\
    \ sorted[len/2])/2;\n    }\n    else{\n        return sorted[(len-1)/2];\n   \
    \ }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len =\
    \ sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var l = l.sort();\n    var len = l.length;\n    if (len % 2 == 0){\n\
    \        return (l[len/2] + l[len/2 - 1])/2;\n    }\n    else{\n        return\
    \ l[(len-1)/2];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2-1] + sorted[len/2])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var half\
    \ = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ m = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n        return (l[m-1]\
    \ + l[m])/2;\n    }\n    else{\n        return l[m];\n    }\n}\n", "    var sorted\
    \ = l.sort();\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 === 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if (l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length %\
    \ 2)\n        return sorted[half];\n    else\n        return (sorted[half-1] +\
    \ sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2-1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2.0;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var l = l.sort();\n    var len = l.length;\n    if (len % 2 == 0){\n     \
    \   return (l[len/2 - 1] + l[len/2]) / 2;\n    }\n    else{\n        return l[(len\
    \ - 1) / 2];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    } else {\n        return sorted[(len-1)/2];\n    }\n}\n", "  \
    \  var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2-1] + sorted[len/2])/2;\n\
    \    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n \
    \   else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    var\
    \ mid = Math.floor(len/2);\n    if(len % 2 == 0){\n        return (sorted[mid]\
    \ + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n    }\n\
    }\n", "  var sorted = l.sort(function(a,b){return a-b});\n  var mid = Math.floor(sorted.length/2);\n\
    \  if (sorted.length % 2 === 0){\n    return (sorted[mid-1] + sorted[mid])/2;\n\
    \  } else {\n    return sorted[mid];\n  }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2-1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    //YOUR CODE HERE\n    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 === 0){\n        return (sorted[len/2-1] +\
    \ sorted[len/2])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n",
  "    if(l.length % 2 == 0){\n        return (l[l.length/2] + l[l.length/2 - 1])/2;\n\
    \    }\n    else{\n        return l[Math.floor(l.length/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   //YOUR CODE HERE\n}\n", "    var l = l.sort(function(a,b){return a-b});\n\
    \    var m = Math.floor(l.length/2);\n    if(l.length%2==0){\n        return (l[m]+l[m-1])/2;\n\
    \    }\n    else{\n        return l[m];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 === 0){\n        var mid\
    \ = len/2;\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        var mid = Math.floor(len/2);\n        return sorted[mid];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else {\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2-1] + sorted[len/2])/2;\n    }\n    else{\n        return sorted[(len-1)/2];\n\
    \    }\n}\n", "    var sorted = l.sort();\n    var len = sorted.length;\n    if\
    \ (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n    }\n\
    \    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var n = l.length;\n\
    \    var m = Math.floor(n/2);\n    if (n % 2 == 0){\n        return (l[m-1] +\
    \ l[m])/2;\n    }\n    else{\n        return l[m];\n    }\n}\n", "    //YOUR CODE\
    \ HERE\n    var sorted = l.sort(function(a, b){return a-b});\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[sorted.length/2] + sorted[sorted.length/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(sorted.length/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var half\
    \ = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ l = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(l.length/2);\n\
    \    if(l.length % 2 == 0){\n        return (l[mid] + l[mid-1])/2;\n    }\n  \
    \  else{\n        return l[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2-1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    var mid = Math.floor(len/2);\n    if(len % 2 === 0){\n\
    \        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return\
    \ sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2-1] +\
    \ sorted[len/2])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2 - 1] + sorted[len/2])/2;\n\
    \    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n \
    \   else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2){\n        return sorted[half];\n    }\n    else{\n\
    \        return (sorted[half-1] + sorted[half]) / 2.0;\n    }\n}\n", "    //YOUR\
    \ CODE HERE\n    var sorted = l.sort();\n    var middle = Math.floor(sorted.length\
    \ / 2);\n    if (sorted.length % 2 == 0) {\n        return (sorted[middle] + sorted[middle\
    \ - 1]) / 2;\n    } else {\n        return sorted[middle];\n    }\n}\n", "   \
    \ var sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    l.sort(function(a,\
    \ b){return a-b});\n    var mid = Math.floor(l.length/2);\n    if (l.length %\
    \ 2 == 0){\n        return (l[mid] + l[mid-1])/2;\n    }\n    else{\n        return\
    \ l[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort();\n    var len = sorted.length;\n    var\
    \ mid = Math.floor(len/2);\n    if (len % 2 == 0){\n        return (sorted[mid-1]\
    \ + sorted[mid])/2;\n    }\n    else{\n        return sorted[mid];\n    }\n}\n",
  "    var len = l.length;\n    if (len % 2 == 0){\n        return (l[len/2] + l[len/2\
    \ - 1])/2;\n    }\n    else{\n        return l[(len-1)/2];\n    }\n}\n", "   \
    \ var sorted = l.sort(function(a,b){return a-b});\n    var length = sorted.length;\n\
    \    var mid = Math.floor(length/2);\n    if(length % 2 == 0){\n        return\
    \ (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "\t\
    var sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\t\
    var mid = Math.floor(len/2);\n\tif(len % 2 == 0){\n\t\treturn (sorted[mid-1] +\
    \ sorted[mid])/2;\n\t}\n\telse{\n\t\treturn sorted[mid];\n\t}\n}\n", "    var\
    \ sorted = l.sort();\n    var length = sorted.length;\n    var mid = Math.floor(length/2);\n\
    \    if (length % 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    l.sort();\n\
    \    var mid = Math.floor(l.length/2);\n    if(l.length % 2 == 0){\n        return\
    \ (l[mid] + l[mid-1])/2;\n    }\n    else{\n        return l[mid];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2-1] + sorted[len/2])/2;\n    }\n   \
    \ else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length %\
    \ 2)\n        return sorted[half];\n    else\n        return (sorted[half-1] +\
    \ sorted[half]) / 2.0;\n}\n", "  var sorted = l.sort(function(a,b){return a-b});\n\
    \  var length = sorted.length;\n  if (length % 2 == 0){\n    return (sorted[length/2\
    \ - 1] + sorted[length/2])/2;\n  }\n  else{\n    return sorted[(length-1)/2];\n\
    \  }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var half\
    \ = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "  var\
    \ sorted = l.sort(function(a,b){return a-b});\n  var length = sorted.length;\n\
    \  if (length % 2 == 0){\n    return (sorted[length/2] + sorted[length/2-1])/2;\n\
    \  }\n  else{\n    return sorted[Math.floor(length/2)];\n  }\n}\n", "    var l\
    \ = l.sort();\n    var len = l.length;\n    var half = Math.floor(len/2);\n  \
    \  if(len % 2){\n        return l[half];\n    }\n    else{\n        return (l[half-1]\
    \ + l[half]) / 2.0;\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 === 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n       \
    \ return (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n    \
    \    return sorted[Math.floor(length/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        var mid\
    \ = len/2;\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n\
    \        var mid = Math.floor(len/2);\n        return sorted[mid];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len%2\
    \ === 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n    }\n    else{\n\
    \        return sorted[Math.floor(len/2)];\n    }\n}\n", "    if(l.length % 2\
    \ == 0){\n        return (l[l.length/2] + l[l.length/2 - 1])/2;\n    }\n    else{\n\
    \        return l[Math.floor(l.length/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 === 0){\n        return (sorted[len/2 - 1]\
    \ + sorted[len/2])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tif (sorted.length\
    \ % 2 == 0){\n\t\tvar mid = sorted.length/2;\n\t\treturn (sorted[mid-1] + sorted[mid])/2;\n\
    \t}\n\telse{\n\t\tvar mid = Math.floor(sorted.length/2);\n\t\treturn sorted[mid];\n\
    \t}\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len =\
    \ sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var sortedList = l.sort(function(a,\
    \ b){return a-b});\n    var length = sortedList.length;\n    if (length % 2 ===\
    \ 0){\n        return (sortedList[length/2] + sortedList[length/2 - 1])/2;\n \
    \   }\n    else{\n        return sortedList[Math.floor(length/2)];\n    }\n}\n",
  "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len % 2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2 - 1])/2;\n\t}\n\t\
    else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    l.sort(function(a, b){return a-b});\n\
    \    var mid = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n        return\
    \ (l[mid] + l[mid-1])/2;\n    }\n    else{\n        return l[mid];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n \
    \   else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var m\
    \ = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n \
    \   else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 === 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    } else\
    \ {\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var middle = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n \
    \   else{\n        return sorted[middle];\n    }\n}\n", "  var m = l.length/2;\n\
    \  if(l.length % 2 == 0){\n    return (l[m-1] + l[m])/2;\n  }\n  else{\n    return\
    \ l[Math.floor(m)];\n  }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 === 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len%2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   //YOUR CODE HERE\n    var l = l.sort();\n    var m = l.length / 2;\n    if\
    \ (l.length % 2 == 0) {\n        return (l[m] + l[m - 1]) / 2;\n    } else {\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length %\
    \ 2)\n        return sorted[half];\n    else\n        return (sorted[half-1] +\
    \ sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n\
    \    var len = sorted.length;\n    if (len%2 == 0){\n        return (sorted[len/2-1]+sorted[len/2])/2;\n\
    \    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    l.sort(function(a,\
    \ b){return a-b});\n    var len = l.length;\n    if (len % 2 == 0){\n        return\
    \ (l[len/2-1] + l[len/2])/2;\n    }\n    else{\n        return l[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    } else {\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2.0;\n    } else {\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    l.sort(function(a, b){return a-b});\n    var mid = l.length/2;\n  \
    \  if(l.length%2 == 0){\n        return (l[mid-1] + l[mid])/2;\n    }\n    else{\n\
    \        return l[Math.floor(mid)];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length %\
    \ 2){\n        return sorted[half];\n    }\n    else{\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n    }\n}\n", "    var l = l.sort();\n    var length\
    \ = l.length;\n    var mid = Math.floor(length/2);\n    if (length % 2 == 0){\n\
    \        return (l[mid] + l[mid-1])/2;\n    }\n    else{\n        return l[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var half\
    \ = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2-1] + sorted[len/2])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2-1] + sorted[len/2])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   //YOUR CODE HERE\n    var sorted = l.sort(function(a, b){return a-b});\n \
    \   var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var median = 0;\n    var len = l.length;\n    if(len % 2 ==\
    \ 0){\n        median = (l[len/2] + l[len/2 - 1])/2;\n    }else{\n        median\
    \ = l[Math.floor(len/2)];\n    }\n    return median;\n}\n", "    var sorted =\
    \ l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2 - 1] + sorted[len/2])/2;\n    }\n \
    \   else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    //YOUR\
    \ CODE HERE\n    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a,b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort();\n    var length = sorted.length;\n    var middle = Math.floor(length/2);\n\
    \    if (length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n\
    \    }\n    else{\n        return sorted[middle];\n    }\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if (l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2-1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2 - 1]\
    \ + sorted[len/2])/2;\n    } else {\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2-1] +\
    \ sorted[len/2])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var sorted = l.sort(function(a,b){return a-b;});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2-1] + sorted[len/2])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid\
    \ = sorted.length/2;\n    if(sorted.length % 2 == 0){\n        return (sorted[mid]\
    \ + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[Math.floor(mid)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var length\
    \ = sorted.length;\n    if (length % 2 == 0){\n        return (sorted[length/2]\
    \ + sorted[length/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(length/2)];\n\
    \    }\n}\n", "    var sorted = l.sort();\n    var len = sorted.length;\n    if\
    \ (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1]) / 2;\n \
    \   }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var length = sorted.length;\n    var\
    \ middle = Math.floor(length/2);\n    if(length % 2 == 0){\n        return (sorted[middle-1]\
    \ + sorted[middle])/2;\n    }\n    else{\n        return sorted[middle];\n   \
    \ }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var len =\
    \ sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var sorted = l.sort();\n    var length = sorted.length;\n    if (length\
    \ % 2 == 0){\n        return (sorted[length/2] + sorted[length/2 - 1])/2;\n  \
    \  }\n    else{\n        return sorted[Math.floor(length/2)];\n    }\n}\n", " \
    \   var m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1] +\
    \ l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2-1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var l = l.sort(function(a,b){\n        return a-b;\n    });\n    var len =\
    \ l.length;\n    if(len%2==0){\n        return (l[len/2-1]+l[len/2])/2;\n    }else{\n\
    \        return l[(len-1)/2];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 === 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else\
    \ {\n        return sorted[mid];\n    }\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if (l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "  var sorted = l.sort(function(a,b){return\
    \ a-b});\n  var mid = Math.floor(sorted.length/2);\n  if (sorted.length % 2 ==\
    \ 0){\n    return (sorted[mid-1] + sorted[mid])/2;\n  }\n  else{\n    return sorted[mid];\n\
    \  }\n}\n", "\tvar sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\
    \tif(len % 2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2 - 1])/2;\n\t}\n\t\
    else{\n\t\treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n       \
    \ return (sorted[length/2-1] + sorted[length/2])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(length/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var half\
    \ = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2.0;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    var mid = Math.floor(len/2);\n    if(len%2 == 0){\n        return (sorted[mid-1]\
    \ + sorted[mid])/2;\n    }\n    else{\n        return sorted[mid];\n    }\n}\n",
  "    var sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a,b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2){\n        return sorted[half];\n    }\n    else{\n\
    \        return (sorted[half-1] + sorted[half]) / 2.0;\n    }\n}\n", "    var\
    \ sorted = l.sort(function(a,b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2-1] + sorted[len/2])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   l.sort(function(a, b){return a-b});\n    var mid = Math.floor(l.length/2);\n\
    \    if (l.length % 2 == 0){\n        return (l[mid-1] + l[mid])/2;\n    }\n \
    \   else{\n        return l[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort();\n    var len = sorted.length;\n    if\
    \ (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1]) / 2;\n \
    \   }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "  \
    \  var median = 0;\n    var length = l.length;\n    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    if(length % 2 == 0){\n        median = (sorted[length/2]\
    \ + sorted[length/2 - 1])/2;\n    }\n    else{\n        median = sorted[(length\
    \ - 1)/2];\n    }\n    return median;\n}\n", "  var sorted = l.sort(function(a,b){return\
    \ a-b});\n  var mid = Math.floor(sorted.length/2);\n  if (sorted.length % 2 ==\
    \ 0){\n    return (sorted[mid] + sorted[mid-1])/2;\n  }\n  else{\n    return sorted[mid];\n\
    \  }\n}\n", "    //YOUR CODE HERE\n    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var length = sorted.length;\n    var middle = Math.floor(length/2);\n\
    \    if (length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n\
    \    }\n    else{\n        return sorted[middle];\n    }\n}\n", "    //YOUR CODE\
    \ HERE\n    var len = l.length;\n    var mid = Math.floor(len/2);\n    if(len\
    \ % 2 == 0){\n        return (l[mid] + l[mid-1])/2;\n    }\n    else{\n      \
    \  return l[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if (l.length % 2 == 0){\n        return (l[m] + l[m-1])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "    l.sort(function(a, b){return a-b});\n\
    \    if (l.length % 2 == 0){\n        return (l[l.length/2] + l[l.length/2 - 1])/2;\n\
    \    }\n    else{\n        return l[Math.floor(l.length/2)];\n    }\n}\n", " \
    \   var len = l.length;\n    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n\
    \        return (l[mid-1] + l[mid])/2;\n    }\n    else{\n        return l[mid];\n\
    \    }\n}\n", "    var m = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n\
    \        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n \
    \   }\n}\n", "    if(l.length == 0){\n        return null;\n    }\n    else{\n\
    \        var sorted = l.sort(function(a, b){return a-b});\n        var mid = Math.floor(sorted.length/2);\n\
    \        if(sorted.length % 2 == 0){\n            return (sorted[mid] + sorted[mid-1])/2;\n\
    \        }\n        else{\n            return sorted[mid];\n        }\n    }\n\
    }\n", "    var m = l.length / 2;\n    if (l.length % 2 == 0){\n        return\
    \ (l[m] + l[m - 1]) / 2;\n    }\n    else{\n        return l[Math.floor(m)];\n\
    \    }\n}\n", "    var len = l.length;\n    if (len == 0) {\n        return null;\n\
    \    }\n    var sorted = l.sort(function(a, b){return a-b});\n    if (len % 2\
    \ == 0) {\n        return (sorted[len/2] + sorted[len/2 - 1]) / 2.0;\n    } else\
    \ {\n        return sorted[(len - 1) / 2];\n    }\n}\n", "    var m = l.length;\n\
    \    var n = m/2;\n    if (m % 2 == 0){\n        return (l[n-1] + l[n])/2;\n \
    \   }\n    else{\n        return l[Math.floor(n)];\n    }\n}\n", "    var m =\
    \ l.length/2;\n    if(l.length%2==0){\n        return (l[m-1]+l[m])/2;\n    }\n\
    \    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var m = l.length\
    \ / 2;\n    if (l.length % 2 == 0){\n        return (l[m] + l[m-1]) / 2;\n   \
    \ }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length %\
    \ 2)\n        return sorted[half];\n    else\n        return (sorted[half-1] +\
    \ sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n\
    \    var length = sorted.length;\n    if (length % 2 == 0){\n        return (sorted[length/2]\
    \ + sorted[length/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(length/2)];\n\
    \    }\n}\n", "    var l = l.sort(function(a,b){return a-b});\n    var len = l.length;\n\
    \    if(len % 2 == 0){\n        return (l[len/2-1] + l[len/2])/2;\n    }\n   \
    \ else{\n        return l[(len-1)/2];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n       \
    \ var mid = length/2;\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n\
    \    else{\n        var mid = Math.floor(length/2);\n        return sorted[mid];\n\
    \    }\n}\n", "    var l = l.sort(function(a,b){return a-b});\n    var m = l.length/2;\n\
    \    if(l.length%2 == 0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    let sorted = l.sort();\n    let length = sorted.length;\n \
    \   if (length % 2 == 0){\n        let first = sorted[length/2];\n        let\
    \ second = sorted[length/2 - 1];\n        return (first + second)/2;\n    }\n\
    \    else{\n        return sorted[Math.floor(length/2)];\n    }\n}\n", "    var\
    \ m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a,b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2-1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a,b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2.0;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var m = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n\
    \        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n \
    \   }\n}\n", "    var m = Math.floor(l.length/2);\n    if (l.length % 2 == 0){\n\
    \        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[m];\n \
    \   }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_145_order_by_points
language: js
prompt: "//Write a function which sorts the given list of integers\n// in ascending\
  \ order according to the sum of their digits.\n// Note: if there are several items\
  \ with similar sum of their digits,\n// order them based on their index in original\
  \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
  \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11,\
  \ 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423,\
  \ 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
  \ 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
completions: ["  var sums = [];\n  var result = [];\n  for(var i = 0; i < nums.length;\
    \ i++){\n    var sum = 0;\n    var num = nums[i];\n    while(num > 0){\n     \
    \ sum += num % 10;\n      num = Math.floor(num / 10);\n    }\n    sums.push(sum);\n\
    \  }\n  var min = Math.min.apply(null, sums);\n  var max = Math.max.apply(null,\
    \ sums);\n  for(var j = min; j <= max; j++){\n    for(var k = 0; k < sums.length;\
    \ k++){\n      if(sums[k] === j){\n        result.push(nums[k]);\n      }\n  \
    \  }\n  }\n  return result;\n}\n", "    var sum = 0;\n    var arr = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push([nums[i], sum]);\n    }\n    arr.sort(function(a,\
    \ b){\n        if(a[1] < b[1]){\n            return -1;\n        }\n        if(a[1]\
    \ > b[1]){\n            return 1;\n        }\n        if(a[1] == b[1]){\n    \
    \        if(nums.indexOf(a[0]) < nums.indexOf(b[0])){\n                return\
    \ -1;\n            }\n            if(nums.indexOf(a[0]) > nums.indexOf(b[0])){\n\
    \                return 1;\n            }\n        }\n    });\n    for(var i =\
    \ 0; i < arr.length; i++){\n        arr[i] = arr[i][0];\n    }\n    return arr;\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var nums_sorted = nums.sort(function(a, b){\n        var a_sum = a.toString().split('').reduce(function(a,\
    \ b){\n            return parseInt(a) + parseInt(b);\n        });\n        var\
    \ b_sum = b.toString().split('').reduce(function(a, b){\n            return parseInt(a)\
    \ + parseInt(b);\n        });\n        return a_sum - b_sum;\n    });\n    return\
    \ nums_sorted;\n}\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var sum = 0;\n    var nums_sum = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        nums_sum.push(sum);\n\
    \    }\n    var nums_sorted = [];\n    var nums_sorted_index = [];\n    for(var\
    \ i = 0; i < nums_sum.length; i++){\n        var min = Math.min.apply(null, nums_sum);\n\
    \        var min_index = nums_sum.indexOf(min);\n        nums_sorted.push(nums[min_index]);\n\
    \        nums_sorted_index.push(min_index);\n        nums_sum[min_index] = Infinity;\n\
    \    }\n    return nums_sorted;\n}\n", "    return nums.sort((a, b) => {\n   \
    \     let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    var sum = 0;\n    var\
    \ sums = [];\n    var result = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    for(var i = 0; i < sums.length; i++){\n        var min = Math.min.apply(null,\
    \ sums);\n        var index = sums.indexOf(min);\n        result.push(nums[index]);\n\
    \        sums.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n", "    var sum = 0;\n    var sum_list = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_list.push(sum);\n    }\n    var temp = 0;\n    for(var i = 0; i < sum_list.length;\
    \ i++){\n        for(var j = 0; j < sum_list.length - 1; j++){\n            if(sum_list[j]\
    \ > sum_list[j+1]){\n                temp = sum_list[j];\n                sum_list[j]\
    \ = sum_list[j+1];\n                sum_list[j+1] = temp;\n                temp\
    \ = nums[j];\n                nums[j] = nums[j+1];\n                nums[j+1]\
    \ = temp;\n            }\n        }\n    }\n    return nums;\n}\n", "    let sum\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        let num = nums[i].toString();\n\
    \        let total = 0;\n        for(let j = 0; j < num.length; j++){\n      \
    \      total += parseInt(num[j]);\n        }\n        sum.push(total);\n    }\n\
    \    let sorted = [];\n    while(sorted.length < nums.length){\n        let min\
    \ = Math.min(...sum);\n        let index = sum.indexOf(min);\n        sorted.push(nums[index]);\n\
    \        sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ sorted;\n}\n", "    var sum = 0;\n    var nums_sorted = [];\n    var nums_sorted_sum\
    \ = [];\n    var nums_sorted_sum_ind = [];\n    var nums_sorted_sum_ind_sorted\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final = [];\n    var nums_sorted_sum_ind_sorted_final_sorted\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final = [];\n    var\
    \ nums_sorted_sum_ind_sorted_final_sorted_final_sorted = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final_sorted\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final_sorted_final\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final_sorted_final_sorted\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final_sorted\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final_sorted\
    \ = [];\n    var nums_sorted_sum_ind_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final_sorted_final\
    \ = [];\n    var nums_s", "    return nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n \
    \       let bSum = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    var sum = 0;\n    var sum_list = [];\n    var result = [];\n    for(var i =\
    \ 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_list.push(sum);\n    }\n    for(var i = 0; i < sum_list.length; i++){\n\
    \        var min = Math.min.apply(null, sum_list);\n        var index = sum_list.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum_list.splice(index, 1);\n     \
    \   nums.splice(index, 1);\n    }\n    return result;\n}\n", "    var sum = 0;\n\
    \    var sumArr = [];\n    var sortedArr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sumArr.push(sum);\n    }\n    for(var i = 0; i < sumArr.length; i++){\n \
    \       for(var j = 0; j < sumArr.length; j++){\n            if(sumArr[i] < sumArr[j]){\n\
    \                var temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n\
    \                sumArr[j] = temp;\n                var temp2 = nums[i];\n   \
    \             nums[i] = nums[j];\n                nums[j] = temp2;\n         \
    \   }\n        }\n    }\n    return nums;\n}", "    return nums.sort((a, b) =>\
    \ {\n        let aSum = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let bSum = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    var sum = 0;\n    var\
    \ result = [];\n    for(var i = 0; i < nums.length; i++){\n        for(var j =\
    \ 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push(sum);\n        sum = 0;\n    }\n    var temp =\
    \ 0;\n    for(var i = 0; i < result.length; i++){\n        for(var j = i + 1;\
    \ j < result.length; j++){\n            if(result[i] > result[j]){\n         \
    \       temp = result[i];\n                result[i] = result[j];\n          \
    \      result[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n            }\n        }\n    }\n\
    \    return nums;\n}\n", "    var sum = 0;\n    var sums = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sums.push(sum);\n    }\n    var result = [];\n    for(var i = 0; i < sums.length;\
    \ i++){\n        for(var j = 0; j < sums.length; j++){\n            if(sums[i]\
    \ < sums[j]){\n                var temp = sums[i];\n                sums[i] =\
    \ sums[j];\n                sums[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    var nums_sum = [];\n \
    \   for(var i = 0; i < nums.length; i++){\n        var sum = 0;\n        var num\
    \ = nums[i];\n        while(num > 0){\n            sum += num % 10;\n        \
    \    num = Math.floor(num / 10);\n        }\n        nums_sum.push([sum, i]);\n\
    \    }\n    nums_sum.sort(function(a, b){\n        if(a[0] == b[0]){\n       \
    \     return a[1] - b[1];\n        }\n        return a[0] - b[0];\n    });\n \
    \   var res = [];\n    for(var i = 0; i < nums_sum.length; i++){\n        res.push(nums[nums_sum[i][1]]);\n\
    \    }\n    return res;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n\
    \        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

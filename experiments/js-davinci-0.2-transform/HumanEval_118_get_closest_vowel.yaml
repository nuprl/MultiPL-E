name: HumanEval_118_get_closest_vowel
language: js
prompt: "//You are given a word. Your task is to find the closest vowel that stands\
  \ between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel(word){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = get_closest_vowel;\n  assert.deepEqual(candidate(\"yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"\
  full\"),\"u\");\n  assert.deepEqual(candidate(\"easy\"),\"\");\n  assert.deepEqual(candidate(\"\
  eAsy\"),\"\");\n  assert.deepEqual(candidate(\"ali\"),\"\");\n  assert.deepEqual(candidate(\"\
  bad\"),\"a\");\n  assert.deepEqual(candidate(\"most\"),\"o\");\n  assert.deepEqual(candidate(\"\
  ab\"),\"\");\n  assert.deepEqual(candidate(\"ba\"),\"\");\n  assert.deepEqual(candidate(\"\
  quick\"),\"\");\n  assert.deepEqual(candidate(\"anime\"),\"i\");\n  assert.deepEqual(candidate(\"\
  Asia\"),\"\");\n  assert.deepEqual(candidate(\"Above\"),\"o\");\n}\n\ntest();"
completions: ["    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    var word_array\
    \ = word.split(\"\");\n    var closest_vowel = \"\";\n    var closest_vowel_index\
    \ = 0;\n    var closest_vowel_distance = 0;\n    var current_vowel_distance =\
    \ 0;\n    for (var i = 0; i < word_array.length; i++) {\n        if (vowels.indexOf(word_array[i])\
    \ > -1) {\n            for (var j = i; j < word_array.length; j++) {\n       \
    \         if (vowels.indexOf(word_array[j]) > -1) {\n                    current_vowel_distance\
    \ = j - i;\n                    if (current_vowel_distance > closest_vowel_distance)\
    \ {\n                        closest_vowel_distance = current_vowel_distance;\n\
    \                        closest_vowel_index = i;\n                    }\n   \
    \             }\n            }\n        }\n    }\n    if (closest_vowel_distance\
    \ > 0) {\n        closest_vowel = word_array[closest_vowel_index];\n    }\n  \
    \  return closest_vowel;\n}\n", "    var vowels = \"aeiouAEIOU\";\n    var closest\
    \ = \"\";\n    var closest_index = word.length;\n    for (var i = 0; i < word.length;\
    \ i++){\n        if (vowels.indexOf(word[i]) != -1){\n            if (i > 0 &&\
    \ vowels.indexOf(word[i-1]) == -1){\n                if (i < closest_index){\n\
    \                    closest = word[i];\n                    closest_index = i;\n\
    \                }\n            }\n            if (i < word.length - 1 && vowels.indexOf(word[i+1])\
    \ == -1){\n                if (i < closest_index){\n                    closest\
    \ = word[i];\n                    closest_index = i;\n                }\n    \
    \        }\n        }\n    }\n    return closest;\n}\n", "    let vowels = \"\
    aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let closest_vowel = \"\";\n    for (let i = word.length-1; i >= 0; i--){\n\
    \        if (vowels.includes(word[i])){\n            closest_vowel = word[i];\n\
    \            break;\n        }\n    }\n    if (closest_vowel === \"\"){\n    \
    \    return \"\";\n    }\n    for (let i = word.length-1; i >= 0; i--){\n    \
    \    if (consonants.includes(word[i])){\n            return closest_vowel;\n \
    \       }\n        if (vowels.includes(word[i])){\n            closest_vowel =\
    \ word[i];\n        }\n    }\n    return \"\";\n}\n", "    var vowels = \"aeiouAEIOU\"\
    ;\n    var consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    var\
    \ vowel = \"\";\n    var i = word.length - 1;\n    while (i > 0) {\n        if\
    \ (consonants.indexOf(word[i]) > -1) {\n            if (vowels.indexOf(word[i-1])\
    \ > -1) {\n                vowel = word[i-1];\n                break;\n      \
    \      }\n        }\n        i--;\n    }\n    return vowel;\n}\n", "\tvar vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\tvar closest_vowel = \"\";\n\tvar closest_vowel_index\
    \ = 0;\n\tvar word_length = word.length;\n\tfor (var i = word_length - 1; i >=\
    \ 0; i--) {\n\t\tif (vowels.indexOf(word[i]) != -1) {\n\t\t\tif (i == word_length\
    \ - 1) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tclosest_vowel =\
    \ word[i];\n\t\t\t\tclosest_vowel_index = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor (var i = closest_vowel_index - 1; i >= 0; i--) {\n\t\tif (vowels.indexOf(word[i])\
    \ == -1) {\n\t\t\treturn closest_vowel;\n\t\t}\n\t}\n\treturn \"\";\n}\n", " \
    \   var vowels = \"aeiou\";\n    var closest_vowel = \"\";\n    var closest_vowel_index\
    \ = word.length;\n    for (var i = 0; i < word.length; i++){\n        if (vowels.indexOf(word[i])\
    \ != -1){\n            if (i < closest_vowel_index){\n                closest_vowel_index\
    \ = i;\n                closest_vowel = word[i];\n            }\n        }\n \
    \   }\n    return closest_vowel;\n}\n", "    var vowels = \"aeiouAEIOU\";\n  \
    \  var closest_vowel = \"\";\n    var closest_distance = word.length;\n    for\
    \ (var i = 0; i < word.length; i++){\n        if (vowels.indexOf(word[i]) != -1){\n\
    \            var distance = word.length - i;\n            if (distance < closest_distance){\n\
    \                closest_distance = distance;\n                closest_vowel =\
    \ word[i];\n            }\n        }\n    }\n    return closest_vowel;\n}\n",
  "  var vowels = \"aeiouAEIOU\";\n  var consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n  var closest_vowel = \"\";\n  var vowel_index = 0;\n  var consonant_index\
    \ = 0;\n  var word_length = word.length;\n  var i = word_length - 1;\n  while\
    \ (i >= 0){\n    if (vowels.indexOf(word[i]) != -1){\n      vowel_index = i;\n\
    \      break;\n    }\n    i--;\n  }\n  i = vowel_index - 1;\n  while (i >= 0){\n\
    \    if (consonants.indexOf(word[i]) != -1){\n      consonant_index = i;\n   \
    \   break;\n    }\n    i--;\n  }\n  if (consonant_index != 0){\n    closest_vowel\
    \ = word[vowel_index];\n  }\n  return closest_vowel;\n}\n", "    var vowels =\
    \ \"aeiouAEIOU\";\n    var consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    var vowel_index = -1;\n    var consonant_index = -1;\n    for (var i =\
    \ word.length - 1; i >= 0; i--){\n        if (vowels.indexOf(word[i]) != -1){\n\
    \            vowel_index = i;\n        }\n        if (consonants.indexOf(word[i])\
    \ != -1){\n            consonant_index = i;\n            break;\n        }\n \
    \   }\n    if (vowel_index == -1 || consonant_index == -1){\n        return \"\
    \";\n    }\n    return word[vowel_index];\n}\n", "    var vowels = \"aeiouAEIOU\"\
    ;\n    var closest_vowel = \"\";\n    var closest_vowel_distance = word.length;\n\
    \    var distance = 0;\n    for (var i = word.length - 1; i >= 0; i--){\n    \
    \    if (vowels.indexOf(word[i]) != -1){\n            distance = word.length -\
    \ 1 - i;\n            if (distance < closest_vowel_distance){\n              \
    \  closest_vowel = word[i];\n                closest_vowel_distance = distance;\n\
    \            }\n        }\n    }\n    return closest_vowel;\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\";\n    var consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    var closest_vowel = \"\";\n    for (var i = word.length - 1; i >= 0; i--)\
    \ {\n        if (consonants.indexOf(word[i]) >= 0) {\n            for (var j =\
    \ i - 1; j >= 0; j--) {\n                if (vowels.indexOf(word[j]) >= 0) {\n\
    \                    closest_vowel = word[j];\n                    break;\n  \
    \              }\n            }\n            break;\n        }\n    }\n    return\
    \ closest_vowel;\n}\n", "    var vowels = ['a', 'e', 'i', 'o', 'u'];\n    var\
    \ word_arr = word.split('');\n    var result = '';\n    var i = word_arr.length\
    \ - 1;\n    var j = i - 1;\n    while (i > 0) {\n        if (vowels.indexOf(word_arr[i])\
    \ != -1) {\n            if (vowels.indexOf(word_arr[j]) == -1) {\n           \
    \     result = word_arr[i];\n                break;\n            }\n        }\n\
    \        i--;\n        j--;\n    }\n    return result;\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\";\n    var cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    var closest = \"\";\n    for(var i = word.length-1; i >= 0; i--){\n   \
    \     if(cons.indexOf(word[i]) > -1){\n            for(var j = i+1; j < word.length;\
    \ j++){\n                if(vowels.indexOf(word[j]) > -1){\n                 \
    \   closest = word[j];\n                    break;\n                }\n      \
    \      }\n            break;\n        }\n    }\n    return closest;\n}\n", " \
    \   var vowels = \"aeiouAEIOU\";\n    var closest_vowel = \"\";\n    var closest_index\
    \ = 0;\n    var is_consonant = true;\n    for (var i = word.length - 1; i >= 0;\
    \ i--){\n        if (vowels.indexOf(word[i]) != -1){\n            if (is_consonant){\n\
    \                closest_vowel = word[i];\n                closest_index = i;\n\
    \                is_consonant = false;\n            }\n        }\n        else\
    \ {\n            is_consonant = true;\n        }\n    }\n    if (closest_index\
    \ == 0){\n        return \"\";\n    }\n    return closest_vowel;\n}\n", "    var\
    \ vowels = \"aeiouAEIOU\";\n    var closest_vowel = \"\";\n    var closest_vowel_index\
    \ = word.length;\n    for (var i = 0; i < word.length; i++){\n        if (vowels.indexOf(word[i])\
    \ != -1){\n            if (i > 0 && i < word.length - 1){\n                if\
    \ (vowels.indexOf(word[i-1]) == -1 && vowels.indexOf(word[i+1]) == -1){\n    \
    \                if (i < closest_vowel_index){\n                        closest_vowel\
    \ = word[i];\n                        closest_vowel_index = i;\n             \
    \       }\n                }\n            }\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    var vowels = \"aeiouAEIOU\";\n    var closest = \"\";\n    var closest_index\
    \ = word.length;\n    for (var i = 0; i < word.length; i++){\n        if (vowels.indexOf(word[i])\
    \ != -1){\n            var j = i + 1;\n            while (j < word.length && vowels.indexOf(word[j])\
    \ != -1){\n                j++;\n            }\n            if (j < word.length\
    \ && vowels.indexOf(word[j]) == -1){\n                if (j < closest_index){\n\
    \                    closest_index = j;\n                    closest = word[i];\n\
    \                }\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    var result = \"\";\n\
    \    for (var i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \  }\n    return result;\n}\n", "    var vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    var result = \"\";\n    var last_consonant = \"\";\n    var last_vowel\
    \ = \"\";\n    for (var i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ >= 0) {\n            last_vowel = word[i];\n            if (last_consonant !==\
    \ \"\") {\n                result = last_vowel;\n                break;\n    \
    \        }\n        } else {\n            last_consonant = word[i];\n        }\n\
    \    }\n    return result;\n}\n", "    var vowels = \"aeiouAEIOU\";\n    var closest_vowel\
    \ = \"\";\n    var closest_vowel_index = -1;\n    var closest_vowel_distance =\
    \ -1;\n    for (var i = 0; i < word.length; i++){\n        if (vowels.indexOf(word[i])\
    \ != -1){\n            var distance = word.length - i;\n            if (closest_vowel_distance\
    \ == -1 || distance < closest_vowel_distance){\n                closest_vowel_distance\
    \ = distance;\n                closest_vowel_index = i;\n            }\n     \
    \   }\n    }\n    if (closest_vowel_index != -1){\n        closest_vowel = word[closest_vowel_index];\n\
    \    }\n    return closest_vowel;\n}\n", "    var vowels = \"aeiouAEIOU\";\n \
    \   var closest_vowel = \"\";\n    var closest_vowel_index = 0;\n    var closest_consonant_index\
    \ = 0;\n    var closest_consonant_index_2 = 0;\n    var closest_vowel_index_2\
    \ = 0;\n    var closest_vowel_index_3 = 0;\n    var closest_consonant_index_3\
    \ = 0;\n    var closest_vowel_index_4 = 0;\n    var closest_consonant_index_4\
    \ = 0;\n    var closest_vowel_index_5 = 0;\n    var closest_consonant_index_5\
    \ = 0;\n    var closest_vowel_index_6 = 0;\n    var closest_consonant_index_6\
    \ = 0;\n    var closest_vowel_index_7 = 0;\n    var closest_consonant_index_7\
    \ = 0;\n    var closest_vowel_index_8 = 0;\n    var closest_consonant_index_8\
    \ = 0;\n    var closest_vowel_index_9 = 0;\n    var closest_consonant_index_9\
    \ = 0;\n    var closest_vowel_index_10 = 0;\n    var closest_consonant_index_10\
    \ = 0;\n    var closest_vowel_index_11 = 0;\n    var closest_consonant_index_11\
    \ = 0;\n    var closest_vowel_index_12 = 0;\n    var closest_consonant_index_12\
    \ = 0;\n    var closest_vowel_index_13 = 0;\n    var closest_consonant_index_13\
    \ = 0;\n    var closest_vowel_index_14 = 0;\n    var closest_consonant_index_14\
    \ = 0;\n    var closest_vowel_index_15 = 0;\n    var closest_consonant_index_15\
    \ = 0;\n    var closest_vowel_index_16 = 0;\n    var closest_consonant_index_16\
    \ = 0;\n    var closest_vowel_index_"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

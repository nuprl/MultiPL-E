name: HumanEval_141_file_name_check
language: js
prompt: "//Create a function which takes a string representing a file's name, and\
  \ returns\n// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  // A file's name is considered to be valid if and only if all the following conditions\
  \ \n// are met:\n// - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n// - The file's name contains exactly one dot '.'\n// - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n// the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n// - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n// Examples:\n// >>> file_name_check(\"\
  example.txt\")\n// \"Yes\"\n// >>> file_name_check(\"1example.dll\")\n// \"No\"\n\
  function file_name_check(file_name){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = file_name_check;\n  assert.deepEqual(candidate(\"example.txt\"),\"Yes\");\n\
  \  assert.deepEqual(candidate(\"1example.dll\"),\"No\");\n  assert.deepEqual(candidate(\"\
  s1sdf3.asd\"),\"No\");\n  assert.deepEqual(candidate(\"K.dll\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  MY16FILE3.exe\"),\"Yes\");\n  assert.deepEqual(candidate(\"His12FILE94.exe\"),\"\
  No\");\n  assert.deepEqual(candidate(\"_Y.txt\"),\"No\");\n  assert.deepEqual(candidate(\"\
  ?aREYA.exe\"),\"No\");\n  assert.deepEqual(candidate(\"/this_is_valid.dll\"),\"\
  No\");\n  assert.deepEqual(candidate(\"this_is_valid.wow\"),\"No\");\n  assert.deepEqual(candidate(\"\
  this_is_valid.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"this_is_valid.txtexe\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"#this2_i4s_5valid.ten\"),\"No\");\n \
  \ assert.deepEqual(candidate(\"@this1_is6_valid.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  this_is_12valid.6exe4.txt\"),\"No\");\n  assert.deepEqual(candidate(\"all.exe.txt\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"I563_No.exe\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  Is3youfault.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"no_one#knows.dll\"\
  ),\"Yes\");\n  assert.deepEqual(candidate(\"1I563_Yes3.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  I563_Yes3.txtt\"),\"No\");\n  assert.deepEqual(candidate(\"final..txt\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"final132\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _f4indsartal132.\"),\"No\");\n  assert.deepEqual(candidate(\".txt\"),\"No\");\n\
  \  assert.deepEqual(candidate(\"s.\"),\"No\");\n}\n\ntest();"
completions: ["    var file_name_arr = file_name.split(\".\");\n    var file_name_arr_1\
    \ = file_name_arr[0];\n    var file_name_arr_2 = file_name_arr[1];\n    var file_name_arr_1_arr\
    \ = file_name_arr_1.split(\"\");\n    var file_name_arr_1_arr_0 = file_name_arr_1_arr[0];\n\
    \    var file_name_arr_1_arr_0_code = file_name_arr_1_arr_0.charCodeAt(0);\n \
    \   var file_name_arr_1_arr_0_code_1 = file_name_arr_1_arr_0_code - 48;\n    var\
    \ file_name_arr_1_arr_0_code_2 = file_name_arr_1_arr_0_code - 65;\n    var file_name_arr_1_arr_0_code_3\
    \ = file_name_arr_1_arr_0_code - 97;\n    var file_name_arr_1_arr_0_code_4 = file_name_arr_1_arr_0_code_1\
    \ + file_name_arr_1_arr_0_code_2 + file_name_arr_1_arr_0_code_3;\n    var file_name_arr_1_arr_0_code_5\
    \ = file_name_arr_1_arr_0_code_4 < 0;\n    var file_name_arr_1_arr_0_code_6 =\
    \ file_name_arr_1_arr_0_code_4 > 0;\n    var file_name_arr_1_arr_0_code_7 = file_name_arr_1_arr_0_code_5\
    \ || file_name_arr_1_arr_0_code_6;\n    var file_name_arr_1_arr_0_code_8 = file_name_arr_1_arr_0_code_7\
    \ ? \"Yes\" : \"No\";\n    var file_name_arr_1_arr_0_code_9 = file_name_arr_1_arr_0_code",
  "    let dot_index = file_name.indexOf('.');\n    let file_name_before_dot = file_name.substring(0,\
    \ dot_index);\n    let file_name_after_dot = file_name.substring(dot_index + 1);\n\
    \    let file_name_after_dot_valid = ['txt', 'exe', 'dll'].includes(file_name_after_dot);\n\
    \    let file_name_before_dot_valid = file_name_before_dot.match(/^[a-zA-Z]+[a-zA-Z0-9]*$/)\
    \ !== null;\n    let file_name_has_no_more_than_three_digits = file_name.match(/[0-9]/g).length\
    \ <= 3;\n    return file_name_after_dot_valid && file_name_before_dot_valid &&\
    \ file_name_has_no_more_than_three_digits ? 'Yes' : 'No';\n}\n", "    var dot_index\
    \ = file_name.indexOf('.');\n    var extension = file_name.substring(dot_index\
    \ + 1);\n    var file_name_without_extension = file_name.substring(0, dot_index);\n\
    \    var number_of_digits = 0;\n    for(var i = 0; i < file_name_without_extension.length;\
    \ i++){\n        if(file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9'){\n            number_of_digits++;\n        }\n    }\n    if(number_of_digits\
    \ > 3){\n        return \"No\";\n    }\n    if(file_name.indexOf('.') != file_name.lastIndexOf('.')){\n\
    \        return \"No\";\n    }\n    if(file_name_without_extension.length == 0){\n\
    \        return \"No\";\n    }\n    if(file_name_without_extension[0] < 'A' ||\
    \ file_name_without_extension[0] > 'z' || (file_name_without_extension[0] > 'Z'\
    \ && file_name_without_extension[0] < 'a')){\n        return \"No\";\n    }\n\
    \    if(extension != 'txt' && extension != 'exe' && extension != 'dll'){\n   \
    \     return \"No\";\n    }\n    return \"Yes\";\n}\n", "    var digits = 0;\n\
    \    var dot = 0;\n    var valid_extensions = ['txt', 'exe', 'dll'];\n    for(var\
    \ i = 0; i < file_name.length; i++){\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9'){\n            digits++;\n        }\n        if(file_name[i] == '.'){\n\
    \            dot++;\n        }\n    }\n    if(digits > 3 || dot != 1){\n     \
    \   return \"No\";\n    }\n    var name = file_name.split('.');\n    if(name[0]\
    \ == '' || name[0][0] < 'a' || name[0][0] > 'z' && name[0][0] < 'A' || name[0][0]\
    \ > 'Z'){\n        return \"No\";\n    }\n    if(valid_extensions.indexOf(name[1])\
    \ == -1){\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "  var dot_index\
    \ = file_name.indexOf('.');\n  var extension = file_name.substring(dot_index+1);\n\
    \  var name = file_name.substring(0, dot_index);\n  var valid_extensions = ['txt',\
    \ 'exe', 'dll'];\n  var valid_extension = false;\n  for(var i = 0; i < valid_extensions.length;\
    \ i++){\n    if(extension == valid_extensions[i]){\n      valid_extension = true;\n\
    \    }\n  }\n  if(name.length == 0 || name[0] < 'a' || name[0] > 'z' && name[0]\
    \ < 'A' || name[0] > 'Z'){\n    return \"No\";\n  }\n  var digit_count = 0;\n\
    \  for(var i = 0; i < name.length; i++){\n    if(name[i] >= '0' && name[i] <=\
    \ '9'){\n      digit_count++;\n    }\n  }\n  if(digit_count > 3){\n    return\
    \ \"No\";\n  }\n  if(valid_extension){\n    return \"Yes\";\n  }\n  return \"\
    No\";\n}\n", "    var count = 0;\n    var dot = 0;\n    var ext = 0;\n    for(var\
    \ i = 0; i < file_name.length; i++){\n        if(file_name[i] >= '0' && file_name[i]\
    \ <= '9'){\n            count++;\n        }\n        if(file_name[i] == '.'){\n\
    \            dot++;\n        }\n        if(file_name[i] == '.' && file_name[i+1]\
    \ == 't' && file_name[i+2] == 'x' && file_name[i+3] == 't'){\n            ext++;\n\
    \        }\n        if(file_name[i] == '.' && file_name[i+1] == 'e' && file_name[i+2]\
    \ == 'x' && file_name[i+3] == 'e'){\n            ext++;\n        }\n        if(file_name[i]\
    \ == '.' && file_name[i+1] == 'd' && file_name[i+2] == 'l' && file_name[i+3] ==\
    \ 'l'){\n            ext++;\n        }\n    }\n    if(count <= 3 && dot == 1 &&\
    \ ext == 1){\n        return \"Yes\";\n    }\n    else{\n        return \"No\"\
    ;\n    }\n}\n", "    let dot_index = file_name.indexOf('.');\n    let before_dot\
    \ = file_name.substring(0, dot_index);\n    let after_dot = file_name.substring(dot_index\
    \ + 1);\n    let num_digits = 0;\n    for(let i = 0; i < before_dot.length; i++){\n\
    \        if(before_dot[i] >= '0' && before_dot[i] <= '9'){\n            num_digits++;\n\
    \        }\n    }\n    if(num_digits > 3){\n        return \"No\";\n    }\n  \
    \  if(file_name.indexOf('.') != file_name.lastIndexOf('.')){\n        return \"\
    No\";\n    }\n    if(before_dot.length == 0 || (before_dot[0] < 'a' || before_dot[0]\
    \ > 'z') && (before_dot[0] < 'A' || before_dot[0] > 'Z')){\n        return \"\
    No\";\n    }\n    if(after_dot != 'txt' && after_dot != 'exe' && after_dot !=\
    \ 'dll'){\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "\tvar dot_index\
    \ = file_name.indexOf('.');\n\tvar file_name_before_dot = file_name.substring(0,\
    \ dot_index);\n\tvar file_name_after_dot = file_name.substring(dot_index + 1);\n\
    \tvar file_name_after_dot_valid = ['txt', 'exe', 'dll'].indexOf(file_name_after_dot)\
    \ != -1;\n\tvar file_name_before_dot_valid = file_name_before_dot.match(/[a-zA-Z]/)\
    \ && !file_name_before_dot.match(/[0-9]{4,}/);\n\treturn file_name_after_dot_valid\
    \ && file_name_before_dot_valid ? 'Yes' : 'No';\n}\n", "    var dot_index = file_name.indexOf('.');\n\
    \    var name_before_dot = file_name.substring(0, dot_index);\n    var name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    var valid_extensions = ['txt', 'exe',\
    \ 'dll'];\n    var digits_count = 0;\n    var is_valid = true;\n    for(var i\
    \ = 0; i < name_before_dot.length; i++){\n        if(name_before_dot[i] >= '0'\
    \ && name_before_dot[i] <= '9'){\n            digits_count++;\n        }\n   \
    \ }\n    if(digits_count > 3){\n        is_valid = false;\n    }\n    if(file_name.indexOf('.')\
    \ != file_name.lastIndexOf('.')){\n        is_valid = false;\n    }\n    if(name_before_dot.length\
    \ == 0 || !(name_before_dot[0] >= 'a' && name_before_dot[0] <= 'z' || name_before_dot[0]\
    \ >= 'A' && name_before_dot[0] <= 'Z')){\n        is_valid = false;\n    }\n \
    \   if(valid_extensions.indexOf(name_after_dot) == -1){\n        is_valid = false;\n\
    \    }\n    if(is_valid){\n        return \"Yes\";\n    }\n    else{\n       \
    \ return \"No\";\n    }\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_without_extension = file_name.substring(0, dot_index);\n  \
    \  let extension = file_name.substring(dot_index + 1);\n    let digits_count =\
    \ 0;\n    for(let i = 0; i < file_name_without_extension.length; i++){\n     \
    \   if(file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9'){\n            digits_count++;\n        }\n    }\n    if(digits_count\
    \ > 3){\n        return \"No\";\n    }\n    if(file_name_without_extension.length\
    \ === 0){\n        return \"No\";\n    }\n    if(file_name_without_extension[0]\
    \ < 'a' || file_name_without_extension[0] > 'z' && file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'Z'){\n        return \"No\";\n  \
    \  }\n    if(extension !== 'txt' && extension !== 'exe' && extension !== 'dll'){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digit_count\
    \ = 0;\n    for(let i = 0; i < name.length; i++){\n        if(name[i] >= '0' &&\
    \ name[i] <= '9'){\n            digit_count++;\n        }\n    }\n    if(digit_count\
    \ > 3){\n        return \"No\";\n    }\n    if(extension !== 'txt' && extension\
    \ !== 'exe' && extension !== 'dll'){\n        return \"No\";\n    }\n    if(name[0]\
    \ < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] > 'Z'){\n        return \"\
    No\";\n    }\n    return \"Yes\";\n}\n", "    var count = 0;\n    var dot = false;\n\
    \    var ext = false;\n    var valid_ext = ['txt', 'exe', 'dll'];\n    for(var\
    \ i = 0; i < file_name.length; i++){\n        if(file_name[i] == '.'){\n     \
    \       dot = true;\n            continue;\n        }\n        if(dot){\n    \
    \        if(file_name[i] == 't' || file_name[i] == 'e' || file_name[i] == 'd'){\n\
    \                ext = true;\n            }\n            else{\n             \
    \   ext = false;\n                break;\n            }\n        }\n        if(file_name[i]\
    \ >= '0' && file_name[i] <= '9'){\n            count++;\n        }\n    }\n  \
    \  if(count > 3 || !dot || !ext){\n        return \"No\";\n    }\n    return \"\
    Yes\";\n}\n", "    var dot_index = file_name.indexOf('.');\n    var extension\
    \ = file_name.substring(dot_index+1);\n    var name = file_name.substring(0, dot_index);\n\
    \    var valid_extensions = ['txt', 'exe', 'dll'];\n    var valid_extension =\
    \ false;\n    var valid_name = false;\n    var valid_digit_count = true;\n   \
    \ var digit_count = 0;\n    for(var i = 0; i < valid_extensions.length; i++){\n\
    \        if(valid_extensions[i] == extension){\n            valid_extension =\
    \ true;\n            break;\n        }\n    }\n    if(name.length > 0 && (name[0]\
    \ >= 'a' && name[0] <= 'z' || name[0] >= 'A' && name[0] <= 'Z')){\n        valid_name\
    \ = true;\n    }\n    for(var i = 0; i < name.length; i++){\n        if(name[i]\
    \ >= '0' && name[i] <= '9'){\n            digit_count++;\n        }\n    }\n \
    \   if(digit_count > 3){\n        valid_digit_count = false;\n    }\n    if(valid_extension\
    \ && valid_name && valid_digit_count){\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}\n", "    let file_name_arr = file_name.split(\".\");\n    let file_name_before_dot\
    \ = file_name_arr[0];\n    let file_name_after_dot = file_name_arr[1];\n    let\
    \ file_name_before_dot_arr = file_name_before_dot.split(\"\");\n    let file_name_after_dot_arr\
    \ = file_name_after_dot.split(\"\");\n    let file_name_before_dot_arr_length\
    \ = file_name_before_dot_arr.length;\n    let file_name_after_dot_arr_length =\
    \ file_name_after_dot_arr.length;\n    let file_name_before_dot_arr_first_char\
    \ = file_name_before_dot_arr[0];\n    let file_name_after_dot_arr_first_char =\
    \ file_name_after_dot_arr[0];\n    let file_name_after_dot_arr_second_char = file_name_after_dot_arr[1];\n\
    \    let file_name_after_dot_arr_third_char = file_name_after_dot_arr[2];\n  \
    \  let file_name_after_dot_arr_fourth_char = file_name_after_dot_arr[3];\n   \
    \ let file_name_after_dot_arr_fifth_char = file_name_after_dot_arr[4];\n    let\
    \ file_name_after_dot_arr_sixth_char = file_name_after_dot_arr[5];\n    let file_name_after_dot_arr_seventh_char\
    \ = file_name_after_dot_arr[6];\n    let file_name_after_dot_arr_eighth_char =\
    \ file_name_after_dot_arr[7];\n    let file_name_after_dot_arr_ninth_char = file_name_after_dot_arr[8];\n\
    \    let file_name_after_dot_arr_tenth_char = file_name_after_dot_arr[9];\n  \
    \  let file_name_after_dot_arr_eleventh_char = file_name_after_dot_arr[10];\n",
  "    var file_name_arr = file_name.split(\".\");\n    var file_name_arr_1 = file_name_arr[0];\n\
    \    var file_name_arr_2 = file_name_arr[1];\n    var count = 0;\n    var count_1\
    \ = 0;\n    var count_2 = 0;\n    var count_3 = 0;\n    var count_4 = 0;\n   \
    \ for(var i = 0; i < file_name_arr_1.length; i++){\n        if(file_name_arr_1[i]\
    \ >= \"0\" && file_name_arr_1[i] <= \"9\"){\n            count++;\n        }\n\
    \        if(file_name_arr_1[i] >= \"a\" && file_name_arr_1[i] <= \"z\"){\n   \
    \         count_1++;\n        }\n        if(file_name_arr_1[i] >= \"A\" && file_name_arr_1[i]\
    \ <= \"Z\"){\n            count_2++;\n        }\n    }\n    for(var i = 0; i <\
    \ file_name_arr_2.length; i++){\n        if(file_name_arr_2[i] >= \"a\" && file_name_arr_2[i]\
    \ <= \"z\"){\n            count_3++;\n        }\n        if(file_name_arr_2[i]\
    \ >= \"A\" && file_name_arr_2[i] <= \"Z\"){\n            count_4++;\n        }\n\
    \    }\n    if(count > 3){\n        return \"No\";\n    }\n    if(file_name_arr.length\
    \ != 2){\n        return \"No\";\n    }\n    if(count_1 == 0 && count_2 == 0){\n\
    \        return \"No\";\n    }\n    if(file_name_arr_2 != \"txt\" && file_name_arr_2\
    \ != \"exe\" && file_name_arr_2 != \"dll\"){\n        return \"No\";\n    }\n\
    \    return \"Yes\";\n}", "    var result = \"No\";\n    var dot_index = file_name.indexOf(\"\
    .\");\n    var dot_count = 0;\n    var digit_count = 0;\n    var extension = \"\
    \";\n    var valid_extensions = [\"txt\", \"exe\", \"dll\"];\n    var valid_extension\
    \ = false;\n    var valid_name = false;\n    var valid_digit_count = false;\n\
    \    var valid_dot_count = false;\n    var name = \"\";\n    for(var i = 0; i\
    \ < file_name.length; i++){\n        if(file_name[i] == \".\"){\n            dot_count++;\n\
    \        }\n        if(file_name[i] >= \"0\" && file_name[i] <= \"9\"){\n    \
    \        digit_count++;\n        }\n    }\n    if(dot_count == 1){\n        valid_dot_count\
    \ = true;\n    }\n    if(digit_count <= 3){\n        valid_digit_count = true;\n\
    \    }\n    if(valid_dot_count && valid_digit_count){\n        name = file_name.substring(0,\
    \ dot_index);\n        extension = file_name.substring(dot_index + 1);\n     \
    \   if(name.length > 0 && (name[0] >= \"a\" && name[0] <= \"z\" || name[0] >=\
    \ \"A\" && name[0] <= \"Z\")){\n            valid_name = true;\n        }\n  \
    \      for(var i = 0; i < valid_extensions.length; i++){\n            if(extension\
    \ == valid_extensions[i]){\n                valid_extension = true;\n        \
    \    }\n        }\n        if(valid_name && valid_extension){\n            result\
    \ = \"Yes\";\n        }\n    }\n    return result;\n}\n", "    let file_name_arr\
    \ = file_name.split('.');\n    let file_name_arr_len = file_name_arr.length;\n\
    \    let file_name_arr_first = file_name_arr[0];\n    let file_name_arr_last =\
    \ file_name_arr[file_name_arr_len - 1];\n    let file_name_arr_first_len = file_name_arr_first.length;\n\
    \    let file_name_arr_last_len = file_name_arr_last.length;\n    let file_name_arr_first_char\
    \ = file_name_arr_first.charAt(0);\n    let file_name_arr_last_char = file_name_arr_last.charAt(0);\n\
    \    let file_name_arr_first_char_code = file_name_arr_first_char.charCodeAt(0);\n\
    \    let file_name_arr_last_char_code = file_name_arr_last_char.charCodeAt(0);\n\
    \    let file_name_arr_first_char_code_lower = file_name_arr_first_char_code >=\
    \ 97 && file_name_arr_first_char_code <= 122;\n    let file_name_arr_first_char_code_upper\
    \ = file_name_arr_first_char_code >= 65 && file_name_arr_first_char_code <= 90;\n\
    \    let file_name_arr_last_char_code_lower = file_name_arr_last_char_code >=\
    \ 97 && file_name_arr_last_char_code <= 122;\n    let file_name_arr_last_char_code_upper\
    \ = file_name_arr_last_char_code >= 65 && file_name_arr_last_char_code <= 90;\n\
    \    let file_name_arr_first_char_code_num = file_name_arr_first_char_code >=\
    \ 48 && file_name_arr_first_char_code <= 57;\n    let file_name_arr_last_char_code_num\
    \ = file_name_arr_last_char_code >= 48 && file_name_arr_last_char_code <= 57;",
  "    var dot_index = file_name.indexOf('.');\n    var extension = file_name.substring(dot_index\
    \ + 1);\n    var name = file_name.substring(0, dot_index);\n    var digits = 0;\n\
    \    for (var i = 0; i < name.length; i++){\n        if (name[i] >= '0' && name[i]\
    \ <= '9'){\n            digits++;\n        }\n    }\n    if (digits > 3){\n  \
    \      return \"No\";\n    }\n    if (dot_index == -1){\n        return \"No\"\
    ;\n    }\n    if (name.length == 0){\n        return \"No\";\n    }\n    if (name[0]\
    \ < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] > 'Z'){\n        return \"\
    No\";\n    }\n    if (extension != 'txt' && extension != 'exe' && extension !=\
    \ 'dll'){\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let\
    \ dot_index = file_name.indexOf('.');\n    let before_dot = file_name.substring(0,\
    \ dot_index);\n    let after_dot = file_name.substring(dot_index + 1);\n    let\
    \ count = 0;\n    for (let i = 0; i < before_dot.length; i++){\n        if (before_dot[i]\
    \ >= '0' && before_dot[i] <= '9'){\n            count++;\n        }\n    }\n \
    \   if (count > 3 || before_dot.length == 0 || after_dot.length == 0){\n     \
    \   return \"No\";\n    }\n    if (before_dot[0] < 'a' || before_dot[0] > 'z'\
    \ && before_dot[0] < 'A' || before_dot[0] > 'Z'){\n        return \"No\";\n  \
    \  }\n    if (after_dot != 'txt' && after_dot != 'exe' && after_dot != 'dll'){\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let count = 0;\n\
    \    let dot_count = 0;\n    let dot_index = 0;\n    let valid_extensions = ['txt',\
    \ 'exe', 'dll'];\n    let extension = '';\n    let valid_extension = false;\n\
    \    let valid_name = false;\n    let valid_file_name = false;\n    let valid_file_name_count\
    \ = 0;\n    let valid_file_name_count_max = 0;\n    let valid_file_name_count_min\
    \ = 0;\n    let valid_file_name_count_max_index = 0;\n    let valid_file_name_count_min_index\
    \ = 0;\n    let valid_file_name_count_max_index_char = '';\n    let valid_file_name_count_min_index_char\
    \ = '';\n    let valid_file_name_count_max_index_char_code = 0;\n    let valid_file_name_count_min_index_char_code\
    \ = 0;\n    let valid_file_name_count_max_index_char_code_min = 0;\n    let valid_file_name_count_min_index_char_code_min\
    \ = 0;\n    let valid_file_name_count_max_index_char_code_max = 0;\n    let valid_file_name_count_min_index_char_code_max\
    \ = 0;\n    let valid_file_name_count_max_index_char_code_min_char = '';\n   \
    \ let valid_file_name_count_min_index_char_code_min_char = '';\n    let valid_file_name_count_max_index_char_code_max_char\
    \ = '';\n    let valid_file_name_count_min_index_char_code_max_char = '';\n  \
    \  let valid_file_name_count_max_index_char_code_min_char_code = 0;\n    let valid_file_name_count_min_index_char_code_min_char_code\
    \ = 0;\n    let valid_file_name_count_max_index_char_code_max_char_code = 0;\n\
    \   "]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

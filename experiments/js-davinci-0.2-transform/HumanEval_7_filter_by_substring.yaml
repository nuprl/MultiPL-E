name: HumanEval_7_filter_by_substring
language: js
prompt: "//Filter an input list of strings only for ones that contain given substring\n\
  // >>> filter_by_substring([], \"a\")\n// []\n// >>> filter_by_substring([\"abc\"\
  , \"bacd\", \"cde\", \"array\"], \"a\")\n// [\"abc\", \"bacd\", \"array\"]\nfunction\
  \ filter_by_substring(strings, substring){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = filter_by_substring;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
  xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\",\
  \ \"xxxAAA\", \"xxx\"]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"aaaxxy\"\
  , \"john doe\", \"xxxAAA\", \"xxx\"], \"xx\"),[\"xxx\", \"aaaxxy\", \"xxxAAA\",\
  \ \"xxx\"]);\n  assert.deepEqual(candidate([\"grunt\", \"trumpet\", \"prune\", \"\
  gruesome\"], \"run\"),[\"grunt\", \"prune\"]);\n}\n\ntest();"
completions: ["    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "\treturn strings.filter(function(string){\n\t\treturn\
    \ string.indexOf(substring) > -1;\n\t});\n}\n", "    var filtered = [];\n    for(var\
    \ i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring) !=\
    \ -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "\tvar filtered = [];\n\tfor(var i = 0; i < strings.length; i++){\n\
    \t\tif(strings[i].indexOf(substring) != -1){\n\t\t\tfiltered.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn filtered;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.indexOf(substring) !==\
    \ -1;\n    });\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    var filtered = [];\n    for(var i = 0; i < strings.length;\
    \ i++){\n        if(strings[i].indexOf(substring) != -1){\n            filtered.push(strings[i]);\n\
    \        }\n    }\n    return filtered;\n}\n", "    return strings.filter(function(str){\n\
    \        return str.includes(substring);\n    });\n}\n", "\tvar filtered = [];\n\
    \tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].includes(substring)){\n\
    \t\t\tfiltered.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered;\n}\n", "    var\
    \ filtered_strings = [];\n    for(var i = 0; i < strings.length; i++){\n     \
    \   if(strings[i].indexOf(substring) != -1){\n            filtered_strings.push(strings[i]);\n\
    \        }\n    }\n    return filtered_strings;\n}\n", "    var filtered = [];\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ >= 0){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "  return strings.filter(function(string){\n    return string.includes(substring);\n\
    \  });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "  return strings.filter(function(string){\n    return string.includes(substring);\n\
    \  });\n}\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n     \
    \   return string.indexOf(substring) != -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    var filtered_strings\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered_strings.push(strings[i]);\n        }\n    }\n\
    \    return filtered_strings;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            result.push(strings[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.includes(substring);\n    });\n}\n", "    var filtered = [];\n    for(var\
    \ i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring) !=\
    \ -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "    //TODO\n    var new_list = [];\n    for (var i = 0; i < strings.length;\
    \ i++) {\n        if (strings[i].includes(substring)) {\n            new_list.push(strings[i]);\n\
    \        }\n    }\n    return new_list;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) != -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n     \
    \   return string.includes(substring);\n    });\n}\n", "    var filtered = [];\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.includes(substring);\n    });\n}\n", "\tvar filtered = [];\n\tfor(var\
    \ i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring) != -1){\n\
    \t\t\tfiltered.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered;\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.indexOf(substring) >\
    \ -1;\n    });\n}\n", "    var filtered_strings = [];\n    for(var i = 0; i <\
    \ strings.length; i++){\n        if(strings[i].indexOf(substring) != -1){\n  \
    \          filtered_strings.push(strings[i]);\n        }\n    }\n    return filtered_strings;\n\
    }\n", "\tvar filtered = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\t\
    if(strings[i].indexOf(substring) != -1){\n\t\t\tfiltered.push(strings[i]);\n\t\
    \t}\n\t}\n\treturn filtered;\n}\n", "\tvar filtered = [];\n\tfor(var i = 0; i\
    \ < strings.length; i++){\n\t\tif(strings[i].includes(substring)){\n\t\t\tfiltered.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn filtered;\n}\n", "    return strings.filter(function(str){\n\
    \        return str.indexOf(substring) !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    var filtered_strings\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered_strings.push(strings[i]);\n        }\n    }\n\
    \    return filtered_strings;\n}\n", "    return strings.filter(function(str){\n\
    \        return str.indexOf(substring) != -1;\n    });\n}\n", "\tvar new_list\
    \ = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tnew_list.push(strings[i]);\n\t\t}\n\t}\n\treturn new_list;\n\
    }\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    var filtered_strings = [];\n    for(var i = 0; i < strings.length;\
    \ i++){\n        if(strings[i].indexOf(substring) != -1){\n            filtered_strings.push(strings[i]);\n\
    \        }\n    }\n    return filtered_strings;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n     \
    \   return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) != -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(str){\n        return str.includes(substring);\n   \
    \ });\n}\n", "\tvar filtered_strings = [];\n\tfor(var i = 0; i < strings.length;\
    \ i++){\n\t\tif(strings[i].indexOf(substring) != -1){\n\t\t\tfiltered_strings.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn filtered_strings;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "\tvar filtered_strings\
    \ = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tfiltered_strings.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered_strings;\n\
    }\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ != -1;\n    });\n}\n", "    //TODO: implement this function\n    var filtered\
    \ = [];\n    for (var i = 0; i < strings.length; i++) {\n        if (strings[i].includes(substring))\
    \ {\n            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n     \
    \   return string.indexOf(substring) !== -1;\n    });\n}\n", "    return strings.filter(function(str){\n\
    \        return str.indexOf(substring) !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "\tvar filtered_strings\
    \ = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tfiltered_strings.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered_strings;\n\
    }\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(str){\n        return str.indexOf(substring)\
    \ != -1;\n    });\n}\n", "    return strings.filter(function(string){\n      \
    \  return string.indexOf(substring) !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "\tvar filtered_strings\
    \ = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tfiltered_strings.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered_strings;\n\
    }\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "\tvar filtered = [];\n\tfor(var i = 0; i < strings.length; i++){\n\
    \t\tif(strings[i].indexOf(substring) != -1){\n\t\t\tfiltered.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn filtered;\n}\n", "  return strings.filter(function(string){\n\
    \    return string.indexOf(substring) !== -1;\n  });\n}\n", "    return strings.filter(function(str){\n\
    \        return str.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.indexOf(substring) !==\
    \ -1;\n    });\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.indexOf(substring) !== -1;\n    });\n}\n", "  return strings.filter(function(string){\n\
    \    return string.indexOf(substring) !== -1;\n  });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    var filtered\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.indexOf(substring) !== -1;\n    });\n}\n", "    var filtered = [];\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "\tvar result = [];\n\
    \tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tresult.push(strings[i]);\n\t\t}\n\t}\n\treturn result;\n}\n",
  "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n     \
    \   return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    //TODO: Implement\
    \ me\n    return [];\n}\n", "    return strings.filter(function(string){\n   \
    \     return string.indexOf(substring) !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) != -1;\n    });\n}\n", "\treturn strings.filter(function(string){\n\
    \t\treturn string.indexOf(substring) != -1;\n\t});\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) != -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) != -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(str){\n        return str.indexOf(substring) !== -1;\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "\tvar filtered_strings = [];\n\tfor(var i = 0; i < strings.length;\
    \ i++){\n\t\tif(strings[i].indexOf(substring) != -1){\n\t\t\tfiltered_strings.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn filtered_strings;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    var filtered\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "\tvar new_list = [];\n\tfor(var i = 0; i < strings.length; i++){\n\
    \t\tif(strings[i].indexOf(substring) != -1){\n\t\t\tnew_list.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn new_list;\n}\n", "  return strings.filter(function(string){\n\
    \    return string.includes(substring);\n  });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "  return strings.filter(function(string){\n\
    \    return string.indexOf(substring) !== -1;\n  });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    var filtered\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.indexOf(substring) !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(str){\n\
    \        return str.indexOf(substring) !== -1;\n    });\n}\n", "    var filtered_strings\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered_strings.push(strings[i]);\n        }\n    }\n\
    \    return filtered_strings;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "\treturn strings.filter(function(string){\n\
    \t\treturn string.includes(substring);\n\t});\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    var filtered_strings = [];\n    for(var i = 0; i < strings.length;\
    \ i++){\n        if(strings[i].indexOf(substring) != -1){\n            filtered_strings.push(strings[i]);\n\
    \        }\n    }\n    return filtered_strings;\n}\n", "\tvar filtered = [];\n\
    \tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tfiltered.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered;\n\
    }\n", "    var filtered = [];\n    for(var i = 0; i < strings.length; i++){\n\
    \        if(strings[i].indexOf(substring) != -1){\n            filtered.push(strings[i]);\n\
    \        }\n    }\n    return filtered;\n}\n", "\tvar filtered_strings = [];\n\
    \tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tfiltered_strings.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered_strings;\n\
    }\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "  return strings.filter(function(string){\n    return string.includes(substring);\n\
    \  });\n}\n", "    var filtered = [];\n    for(var i = 0; i < strings.length;\
    \ i++){\n        if(strings[i].indexOf(substring) != -1){\n            filtered.push(strings[i]);\n\
    \        }\n    }\n    return filtered;\n}\n", "    var filtered = [];\n    for(var\
    \ i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring) !=\
    \ -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "\tvar filtered = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\t\
    if(strings[i].indexOf(substring) != -1){\n\t\t\tfiltered.push(strings[i]);\n\t\
    \t}\n\t}\n\treturn filtered;\n}\n", "    var filtered = [];\n    for(var i = 0;\
    \ i < strings.length; i++){\n        if(strings[i].indexOf(substring) != -1){\n\
    \            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "    var filtered = [];\n    for(var i = 0; i < strings.length; i++){\n\
    \        if(strings[i].indexOf(substring) != -1){\n            filtered.push(strings[i]);\n\
    \        }\n    }\n    return filtered;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "\tvar filtered\
    \ = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tfiltered.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered;\n\
    }\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ > -1;\n    });\n}\n", "    return strings.filter(function(string){\n       \
    \ return string.indexOf(substring) > -1;\n    });\n}\n", "    var filtered = [];\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "    var filtered = [];\n    for(var i = 0; i < strings.length;\
    \ i++){\n        if(strings[i].indexOf(substring) != -1){\n            filtered.push(strings[i]);\n\
    \        }\n    }\n    return filtered;\n}\n", "    var filtered_strings = [];\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered_strings.push(strings[i]);\n        }\n    }\n\
    \    return filtered_strings;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.indexOf(substring) !=\
    \ -1;\n    });\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n     \
    \   return string.indexOf(substring) != -1;\n    });\n}\n", "    var filtered\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].includes(substring)){\n\
    \            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "\tvar filtered = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\t\
    if(strings[i].indexOf(substring) != -1){\n\t\t\tfiltered.push(strings[i]);\n\t\
    \t}\n\t}\n\treturn filtered;\n}\n", "\treturn strings.filter(function(string){\n\
    \t\treturn string.indexOf(substring) !== -1;\n\t});\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(str){\n\
    \        return str.indexOf(substring) != -1;\n    });\n}\n", "\tvar filtered\
    \ = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ > -1){\n\t\t\tfiltered.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered;\n}\n",
  "    var filtered_strings = [];\n    for(var i = 0; i < strings.length; i++){\n\
    \        if(strings[i].indexOf(substring) != -1){\n            filtered_strings.push(strings[i]);\n\
    \        }\n    }\n    return filtered_strings;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.indexOf(substring) !==\
    \ -1;\n    });\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.indexOf(substring) !== -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(str){\n        return str.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(str){\n        return\
    \ str.includes(substring);\n    });\n}\n", "    var filtered = [];\n    for(var\
    \ i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring) !=\
    \ -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(s){\n        return\
    \ s.indexOf(substring) != -1;\n    });\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}\n", "    var filtered\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "    return strings.filter(function(string){\n        return\
    \ string.includes(substring);\n    });\n}\n", "\treturn strings.filter(function(string){\n\
    \t\treturn string.indexOf(substring) != -1;\n\t});\n}\n", "    return strings.filter(function(str){\n\
    \        return str.indexOf(substring) > -1;\n    });\n}\n", "    return strings.filter(function(s){\n\
    \        return s.indexOf(substring) !== -1;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

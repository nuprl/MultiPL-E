name: HumanEval_157_right_angle_triangle
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return True if the three\n\
  \    // sides form a right-angled triangle, False otherwise.\n    // A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n    // 90 degree.\n\
  \    // Example:\n    // >>> rightAngleTriangle((3l), (4l), (5l))\n    // (true)\n\
  \    // >>> rightAngleTriangle((1l), (2l), (3l))\n    // (false)\n    def rightAngleTriangle(a\
  \ : Long, b : Long, c : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(rightAngleTriangle((3l),\
  \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
  \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) ==\
  \ (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
  \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) ==\
  \ (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n   \
  \ assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (10l)) == (false));\n    }\n\n}\n"
completions: ["        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n      \
    \  val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2 + c3\n\
    \        val c3 = c3 + a3\n        (a1 == a2 && b1 == b2 && c1 == c2) || (a1 ==\
    \ a3 && b1 == b3 && c1 == c3)", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 ==\
    \ a2)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        (a1 + b1 + c1 == a2 && b1 + c1 + a1 == b2 && c1\
    \ + a1 + b1 == c2) || (a2 + b2 + c2 == a1 && b2 + c2 + a1 == b1 && c2 + a2 + b1\
    \ == c1)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n     \
    \   val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a2\n        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 &&\
    \ c1 + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2\
    \ + b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 ==\
    \ c2)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 == b2\
    \ && b2 == c2 && c2 == a2)", "        // Write your code here\n        val a1\
    \ = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)", " \
    \       val ab = math.abs(b - a)\n        val bc = math.abs(c - b)\n        val\
    \ ac = math.abs(c - a)\n        val abc = math.abs(ab - bc)\n        val acb =\
    \ math.abs(ac - ab)\n        abc < acb", "        val ab = math.abs(a-b)\n   \
    \     val ac = math.abs(a-c)\n        val bc = math.abs(b-c)\n        ab >= ac\
    \ && ab >= bc", "        val ab = math.abs(a - b)\n        val ac = math.abs(a\
    \ - c)\n        val bc = math.abs(b - c)\n        ab > ac && ab > bc", "     \
    \   val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc\
    \ = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        abc > ab", " \
    \       val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n        val bc\
    \ = math.abs(b-c)\n        ab > ac && ab > bc", "        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab + bc, 2)\n        val bcd = math.pow(b + cd, 2)\n  \
    \      val cdab = math.pow(cd + ab, 2)\n        val abbc = math.pow(ab + bc, 2)\n\
    \        val bcbd = math.pow(b + cd, 2)\n        val cdab = math.pow(cd + ab,\
    \ 2)\n        val abbc = math.pow(ab + bc, 2)\n        val bcbd = math.pow(b +\
    \ cd, 2)\n        val cdab = math.pow(cd + ab, 2)\n        val abbc = math.pow(ab\
    \ + bc, 2)\n        val bcbd = math.pow(b + cd, 2)\n        val cdab = math.pow(cd\
    \ + ab, 2)\n        val abbc = math.pow(ab + bc, 2)\n        val bcbd = math.pow(b\
    \ + cd, 2)\n        val cdab = math.pow(cd + ab, 2)\n        val abbc = math.pow(ab\
    \ + bc, 2)\n        val bcbd = math.pow(b + cd, 2)\n        val cdab = math.pow(cd\
    \ + ab, 2)\n        val abbc = math.pow(ab + bc, 2)\n        val bcbd = math.pow(b\
    \ + cd, 2)\n        val cdab = math.pow(cd + ab, 2)\n        val abbc = math.pow(ab\
    \ + bc, 2)\n        val bcbd = math.pow(b + cd, 2)\n        val cdab = math.pow(cd\
    \ + ab, 2)\n        val abbc = math.pow(ab + bc, 2)\n        val bcbd = math.pow(b\
    \ + cd, 2)\n        val cdab = math.pow(cd + ab, 2)\n        val abbc = math.pow(ab\
    \ + bc, 2)\n        val bcbd = math.pow(b + cd, 2)\n        val cdab = math.pow(cd\
    \ + ab, 2)\n        val abbc = math.pow(ab + bc, 2)\n        val bcbd = math.pow(b\
    \ + cd, 2)\n        val cdab = math.pow(cd + ab, 2)\n        val abbc = math.pow(ab\
    \ + bc, 2)\n        val bcbd = math.pow(b + cd, 2)\n        val cdab = math.pow(cd\
    \ + ab, 2)\n        val abbc = math.pow(ab + bc, 2)\n        val bcbd = math.",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a-b)\n   \
    \     val bc = math.abs(b-c)\n        val ac = math.abs(a-c)\n        ab > bc\
    \ && ab > ac", "        val ab = math.abs(a - b)\n        val bc = math.abs(b\
    \ - c)\n        val ac = math.abs(a - c)\n        ab > bc && ab > ac", "     \
    \   val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc\
    \ = math.abs(b - c)\n        ab == ac && ab == bc", "        val ab = math.abs(a\
    \ - b)\n        val bc = math.abs(b - c)\n        val ac = math.abs(a - c)\n \
    \       ab == bc && ab == ac", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b\
    \ - c)\n        ab == ac && ab == bc", "        val ab = math.abs(a-b)\n     \
    \   val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc =\
    \ math.abs(a-c)\n        val bcd = math.abs(b-c)\n        abc > bcd", "      \
    \  val ab = math.sqrt((a.toDouble * a.toDouble) + (b.toDouble * b.toDouble))\n\
    \        val bc = math.sqrt((b.toDouble * b.toDouble) + (c.toDouble * c.toDouble))\n\
    \        val ac = math.sqrt((a.toDouble * a.toDouble) + (c.toDouble * c.toDouble))\n\
    \        val abc = math.sqrt((ab.toDouble * ab.toDouble) + (bc.toDouble * bc.toDouble))\n\
    \        val bcd = math.sqrt((bc.toDouble * bc.toDouble) + (ac.toDouble * ac.toDouble))\n\
    \        val acd = math.sqrt((ac.toDouble * ac.toDouble) + (ab.toDouble * ab.toDouble))\n\
    \        abc / bcd / acd > 1", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n\
    \        ab > ac && ab > bc", "        val ab = math.abs(a-b)\n        val ac\
    \ = math.abs(a-c)\n        val bc = math.abs(b-c)\n        ab == ac && ab == bc",
  "        // Write your code here\n        val a1 = math.abs(a)\n        val b1 =\
    \ math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n      \
    \  val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n    \
    \    val b3 = b2 + c3\n        val c3 = c2 + a2\n        (a1 == a2 && b1 == b2\
    \ && c1 == c2) || (a1 == a3 && b1 == b3 && c1 == c3)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 == a2)", "      \
    \  val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val\
    \ a2 = a1 + a1\n        val b2 = b1 + b1\n        val c2 = c1 + c1\n        val\
    \ a3 = a2 + a2\n        val b3 = b2 + b2\n        val c3 = c3 + c3\n        val\
    \ a4 = a3 + a3\n        val b4 = b4 + b4\n        val c4 = c4 + c4\n        val\
    \ a5 = a4 + a4\n        val b5 = b5 + b5\n        val c5 = c5 + c5\n        val\
    \ a6 = a5 + a5\n        val b6 = b6 + b6\n        val c6 = c6 + c6\n        val\
    \ a7 = a6 + a6\n        val b7 = b7 + b7\n        val c7 = c7 + c7\n        val\
    \ a8 = a7 + a7\n        val b8 = b8 + b8\n        val c8 = c8 + c8\n        val\
    \ a9 = a8 + a8\n        val b9 = b9 + b9\n        val c9 = c9 + c9\n        val\
    \ a10 = a9 + a9\n        val b10 = b9 + b9\n        val c10 = c9 + c9\n      \
    \  val a11 = a10 + a10\n        val b11 = b10 + b10\n        val c11 = c10 + c10\n\
    \        val a12 = a11 + a11\n        val b12 = b11 + b11\n        val c12 = c11\
    \ + c11\n        val a13 = a12 + a12\n        val b13 = b12 + b12\n        val\
    \ c13 = c12 + c12\n        val a14 = a13 + a13\n        val b14 = b13 + b13\n\
    \        val c14 = c13 + c13\n        val a15 = a14 + a14\n        val b15 = b14\
    \ + b14\n        val c15 = c14 + c14\n        val a16 = a15 + a15\n        val\
    \ b16 = b15 + b15\n        val c16 = c15 + c15\n        val a17 = a16 + a16\n\
    \        val b17 = b16 + b16\n        val c17 = c16 + c16\n        val a18 = a17\
    \ + a17\n        val b18 = b17 + b17\n        val c18 = c17 + c17\n        val\
    \ a19 = a18 + a18\n        val b19 = b18 + b18\n        val c19 = c18 + c18\n\
    \        val a20 = a19 + a19", "        val ab = math.abs(a - b)\n        val\
    \ ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab == ac &&\
    \ ab == bc", "        val ab = math.abs(a - b)\n        val ac = math.abs(a -\
    \ c)\n        val bc = math.abs(b - c)\n        ab == ac && ab == bc", "     \
    \   // Write your code here\n        val ab = math.abs(a-b)\n        val bc =\
    \ math.abs(b-c)\n        val ac = math.abs(a-c)\n        if (ab == bc && ab ==\
    \ ac) {\n            true\n        } else {\n            false\n        }", " \
    \       val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n        val bc\
    \ = math.abs(b-c)\n        ab == ac && ab == bc", "        val ab = math.abs(a\
    \ - b)\n        val bc = math.abs(b - c)\n        val ac = math.abs(a - c)\n \
    \       ab >= bc && ab >= ac", "        val ab = math.abs(a-b)\n        val ac\
    \ = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc = math.abs(a-c)\n\
    \        val bcd = math.abs(b-c)\n        ab == abc && ac == bcd && b == c", " \
    \       val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        abc < math.min(ab,\
    \ bc) && abc > math.max(bc, ab)", "        val ab = math.pow(a, 2)\n        val\
    \ bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        ab + bc == cd\
    \ || ab + bc < cd", "        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n\
    \        val bc = math.abs(b-c)\n        ab == ac && ab == bc", "        val ab\
    \ = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab - ac)\n        val bcd = math.abs(bc - bc)\n\
    \        val abcd = math.abs(abc - bcd)\n        abc <= bcd", "        val ab\
    \ = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b\
    \ - c)\n        ab > ac && ab > bc", "        val ab = math.abs(b - a)\n     \
    \   val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc\
    \ = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd",
  "        val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.min(ab, ac, bc)\n        abc >\
    \ a && abc > b && abc > c", "        val ab = math.abs(a-b)\n        val ac =\
    \ math.abs(a-c)\n        val bc = math.abs(b-c)\n        ab == ac && ab == bc",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab - ac)\n        val bcd =\
    \ math.abs(bc - ab)\n        val abcd = math.abs(abc - bcd)\n        abc <= bcd\
    \ && abc <= abcd && abc <= ab", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        abc < ab", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2)", " \
    \       val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n        val bc\
    \ = math.abs(b-c)\n        ab > ac && ab > bc", "        val ab = math.abs(a -\
    \ b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n   \
    \     val abc = math.abs(ab + ac + bc)\n        abc > Math.sqrt(ab * ab + ac *\
    \ ac + bc * bc)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = math.abs(a1 + b1 + c1)\n     \
    \   val b2 = math.abs(b1 + c1 + a1)\n        val c2 = math.abs(c1 + a1 + b1)\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a1 == b2 && c1 + a1 + b1 == c2) || (a1\
    \ + b1 + c1 == a2 && b1 + c1 + a1 == b2 && c1 + a1 + b1 == c2) || (a1 + b1 + c1\
    \ == a2 && b1 + c1 + a1 == b2 && c1 + a1 + b1 == c2)", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val ab = math.abs(b - a)\n        val bc = math.abs(c\
    \ - b)\n        val ac = math.abs(c - a)\n        ab == bc && ab == ac", "   \
    \     val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a - b)\n \
    \       val bc = math.abs(b - c)\n        val ac = math.abs(a - c)\n        ab\
    \ == bc && ab == ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1 == a2 && b1 + c1 + a2 ==\
    \ b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1\
    \ + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2\
    \ == c2)", "        val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n\
    \        val bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val\
    \ a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = math.abs(a1 - b1)\n        val b2 = math.abs(b1 - c1)\n    \
    \    val c2 = math.abs(c1 - a1)\n        val a3 = math.abs(a2 - b2)\n        val\
    \ b3 = math.abs(b2 - c2)\n        val c3 = math.abs(c2 - a2)\n        val a4 =\
    \ math.abs(a3 - b3)\n        val b4 = math.abs(b3 - c3)\n        val c4 = math.abs(c4\
    \ - a3)\n        (a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a4 + b4 + c4\
    \ && a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a4 + b4 + c4 && a1 + b1 +\
    \ c1 == a2 + b2 + c2 && a3 + b3 + c3 == a4 + b4 + c4)", "        val ab = math.abs(a-b)\n\
    \        val ac = math.abs(a-c)\n        val bc = math.abs(b-c)\n        ab >\
    \ ac && ab > bc", "        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n\
    \        val bc = math.abs(b-c)\n        ab == ac && ab == bc", "        val ab\
    \ = math.pow(b, 2)\n        val ac = math.pow(c, 2)\n        val bc = math.pow(b,\
    \ 2)\n        val ad = math.pow(a, 2)\n        val bd = math.pow(b, 2)\n     \
    \   val cd = math.pow(c, 2)\n        val abc = math.pow(ab, 2) + math.pow(ac,\
    \ 2)\n        val bcd = math.pow(bc, 2) + math.pow(ac, 2)\n        val cda = math.pow(cd,\
    \ 2) + math.pow(a, 2)\n        val bda = math.pow(bd, 2) + math.pow(a, 2)\n  \
    \      val adb = math.pow(ad, 2) + math.pow(b, 2)\n        val bdc = math.pow(bd,\
    \ 2) + math.pow(c, 2)\n        val cdd = math.pow(cd, 2) + math.pow(c, 2)\n  \
    \      val abbc = math.pow(abc, 2) + math.pow(bcd, 2)\n        val bdcd = math.pow(bcd,\
    \ 2) + math.pow(cd, 2)\n        val cdab = math.pow(cda, 2) + math.pow(abc, 2)\n\
    \        val bdac = math.pow(bda, 2) + math.pow(a, 2)\n        val cdabc = math.pow(cdab,\
    \ 2) + math.pow(abbc, 2)\n        val bdcda = math.pow(bdcd, 2) + math.pow(cda,\
    \ 2)\n        val cdabb = math.pow(cdab, 2) + math.pow(bdac, 2)\n        val bdcdbc\
    \ = math.pow(bdcd, 2) + math.pow(bcd, 2)\n        val cdabcd = math.pow(cdabc,\
    \ 2) + math.pow(bdcda, 2)\n        val bdcdbd = math.pow(bdcd, 2) + math.pow(bd,\
    \ 2)\n        val cdabbc = math.pow(cdabbc, 2) + math.pow(bdcdbc, 2)\n       \
    \ val bdcdbd = math.pow(bdcd, 2) + math.pow(bd, 2)\n        val cdabbb = math.pow(cdabbb,\
    \ 2) + math.pow(bdcdbd, 2)\n        val bdcdbd = math.pow(bdcd, 2) + math.pow(bd,\
    \ 2)\n        val cdabbbc = math.pow(cdabbbc, 2) + math.pow(bdcdbd, 2)\n     \
    \   val bdcdbd = math.pow(bdcd, 2) + math.pow(bd, 2)\n        val cdabbbd = math.pow(cdabbbd,\
    \ 2) + math.pow(bdcdbd, 2)\n        val bdcdbd = math.pow(bdcd, 2) + math.pow(bd,\
    \ 2)\n        val cdabbbdc = math.pow(cdabbbdc, ", "        val ab = math.abs(b\
    \ - a)\n        val bc = math.abs(c - b)\n        val ac = math.abs(c - a)\n \
    \       ab == bc && ab == ac", "        val ab = math.abs(a - b)\n        val\
    \ ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab == ac &&\
    \ ab == bc", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n\
    \        val bc = math.abs(c-b)\n        val abc = math.abs(a-c)\n        val\
    \ bcd = math.abs(b-c)\n        ab == abc && ac == bcd && b == c || ab == bc &&\
    \ ac == abc && b == c", "        val ab = math.abs(b - a)\n        val bc = math.abs(c\
    \ - b)\n        val ac = math.abs(c - a)\n        ab > bc && ab > ac", "     \
    \   // Write your code here\n        val a1 = a / 2\n        val b1 = b / 2\n\
    \        val c1 = c / 2\n        val a2 = a1 + a1\n        val b2 = b1 + b1\n\
    \        val c2 = c1 + c1\n        val a3 = a1 + a2\n        val b3 = b1 + b2\n\
    \        val c3 = c1 + c2\n        val a4 = a2 + a2\n        val b4 = b2 + b2\n\
    \        val c4 = c2 + c2\n        val a5 = a2 + a3\n        val b5 = b2 + b3\n\
    \        val c5 = c2 + c3\n        val a6 = a3 + a3\n        val b6 = b3 + b3\n\
    \        val c6 = c3 + c3\n        val a7 = a3 + a4\n        val b7 = b3 + b4\n\
    \        val c7 = c3 + c5\n        val a8 = a4 + a4\n        val b8 = b4 + b4\n\
    \        val c8 = c4 + c5\n        val a9 = a4 + a5\n        val b9 = b4 + b5\n\
    \        val c9 = c4 + c6\n        val a10 = a5 + a5\n        val b10 = b5 + b5\n\
    \        val c10 = c5 + c6\n        val a11 = a5 + a6\n        val b11 = b5 +\
    \ b6\n        val c11 = c5 + c7\n        val a12 = a6 + a6\n        val b12 =\
    \ b6 + b6\n        val c12 = c6 + c7\n        val a13 = a6 + a7\n        val b13\
    \ = b6 + b7\n        val c13 = c6 + c8\n        val a14 = a7 + a8\n        val\
    \ b14 = b7 + b8\n        val c14 = c7 + c9\n        val a15 = a8 + a8\n      \
    \  val b15 = b8 + b8\n        val c15 = c8 + c9\n        val a16 = a9 + a9\n \
    \       val b16 = b9 + b9\n        val c16 = c9 + c9\n        val a17 = a10 +\
    \ a10\n        val b17 = b10 + b10\n        val c17 = c10 + c10\n        val a18\
    \ = a11 + a11\n        val b18 = b11 + b11\n        val c18 = c11 + c11\n    \
    \    val a19 = a12 + a12\n        val b19 = b12 + b12\n        val c19 = c12 +\
    \ c12\n        val a20 = a13 + a13\n        val b20 = b13 + b13\n        val c",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(b - a)\n \
    \       val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc <\
    \ bcd", "        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n  \
    \      val cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n\
    \        abc > 0 // if abc is negative, triangle is not right-angle", "      \
    \  val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc\
    \ = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc\
    \ + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b2 && b2 == c2 && c2 == a2)", "        val ab = math.abs(a-b)\n     \
    \   val bc = math.abs(b-c)\n        val ac = math.abs(a-c)\n        ab > bc &&\
    \ ab > ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n    \
    \    val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 ==\
    \ b2 && b2 == c2 && c2 == a2)", "        val ab = math.abs(a - b)\n        val\
    \ ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab == ac &&\
    \ ab == bc", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n   \
    \     val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a2\n        (a1 == a2 && b1 == b2 && c2 == c2) || (a1 ==\
    \ b2 && b1 == c2 && c2 == a2)", "        val ab = math.pow(a, 2)\n        val\
    \ bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab\
    \ + bc + cd, 0.5)\n        abc < 1", "        val a1 = math.abs(a)\n        val\
    \ b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n \
    \       val b2 = b1 + c1\n        val c2 = c1 + a2\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c3\n        val c3 = c3 + a3\n        (a1 + b1 + c1 ==\
    \ a2 + b2 + c2 && a2 + b2 + c3 == a3 + b3 + c3 && a3 + b3 + c3 == a1 + b1 + c1)",
  "        val ab = math.sqrt((b * b) - (a * a))\n        val ac = math.sqrt((c *\
    \ c) - (a * a))\n        val bc = (b * b) - (c * c)\n        val abc = math.sqrt((abc\
    \ * abc) - (ab * ab))\n        val bcd = (b * bc) - (c * cd)\n        val abcd\
    \ = math.sqrt((abcd * abcd) - (abc * abc))\n        abc < ab && abc < ac && abc\
    \ < bc && abc < bcd && abc < abcd ", "        // Write your code here\n      \
    \  val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)", " \
    \       val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 ==\
    \ a2)", "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n\
    \        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n     \
    \   val bcd = math.abs(bc + ab)\n        abc < bcd", "        // Write your code\
    \ here\n        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 == b2\
    \ && b2 == c2 && c2 == a2)", "        val ab = math.abs(b - a)\n        val ac\
    \ = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        //\
    \ Write your code here\n        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c2 && c1 == a2) || (a1 == b2 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b2 && b1 == c2 && c1 == a2) || (a1 == c1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == c1 && b1 == c2 && c1 == a2) || (a1 == c2 && b1 == c1 && c1 == a2) ||\
    \ (a1 == c2 && b1 == c2 && c1 == a2)", "        val ab = math.sqrt((b * b) - (4\
    \ * a * c))\n        val ac = math.sqrt((c * c) - (4 * a * b))\n        ab >=\
    \ ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a2\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a", "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n\
    \        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n     \
    \   val bcd = math.abs(bc + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 ==\
    \ a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a-b)\n\
    \        val ac = math.abs(a-c)\n        val bc = math.abs(b-c)\n        ab ==\
    \ ac && ab == bc", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1 == a2 && b1 + c1 + a2 ==\
    \ b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1\
    \ + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2\
    \ == c2)", "        val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n\
    \        val bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val\
    \ ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c,\
    \ 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n        abc < b", "     \
    \   val ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b * b)\
    \ - (c * c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc\
    \ && ab == ac", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n\
    \        val bc = math.abs(c-b)\n        val abc = math.abs(a-c)\n        val\
    \ bcd = math.abs(b-c)\n        ab >= abc && ac >= bcd && bc >= abc && ab >= bcd",
  "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n        val bc\
    \ = math.abs(c-b)\n        val abc = math.abs(a-c)\n        val bcd = math.abs(b-c)\n\
    \        ab == abc && ac == bcd && b == c", "        val ab = math.abs(a - b)\n\
    \        val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab - ac)\n        val bcd = math.abs(bc - bc)\n        val abcd\
    \ = math.abs(abc - bcd)\n        abc < bcd", "        val ab = math.abs(a - b)\n\
    \        val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab\
    \ == ac && ab == bc", "        val ab = math.abs(a - b)\n        val ac = math.abs(a\
    \ - c)\n        val bc = math.abs(b - c)\n        val abc = math.min(ab, ac, bc)\n\
    \        abc > Math.PI", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = math.pow(a1, 2)\n        val b2\
    \ = math.pow(b1, 2)\n        val c2 = math.pow(c1, 2)\n        val a3 = math.pow(a2,\
    \ 2)\n        val b3 = math.pow(b2, 2)\n        val c3 = math.pow(c2, 2)\n   \
    \     val a4 = math.pow(a3, 2)\n        val b4 = math.pow(b3, 2)\n        val\
    \ c4 = math.pow(c3, 2)\n        val a5 = math.pow(a4, 2)\n        val b5 = math.pow(b4,\
    \ 2)\n        val c5 = math.pow(c4, 2)\n        val a6 = math.pow(a5, 2)\n   \
    \     val b6 = math.pow(b5, 2)\n        val c6 = math.pow(c5, 2)\n        val\
    \ a7 = math.pow(a6, 2)\n        val b7 = math.pow(b6, 2)\n        val c7 = math.pow(c6,\
    \ 2)\n        val a8 = math.pow(a7, 2)\n        val b8 = math.pow(b7, 2)\n   \
    \     val c8 = math.pow(c7, 2)\n        val a9 = math.pow(a8, 2)\n        val\
    \ b9 = math.pow(b8, 2)\n        val c9 = math.pow(c8, 2)\n        val a10 = math.pow(a9,\
    \ 2)\n        val b10 = math.pow(b9, 2)\n        val c10 = math.pow(c9, 2)\n \
    \       val a11 = math.pow(a10, 2)\n        val b11 = math.pow(b10, 2)\n     \
    \   val c11 = math.pow(c10, 2)\n        val a12 = math.pow(a11, 2)\n        val\
    \ b12 = math.pow(b11, 2)\n        val c12 = math.pow(c11, 2)\n        val a13\
    \ = math.pow(a12, 2)\n        val b13 = math.pow(b12, 2)\n        val c13 = math.pow(c12,\
    \ 2)\n        val a14 = math.pow(a13, 2)\n        val b14 = math.pow(b13, 2)\n\
    \        val c14 = math.pow(c13, 2)\n        val a15 = math.pow(a14, 2)\n    \
    \    val b15 = math.pow(b14, 2)\n        val c15 = math.pow(c14, 2)\n        val\
    \ a16 = math.pow(a15, 2)\n        val b16 = math.pow(b15, 2)\n        val c16\
    \ = math.pow(c15, 2)\n        val a17 = math.pow(a16, 2)\n        val b17 = math.pow(b16,\
    \ 2)\n        val c17", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.sqrt((b\
    \ * b) - (a * a))\n        val bc = math.sqrt((c * c) - (b * b))\n        val\
    \ ac = math.sqrt((a * a) - (c * c))\n        ab == bc && ab == ac", "        val\
    \ a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 + b1 + c1 == a2) || (a1 + b1 + c1 == b2) || (a1 + b1 + c1 == c2)",
  "        val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val\
    \ bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val ab = math.abs(a-b)\n\
    \        val ac = math.abs(a-c)\n        val bc = math.abs(b-c)\n        ab >\
    \ ac && ab > bc", "        val ab = math.sqrt((b * b) - (a * a))\n        val\
    \ bc = math.sqrt((c * c) - (b * b))\n        val ac = math.sqrt((c * c) - (a *\
    \ a))\n        ab == bc && ab == ac", "        val ab = math.abs(a - b)\n    \
    \    val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab ==\
    \ ac && ab == bc", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val ab = math.abs(b - a)\n        val bc = math.abs(c\
    \ - b)\n        val ac = math.abs(c - a)\n        val abc = math.abs(ab - bc)\n\
    \        val abcd = math.abs(abc - ac)\n        abc < ab || (ab == abc && bc <\
    \ b) || (bc == abc && ac < a)", "        val ab = math.abs(a - b)\n        val\
    \ ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab > ac && ab\
    \ > bc", "        // Write your code here\n        val a1 = math.abs(a)\n    \
    \    val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 +\
    \ b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1 + c1\
    \ == a2 && b1 + c1 + a1 == b2 && c1 + a1 + b1 == c2) || (a1 + b1 + c1 == a2 &&\
    \ b1 + c1 + a1 == b2 && c1 + a1 + b1 == c2) || (a1 + b1 + c1 == a2 && b1 + c1\
    \ + a1 == b2 && c1 + a1 + b1 == c2)", "        val ab = math.abs(b - a)\n    \
    \    val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc\
    \ = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc > bcd",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || \n\
    \            (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)\
    \ || \n            (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 ==\
    \ c2)", "        val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n\
    \        val bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val\
    \ ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b\
    \ - c)\n        ab == ac && ab == bc", "        val a1 = math.abs(a)\n       \
    \ val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 == b1 && b1 ==\
    \ c1 && c1 == a2) || (a1 == b2 && b1 == c2 && c1 == a2) || (a1 == c2 && b1 ==\
    \ a2 && c1 == b2)", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(b\
    \ - a)\n        val bc = math.abs(c - b)\n        val ac = math.abs(c - a)\n \
    \       ab >= bc && ab >= ac", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ - ac)\n        val bcd = math.abs(bc - ab)\n        abc < bcd", "        val\
    \ a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1\
    \ + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1\
    \ == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        val ab = math.abs(a\
    \ - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n \
    \       ab == ac && ab == bc", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ - ac)\n        val bcd = math.abs(bc - ab)\n        abc < bcd // return true\
    \ if abc < bcd", "        val ab = math.abs(b - a)\n        val bc = math.abs(c\
    \ - b)\n        val ac = math.abs(c - a)\n        ab > bc && ab > ac", "     \
    \   val ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((c * c)\
    \ - (b * b))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc\
    \ && ab == ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val ab = math.abs(b - a)\n   \
    \     val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc <\
    \ bcd", "        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n  \
    \      val cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n\
    \        abc < b + c + a", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val ab = math.abs(a - b)\n   \
    \     val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab >\
    \ ac && ab > bc", "        val ab = math.abs(b - a)\n        val bc = math.abs(c\
    \ - b)\n        val ac = math.abs(c - a)\n        ab == bc && ab == ac", "   \
    \     // Write your code here\n        val a = math.sqrt(a * a)\n        val b\
    \ = math.sqrt(b * b)\n        val c = math.sqrt(c * c)\n        val d = b * b\
    \ - a * c\n        if (d < 0)\n            return false\n        val e = a * c\
    \ - b * d\n        if (e < 0)\n            return false\n        val f = math.sqrt(a\
    \ * a + b * b)\n        val g = math.sqrt(c * c + d * d)\n        val h = f *\
    \ f - g * g\n        if (h < 0)\n            return false\n        val i = f *\
    \ g - c * h\n        if (i < 0)\n            return false\n        val j = a *\
    \ e - b * i\n        if (j < 0)\n            return false\n        val k = a *\
    \ i + b * j\n        if (k < 0)\n            return false\n        val l = a *\
    \ j + b * k\n        if (l < 0)\n            return false\n        true", "  \
    \      val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        abc < ab\
    \ || (ab == abc && bc < b) || (ab == abc && bc == bc && a < c)", "        val\
    \ a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a1 == b2 && c1 + a1 + b1 == c2)", " \
    \       val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n     \
    \   val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 +\
    \ b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == b1 &&\
    \ b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 == a2)", "        val ab\
    \ = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        abc < ab", "        val a1\
    \ = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1\
    \ + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        // Write\
    \ your code here\n        val a = math.abs(a)\n        val b = math.abs(b)\n \
    \       val c = math.abs(c)\n        val ab = math.abs(a-b)\n        val ac =\
    \ math.abs(a-c)\n        val bc = math.abs(b-c)\n        val abc = math.abs(ab-ac)\n\
    \        val bcd = math.abs(bc-ab)\n        abc < bcd", "        val ab = math.sqrt((b\
    \ * b) - (a * a))\n        val ac = math.sqrt((c * c) - (a * a))\n        val\
    \ bc = math.sqrt((b * b) - (c * c))\n        val abc = math.sqrt((abc * abc) -\
    \ (ab * ab))\n        abc < ac && abc < bc", "        val a1 = math.abs(a)\n \
    \       val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1\
    \ + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1 +\
    \ c1 == a2) || (a1 + b1 + c1 == b2) || (a1 + b1 + c1 == c2)", "        val ab\
    \ = math.sqrt((b * b) - (4 * a * c))\n        val bc = math.sqrt((b * b) - (4\
    \ * a * a))\n        val ac = math.sqrt((c * c) - (4 * a * a))\n        ab ==\
    \ bc && ab == ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1 == a2 && b1 + c1 + a2 ==\
    \ b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1\
    \ + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2\
    \ == c2)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n     \
    \   val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 ==\
    \ b2 && b2 == c2 && c2 == a3) || (a3 == b3 && b3 == c3 && c3 == a3)", "      \
    \  val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc\
    \ = math.abs(b - c)\n        ab > ac && ab > bc", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        // Write your code here\n        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 ==\
    \ a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1\
    \ + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        val ab = math.abs(b - a)\n\
    \        val bc = math.abs(c - b)\n        val ac = math.abs(c - a)\n        val\
    \ min = math.min(ab, bc, ac)\n        val max = math.max(ab, bc, ac)\n       \
    \ val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = math.abs(math.sin(math.radians(min))) == math.abs(math.sin(math.radians(max)))\n\
    \        val isRightAngle = ", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ ab = math.abs(b - a)\n        val bc = math.abs(c - b)\n        val ac = math.abs(c\
    \ - a)\n        ab > bc && ab > ac", "        val ab = math.abs(b - a)\n     \
    \   val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc\
    \ = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc > bcd",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a - b)\n \
    \       val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab\
    \ == ac && ab == bc", "        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n\
    \        val bc = math.abs(b-c)\n        ab > ac && ab > bc", "        val ab\
    \ = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        abc > ab || (abc < bc &&\
    \ abc > ab)", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n\
    \        val bc = math.abs(c-b)\n        val abc = math.abs(a-c)\n        val\
    \ acb = math.abs(c-a)\n        val bcd = math.abs(b-c)\n        ab == abc && ac\
    \ == acb && bc == bcd", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b2 && b1 == c2 && c1 == a2) || (a2 ==\
    \ b1 && b2 == c1 && c2 == a2) || (a2 == b2 && b2 == c2 && c2 == a2)", "      \
    \  val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc\
    \ = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc\
    \ + ab)\n        abc < bcd", "        val ab = math.abs(a - b)\n        val bc\
    \ = math.abs(b - c)\n        val ac = math.abs(a - c)\n        ab == bc && ab\
    \ == ac", "        val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n\
    \        val bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val\
    \ ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b * b) - (c *\
    \ c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc && ab ==\
    \ ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        (a1 + b1 + c1 == a2) || (a1 + b1 + c1 == b2) ||\
    \ (a1 + b1 + c1 == c2)", "        val ab = math.sqrt((b * b) - (a * a))\n    \
    \    val ac = math.sqrt((c * c) - (a * a))\n        val bc = math.sqrt((b * b)\
    \ - (c * c))\n        val abc = math.sqrt((ab * ab) - (bc * bc))\n        abc\
    \ < 0", "        val ab = math.abs(a - b)\n        val bc = math.abs(b - c)\n\
    \        val ac = math.abs(a - c)\n        val min = math.min(ab, bc, ac)\n  \
    \      val max = math.max(ab, bc, ac)\n        val isRightAngle = ab > bc && ab\
    \ > ac && bc > ac\n        val isRightAngle = ab > bc && ab > ac && bc > ac\n\
    \        val isRightAngle = ab > bc && ab > ac && bc > ac\n        val isRightAngle\
    \ = ab > bc && ab > ac && bc > ac\n        val isRightAngle = ab > bc && ab >\
    \ ac && bc > ac\n        val isRightAngle = ab > bc && ab > ac && bc > ac\n  \
    \      val isRightAngle = ab > bc && ab > ac && bc > ac\n        val isRightAngle\
    \ = ab > bc && ab > ac && bc > ac\n        val isRightAngle = ab > bc && ab >\
    \ ac && bc > ac\n        val isRightAngle = ab > bc && ab > ac && bc > ac\n  \
    \      val isRightAngle = ab > bc && ab > ac && bc > ac\n        val isRightAngle\
    \ = ab > bc && ab > ac && bc > ac\n        val isRightAngle = ab > bc && ab >\
    \ ac && bc > ac\n        val isRightAngle = ab > bc && ab > ac && bc > ac\n  \
    \      val isRightAngle = ab > bc && ab > ac && bc > ac\n        val isRightAngle\
    \ = ab > bc && ab > ac && bc > ac\n        val isRightAngle = ab > bc && ab >\
    \ ac && bc > ac\n        val isRightAngle = ab > bc && ab > ac && bc > ac\n  \
    \      val isRightAngle = ab > bc && ab > ac && bc > ac\n        val isRightAngle\
    \ = ab > bc && ab > ac && bc > ac\n        val isRightAngle = ab > bc && ab >\
    \ ac && bc > ac\n        val isRightAngle = ab > bc && ab > ac && bc > ac\n  \
    \      val isRightAngle = ab > bc && ab > ac && bc > ac\n        val ", "    \
    \    val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc\
    \ = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc\
    \ + ab)\n        abc < bcd", "        val ab = math.abs(a - b)\n        val ac\
    \ = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab == ac && ab\
    \ == bc", "        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n  \
    \      val bc = math.abs(b-c)\n        ab > ac && ab > bc", "        val ab =\
    \ math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n\
    \        abc < bcd", "        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n\
    \        val bc = math.abs(b-c)\n        ab == ac && ab == bc", "        val ab\
    \ = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b * b) - (c * c))\n\
    \        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc && ab == ac",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 + b1 + c1 == a2) || (a1 + b1 + c1 == b2) || (a1 + b1 + c1 == c2)",
  "        val ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b *\
    \ b) - (c * c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab ==\
    \ bc && ab == ac", "        val ab = math.sqrt((b * b) - (a * a))\n        val\
    \ bc = math.sqrt((b * b) - (c * c))\n        val ac = math.sqrt((a * a) - (c *\
    \ c))\n        ab == bc && ab == ac", "        // Write your code here\n     \
    \   val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = math.abs(a1 - b1 - c1)\n        val b2 = math.abs(b1 - a1 -\
    \ c1)\n        val c2 = math.abs(c1 - a1 - b1)\n        val a3 = math.abs(a2 -\
    \ b2 - c2)\n        val b3 = math.abs(b2 - a2 - c2)\n        val c3 = math.abs(c2\
    \ - a2 - b2)\n        val a4 = math.abs(a3 - b3 - c3)\n        val b4 = math.abs(b3\
    \ - a3 - c3)\n        val c4 = math.abs(c4 - a3 - b3)\n        val a5 = math.abs(a4\
    \ - b4 - c4)\n        val b5 = math.abs(b4 - a4 - c4)\n        val c5 = math.abs(c4\
    \ - a4 - b4)\n        val a6 = math.abs(a5 - b5 - c5)\n        val b6 = math.abs(b5\
    \ - a5 - c5)\n        val c6 = math.abs(c5 - a5 - b5)\n        val a7 = math.abs(a6\
    \ - b6 - c6)\n        val b7 = math.abs(b6 - a6 - c6)\n        val c7 = math.abs(c6\
    \ - a6 - b6)\n        val a8 = math.abs(a7 - b7 - c7)\n        val b8 = math.abs(b7\
    \ - a7 - c7)\n        val c8 = math.abs(c7 - a7 - b7)\n        val a9 = math.abs(a8\
    \ - b8 - c8)\n        val b9 = math.abs(b8 - a8 - c8)\n        val c9 = math.abs(c8\
    \ - a8 - b8)\n        val a10 = math.abs(a9 - b9 - c9)\n        val b10 = math.abs(b9\
    \ - a9 - c9)\n        val c10 = math.abs(c9 - a9 - b9)\n        val a11 = math.abs(a10\
    \ - b10 - c10)\n        val b11 = math.abs(b10 - a10 - c10)\n        val c11 =\
    \ math.abs(c10 - a10 - b10)\n        val a12 = math.abs(a11 - b11 - c11)\n   \
    \     val b12 = math.abs(b11 - a11 - c11)\n        val c12 = math.abs(c11 - a11\
    \ - b11)\n        val a13 = math.abs(a12 - b12 - c12)\n        val b13 = math.abs(b12\
    \ - a12 - c12)\n        val c13 = math.abs(c12 - a12 - b12)\n        val ", " \
    \       val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val\
    \ bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        // Write your code here\n        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 == a2)", "      \
    \  val ab = math.sqrt((b * b) - (4 * a * c))\n        val ac = math.sqrt((c *\
    \ c) - (4 * a * b))\n        ab == ac", "        val ab = math.abs(b - a)\n  \
    \      val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        abc < ab || (ab == abc && bc < b) || (ab ==\
    \ abc && bc == bc)", "        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n\
    \        val bc = math.abs(b-c)\n        ab == ac && ab == bc", "        val ab\
    \ = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b\
    \ - c)\n        ab == ac && ab == bc", "        val ab = math.sqrt((b * b) - (a\
    \ * a))\n        val ac = math.sqrt((c * c) - (a * a))\n        val bc = math.sqrt((b\
    \ * b) - (c * c))\n        val abc = math.sqrt((ab * ab) - (bc * bc)) - math.sqrt((ac\
    \ * ac) - (ab * ab))\n        abc < 0", "        val a1 = math.abs(a)\n      \
    \  val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1 ==\
    \ a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 == a2 && b1\
    \ + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        val ab = math.abs(a - b)\n\
    \        val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab - ac)\n        val bcd = math.abs(bc - bc)\n        val abcd\
    \ = math.abs(abc - bcd)\n        abc <= bcd", "        val ab = math.abs(a-b)\n\
    \        val ac = math.abs(a-c)\n        val bc = math.abs(b-c)\n        ab ==\
    \ ac && ab == bc", "        val ab = math.sqrt((a.toDouble * a.toDouble) + (b.toDouble\
    \ * b.toDouble))\n        val bc = math.sqrt((b.toDouble * b.toDouble) + (c.toDouble\
    \ * c.toDouble))\n        val ac = math.sqrt((a.toDouble * a.toDouble) + (c.toDouble\
    \ * c.toDouble))\n        val abc = math.sqrt((ab.toDouble * ab.toDouble) + (bc.toDouble\
    \ * bc.toDouble))\n        val acb = math.sqrt((ac.toDouble * ac.toDouble) + (ab.toDouble\
    \ * ab.toDouble))\n        val abcb = math.sqrt((abc.toDouble * abc.toDouble)\
    \ + (acb.toDouble * acb.toDouble))\n        abc <= ab && bc <= b", "        val\
    \ ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n        val bc = math.abs(b-c)\n\
    \        val abc = math.min(ab, ac, bc)\n        abc > 0 && (abc-bc) == abc-ab",
  "        // Write your code here\n        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1\
    \ = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a,\
    \ 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c, 3)\n     \
    \   val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n        val c3 =\
    \ math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 = math.pow(b,\
    \ 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a, 6)\n     \
    \   val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n        val a6 =\
    \ math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 = math.pow(c,\
    \ 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b, 8)\n     \
    \   val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n        val b8 =\
    \ math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 = math.pow(a,\
    \ 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c, 10)\n  \
    \      val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n        val\
    \ c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n        val b11 =\
    \ math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12 = math.pow(a,\
    \ 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c, 13)\n\
    \        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n      \
    \  val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n        val b14\
    \ = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15 = math.pow(a,\
    \ 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c, 16)\n\
    \        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n      \
    \  val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n        val b17\
    \ = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18 = math.pow(a,\
    \ 19)\n        ", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        abc < ab || (ab == abc && bc < b) || (ab == abc && bc == bc && a < c)",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a - b)\n \
    \       val bc = math.abs(b - c)\n        val ac = math.abs(a - c)\n        ab\
    \ >= bc && ab >= ac", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(b\
    \ - a)\n        val bc = math.abs(c - b)\n        val ac = math.abs(c - a)\n \
    \       ab >= bc && ab >= ac", "        val a1 = math.abs(a)\n        val b1 =\
    \ math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n      \
    \  val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == a2 && b1 == b2 &&\
    \ c2 == c2) || (a1 == b2 && b1 == c2 && c2 == a2)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.abs(a1 - b1 - c1)\n        val b2 = math.abs(b1 - a1 - c1)\n        val\
    \ c2 = math.abs(c1 - a1 - b1)\n        (a1 + b1 + c1 == a2 + b2 + c2) || (a2 +\
    \ b2 + c2 == a1 + b1 + c1)", "        val ab = math.abs(a - b)\n        val ac\
    \ = math.abs(a - c)\n        val bc = math.abs(b - c)\n        val abc = math.min(ab,\
    \ ac, bc)\n        abc > 0 && (abc % 90 == 0)", "        val ab = math.abs(b -\
    \ a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n   \
    \     val abc = math.abs(ab + ac)\n        abc < ab || (ab == abc && bc < b) ||\
    \ (bc == abc && ab < a)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val ab = math.abs(b - a)\n   \
    \     val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc <\
    \ bcd", "        val ab = math.abs(a - b)\n        val bc = math.abs(b - c)\n\
    \        val ac = math.abs(a - c)\n        ab == bc && ab == ac", "        val\
    \ ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b\
    \ - c)\n        ab == ac && ab == bc"]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_36_fizz_buzz
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        var count = 0\n        var remainder\
    \ = n\n        while (remainder > 0) {\n            count += 1\n            if\
    \ (remainder % 11 == 0 || remainder % 13 == 0) {\n                count += 1\n\
    \            }\n            remainder = remainder / 10\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyx0_guu4.scala:24)\n\tat Problem.main(tmpyx0_guu4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659804158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val nums = mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n){\n            if(i % 11 == 0 || i % 13 == 0){\n    \
    \            nums += i\n            }\n        }\n        nums.count(_ % 7 ==\
    \ 0)\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxan246cx.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpxan246cx.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisors = mutable.HashSet.empty[Long]\n        for(i <- 1\
    \ to n) {\n            val d = i.toString.toInt\n            if(d % 11 == 0 ||\
    \ d % 13 == 0) {\n                divisors += i\n            }\n            counts(i)\
    \ = counts.getOrElse(i, 0) + 1\n        }\n        divisors.toList.map(d => counts.getOrElse(d,\
    \ 0)).sum\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptc1xgwf2.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmptc1xgwf2.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmptc1xgwf2.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659804158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val fizzBuzz = mutable.Set[Long]()\n\
    \        val divisors = mutable.Set[Long]()\n        val divisorsCount = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount2 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount3 = mutable.Map[Long, Long]()\n        val divisorsCount4 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount5 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount6 = mutable.Map[Long, Long]()\n        val divisorsCount7 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount8 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount9 = mutable.Map[Long, Long]()\n        val divisorsCount10 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount11 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount12 = mutable.Map[Long, Long]()\n        val divisorsCount13 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount14 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount15 = mutable.Map[Long, Long]()\n        val divisorsCount16 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount17 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount18 = mutable.Map[Long, Long]()\n        val divisorsCount19 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount20 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount21 = mutable.Map[Long, Long]()\n        val divisorsCount22 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount23 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount24 = mutable.Map[Long, Long]()\n        val divisorsCount25 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount26 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount27 = mutable.Map[Long, Long]()\n        val divisorsCount28 = mutable.Map[Long,\
    \ Long]()\n        val divisorsCount29 = mutable.Map[Long, Long]()\n        val\
    \ divisorsCount30 = mutable.Map[Long, Long]()\n        val divisorsCount31 = mutable.Map[Long,\
    \ Long]()\n        val \n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp3s42581g.scala:45:11 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp3s42581g.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3s42581g.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp3s42581g.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                            Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3s42581g.scala:15:29\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount2\e[0m = mutable.Map[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3s42581g.scala:16:29 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.Map[\e\
    [35"
  stdout: ''
  timestamp: 1659804157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val fizzBuzz = mutable.Set[Long]()\n\
    \        val divisors = mutable.Set[Long]()\n        val divisorsCount = mutable.Set[Long]()\n\
    \        val divisorsCount2 = mutable.Set[Long]()\n        val divisorsCount3\
    \ = mutable.Set[Long]()\n        val divisorsCount4 = mutable.Set[Long]()\n  \
    \      val divisorsCount5 = mutable.Set[Long]()\n        val divisorsCount6 =\
    \ mutable.Set[Long]()\n        val divisorsCount7 = mutable.Set[Long]()\n    \
    \    val divisorsCount8 = mutable.Set[Long]()\n        val divisorsCount9 = mutable.Set[Long]()\n\
    \        val divisorsCount10 = mutable.Set[Long]()\n        val divisorsCount11\
    \ = mutable.Set[Long]()\n        val divisorsCount12 = mutable.Set[Long]()\n \
    \       val divisorsCount13 = mutable.Set[Long]()\n        val divisorsCount14\
    \ = mutable.Set[Long]()\n        val divisorsCount15 = mutable.Set[Long]()\n \
    \       val divisorsCount16 = mutable.Set[Long]()\n        val divisorsCount17\
    \ = mutable.Set[Long]()\n        val divisorsCount18 = mutable.Set[Long]()\n \
    \       val divisorsCount19 = mutable.Set[Long]()\n        val divisorsCount20\
    \ = mutable.Set[Long]()\n        val divisorsCount21 = mutable.Set[Long]()\n \
    \       val divisorsCount22 = mutable.Set[Long]()\n        val divisorsCount23\
    \ = mutable.Set[Long]()\n        val divisorsCount24 = mutable.Set[Long]()\n \
    \       val divisorsCount25 = mutable.Set[Long]()\n        val divisorsCount26\
    \ = mutable.Set[Long]()\n        val divisorsCount27 = mutable.Set[Long]()\n \
    \       val divisorsCount28 = mutable.Set[Long]()\n        val divisorsCount29\
    \ = mutable.Set[Long]()\n        val divisorsCount30 = mutable.Set[Long]()\n \
    \       val divisorsCount31 = mutable.Set[Long]()\n        val divisorsCount32\
    \ = mutable.Set[Long]()\n        val divisorsCount33 = mutable.Set[Long]()\n \
    \       val divisor\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmph2husvgo.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph2husvgo.scala:12:23\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfizzBuzz\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m    \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph2husvgo.scala:13:23\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m    \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph2husvgo.scala:14:28\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                            ^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmph2husvgo.scala:15:29 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmph2husvgo.scala:16:29 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31"
  stdout: ''
  timestamp: 1659804158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val nums = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 0 until n){\n            if(i % 11 == 0 || i % 13 == 0){\n \
    \               nums += i\n            }\n        }\n        nums.count(_ % 7\
    \ == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7iqxv_fa.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7iqxv_fa.scala:13:25 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659803951
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val nums = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
    \                nums += i\n            }\n        }\n        nums.count(_ % 7\
    \ == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2qh86_jq.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2qh86_jq.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659803986
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val count = mutable.HashMap.empty[Long,\
    \ Long]\n        for(i <- 0 until n){\n            val remainder = i % 11\n  \
    \          val divisor = i % 13\n            if(remainder == 7 && divisor == 11\
    \ || divisor == 13){\n                count.put(i.toLong, count.getOrElse(i, 0l)\
    \ + 1)\n            }\n        }\n        count.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp66v5mb1b.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp66v5mb1b.scala:13:25 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val nums = mutable.ListBuffer[Long]()\n\
    \        var count = 0\n        for (i <- 1 to n) {\n            if (i % 11 ==\
    \ 0 || i % 13 == 0) {\n                nums += i\n                count += 1\n\
    \            }\n        }\n        nums.toList.count(_ == 7l)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw19uhfn3.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpw19uhfn3.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804003
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val count = mutable.HashMap[Int,\
    \ Int]()\n        val digits = n.toString.reverse.grouped(3).map(_.toInt)\n  \
    \      digits.foreach{ case (digit, count) =>\n            if (digit == 7)\n \
    \               count.update(digit, 1)\n        }\n        count.values.toList.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn519_pg6.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpn519_pg6.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                count.update(digit, \e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \        value update is not a member of Any\n2 errors found\n"
  stdout: ''
  timestamp: 1659804157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisors = mutable.HashSet.empty[Long]\n        for (i <-\
    \ 1 to n) {\n            val remainder = i % 11\n            if (remainder ==\
    \ 0 || remainder == 13) {\n                divisors += i\n            }\n    \
    \        counts += i -> counts.getOrElse(i, 0) + 1\n        }\n        divisors.toList.map(i\
    \ => counts.getOrElse(i, 0)).sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsnsa624j.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpsnsa624j.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpsnsa624j.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659804157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long,\
    \ Int]\n        for(i <- 1 to n) {\n            val remainder = i % 11\n     \
    \       val isFizz = (remainder == 0)\n            val isBuzz = (remainder ==\
    \ 6)\n            val isFizzBuzz = (isFizz && isBuzz)\n            if(isFizzBuzz)\
    \ {\n                counts.put(i, 1)\n            }\n        }\n        counts.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp91423eh5.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp91423eh5.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisors = mutable.HashSet.empty[Long]\n        val divisorsCount\
    \ = mutable.HashMap.empty[Long, Int]\n        val divisorsCount2 = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisorsCount3 = mutable.HashMap.empty[Long, Int]\n      \
    \  val divisorsCount4 = mutable.HashMap.empty[Long, Int]\n        val divisorsCount5\
    \ = mutable.HashMap.empty[Long, Int]\n        val divisorsCount6 = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisorsCount7 = mutable.HashMap.empty[Long, Int]\n      \
    \  val divisorsCount8 = mutable.HashMap.empty[Long, Int]\n        val divisorsCount9\
    \ = mutable.HashMap.empty[Long, Int]\n        val divisorsCount10 = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisorsCount11 = mutable.HashMap.empty[Long, Int]\n     \
    \   val divisorsCount12 = mutable.HashMap.empty[Long, Int]\n        val divisorsCount13\
    \ = mutable.HashMap.empty[Long, Int]\n        val divisorsCount14 = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisorsCount15 = mutable.HashMap.empty[Long, Int]\n     \
    \   val divisorsCount16 = mutable.HashMap.empty[Long, Int]\n        val divisorsCount17\
    \ = mutable.HashMap.empty[Long, Int]\n        val divisorsCount18 = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisorsCount19 = mutable.HashMap.empty[Long, Int]\n     \
    \   val divisorsCount20 = mutable.HashMap.empty[Long, Int]\n        val divisorsCount21\
    \ = mutable.HashMap.empty[Long, Int]\n        val divisorsCount22 = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisorsCount23 = mutable.HashMap.empty[Long, Int]\n     \
    \   val divisorsCount24 = mutable.HashMap.empty[Long, Int]\n        val divisorsCount25\
    \ = mutable.HashMap.empty[Long, Int]\n        val divisorsCount26 = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisorsCount27 = mutable.HashMap.empty[Long, Int]\n     \
    \   val divisorsCount28 = mutable.HashMap.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw3pj_qua.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpw3pj_qua.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e[35mLong\e\
    [0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpw3pj_qua.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpw3pj_qua.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                        \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                            Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw3pj_qua.scala:15:29\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount2\e[0m = mutable.HashMap.empty[\e[35mLong\e[0m, \e[35mInt\e[0m]\n\
    \e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpw3pj_qua.scala:16:29 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m      "
  stdout: ''
  timestamp: 1659803961
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val counts = mutable.HashMap.empty[Long,\
    \ Int]\n        val divisors = mutable.HashSet.empty[Long]\n        val divisorsCount\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount2 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount3 = mutable.HashSet.empty[Long]\n        val divisorsCount4\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount5 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount6 = mutable.HashSet.empty[Long]\n        val divisorsCount7\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount8 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount9 = mutable.HashSet.empty[Long]\n        val divisorsCount10\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount11 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount12 = mutable.HashSet.empty[Long]\n        val divisorsCount13\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount14 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount15 = mutable.HashSet.empty[Long]\n        val divisorsCount16\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount17 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount18 = mutable.HashSet.empty[Long]\n        val divisorsCount19\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount20 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount21 = mutable.HashSet.empty[Long]\n        val divisorsCount22\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount23 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount24 = mutable.HashSet.empty[Long]\n        val divisorsCount25\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount26 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount27 = mutable.HashSet.empty[Long]\n        val divisorsCount28\
    \ = mutable.HashSet.empty[Long]\n        val divisorsCount29 = mutable.HashSet.empty[Long]\n\
    \        val divisorsCount30 = mutable.HashSet.empty[Long]\n        val divisorsCount31\
    \ = mutable.HashSet.empty[Long]\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9_smk9v0.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9_smk9v0.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp9_smk9v0.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9_smk9v0.scala:15:29 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9_smk9v0.scala:16:29 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.HashSet.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp9_smk9v0.scala"
  stdout: ''
  timestamp: 1659804158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val count = mutable.HashMap[Int,\
    \ Int]()\n        for(i <- 1 to n) {\n            val remainder = i % 11\n   \
    \         val isDivisibleBy11 = remainder == 0\n            val isDivisibleBy13\
    \ = remainder == 1\n            if(isDivisibleBy11 || isDivisibleBy13) {\n   \
    \             count(i) = 1\n            }\n        }\n        count.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6dly6r2a.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6dly6r2a.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val count = mutable.HashMap[Int,\
    \ Int]()\n        for (i <- 1 to n) {\n            val digit = i % 10\n      \
    \      if (digit == 7) {\n                val count = count.getOrElse(digit, 0)\n\
    \                count(digit) += 1\n            }\n        }\n        count.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppb3y5zb3.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppb3y5zb3.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val counts = mutable.HashMap[Int,\
    \ Int]()\n        val divisors = mutable.HashMap[Int, Int]()\n        val divisorsCount\
    \ = mutable.HashMap[Int, Int]()\n        val divisorsCount2 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount3 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount4 = mutable.HashMap[Int, Int]()\n        val divisorsCount5 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount6 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount7 = mutable.HashMap[Int, Int]()\n        val divisorsCount8 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount9 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount10 = mutable.HashMap[Int, Int]()\n        val divisorsCount11 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount12 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount13 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount14 = mutable.HashMap[Int, Int]()\n        val divisorsCount15 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount16 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount17 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount18 = mutable.HashMap[Int, Int]()\n        val divisorsCount19 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount20 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount21 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount22 = mutable.HashMap[Int, Int]()\n        val divisorsCount23 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount24 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount25 = mutable.HashMap[Int, Int]()\n        val\
    \ divisorsCount26 = mutable.HashMap[Int, Int]()\n        val divisorsCount27 =\
    \ mutable.HashMap[Int, Int]()\n        val divisorsCount28 = mutable.HashMap[Int,\
    \ Int]()\n        val divisorsCount29 = mutable.HashMap[Int, Int]()\n        val\
    \ divisors\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmukn4zc1.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmukn4zc1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpmukn4zc1.scala:13:23 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashMap[\e[35mInt\e[0m,\
    \ \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpmukn4zc1.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                       \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                            Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmukn4zc1.scala:15:29\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisorsCount2\e[0m = mutable.HashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e\
    [31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmukn4zc1.scala:16:29 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                       \
    \    "
  stdout: ''
  timestamp: 1659803940
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val nums = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 0 until n){\n            if(i % 11 == 0 || i % 13 == 0){\n \
    \               nums += i\n            }\n        }\n        nums.count(_ % 7\
    \ == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7iqxv_fa.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7iqxv_fa.scala:13:25 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659803951
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val fizzBuzz = mutable.ListBuffer[Long]()\n\
    \        val divisors = mutable.ListBuffer[Long]()\n        val divisorsCount\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount2 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount3 = mutable.ListBuffer[Long]()\n        val divisorsCount4\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount5 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount6 = mutable.ListBuffer[Long]()\n        val divisorsCount7\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount8 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount9 = mutable.ListBuffer[Long]()\n        val divisorsCount10\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount11 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount12 = mutable.ListBuffer[Long]()\n        val divisorsCount13\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount14 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount15 = mutable.ListBuffer[Long]()\n        val divisorsCount16\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount17 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount18 = mutable.ListBuffer[Long]()\n        val divisorsCount19\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount20 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount21 = mutable.ListBuffer[Long]()\n        val divisorsCount22\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount23 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount24 = mutable.ListBuffer[Long]()\n        val divisorsCount25\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount26 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount27 = mutable.ListBuffer[Long]()\n        val divisorsCount28\
    \ = mutable.ListBuffer[Long]()\n        val divisorsCount29 = mutable.ListBuffer[Long]()\n\
    \        val divisorsCount30 = mutable.ListBuffer[Long]()\n        val divisorsCount31\
    \ = mutable.ListBuffer[Long]()\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6727vgc3.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfizzBuzz\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp6727vgc3.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp6727vgc3.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp6727vgc3.scala:15:29 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount2\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6727vgc3.scala:16:29 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount3\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6727vgc3.scala:17:29 ------"
  stdout: ''
  timestamp: 1659804157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n\
    \    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n\
    \    def fizzBuzz(n : Long) : Long = {\n        val count = mutable.HashMap.empty[Long,\
    \ Int]\n        for (i <- 1 to n) {\n            if (i % 11 == 0 || i % 13 ==\
    \ 0) {\n                val key = i\n                val value = count.get(key)\n\
    \                if (value == null) {\n                    count.put(key, 1)\n\
    \                } else {\n                    count.put(key, value + 1)\n   \
    \             }\n            }\n        }\n        count.values.toList.max\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) == (0l));\n\
    \    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
    \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo1qa74v0.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo1qa74v0.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659804157

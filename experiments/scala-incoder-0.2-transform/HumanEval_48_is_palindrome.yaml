name: HumanEval_48_is_palindrome
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Checks if given string is a palindrome\n    // >>> isPalindrome((\"\"))\n\
  \    // (true)\n    // >>> isPalindrome((\"aba\"))\n    // (true)\n    // >>> isPalindrome((\"\
  aaaaa\"))\n    // (true)\n    // >>> isPalindrome((\"zbcd\"))\n    // (false)\n\
  \    def isPalindrome(text : String) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isPalindrome((\"\"\
  )) == (true));\n    assert(isPalindrome((\"aba\")) == (true));\n    assert(isPalindrome((\"\
  aaaaa\")) == (true));\n    assert(isPalindrome((\"zbcd\")) == (false));\n    assert(isPalindrome((\"\
  xywyx\")) == (true));\n    assert(isPalindrome((\"xywyz\")) == (false));\n    assert(isPalindrome((\"\
  xywzx\")) == (false));\n    }\n\n}\n"
completions: ["        val reversed = new StringBuilder(text.reverse)\n        val\
    \ reversedString = reversed.toString\n        text == reversedString", "     \
    \   val reversed = new StringBuilder(text).reverse.toString\n        text == reversed",
  "        val chars = text.map(_.toChar)\n        val reversed = chars.reverse\n\
    \        chars.forall(c => c == reversed.head)", "        val reversed = new StringBuilder(text.reverse)\n\
    \        return text == reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed", "        val reversed = text.tail.reverse\n      \
    \  val first = text.head\n        val last  = text.last\n        val isPalindrome\
    \ = reversed.head == first && reversed.last == last\n        return isPalindrome",
  "        val reversed = new StringBuilder(text).reverse.toString\n        text ==\
    \ reversed", "        var reversed = \"\"\n        var i = 0\n        var j =\
    \ 0\n        while (i < text.length && j < text.length) {\n            reversed\
    \ = reversed + text.charAt(i)\n            i = i + 1\n            j = j + 1\n\
    \        }\n        if (text == reversed) {\n            return true\n       \
    \ }\n        else {\n            return false\n        }", "        val reversed\
    \ = new StringBuilder(text).reverse.toString\n        text == reversed", "   \
    \     val reversed = new StringBuilder(text).reverse.toString\n        text ==\
    \ reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed", "        val reversed = new StringBuilder(text).reverse.toString()\n\
    \        text == reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed", "        val reversed = new StringBuilder(text.reverse).reverse.toString\n\
    \        text == reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed", "        val reversed = new StringBuilder(text).reverse.toString\n\
    \        text == reversed"]
stop_tokens:
- "\n    }\n"

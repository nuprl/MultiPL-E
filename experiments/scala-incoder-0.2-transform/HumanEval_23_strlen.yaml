name: HumanEval_23_strlen
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return length of given string\n    // >>> stringLength((\"\"))\n    // (0l)\n\
  \    // >>> stringLength((\"abc\"))\n    // (3l)\n    def strlen(string : String)\
  \ : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) ==\
  \ (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
  )) == (9l));\n    }\n\n}\n"
completions: ["        val chars = string.chars\n        val len = chars.length\n\
    \        len", "        val length = string.length\n        val result = length.toLong\n\
    \        result", "        var len = 0\n        var i = 0\n        while (i <\
    \ string.length) {\n            len += 1\n            i += 1\n        }\n    \
    \    len", "        val len = string.length\n        len.toLong", "        val\
    \ length = 0\n        for(i <- 0 until string.length)\n            length += 1\n\
    \        length", "        val len = string.length\n        if (len == 0) 0\n\
    \        else len", "        val length = 0\n        for(i <- 0 until string.length)\n\
    \            length += 1\n        length", "        val chars = string.chars\n\
    \        val length = chars.length\n        val result = new mutable.ListBuffer[Long]()\n\
    \        for(i <- 0 until length){\n            val c = chars(i)\n           \
    \ if(c == '.' || c == '-' || c == '_' || c == '~'){\n                result.add(i)\n\
    \            }\n        }\n        result.toList.length", "        val len = 0\n\
    \        var i = 0\n        while (i < string.length) {\n            len += 1\n\
    \            i += 1\n        }\n        len", "        var count = 0\n       \
    \ for(i <- 0 until string.length)\n            count += string.charAt(i).toChar\n\
    \        count", "        val len = string.length\n        len.toLong", "    \
    \    val len = string.length\n        len.toLong", "        val strLen = string.length\n\
    \        val charLen = string.toCharArray().length\n        val strLen = strLen\
    \ + charLen\n        strLen", "        val length = string.length\n        val\
    \ result = length.toLong\n        result", "        val chars = string.chars\n\
    \        val len = chars.length\n        len", "        val strLen = string.length\n\
    \        val strLenLen = strLen.toString.length\n        val strLenLenLen = strLenLen.toString.length\n\
    \        val strLenLenLenLen = strLenLenLen.toString.length\n        val strLenLenLenLenLen\
    \ = strLenLenLenLen.toString.length\n        val strLenLenLenLenLenLen = strLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLen = strLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen.toString.length\n\
    \        val strLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen =\
    \ strLenLenLenLenLen", "        var len = 0\n        for(i <- 0 until string.length)\n\
    \            len += string.charAt(i).toChar\n        len", "        var count\
    \ = 0\n        for(i <- 0 until string.length)\n            count += string.charAt(i).toChar\n\
    \        count", "        val len = string.length\n        len.toLong", "    \
    \    var len = 0\n        for(i <- 0 until string.length)\n            len +=\
    \ string.charAt(i).toChar\n        len"]
stop_tokens:
- "\n    }\n"

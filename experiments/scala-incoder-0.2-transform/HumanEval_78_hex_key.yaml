name: HumanEval_78_hex_key
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You have been tasked to write a function that receives \n    // a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n    // digits that are\
  \ primes (prime number, or a prime, is a natural number \n    // greater than 1\
  \ that is not a product of two smaller natural numbers).\n    // Hexadecimal digits\
  \ are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n    // Prime numbers are\
  \ 2, 3, 5, 7, 11, 13, 17,...\n    // So you have to determine a number of the following\
  \ digits: 2, 3, 5, 7, \n    // B (=decimal 11), D (=decimal 13).\n    // Note: you\
  \ may assume the input is always correct or empty string, \n    // and symbols A,B,C,D,E,F\
  \ are always uppercase.\n    // Examples:\n    // >>> hexKey((\"AB\"))\n    // (1l)\n\
  \    // >>> hexKey((\"1077E\"))\n    // (2l)\n    // >>> hexKey((\"ABED1A33\"))\n\
  \    // (4l)\n    // >>> hexKey((\"123456789ABCDEF0\"))\n    // (6l)\n    // >>>\
  \ hexKey((\"2020\"))\n    // (2l)\n    def hexKey(num : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(hexKey((\"AB\"))\
  \ == (1l));\n    assert(hexKey((\"1077E\")) == (2l));\n    assert(hexKey((\"ABED1A33\"\
  )) == (4l));\n    assert(hexKey((\"2020\")) == (2l));\n    assert(hexKey((\"123456789ABCDEF0\"\
  )) == (6l));\n    assert(hexKey((\"112233445566778899AABBCCDDEEFF00\")) == (12l));\n\
  \    }\n\n}\n"
completions: ["        val hex = num.toCharArray.map(_.toString.toInt)\n        val\
    \ hexKey = new mutable.HashMap[Int, Int]()\n        hex.foreach(x => hexKey.put(x,\
    \ hexKey.getOrElse(x, 0) + 1))\n        hexKey.values.toList.filter(x => x > 1).length",
  "        val hex = num.map(x => x.toInt)\n        val primes = hex.filter(x => x\
    \ % 2 == 0).filter(x => x % 3 == 0).filter(x => x % 5 == 0).filter(x => x % 7\
    \ == 0).filter(x => x % 11 == 0).filter(x => x % 13 == 0).filter(x => x % 17 ==\
    \ 0).filter(x => x % 19 == 0).filter(x => x % 23 == 0).filter(x => x % 29 == 0).filter(x\
    \ => x % 31 == 0).filter(x => x % 37 == 0).filter(x => x % 41 == 0).filter(x =>\
    \ x % 43 == 0).filter(x => x % 47 == 0).filter(x => x % 53 == 0).filter(x => x\
    \ % 59 == 0).filter(x => x % 61 == 0).filter(x => x % 67 == 0).filter(x => x %\
    \ 71 == 0).filter(x => x % 73 == 0).filter(x => x % 79 == 0).filter(x => x % 83\
    \ == 0).filter(x => x % 89 == 0).filter(x => x % 97 == 0).filter(x => x % 101\
    \ == 0).filter(x => x % 103 == 0).filter(x => x % 107 == 0).filter(x => x % 109\
    \ == 0).filter(x => x % 113 == 0).filter(x => x % 117 == 0).filter(x => x % 121\
    \ == 0).filter(x => x % 123 == 0).filter(x => x % 127 == 0).filter(x => x % 131\
    \ == 0).filter(x => x % 137 == 0).filter(x => x % 139 == 0).filter(x => x % 143\
    \ == 0).filter(x => x % 147 == 0).filter(x => x % 151 == 0).filter(x => x % 157\
    \ == 0).filter(x => x % 161 == 0).filter(x => x % 165 == 0).filter(x => x % 169\
    \ == 0).filter(x => x % 173 == 0).filter(x => x % 177 == 0).filter(x => x % 181\
    \ == 0).filter(x => x % 185 == 0).filter(x => x % 189 == 0).filter(x => x % 193\
    \ == 0).filter(x => x % 197 == 0).filter(x => x % 201 == 0).filter(x => x % 205\
    \ == 0).filter(x => x % 209 == 0).filter(x => x % 213 == 0).filter(x => x % 217\
    \ == 0).filter(x => x % 221 == 0).filter(x => x % 225 == 0).filter(x => x % 229\
    \ == 0).filter(x => x % 233 == 0).filter(x => x % 237 == 0).filter(x => x % 24",
  "        val hex = num.toCharArray.map(_.toInt)\n        val hexString = hex.mkString(\"\
    \")\n        val hexKey = new mutable.HashMap[String, Long]()\n        hexString.toList.foreach(x\
    \ => {\n            val hexKey = hexKey.getOrElse(x.toString, 0L)\n          \
    \  hexKey.update(x.toString, hexKey + 1)\n        })\n        hexKey.getOrElse(\"\
    0\", 0L)", "        val hex = num.toCharArray.map(_.toString.toInt)\n        val\
    \ hexKey = new mutable.HashMap[Int, Int]()\n        hex.foreach(x => {\n     \
    \       hexKey.getOrElse(x, 0)\n        })\n        hexKey.values.sum", "    \
    \    val hex = num.toCharArray\n        val hexKey = hex.filter(_ >= '0' && _\
    \ <='9').length\n        val hexDigits = hex.filter(_ >= '0' && _ <='9').toList\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.to", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val hexKey = hex.foldLeft(0L){ (sum, digit) => sum + digit * digit}\n\
    \        hexKey", "        val hex = num.map(x => x.toInt)\n        val primes\
    \ = hex.filter(x => x % 2 == 0 && x != 0)\n        val primesCount = primes.count()\n\
    \        val hexCount = hex.count()\n        val hexDigits = hexCount / hex.length\n\
    \        val primeDigits = primesCount / primes.length\n        val primeDigit\
    \ = primeDigits.toInt\n        val prime = primeDigits.toLong\n        val hexDigit\
    \ = hexDigits.toLong\n        val hexDigitCount = hexDigit / hex.length\n    \
    \    val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        val hexDigitCount = hexDigits.toLong\n        val hexDigitCount = hexDigits.toLong\n\
    \        ", "        val nums = num.split(\"\\\\\").toList\n        val numsLength\
    \ = nums.length\n        val hexDigits = nums.map(_.toInt)\n        val hexDigitsLength\
    \ = hexDigits.length\n        val hexDigitsLength = hexDigitsLength.toLong\n \
    \       val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        val hexDigitsLength = hexDigitsLength.toInt\n\
    \        val hexDigitsLength = hexDigitsLength.toInt\n        val hexDigitsLength\
    \ = hexDigitsLength.toInt\n        ", "        val hex = num.toCharArray\n   \
    \     val hexKey = hex.map(x => x.toInt)\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKeyLength.toLong\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKey",
  "        val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n\
    \        val hexKeyArray = hexKey.toArray\n        val hexKeyArrayLength = hexKeyArray.length\n\
    \        val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArray", "        val hex = num.toCharArray.map(_.toHexString)\n\
    \        val hexKey = hex.foldLeft(0L){ (sum, digit) => sum + digit.toLong }\n\
    \        hexKey", "        val hex = num.toCharArray\n        val hexKey = new\
    \ mutable.HashMap[Char, Long]()\n        hex.foreach(c => {\n            hexKey.put(c.toUpperCase,\
    \ hexKey.getOrElse(c, 0l) + 1)\n        })\n        hexKey.getOrElse(\"A\", 0l)\
    \ + 1", "        val hex = num.map(x => x.toInt)\n        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val prime", "        val\
    \ hex = num.toCharArray.map(_.toString.toInt)\n        val hexArray = hex.toArray\n\
    \        val hexCount = hexArray.length\n        val hexArray2 = hexArray.filter(_\
    \ % 2 == 0)\n        val hexArray3 = hexArray2.filter(_ % 3 == 0)\n        val\
    \ hexArray4 = hexArray3.filter(_ % 5 == 0)\n        val hexArray5 = hexArray4.filter(_\
    \ % 7 == 0)\n        val hexArray6 = hexArray5.filter(_ % 11 == 0)\n        val\
    \ hexArray7 = hexArray6.filter(_ % 13 == 0)\n        val hexArray8 = hexArray7.filter(_\
    \ % 17 == 0)\n        val hexArray9 = hexArray8.filter(_ % 19 == 0)\n        val\
    \ hexArray10 = hexArray9.filter(_ % 23 == 0)\n        val hexArray11 = hexArray10.filter(_\
    \ % 29 == 0)\n        val hexArray12 = hexArray11.filter(_ % 31 == 0)\n      \
    \  val hexArray13 = hexArray12.filter(_ % 37 == 0)\n        val hexArray14 = hexArray13.filter(_\
    \ % 41 == 0)\n        val hexArray15 = hexArray14.filter(_ % 43 == 0)\n      \
    \  val hexArray16 = hexArray15.filter(_ % 47 == 0)\n        val hexArray17 = hexArray16.filter(_\
    \ % 51 == 0)\n        val hexArray18 = hexArray17.filter(_ % 53 == 0)\n      \
    \  val hexArray19 = hexArray18.filter(_ % 57 == 0)\n        val hexArray20 = hexArray19.filter(_\
    \ % 61 == 0)\n        val hexArray21 = hexArray20.filter(_ % 67 == 0)\n      \
    \  val hexArray22 = hexArray21.filter(_ % 71 == 0)\n        val hexArray23 = hexArray22.filter(_\
    \ % 73 == 0)\n        val hexArray24 = hexArray23.filter(_ % 79 == 0)\n      \
    \  val hexArray25 = hexArray24.filter(_ % 83 == 0)\n        val hexArray26 = hexArray25.filter(_\
    \ % 89 == 0)\n        val hexArray27 = hexArray26.filter(_ % 97 == 0)\n      \
    \  val hexArray28 = hexArray27.filter(_ % 101 == 0)\n        val hexArray29 =\
    \ hexArray28.filter(_ % 103 == 0)\n        val hexArray30 = hexArray29.filter(_\
    \ % 107 == 0)\n        val hexArray31 = hexArray30.filter(_ % 111 == 0)\n    \
    \    val hexArray32 = hexArray31.filter(_ % 117", "        val hex = num.toCharArray\n\
    \        val hexCount = hex.count(_ == '0')\n        val hexDigits = hex.count(_\
    \ >= '0' && _ <='9')\n        val hexDigitPrimes = hexDigits.filter(_ > 0)\n \
    \       val hexDigitPrimeCount = hexDigitPrimes.count(_ > 0)\n        val hexDigitPrimePrimes\
    \ = hexDigitPrimes.filter(_ == 0)\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.count(_\
    \ > 0)\n        val hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter(_ ==\
    \ 0)\n        val hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count(_\
    \ > 0)\n        val hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimePrimes.filter(_\
    \ == 0)\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count(_\
    \ > 0)\n        val hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimes.filter(_\
    \ == 0)\n        val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count(_\
    \ > 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimes.filter(_\
    \ == 0)\n        val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count(_\
    \ > 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter(_\
    \ == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.count(_\
    \ > 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.filter(_\
    \ == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.",
  "        val hex = num.toCharArray\n        val hexKey = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey2 = new mutable.HashMap[Int, Int]()\n        val hexKey3\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey4 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey5 = new mutable.HashMap[Int, Int]()\n        val hexKey6\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey7 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey8 = new mutable.HashMap[Int, Int]()\n        val hexKey9\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey10 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey11 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey12 = new mutable.HashMap[Int, Int]()\n        val hexKey13 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey14 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey15 = new mutable.HashMap[Int, Int]()\n        val hexKey16 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey17 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey18 = new mutable.HashMap[Int, Int]()\n        val hexKey19 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey20 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey21 = new mutable.HashMap[Int, Int]()\n        val hexKey22 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey23 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey24 = new mutable.HashMap[Int, Int]()\n        val hexKey25 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey26 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey27 = new mutable.HashMap[Int, Int]()\n        val hexKey28 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey29 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey30 = new mutable.HashMap[Int, Int]()\n        val hexKey31 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey32 = new ", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexKey = hex.map(x => x % 10).count(x => x == 0)\n        hexKey",
  "        val hex = num.toCharArray\n        val hexKey = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey2 = new mutable.HashMap[Int, Int]()\n        val hexKey3\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey4 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey5 = new mutable.HashMap[Int, Int]()\n        val hexKey6\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey7 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey8 = new mutable.HashMap[Int, Int]()\n        val hexKey9\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey10 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey11 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey12 = new mutable.HashMap[Int, Int]()\n        val hexKey13 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey14 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey15 = new mutable.HashMap[Int, Int]()\n        val hexKey16 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey17 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey18 = new mutable.HashMap[Int, Int]()\n        val hexKey19 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey20 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey21 = new mutable.HashMap[Int, Int]()\n        val hexKey22 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey23 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey24 = new mutable.HashMap[Int, Int]()\n        val hexKey25 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey26 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey27 = new mutable.HashMap[Int, Int]()\n        val hexKey28 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey29 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey30 = new mutable.HashMap[Int, Int]()\n        val hexKey31 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey32 = new ", "        val hex = num.toCharArray\n \
    \       val hexLen = hex.length\n        val hexKey = hexKey.toList\n        val\
    \ hexKeyLen = hexKey.length\n        val hexKeySet = hexKey.toSet\n        val\
    \ hexKeySetLen = hexKeySet.size\n        val hexKeySetSet = hexKeySet.toSet\n\
    \        val hexKeySetSetLen = hexKeySetSet.size\n        val hexKeySetSetSetLen\
    \ = hexKeySetSetLen\n        val hexKeySetSetSetSetLen = hexKeySetSetSetLen\n\
    \        val hexKeySetSetSetSetLen = hexKeySetSetSetSetLen\n        val hexKeySetSetSetSetSetLen\
    \ = hexKeySetSetSetSetLen\n        val hexKeySetSetSetSetSetLen = hexKeySetSetSetSetSetLen\n\
    \        val hexKeySetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetLen\n     \
    \   val hexKeySetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetLen\n        val\
    \ hexKeySetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetLen\n        val\
    \ hexKeySetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetLen\n    \
    \    val hexKeySetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetLen\n\
    \        val hexKeySetSetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetSetLen\n\
    \        val hexKeySetSetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetSetLen\n\
    \        val hexKeySetSetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetSetSetLen\n\
    \        val hexKeySetSetSetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetSetSetSetLen\n\
    \        val hexKeySetSetSetSetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetSetSetSetLen\n\
    \        val hexKeySetSetSetSetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetSetSetSetSetLen\n\
    \        val hexKeySetSetSetSetSetSetSetSetSetSetSetLen = hexKeySetSetSetSetSetSetSetSetSetSetSetSetLen\n\
    \        val hex", "        val hex = num.toCharArray.map(_.toInt)\n        val\
    \ hexKey = hex.map(x => x % 16).filter(_ > 0).count(x => x % 2 == 0)\n       \
    \ hexKey", "        val hex = num.toCharArray.map(_.toString.toInt)\n        val\
    \ hexKey = hex.foldLeft(0l){ (sum, digit) => sum + digit * digit}\n        hexKey",
  "        val hex = num.toCharArray.map(_.toHexString)\n        val hexArray = hex.map(_.toInt)\n\
    \        val hexArray2 = hexArray.filter(_ % 2 == 0)\n        val hexArray3 =\
    \ hexArray2.filter(_ % 3 == 0)\n        val hexArray4 = hexArray3.filter(_ % 5\
    \ == 0)\n        val hexArray5 = hexArray4.filter(_ % 7 == 0)\n        val hexArray6\
    \ = hexArray5.filter(_ % 11 == 0)\n        val hexArray7 = hexArray6.filter(_\
    \ % 13 == 0)\n        val hexArray8 = hexArray7.filter(_ % 17 == 0)\n        val\
    \ hexArray9 = hexArray8.filter(_ % 19 == 0)\n        val hexArray10 = hexArray9.filter(_\
    \ % 23 == 0)\n        val hexArray11 = hexArray10.filter(_ % 29 == 0)\n      \
    \  val hexArray12 = hexArray11.filter(_ % 31 == 0)\n        val hexArray13 = hexArray12.filter(_\
    \ % 37 == 0)\n        val hexArray14 = hexArray13.filter(_ % 41 == 0)\n      \
    \  val hexArray15 = hexArray14.filter(_ % 43 == 0)\n        val hexArray16 = hexArray15.filter(_\
    \ % 47 == 0)\n        val hexArray17 = hexArray16.filter(_ % 53 == 0)\n      \
    \  val hexArray18 = hexArray17.filter(_ % 59 == 0)\n        val hexArray19 = hexArray18.filter(_\
    \ % 61 == 0)\n        val hexArray20 = hexArray19.filter(_ % 67 == 0)\n      \
    \  val hexArray21 = hexArray20.filter(_ % 71 == 0)\n        val hexArray22 = hexArray21.filter(_\
    \ % 73 == 0)\n        val hexArray23 = hexArray22.filter(_ % 79 == 0)\n      \
    \  val hexArray24 = hexArray23.filter(_ % 83 == 0)\n        val hexArray25 = hexArray24.filter(_\
    \ % 89 == 0)\n        val hexArray26 = hexArray25.filter(_ % 97 == 0)\n      \
    \  val hexArray27 = hexArray26.filter(_ % 101 == 0)\n        val hexArray28 =\
    \ hexArray27.filter(_ % 103 == 0)\n        val hexArray29 = hexArray28.filter(_\
    \ % 107 == 0)\n        val hexArray30 = hexArray29.filter(_ % 111 == 0)\n    \
    \    val hexArray31 = hexArray30.filter(_ % 113 == 0)\n        val hexArray32\
    \ = hexArray31.filter(_ % 127 == 0)\n        val hex", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val prime", "        val hex = num.toCharArray\n        val hexKey =\
    \ hex.map(x => x.toInt)\n        val hexKeyList = hexKey.toList\n        val hexKeyListLength\
    \ = hexKeyList.size\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val prime", "        val hex = num.map(_.toInt)\n        val primes =\
    \ mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n        val\
    \ primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet", "        val hex = num.toCharArray.map(_.toString.toUpperCase)\n\
    \        val hexCount = hex.count(_ == '0')\n        val hexDigits = hex.count(_\
    \ == 'A' || _ == 'B' || _ == 'C' || _ == 'D' || _ == 'E' || _ == 'F')\n      \
    \  val hexPrimes = hex.count(_ == '2' || _ == '3' || _ == '5' || _ == '7' || _\
    \ == 'B' || _ == 'D')\n        val hexPrime = hex.count(_ == '2' || _ == '3' ||\
    \ _ == '5' || _ == '7' || _ == 'B' || _ == 'D')\n        val hexPrime2 = hex.count(_\
    \ == '2' || _ == '3' || _ == '5' || _ == '7' || _ == 'B' || _ == 'D')\n      \
    \  val hexPrime3 = hex.count(_ == '2' || _ == '3' || _ == '5' || _ == '7' || _\
    \ == 'B' || _ == 'D')\n        val hexPrime4 = hex.count(_ == '2' || _ == '3'\
    \ || _ == '5' || _ == '7' || _ == 'B' || _ == 'D')\n        val hexPrime5 = hex.count(_\
    \ == '2' || _ == '3' || _ == '5' || _ == '7' || _ == 'B' || _ == 'D')\n      \
    \  val hexPrime6 = hex.count(_ == '2' || _ == '3' || _ == '5' || _ == '7' || _\
    \ == 'B' || _ == 'D')\n        val hexPrime7 = hex.count(_ == '2' || _ == '3'\
    \ || _ == '5' || _ == '7' || _ == 'B' || _ == 'D')\n        val hexPrime8 = hex.count(_\
    \ == '2' || _ == '3' || _ == '5' || _ == '7' || _ == 'B' || _ == 'D')\n      \
    \  val hexPrime9 = hex.count(_ == '2' || _ == '3' || _ == '5' || _ == '7' || _\
    \ == 'B' || _ == 'D')\n        val hexPrime10 = hex.count(_ == '2' || _ == '3'\
    \ || _ == '5' || _ == '7' || _ == 'B' || _ == 'D')\n        val hexPrime11 = hex.count(_\
    \ == '2' || _ == '3' || _ == '5' || _ == '7' || _ == 'B' || _ == 'D')\n      \
    \  val hexPrime12 = hex.count(_ == '2' || _ == '3' || _ == '5' || _ == '7' ||\
    \ _ == 'B' || _ == 'D')\n        val hexPrime13 = hex.count(", "        val hex\
    \ = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n        val hexKey2\
    \ = hexKey.map(x => x % 10)\n        val hexKey3 = hexKey.map(x => x % 16)\n \
    \       val hexKey4 = hexKey.map(x => x % 32)\n        val hexKey5 = hexKey.map(x\
    \ => x % 64)\n        val hexKey6 = hexKey.map(x => x % 128)\n        val hexKey7\
    \ = hexKey.map(x => x % 256)\n        val hexKey8 = hexKey.map(x => x % 512)\n\
    \        val hexKey9 = hexKey.map(x => x % 1024)\n        val hexKey10 = hexKey.map(x\
    \ => x % 2048)\n        val hexKey11 = hexKey.map(x => x % 4096)\n        val\
    \ hexKey12 = hexKey.map(x => x % 8192)\n        val hexKey13 = hexKey.map(x =>\
    \ x % 16384)\n        val hexKey14 = hexKey.map(x => x % 32768)\n        val hexKey15\
    \ = hexKey.map(x => x % 65536)\n        val hexKey16 = hexKey.map(x => x % 131072)\n\
    \        val hexKey17 = hexKey.map(x => x % 262144)\n        val hexKey18 = hexKey.map(x\
    \ => x % 524288)\n        val hexKey19 = hexKey.map(x => x % 1048576)\n      \
    \  val hexKey20 = hexKey.map(x => x % 2097152)\n        val hexKey21 = hexKey.map(x\
    \ => x % 4194304)\n        val hexKey22 = hexKey.map(x => x % 8388608)\n     \
    \   val hexKey23 = hexKey.map(x => x % 16777216)\n        val hexKey24 = hexKey.map(x\
    \ => x % 33554432)\n        val hexKey25 = hexKey.map(x => x % 67108864)\n   \
    \     val hexKey26 = hexKey.map(x => x % 134217728)\n        val hexKey27 = hexKey.map(x\
    \ => x % 268435456)\n        val hexKey28 = hexKey.map(x => x % 536870912)\n \
    \       val hexKey29 = hexKey.map(x => x % 1073741824)\n        val hexKey30 =\
    \ hexKey.map(x => x % 2147483648)\n        val hexKey31 = hexKey.map(x ", "  \
    \      val hex = num.toCharArray\n        val hexLength = hex.length\n       \
    \ val hexKey = new mutable.HashMap[Int, Int]()\n        val hexKey2 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey3 = new mutable.HashMap[Int, Int]()\n        val hexKey4\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey5 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey6 = new mutable.HashMap[Int, Int]()\n        val hexKey7\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey8 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey9 = new mutable.HashMap[Int, Int]()\n        val hexKey10\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey11 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey12 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey13 = new mutable.HashMap[Int, Int]()\n        val hexKey14 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey15 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey16 = new mutable.HashMap[Int, Int]()\n        val hexKey17 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey18 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey19 = new mutable.HashMap[Int, Int]()\n        val hexKey20 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey21 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey22 = new mutable.HashMap[Int, Int]()\n        val hexKey23 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey24 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey25 = new mutable.HashMap[Int, Int]()\n        val hexKey26 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey27 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey28 = new mutable.HashMap[Int, Int]()\n        val hexKey29 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey30 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey31 = new mutable.HashMap[Int, Int]()", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x\
    \ => x % 10)\n        val hexKey3 = hexKey.map(x => x % 10)\n        val hexKey4\
    \ = hexKey.map(x => x % 10)\n        val hexKey5 = hexKey.map(x => x % 10)\n \
    \       val hexKey6 = hexKey.map(x => x % 10)\n        val hexKey7 = hexKey.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey.map(x => x % 10)\n        val hexKey9\
    \ = hexKey.map(x => x % 10)\n        val hexKey10 = hexKey.map(x => x % 10)\n\
    \        val hexKey11 = hexKey.map(x => x % 10)\n        val hexKey12 = hexKey.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey.map(x => x % 10)\n        val hexKey14\
    \ = hexKey.map(x => x % 10)\n        val hexKey15 = hexKey.map(x => x % 10)\n\
    \        val hexKey16 = hexKey.map(x => x % 10)\n        val hexKey17 = hexKey.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey.map(x => x % 10)\n        val hexKey19\
    \ = hexKey.map(x => x % 10)\n        val hexKey20 = hexKey.map(x => x % 10)\n\
    \        val hexKey21 = hexKey.map(x => x % 10)\n        val hexKey22 = hexKey.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey.map(x => x % 10)\n        val hexKey24\
    \ = hexKey.map(x => x % 10)\n        val hexKey25 = hexKey.map(x => x % 10)\n\
    \        val hexKey26 = hexKey.map(x => x % 10)\n        val hexKey27 = hexKey.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey.map(x => x % 10)\n        val hexKey29\
    \ = hexKey.map(x => x % 10)\n        val hexKey30 = hexKey.map(x => x % 10)\n\
    \        val hexKey31 = hexKey.map(x => x % 10)\n        val hexKey32 = hexKey.map(x\
    \ => x % 10)\n        val hexKey33 = hexKey.map(x => x % 10)\n        val hexKey34\
    \ = hexKey.map(x => x % 10)\n        val hexKey35", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x\
    \ => x % 10)\n        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4\
    \ = hexKey3.map(x => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n\
    \        val hexKey6 = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9\
    \ = hexKey8.map(x => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n\
    \        val hexKey11 = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14\
    \ = hexKey13.map(x => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n\
    \        val hexKey16 = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19\
    \ = hexKey18.map(x => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n\
    \        val hexKey21 = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24\
    \ = hexKey23.map(x => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n\
    \        val hexKey26 = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29\
    \ = hexKey28.map(x => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n\
    \        val hexKey31 = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x\
    \ => x % 10)\n        val hexKey33", "        val hex = num.toCharArray\n    \
    \    val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x =>\
    \ x % 10)\n        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4\
    \ = hexKey3.map(x => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n\
    \        val hexKey6 = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9\
    \ = hexKey8.map(x => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n\
    \        val hexKey11 = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14\
    \ = hexKey13.map(x => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n\
    \        val hexKey16 = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19\
    \ = hexKey18.map(x => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n\
    \        val hexKey21 = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24\
    \ = hexKey23.map(x => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n\
    \        val hexKey26 = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29\
    \ = hexKey28.map(x => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n\
    \        val hexKey31 = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x\
    \ => x % 10)\n        val hexKey33", "        val hex = num.toCharArray\n    \
    \    val hexKey = hex.map(x => if (x == 'A') 1 else 0).sum\n        hexKey", " \
    \       val hex = num.toCharArray.map(_.toString.toInt)\n        val primes =\
    \ mutable.Set[Long]()\n        val hexPrimes = mutable.Set[Long]()\n        val\
    \ hexPrime = mutable.Set[Long]()\n        val hexPrime2 = mutable.Set[Long]()\n\
    \        val hexPrime3 = mutable.Set[Long]()\n        val hexPrime4 = mutable.Set[Long]()\n\
    \        val hexPrime5 = mutable.Set[Long]()\n        val hexPrime6 = mutable.Set[Long]()\n\
    \        val hexPrime7 = mutable.Set[Long]()\n        val hexPrime8 = mutable.Set[Long]()\n\
    \        val hexPrime9 = mutable.Set[Long]()\n        val hexPrime10 = mutable.Set[Long]()\n\
    \        val hexPrime11 = mutable.Set[Long]()\n        val hexPrime12 = mutable.Set[Long]()\n\
    \        val hexPrime13 = mutable.Set[Long]()\n        val hexPrime14 = mutable.Set[Long]()\n\
    \        val hexPrime15 = mutable.Set[Long]()\n        val hexPrime16 = mutable.Set[Long]()\n\
    \        val hexPrime17 = mutable.Set[Long]()\n        val hexPrime18 = mutable.Set[Long]()\n\
    \        val hexPrime19 = mutable.Set[Long]()\n        val hexPrime20 = mutable.Set[Long]()\n\
    \        val hexPrime21 = mutable.Set[Long]()\n        val hexPrime22 = mutable.Set[Long]()\n\
    \        val hexPrime23 = mutable.Set[Long]()\n        val hexPrime24 = mutable.Set[Long]()\n\
    \        val hexPrime25 = mutable.Set[Long]()\n        val hexPrime26 = mutable.Set[Long]()\n\
    \        val hexPrime27 = mutable.Set[Long]()\n        val hexPrime28 = mutable.Set[Long]()\n\
    \        val hexPrime29 = mutable.Set[Long]()\n        val hexPrime30 = mutable.Set[Long]()\n\
    \        val hexPrime31 = mutable.Set[Long]()\n        val hexPrime32 = mutable.Set[Long]()\n\
    \        val ", "        val nums = num.split(\"\\\\D+\")\n        val numsCount\
    \ = nums.length\n        val numsDigits = nums.map(_.toInt)\n        val numsDigitCount\
    \ = numsDigits.length\n        val numsDigitSum = numsDigits.sum\n        val\
    \ numsDigitSum2 = numsDigitSum * numsDigitSum\n        val numsDigitSum3 = numsDigitSum2\
    \ * numsDigitSum\n        val numsDigitSum4 = numsDigitSum3 * numsDigitSum\n \
    \       val numsDigitSum5 = numsDigitSum4 * numsDigitSum\n        val numsDigitSum6\
    \ = numsDigitSum5 * numsDigitSum\n        val numsDigitSum7 = numsDigitSum6 *\
    \ numsDigitSum\n        val numsDigitSum8 = numsDigitSum7 * numsDigitSum\n   \
    \     val numsDigitSum9 = numsDigitSum8 * numsDigitSum\n        val numsDigitSum10\
    \ = numsDigitSum9 * numsDigitSum\n        val numsDigitSum11 = numsDigitSum10\
    \ * numsDigitSum\n        val numsDigitSum12 = numsDigitSum11 * numsDigitSum\n\
    \        val numsDigitSum13 = numsDigitSum12 * numsDigitSum\n        val numsDigitSum14\
    \ = numsDigitSum13 * numsDigitSum\n        val numsDigitSum15 = numsDigitSum14\
    \ * numsDigitSum\n        val numsDigitSum16 = numsDigitSum15 * numsDigitSum\n\
    \        val numsDigitSum17 = numsDigitSum16 * numsDigitSum\n        val numsDigitSum18\
    \ = numsDigitSum17 * numsDigitSum\n        val numsDigitSum19 = numsDigitSum18\
    \ * numsDigitSum\n        val numsDigitSum20 = numsDigitSum19 * numsDigitSum\n\
    \        val numsDigitSum21 = numsDigitSum20 * numsDigitSum\n        val numsDigitSum22\
    \ = numsDigitSum21 * numsDigitSum\n        val numsDigitSum23 = numsDigitSum22\
    \ * numsDigitSum\n        val numsDigitSum24 = numsDigitSum23 * numsDigitSum\n\
    \        val numsDigitSum25 = numsDigitSum24 * numsDigitSum\n        val numsDigitSum26\
    \ = numsDigitSum25 * numsDigit", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val prime", "        val hex = num.map(_.toInt)\n        val hexString\
    \ = hex.mkString(\"\")\n        val hexLength = hexString.length\n        val\
    \ hexDigits = hexString.map(x => x.toChar)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x.toInt)\n        val hexDigitMapCount\
    \ = hexDigitMap.length\n        val hexDigitMapKeys = hexDigitMap.keys\n     \
    \   val hexDigitMapValues = hexDigitMap.values\n        val hexDigitMapKeysCount\
    \ = hexDigitMapKeys.length\n        val hexDigitMapValuesCount = hexDigitMapValues.length\n\
    \        val hexDigitMapKeysValues = hexDigitMapKeys.zip(hexDigitMapValues)\n\
    \        val hexDigitMapKeysValuesCount = hexDigitMapKeysValues.length\n     \
    \   val hexDigitMapKeysValuesValuesCount = hexDigitMapKeysValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesCount = hexDigitMapKeysValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesCount = hexDigitMapKeysValuesValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesValuesCount = hexDigitMapKeysValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesValuesValuesCount = hexDigitMapKeysValuesValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesCount =\
    \ hexDigitMapKeysValuesValuesValuesValuesValuesValuesValues.length\n        val\
    \ hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesCount = hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesCount\
    \ = hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesValuesCount\
    \ = hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesCount\
    \ = hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesCount\
    \ = hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapKeysValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesValuesCount\
    \ = hexDigitMapKeysValuesValues", "        val hex = num.toCharArray\n       \
    \ val hexLength = hex.length\n        val hexKey = new mutable.HashMap[Int, Int]()\n\
    \        val hexKey2 = new mutable.HashMap[Int, Int]()\n        val hexKey3 =\
    \ new mutable.HashMap[Int, Int]()\n        val hexKey4 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey5 = new mutable.HashMap[Int, Int]()\n        val hexKey6\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey7 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey8 = new mutable.HashMap[Int, Int]()\n        val hexKey9\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey10 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey11 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey12 = new mutable.HashMap[Int, Int]()\n        val hexKey13 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey14 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey15 = new mutable.HashMap[Int, Int]()\n        val hexKey16 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey17 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey18 = new mutable.HashMap[Int, Int]()\n        val hexKey19 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey20 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey21 = new mutable.HashMap[Int, Int]()\n        val hexKey22 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey23 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey24 = new mutable.HashMap[Int, Int]()\n        val hexKey25 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey26 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey27 = new mutable.HashMap[Int, Int]()\n        val hexKey28 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey29 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey30 = new mutable.HashMap[Int, Int]()\n        val hexKey31 = new mutable.HashMap[Int,\
    \ Int]()", "        val hex = num.toCharArray\n        val hexKey = hex.map(x\
    \ => x.toInt)\n        val hexKey2 = hexKey.map(x => x % 10)\n        val hexKey3\
    \ = hexKey2.map(x => x % 10)\n        val hexKey4 = hexKey3.map(x => x % 10)\n\
    \        val hexKey5 = hexKey4.map(x => x % 10)\n        val hexKey6 = hexKey5.map(x\
    \ => x % 10)\n        val hexKey7 = hexKey6.map(x => x % 10)\n        val hexKey8\
    \ = hexKey7.map(x => x % 10)\n        val hexKey9 = hexKey8.map(x => x % 10)\n\
    \        val hexKey10 = hexKey9.map(x => x % 10)\n        val hexKey11 = hexKey10.map(x\
    \ => x % 10)\n        val hexKey12 = hexKey11.map(x => x % 10)\n        val hexKey13\
    \ = hexKey12.map(x => x % 10)\n        val hexKey14 = hexKey13.map(x => x % 10)\n\
    \        val hexKey15 = hexKey14.map(x => x % 10)\n        val hexKey16 = hexKey15.map(x\
    \ => x % 10)\n        val hexKey17 = hexKey16.map(x => x % 10)\n        val hexKey18\
    \ = hexKey17.map(x => x % 10)\n        val hexKey19 = hexKey18.map(x => x % 10)\n\
    \        val hexKey20 = hexKey19.map(x => x % 10)\n        val hexKey21 = hexKey20.map(x\
    \ => x % 10)\n        val hexKey22 = hexKey21.map(x => x % 10)\n        val hexKey23\
    \ = hexKey22.map(x => x % 10)\n        val hexKey24 = hexKey23.map(x => x % 10)\n\
    \        val hexKey25 = hexKey24.map(x => x % 10)\n        val hexKey26 = hexKey25.map(x\
    \ => x % 10)\n        val hexKey27 = hexKey26.map(x => x % 10)\n        val hexKey28\
    \ = hexKey27.map(x => x % 10)\n        val hexKey29 = hexKey28.map(x => x % 10)\n\
    \        val hexKey30 = hexKey29.map(x => x % 10)\n        val hexKey31 = hexKey30.map(x\
    \ => x % 10)\n        val hexKey32 = hexKey31.map(x => x % 10)\n        val hexKey33",
  "        val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexKey = hexCount.toLong\n        val hexKeyList = hexKey.toList\n        val\
    \ hexKeyListCount = hexKeyList.length\n        val hexKeyList2 = hexKeyList.map(x\
    \ => x.toLong)\n        val hexKeyList3 = hexKeyList2.map(x => x.toLong)\n   \
    \     val hexKeyList4 = hexKeyList3.map(x => x.toLong)\n        val hexKeyList5\
    \ = hexKeyList4.map(x => x.toLong)\n        val hexKeyList6 = hexKeyList5.map(x\
    \ => x.toLong)\n        val hexKeyList7 = hexKeyList6.map(x => x.toLong)\n   \
    \     val hexKeyList8 = hexKeyList7.map(x => x.toLong)\n        val hexKeyList9\
    \ = hexKeyList8.map(x => x.toLong)\n        val hexKeyList10 = hexKeyList9.map(x\
    \ => x.toLong)\n        val hexKeyList11 = hexKeyList10.map(x => x.toLong)\n \
    \       val hexKeyList12 = hexKeyList11.map(x => x.toLong)\n        val hexKeyList13\
    \ = hexKeyList12.map(x => x.toLong)\n        val hexKeyList14 = hexKeyList13.map(x\
    \ => x.toLong)\n        val hexKeyList15 = hexKeyList14.map(x => x.toLong)\n \
    \       val hexKeyList16 = hexKeyList15.map(x => x.toLong)\n        val hexKeyList17\
    \ = hexKeyList16.map(x => x.toLong)\n        val hexKeyList18 = hexKeyList17.map(x\
    \ => x.toLong)\n        val hexKeyList19 = hexKeyList18.map(x => x.toLong)\n \
    \       val hexKeyList20 = hexKeyList19.map(x => x.toLong)\n        val hexKeyList21\
    \ = hexKeyList20.map(x => x.toLong)\n        val hexKeyList22 = hexKeyList21.map(x\
    \ => x.toLong)\n        val hexKeyList23 = hexKeyList22.map(x => x.toLong)\n \
    \       val hexKeyList24 = hexKeyList23.map(x => x.toLong)\n        val hexKeyList25\
    \ = hexKeyList24.map(x => x.toLong)\n        val hexKeyList26 = hexKeyList25.map(x\
    \ => x.toLong)\n        val ", "        val hex = num.map(x => x.toInt)\n    \
    \    val hexString = hex.mkString(\"\")\n        val hexDigits = hexString.toList\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x)\n        val hexDigitMapCount = hexDigitMap.length\n        val hexDigitMapKeys\
    \ = hexDigitMap.keys.toList\n        val hexDigitMapValues = hexDigitMap.toList\n\
    \        val hexDigitMapValuesCount = hexDigitMapValues.length\n        val hexDigitMapValuesKeys\
    \ = hexDigitMapValues.keys.toList\n        val hexDigitMapValuesValues = hexDigitMapValues.toList\n\
    \        val hexDigitMapValuesValuesCount = hexDigitMapValuesValues.length\n \
    \       val hexDigitMapValuesValuesKeys = hexDigitMapValuesValues.keys.toList\n\
    \        val hexDigitMapValuesValuesValues = hexDigitMapValuesValues.toList\n\
    \        val hexDigitMapValuesValuesValuesCount = hexDigitMapValuesValuesValues.length\n\
    \        val hexDigitMapValuesValuesValuesKeys = hexDigitMapValuesValuesValues.keys.toList\n\
    \        val hexDigitMapValuesValuesValuesValues = hexDigitMapValuesValuesValues.toList\n\
    \        val hexDigitMapValuesValuesValuesValuesCount = hexDigitMapValuesValuesValuesValues.length\n\
    \        val hexDigitMapValuesValuesValuesValuesKeys = hexDigitMapValuesValuesValuesValues.keys.toList\n\
    \        val hexDigitMapValuesValuesValuesValuesValues = hexDigitMapValuesValuesValuesValues.toList\n\
    \        val hexDigitMapValuesValuesValuesValuesValuesCount = hexDigitMapValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapValuesValuesValuesValuesValuesKeys = hexDigitMapValuesValuesValuesValuesValues.keys.toList\n\
    \        val hexDigitMapValuesValuesValuesValuesValuesValues = hexDigitMapValuesValuesValuesValuesValues.toList\n\
    \        val hexDigitMapValuesValuesValuesValuesValuesValuesCount = hexDigitMapValuesValuesValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapValuesValuesValuesValuesValuesValuesKeys = hexDigitMapValuesValuesValuesValuesValuesValuesValues.keys.toList\n\
    \        val hexDigitMapValuesValuesValuesValuesValuesValuesValuesValues = hexDigitMapValuesValuesValuesValuesValuesValuesValuesValuesValues.toList\n\
    \        val hexDigitMapValuesValuesValuesValuesValuesValuesValuesValuesCount\
    \ = hexDigitMapValuesValuesValuesValuesValuesValuesValuesValuesValuesValues.length\n\
    \        val hexDigitMapValuesValuesValuesValuesValuesValuesValuesValuesKeys =\
    \ hex", "        val hex = num.map(x => x.toInt)\n        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val hexPrimes = primes.filter(x => hex.contains(x))\n\
    \        val hexPrime = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime2\
    \ = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime3 = hexPrimes.reduce((x,\
    \ y) => x * y)\n        val hexPrime4 = hexPrimes.reduce((x, y) => x * y)\n  \
    \      val hexPrime5 = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime6\
    \ = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime7 = hexPrimes.reduce((x,\
    \ y) => x * y)\n        val hexPrime8 = hexPrimes.reduce((x, y) => x * y)\n  \
    \      val hexPrime9 = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime10\
    \ = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime11 = hexPrimes.reduce((x,\
    \ y) => x * y)\n        val hexPrime12 = hexPrimes.reduce((x, y) => x * y)\n \
    \       val hexPrime13 = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime14\
    \ = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime15 = hexPrimes.reduce((x,\
    \ y) => x * y)\n        val hexPrime16 = hexPrimes.reduce((x, y) => x * y)\n \
    \       val hexPrime17 = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime18\
    \ = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime19 = hexPrimes.reduce((x,\
    \ y) => x * y)\n        val hexPrime20 = hexPrimes.reduce((x, y) => x * y)\n \
    \       val hexPrime21 = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime22\
    \ = hexPrimes.reduce((x, y) => x * y)\n        val hexPrime23 = hexPrimes.reduce((x,\
    \ y) => x * y)\n        val hexPrime24 = hexPrimes.reduce((x, y) => x * y)\n \
    \       val hexPrime25 = hexPrimes.reduce((x, y) => x * y)\n        val hex",
  "        val hex = num.toCharArray\n        val hexKey = hex.foldLeft(0l) {\n  \
    \          (acc, x) => acc + (x.toLong * 16 + x.toLong)\n        }\n        hexKey",
  "        val nums = num.split(\"\\\\D+\")\n        val hexNums = nums.map(_.toInt)\n\
    \        val primes = hexNums.filter(x => isPrime(x))\n        primes.length",
  "        val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexMap = mutable.Map[Int, Int]()\n        var hexIndex = 0\n        while(hexIndex\
    \ < hexCount) {\n            val hexValue = hex(hexIndex)\n            val hexDigit\
    \ = hexValue - 48\n            if(hexMap.get(hexDigit) == null) {\n          \
    \      hexMap += (hexDigit -> 1)\n            } else {\n                hexMap(hexDigit)\
    \ += 1\n            }\n            hexIndex += 1\n        }\n        val hexMapCount\
    \ = hexMap.length\n        val hexMapMapped = hexMap.map(x => (x._1, x._2)).toMap\n\
    \        val hexMapMappedCount = hexMapMapped.length\n        val hexMapMappedMapped\
    \ = hexMapMapped.map(x => (x._1, x._2)).toMap\n        val hexMapMappedMappedCount\
    \ = hexMapMappedMapped.length\n        val hexMapMappedMappedMapped = hexMapMappedMapped.map(x\
    \ => (x._1, x._2)).toMap\n        val hexMapMappedMappedMappedCount = hexMapMappedMappedMapped.length\n\
    \        val hexMapMappedMappedMappedMapped = hexMapMappedMappedMapped.map(x =>\
    \ (x._1, x._2)).toMap\n        val hexMapMappedMappedMappedMappedCount = hexMapMappedMappedMappedMapped.length\n\
    \        val hexMapMappedMappedMappedMappedMapped = hexMapMappedMappedMappedMapped.map(x\
    \ => (x._1, x._2)).toMap\n        val hexMapMappedMappedMappedMappedCount = hexMapMappedMappedMappedMapped.length\n\
    \        val hexMapMappedMappedMappedMappedMapped = hexMapMappedMappedMappedMapped.map(x\
    \ => (x._1, x._2)).toMap\n        val hexMapMappedMappedMappedMappedMappedCount\
    \ = hexMapMappedMappedMappedMappedMapped.length\n        val hexMapMappedMappedMappedMappedMappedMapped\
    \ = hexMapMappedMappedMappedMappedMapped.map(x => (x._1, x._2)).toMap\n      \
    \  val hexMapMappedMappedMappedMappedMappedCount = hexMapMappedMappedMappedMappedMapped.length\n\
    \        val hexMapMappedMappedMappedMappedMappedMapped = hexMapMap", "      \
    \  val nums = num.split(\"\\\\W+\")\n        val hexNums = nums.map(_.toInt)\n\
    \        val primes = hexNums.filter(x => isPrime(x))\n        primes.length",
  "        val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexMap = mutable.Map[Int, Int]()\n        val hexMap2 = mutable.Map[Int, Int]()\n\
    \        val hexMap3 = mutable.Map[Int, Int]()\n        val hexMap4 = mutable.Map[Int,\
    \ Int]()\n        val hexMap5 = mutable.Map[Int, Int]()\n        val hexMap6 =\
    \ mutable.Map[Int, Int]()\n        val hexMap7 = mutable.Map[Int, Int]()\n   \
    \     val hexMap8 = mutable.Map[Int, Int]()\n        val hexMap9 = mutable.Map[Int,\
    \ Int]()\n        val hexMap10 = mutable.Map[Int, Int]()\n        val hexMap11\
    \ = mutable.Map[Int, Int]()\n        val hexMap12 = mutable.Map[Int, Int]()\n\
    \        val hexMap13 = mutable.Map[Int, Int]()\n        val hexMap14 = mutable.Map[Int,\
    \ Int]()\n        val hexMap15 = mutable.Map[Int, Int]()\n        val hexMap16\
    \ = mutable.Map[Int, Int]()\n        val hexMap17 = mutable.Map[Int, Int]()\n\
    \        val hexMap18 = mutable.Map[Int, Int]()\n        val hexMap19 = mutable.Map[Int,\
    \ Int]()\n        val hexMap20 = mutable.Map[Int, Int]()\n        val hexMap21\
    \ = mutable.Map[Int, Int]()\n        val hexMap22 = mutable.Map[Int, Int]()\n\
    \        val hexMap23 = mutable.Map[Int, Int]()\n        val hexMap24 = mutable.Map[Int,\
    \ Int]()\n        val hexMap25 = mutable.Map[Int, Int]()\n        val hexMap26\
    \ = mutable.Map[Int, Int]()\n        val hexMap27 = mutable.Map[Int, Int]()\n\
    \        val hexMap28 = mutable.Map[Int, Int]()\n        val hexMap29 = mutable.Map[Int,\
    \ Int]()\n        val hexMap30 = mutable.Map[Int, Int]()\n        val hexMap31\
    \ = mutable.Map[Int, Int]()\n        val hexMap32 = mutable.Map[Int, Int]()\n\
    \        val hexMap33 = mutable.Map[Int, Int]()\n        val hexMap34 = mutable.Map[Int,\
    \ Int]()", "        val hex = num.toCharArray.map(_.toString.toInt)\n        val\
    \ hexKey = hex.map(x => (x % 16))\n        val hexKey2 = hexKey.map(x => x % 16)\n\
    \        val hexKey3 = hexKey.map(x => x % 16)\n        val hexKey4 = hexKey.map(x\
    \ => x % 16)\n        val hexKey5 = hexKey.map(x => x % 16)\n        val hexKey6\
    \ = hexKey.map(x => x % 16)\n        val hexKey7 = hexKey.map(x => x % 16)\n \
    \       val hexKey8 = hexKey.map(x => x % 16)\n        val hexKey9 = hexKey.map(x\
    \ => x % 16)\n        val hexKey10 = hexKey.map(x => x % 16)\n        val hexKey11\
    \ = hexKey.map(x => x % 16)\n        val hexKey12 = hexKey.map(x => x % 16)\n\
    \        val hexKey13 = hexKey.map(x => x % 16)\n        val hexKey14 = hexKey.map(x\
    \ => x % 16)\n        val hexKey15 = hexKey.map(x => x % 16)\n        val hexKey16\
    \ = hexKey.map(x => x % 16)\n        val hexKey17 = hexKey.map(x => x % 16)\n\
    \        val hexKey18 = hexKey.map(x => x % 16)\n        val hexKey19 = hexKey.map(x\
    \ => x % 16)\n        val hexKey20 = hexKey.map(x => x % 16)\n        val hexKey21\
    \ = hexKey.map(x => x % 16)\n        val hexKey22 = hexKey.map(x => x % 16)\n\
    \        val hexKey23 = hexKey.map(x => x % 16)\n        val hexKey24 = hexKey.map(x\
    \ => x % 16)\n        val hexKey25 = hexKey.map(x => x % 16)\n        val hexKey26\
    \ = hexKey.map(x => x % 16)\n        val hexKey27 = hexKey.map(x => x % 16)\n\
    \        val hexKey28 = hexKey.map(x => x % 16)\n        val hexKey29 = hexKey.map(x\
    \ => x % 16)\n        val hexKey30 = hexKey.map(x => x % 16)\n        val hexKey31\
    \ = hexKey.map(x => x % 16)\n        val hexKey32 = hexKey.map(x => x % 16)\n\
    \        val hexKey33 = hexKey.map(x => x % 16)\n        val hexKey34 = hexKey.map(x\
    \ => x % ", "        val hex = num.toCharArray\n        val hexLength = hex.length\n\
    \        val hexKey = hexLength * hexLength\n        val hexKeyArray = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray2 = Array.ofDim[Long](hexKey)\n        val hexKeyArray3\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray4 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray5 = Array.ofDim[Long](hexKey)\n        val hexKeyArray6\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray7 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray8 = Array.ofDim[Long](hexKey)\n        val hexKeyArray9\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray10 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray11 = Array.ofDim[Long](hexKey)\n        val hexKeyArray12\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray13 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray14 = Array.ofDim[Long](hexKey)\n        val hexKeyArray15\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray16 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray17 = Array.ofDim[Long](hexKey)\n        val hexKeyArray18\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray19 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray20 = Array.ofDim[Long](hexKey)\n        val hexKeyArray21\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray22 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray23 = Array.ofDim[Long](hexKey)\n        val hexKeyArray24\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray25 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray26 = Array.ofDim[Long](hexKey)\n        val hexKeyArray27\
    \ = Array.ofDim[Long](hexKey)\n        val hexKeyArray28 = Array.ofDim[Long](hexKey)\n\
    \        val hexKeyArray29 = Array.ofDim[Long](hexKey)\n        val hexKeyArray",
  "        val hex = num.map(_.toInt)\n        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet", "    \
    \    val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexDigits = hexCount / 2\n        val hexDigitCount = hexDigits.length\n   \
    \     val hexDigitMap = mutable.Map[Int, Int]()\n        val hexDigitMap2 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitMap3 = mutable.Map[Int, Int]()\n        val hexDigitMap4\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap5 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap6 = mutable.Map[Int, Int]()\n        val hexDigitMap7\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap8 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap9 = mutable.Map[Int, Int]()\n        val hexDigitMap10\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap11 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap12 = mutable.Map[Int, Int]()\n        val hexDigitMap13\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap14 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap15 = mutable.Map[Int, Int]()\n        val hexDigitMap16\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap17 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap18 = mutable.Map[Int, Int]()\n        val hexDigitMap19\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap20 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap21 = mutable.Map[Int, Int]()\n        val hexDigitMap22\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap23 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap24 = mutable.Map[Int, Int]()\n        val hexDigitMap25\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap26 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap27 = mutable.Map[Int, Int]()\n        val hexDigitMap28\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap29 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap30 = mutable.Map[Int, Int]()\n        val hexDigitMap31\
    \ = mutable.Map[", "        val hex = num.toCharArray\n        val hexLen = hex.length\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKeyLen = hexKey.length\n\
    \        val hexKeyLen2 = hexKeyLen / 2\n        val hexKeyLen3 = hexKeyLen2 /\
    \ 2\n        val hexKeyLen4 = hexKeyLen3 / 2\n        val hexKeyLen5 = hexKeyLen4\
    \ / 2\n        val hexKeyLen6 = hexKeyLen5 / 2\n        val hexKeyLen7 = hexKeyLen6\
    \ / 2\n        val hexKeyLen8 = hexKeyLen7 / 2\n        val hexKeyLen9 = hexKeyLen8\
    \ / 2\n        val hexKeyLen10 = hexKeyLen9 / 2\n        val hexKeyLen11 = hexKeyLen10\
    \ / 2\n        val hexKeyLen12 = hexKeyLen11 / 2\n        val hexKeyLen13 = hexKeyLen12\
    \ / 2\n        val hexKeyLen14 = hexKeyLen13 / 2\n        val hexKeyLen15 = hexKeyLen14\
    \ / 2\n        val hexKeyLen16 = hexKeyLen15 / 2\n        val hexKeyLen17 = hexKeyLen16\
    \ / 2\n        val hexKeyLen18 = hexKeyLen17 / 2\n        val hexKeyLen19 = hexKeyLen18\
    \ / 2\n        val hexKeyLen20 = hexKeyLen19 / 2\n        val hexKeyLen21 = hexKeyLen20\
    \ / 2\n        val hexKeyLen22 = hexKeyLen21 / 2\n        val hexKeyLen23 = hexKeyLen22\
    \ / 2\n        val hexKeyLen24 = hexKeyLen23 / 2\n        val hexKeyLen25 = hexKeyLen24\
    \ / 2\n        val hexKeyLen26 = hexKeyLen25 / 2\n        val hexKeyLen27 = hexKeyLen26\
    \ / 2\n        val hexKeyLen28 = hexKeyLen27 / 2\n        val hexKeyLen29 = hexKeyLen28\
    \ / 2\n        val hexKeyLen30 = hexKeyLen29 / 2\n        val hexKeyLen31 = hexKeyLen30\
    \ / 2\n        val hexKeyLen32 = hexKeyLen31 / 2\n        val hexKeyLen33 = hexKeyLen32\
    \ / 2\n        val hexKeyLen34 = hexKeyLen33 / 2\n        val hexKeyLen35 = hexKeyLen34\
    \ / 2\n        val hexKeyLen36 = hex", "        val hex = num.map(_.toInt)\n \
    \       val hexKey = hex.map(x => (x % 16).asInstanceOf[Int]).toSet\n        val\
    \ hexKeySet = hexKey.toSet\n        val hexKeySet2 = hexKey.filter(x => hexKeySet.contains(x))\n\
    \        hexKeySet2.size", "        val hex = num.toCharArray\n        val hexKey\
    \ = hex.map(x => x.toInt)\n        val hexKeyList = hexKey.toList\n        val\
    \ hexKeyListLength = hexKeyList.size\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n", "        val nums = num.toCharArray\n        val\
    \ numsLength = nums.length\n        val numsLength = numsLength - 1\n        var\
    \ count = 0\n        var prime = 0\n        var primeCount = 0\n        var primeCount2\
    \ = 0\n        var primeCount3 = 0\n        var primeCount4 = 0\n        var primeCount5\
    \ = 0\n        var primeCount6 = 0\n        var primeCount7 = 0\n        var primeCount8\
    \ = 0\n        var primeCount9 = 0\n        var primeCount10 = 0\n        var\
    \ primeCount11 = 0\n        var primeCount12 = 0\n        var primeCount13 = 0\n\
    \        var primeCount14 = 0\n        var primeCount15 = 0\n        var primeCount16\
    \ = 0\n        var primeCount17 = 0\n        var primeCount18 = 0\n        var\
    \ primeCount19 = 0\n        var primeCount20 = 0\n        var primeCount21 = 0\n\
    \        var primeCount22 = 0\n        var primeCount23 = 0\n        var primeCount24\
    \ = 0\n        var primeCount25 = 0\n        var primeCount26 = 0\n        var\
    \ primeCount27 = 0\n        var primeCount28 = 0\n        var primeCount29 = 0\n\
    \        var primeCount30 = 0\n        var primeCount31 = 0\n        var primeCount32\
    \ = 0\n        var primeCount33 = 0\n        var primeCount34 = 0\n        var\
    \ primeCount35 = 0\n        var primeCount36 = 0\n        var primeCount37 = 0\n\
    \        var primeCount38 = 0\n        var primeCount39 = 0\n        var primeCount40\
    \ = 0\n        var primeCount41 = 0\n        var primeCount42 = 0\n        var\
    \ primeCount43 = 0\n        var primeCount44 = 0\n        var primeCount45 = 0\n\
    \        var primeCount46 = 0\n        var primeCount47 = 0\n        var primeCount48\
    \ = 0\n        var primeCount49 = 0\n        var primeCount50 = 0\n        var\
    \ primeCount51 = 0\n        var primeCount52 = 0\n        var primeCount53 = 0\n\
    \        var primeCount54 = 0\n        var primeCount55 = 0\n        var primeCount56\
    \ = 0\n        var primeCount57 = 0\n        var primeCount58 = 0\n        var\
    \ primeCount59 = 0\n        var primeCount60 = 0\n        var primeCount61 = 0\n\
    \        var primeCount62 = 0\n        var primeCount63 = 0\n        var primeCount64\
    \ = 0\n        var primeCount65 = 0\n        var primeCount66 = 0\n        var\
    \ primeCount67 = 0\n        var primeCount68 = 0\n        var primeCount69 = 0\n\
    \        var primeCount70 = 0\n        var primeCount71 = 0\n        var primeCount72\
    \ = 0\n        var primeCount73 = 0\n        var primeCount74 = 0\n        var\
    \ primeCount75 = 0\n        var primeCount76 = 0\n        var primeCount77 = 0\n\
    \        var primeCount78 = 0\n        var primeCount79 = 0\n        var primeCount80\
    \ = 0", "        val nums = num.toCharArray\n        val numsLen = nums.length\n\
    \        val numsLen2 = numsLen * 2\n        val numsLen3 = numsLen2 * 3\n   \
    \     val numsLen4 = numsLen3 * 5\n        val numsLen5 = numsLen4 * 7\n     \
    \   val numsLen6 = numsLen5 * 11\n        val numsLen7 = numsLen6 * 13\n     \
    \   val numsLen8 = numsLen7 * 17\n        val numsLen9 = numsLen8 * 19\n     \
    \   val numsLen10 = numsLen9 * 21\n        val numsLen11 = numsLen10 * 23\n  \
    \      val numsLen12 = numsLen11 * 25\n        val numsLen13 = numsLen12 * 27\n\
    \        val numsLen14 = numsLen13 * 29\n        val numsLen15 = numsLen14 * 31\n\
    \        val numsLen16 = numsLen15 * 33\n        val numsLen17 = numsLen16 * 35\n\
    \        val numsLen18 = numsLen17 * 37\n        val numsLen19 = numsLen18 * 39\n\
    \        val numsLen20 = numsLen19 * 41\n        val numsLen21 = numsLen20 * 43\n\
    \        val numsLen22 = numsLen21 * 45\n        val numsLen23 = numsLen22 * 47\n\
    \        val numsLen24 = numsLen23 * 49\n        val numsLen25 = numsLen24 * 51\n\
    \        val numsLen26 = numsLen25 * 53\n        val numsLen27 = numsLen26 * 55\n\
    \        val numsLen28 = numsLen27 * 57\n        val numsLen29 = numsLen28 * 59\n\
    \        val numsLen30 = numsLen29 * 61\n        val numsLen31 = numsLen30 * 63\n\
    \        val numsLen32 = numsLen31 * 65\n        val numsLen33 = numsLen32 * 67\n\
    \        val numsLen34 = numsLen33 * 69\n        val numsLen35 = numsLen34 * 71\n\
    \        val numsLen36 = numsLen35 * 73\n        val numsLen37 = numsLen36 * 75\n\
    \        val numsLen38 = num", "        val nums = num.split(\"\\\\D+\").map(_.toInt)\n\
    \        val primes = nums.filter(num => num > 1 && num % 2 != 0).map(num => num\
    \ * 2)\n        val primesCount = primes.count(_ > 1)\n        primesCount.toLong",
  "        val hex = num.toCharArray.map(_.toInt)\n        val hexKey = hex.map(x\
    \ => (x % 16))\n        val hexKey2 = hexKey.map(x => (x % 16))\n        val hexKey3\
    \ = hexKey2.map(x => (x % 16))\n        val hexKey4 = hexKey3.map(x => (x % 16))\n\
    \        val hexKey5 = hexKey4.map(x => (x % 16))\n        val hexKey6 = hexKey5.map(x\
    \ => (x % 16))\n        val hexKey7 = hexKey6.map(x => (x % 16))\n        val\
    \ hexKey8 = hexKey7.map(x => (x % 16))\n        val hexKey9 = hexKey8.map(x =>\
    \ (x % 16))\n        val hexKey10 = hexKey9.map(x => (x % 16))\n        val hexKey11\
    \ = hexKey10.map(x => (x % 16))\n        val hexKey12 = hexKey11.map(x => (x %\
    \ 16))\n        val hexKey13 = hexKey12.map(x => (x % 16))\n        val hexKey14\
    \ = hexKey13.map(x => (x % 16))\n        val hexKey15 = hexKey14.map(x => (x %\
    \ 16))\n        val hexKey16 = hexKey15.map(x => (x % 16))\n        val hexKey17\
    \ = hexKey16.map(x => (x % 16))\n        val hexKey18 = hexKey17.map(x => (x %\
    \ 16))\n        val hexKey19 = hexKey18.map(x => (x % 16))\n        val hexKey20\
    \ = hexKey19.map(x => (x % 16))\n        val hexKey21 = hexKey20.map(x => (x %\
    \ 16))\n        val hexKey22 = hexKey21.map(x => (x % 16))\n        val hexKey23\
    \ = hexKey22.map(x => (x % 16))\n        val hexKey24 = hexKey23.map(x => (x %\
    \ 16))\n        val hexKey25 = hexKey24.map(x => (x % 16))\n        val hexKey26\
    \ = hexKey25.map(x => (x % 16))\n        val hexKey27 = hexKey26.map(x => (x %\
    \ 16))\n        val hexKey28 = hexKey27.map(x => (x % 16))\n        val hexKey29\
    \ = hexKey28.map(x => (x % 16))\n        val hexKey30 = hexKey29.map(x => (x %\
    \ 16))\n        val hex", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val hexKey = hex.map(x => x % 16).sum\n        hexKey", "        val\
    \ hex = num.toCharArray.map(_.toString.toInt)\n        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        ", "        val hex =\
    \ num.toCharArray.map(_.toString.toInt)\n        val hexKey = hex.map(x => x %\
    \ 16).filter(_ > 0).count() * 16\n        hexKey", "        val hex = num.toCharArray\n\
    \        val hexLen = hex.length\n        val hexKey = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLen = hexKey.size\n        val hexKeyLenMinusOne =\
    \ hexKeyLen - 1\n        val hexKeyLenMinusTwo = hexKeyLen - 2\n        val hexKeyLenMinusThree\
    \ = hexKeyLen - 3\n        val hexKeyLenMinusFour = hexKeyLen - 4\n        val\
    \ hexKeyLenMinusFive = hexKeyLen - 5\n        val hexKeyLenMinusSix = hexKeyLen\
    \ - 6\n        val hexKeyLenMinusSeven = hexKeyLen - 7\n        val hexKeyLenMinusEight\
    \ = hexKeyLen - 8\n        val hexKeyLenMinusNine = hexKeyLen - 9\n        val\
    \ hexKeyLenMinusTen = hexKeyLen - 10\n        val hexKeyLenMinusEleven = hexKeyLen\
    \ - 11\n        val hexKeyLenMinusTwelve = hexKeyLen - 12\n        val hexKeyLenMinusThirteen\
    \ = hexKeyLen - 13\n        val hexKeyLenMinusFourteen = hexKeyLen - 14\n    \
    \    val hexKeyLenMinusFifteen = hexKeyLen - 15\n        val hexKeyLenMinusSixteen\
    \ = hexKeyLen - 16\n        val hexKeyLenMinusSeventeen = hexKeyLen - 17\n   \
    \     val hexKeyLenMinusEighteen = hexKeyLen - 18\n        val hexKeyLenMinusNineteen\
    \ = hexKeyLen - 19\n        val hexKeyLenMinusTwenty = hexKeyLen - 20\n      \
    \  val hexKeyLenMinusThirty = hexKeyLen - 30\n        val hexKeyLenMinusFourty\
    \ = hexKeyLen - 40\n        val hexKeyLenMinusFifty = hexKeyLen - 50\n       \
    \ val hexKeyLenMinusSixty = hexKeyLen - 60\n        val hexKeyLenMinusSeventy\
    \ = hexKeyLen - 70\n        val hexKeyLenMinusEighty = hexKeyLen - 80\n      \
    \  val hexKeyLenMinusNinety = hexKeyLen - 90\n        val hexKeyLenMinusOnehundred\
    \ = hexKeyLen - 100\n        val hexKeyLenMinusOnethousand = hexKeyLen - 1000\n\
    \        ", "        val hex = num.toCharArray.map(_.toInt)\n        val hexKey\
    \ = hex.foldLeft(0l){\n            (acc, c) =>\n                acc + (if (c %\
    \ 2 == 0) c else -c)\n        }\n        hexKey", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => if (x == 'A') 1 else 0).sum\n        hexKey",
  "        val hex = num.toCharArray.map(_.toInt)\n        val hexKey = hex.map(x\
    \ => math.pow(16, x))\n        val hexKeySum = hexKey.sum\n        val hexKeySum2\
    \ = hexKey.map(x => math.pow(16, x))\n        val hexKeySum3 = hexKey.map(x =>\
    \ math.pow(16, x))\n        val hexKeySum4 = hexKey.map(x => math.pow(16, x))\n\
    \        val hexKeySum5 = hexKey.map(x => math.pow(16, x))\n        val hexKeySum6\
    \ = hexKey.map(x => math.pow(16, x))\n        val hexKeySum7 = hexKey.map(x =>\
    \ math.pow(16, x))\n        val hexKeySum8 = hexKey.map(x => math.pow(16, x))\n\
    \        val hexKeySum9 = hexKey.map(x => math.pow(16, x))\n        val hexKeySum10\
    \ = hexKey.map(x => math.pow(16, x))\n        val hexKeySum11 = hexKey.map(x =>\
    \ math.pow(16, x))\n        val hexKeySum12 = hexKey.map(x => math.pow(16, x))\n\
    \        val hexKeySum13 = hexKey.map(x => math.pow(16, x))\n        val hexKeySum14\
    \ = hexKey.map(x => math.pow(16, x))\n        val hexKeySum15 = hexKey.map(x =>\
    \ math.pow(16, x))\n        val hexKeySum16 = hexKey.map(x => math.pow(16, x))\n\
    \        val hexKeySum17 = hexKey.map(x => math.pow(16, x))\n        val hexKeySum18\
    \ = hexKey.map(x => math.pow(16, x))\n        val hexKeySum19 = hexKey.map(x =>\
    \ math.pow(16, x))\n        val hexKeySum20 = hexKey.map(x => math.pow(16, x))\n\
    \        val hexKeySum21 = hexKey.map(x => math.pow(16, x))\n        val hexKeySum22\
    \ = hexKey.map(x => math.pow(16, x))\n        val hexKeySum23 = hexKey.map(x =>\
    \ math.pow(16, x))\n        val hexKeySum24 = hexKey.map(x => math.pow(16, x))\n\
    \        val hexKeySum25 = hexKey.map(x => math.pow(16, x))\n        val hexKeySum26\
    \ = hexKey.map(x => math.pow(16, x))\n        val hexKeySum27 = hexKey.map(x =>\
    \ math.pow(16, x))\n        val hexKeySum28 = hexKey.map(x => math.pow(16, x))\n\
    \        val hexKeySum29 = hexKey.map(x => math.pow(16, x))\n        val hexKeySum30\
    \ = hexKey.", "        val hex = num.toCharArray.map(_.toHexString)\n        val\
    \ hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x => x % 10)\n\
    \        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4 = hexKey3.map(x\
    \ => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n        val hexKey6\
    \ = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x => x % 10)\n\
    \        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9 = hexKey8.map(x\
    \ => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n        val hexKey11\
    \ = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x => x % 10)\n\
    \        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14 = hexKey13.map(x\
    \ => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n        val hexKey16\
    \ = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x => x % 10)\n\
    \        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19 = hexKey18.map(x\
    \ => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n        val hexKey21\
    \ = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x => x % 10)\n\
    \        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24 = hexKey23.map(x\
    \ => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n        val hexKey26\
    \ = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x => x % 10)\n\
    \        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29 = hexKey28.map(x\
    \ => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n        val hexKey31\
    \ = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x => x % 10)\n",
  "        val hex = num.toCharArray\n        val hexKey = new mutable.HashMap[Int,\
    \ Int]()\n        hex.foreach(x => {\n            hexKey.getOrElse(x, 0)\n   \
    \     })\n        hexKey.toSeq.filter(x => x._2 == 1).length", "        val hex\
    \ = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n        val hexKeyLength\
    \ = hexKey.length\n        val hexKeyArray = hexKey.toArray\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArrayLength\n  \
    \      val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength\n        val hexKeyArrayLength = hexKeyArrayLength\n   \
    \     val hexKeyArrayLength = hexKeyArrayLength\n        val hexKeyArrayLength\
    \ = hex", "        val hex = num.toCharArray.map(_.toInt)\n        val hexString\
    \ = hex.mkString(\"\")\n        val hexCount = hexString.length\n        val hexDigits\
    \ = hexString.length\n        val hexDigitCount = hexDigits/2\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount*hexDigitCount\n        val hexDigitCount\
    \ = hexDigitCount*hexDigitCount\n        val hexDigitCount = hexDigitCount*hexDigitCount\n\
    \        val hexDigitCount = hex", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val prime", "        val hex = num.map(_.toInt)\n        val primes =\
    \ hex.filter(x => x % 2 == 0 && x != 0)\n        val primesCount = primes.count(x\
    \ => x % 2 == 0 && x != 0)\n        primesCount + primes.count(x => x % 3 == 0\
    \ && x != 0)", "        val hex = num.map(x => x.toInt)\n        val primes =\
    \ hex.filter(x => x % 2 == 0).filter(x => x % 3 == 0).filter(x => x % 5 == 0).filter(x\
    \ => x % 7 == 0).filter(x => x % 11 == 0).filter(x => x % 13 == 0).filter(x =>\
    \ x % 17 == 0).filter(x => x % 19 == 0).filter(x => x % 23 == 0).filter(x => x\
    \ % 29 == 0).filter(x => x % 31 == 0).filter(x => x % 37 == 0).filter(x => x %\
    \ 41 == 0).filter(x => x % 43 == 0).filter(x => x % 47 == 0).filter(x => x % 53\
    \ == 0).filter(x => x % 59 == 0).filter(x => x % 61 == 0).filter(x => x % 67 ==\
    \ 0).filter(x => x % 71 == 0).filter(x => x % 73 == 0).filter(x => x % 79 == 0).filter(x\
    \ => x % 83 == 0).filter(x => x % 89 == 0).filter(x => x % 97 == 0).filter(x =>\
    \ x % 101 == 0).filter(x => x % 103 == 0).filter(x => x % 107 == 0).filter(x =>\
    \ x % 109 == 0).filter(x => x % 113 == 0).filter(x => x % 117 == 0).filter(x =>\
    \ x % 121 == 0).filter(x => x % 123 == 0).filter(x => x % 127 == 0).filter(x =>\
    \ x % 131 == 0).filter(x => x % 133 == 0).filter(x => x % 137 == 0).filter(x =>\
    \ x % 139 == 0).filter(x => x % 143 == 0).filter(x => x % 147 == 0).filter(x =>\
    \ x % 151 == 0).filter(x => x % 153 == 0).filter(x => x % 157 == 0).filter(x =>\
    \ x % 161 == 0).filter(x => x % 163 == 0).filter(x => x % 167 == 0).filter(x =>\
    \ x % 171 == 0).filter(x => x % 173 == 0).filter(x => x % 177 == 0).filter(x =>\
    \ x % 181 == 0).filter(x => x % 183 == 0).filter(x => x % 187 == 0).filter(x =>\
    \ x % 191 == 0).filter(x => x % 193 == 0).filter(x => x % 197 == 0).filter(x =>\
    \ x % 201 == 0).filter(x => x % 203 == 0).filter(x => x % 207 == 0).filter(x =>\
    \ x % 209 == 0).filter(x => x % 213 == 0).filter(x => x % 217 == 0).filter(x =>\
    \ x % 22", "        val hex = num.map(x => x.toInt)\n        val hexLength = hex.length\n\
    \        val hexKey = new mutable.HashMap[Int, Int]()\n        hex.foreach(x =>\
    \ {\n            val hexKey = hexKey + (x -> 1)\n        })\n        hexKey.foreach(x\
    \ => {\n            val hexKey = hexKey + (x -> hexKey.getOrElse(x, 0) * hexLength)\n\
    \        })\n        hexKey.values.sum", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val hexLen = hex.length\n        val hexKey = hex.map(x => (x % 16).asInstanceOf[Int]).toArray\n\
    \        val hexKeyLen = hexKey.length\n        val hexKeyPrime = hexKey.filter(x\
    \ => x % 2 == 0).length\n        val hexKeyPrimeLen = hexKeyPrime\n        val\
    \ hexKeyPrimePrime = hexKeyPrimePrime * hexKeyPrime\n        val hexKeyPrimePrimeLen\
    \ = hexKeyPrimePrime\n        val hexKeyPrimePrimePrimePrime = hexKeyPrimePrimePrimePrime\
    \ * hexKeyPrimePrimePrime\n        val hexKeyPrimePrimePrimePrimePrime = hexKeyPrimePrimePrimePrimePrime\
    \ * hexKeyPrimePrimePrimePrimePrime\n        val hexKeyPrimePrimePrimePrimePrimePrime\
    \ = hexKeyPrimePrimePrimePrimePrimePrimePrime * hexKeyPrimePrimePrimePrimePrimePrimePrime\n\
    \        val hexKeyPrimePrimePrimePrimePrimePrimePrime = hexKeyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ * hexKeyPrimePrimePrimePrimePrimePrimePrimePrime\n        val hexKeyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = hexKeyPrimePrimePrimePrimePrimePrimePrimePrimePrime * hexKeyPrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \        val hexKeyPrimePrimePrimePrimePrimePrimePrimePrimePrime = hexKeyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ * hexKeyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\n        val\
    \ hexKeyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = hexKeyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ * hexKeyPrimePrimePrimePrimePrimePrimePri", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => if (x == 'A') 1 else 0).sum\n        hexKey",
  "        val hex = num.toCharArray\n        val hexLength = hex.length\n       \
    \ val hexKey = new mutable.HashSet[Long]()\n        val hexKeyLength = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength2 = new mutable.HashSet[Long]()\n        val hexKeyLength3\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength4 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength5 = new mutable.HashSet[Long]()\n        val hexKeyLength6\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength7 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength8 = new mutable.HashSet[Long]()\n        val hexKeyLength9\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength10 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength11 = new mutable.HashSet[Long]()\n        val hexKeyLength12\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength13 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength14 = new mutable.HashSet[Long]()\n        val hexKeyLength15\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength16 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength17 = new mutable.HashSet[Long]()\n        val hexKeyLength18\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength19 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength20 = new mutable.HashSet[Long]()\n        val hexKeyLength21\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength22 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength23 = new mutable.HashSet[Long]()\n        val hexKeyLength24\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength25 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength26 = new mutable.HashSet[Long]()\n        val hexKeyLength27\
    \ = new mutable.HashSet[Long]()\n        val hexKeyLength28 = new mutable.HashSet[Long]()\n\
    \        val hexKeyLength29 = new mutable.HashSet[Long]()\n        val hexKeyLength30\
    \ = new mutable.HashSet[Long]()\n        val ", "        val hex = num.toCharArray\n\
    \        val hexLength = hex.length\n        val hexKey = new mutable.HashMap[Int,\
    \ Int]()\n        var count = 0\n        for(i <- 0 until hexLength) {\n     \
    \       val hexDigit = hex(i)\n            if(hexKey.contains(hexDigit)) {\n \
    \               count += 1\n            } else {\n                hexKey.put(hexDigit,\
    \ count)\n                count += 1\n            }\n        }\n        hexKey.getOrElse(hexLength,\
    \ 0l)", "        val hex = num.toCharArray\n        val hexKey = hex.filter(_\
    \ >= '0' && _ <='9').length\n        val hexDigit = hex.filter(_ >= '0' && _ <='9').toInt\n\
    \        val hexDigitCount = hexDigit.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hex", "        val hex =\
    \ num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n        val hexKey2\
    \ = hexKey.map(x => x % 10)\n        val hexKey3 = hexKey2.map(x => x % 10)\n\
    \        val hexKey4 = hexKey3.map(x => x % 10)\n        val hexKey5 = hexKey4.map(x\
    \ => x % 10)\n        val hexKey6 = hexKey5.map(x => x % 10)\n        val hexKey7\
    \ = hexKey6.map(x => x % 10)\n        val hexKey8 = hexKey7.map(x => x % 10)\n\
    \        val hexKey9 = hexKey8.map(x => x % 10)\n        val hexKey10 = hexKey9.map(x\
    \ => x % 10)\n        val hexKey11 = hexKey10.map(x => x % 10)\n        val hexKey12\
    \ = hexKey11.map(x => x % 10)\n        val hexKey13 = hexKey12.map(x => x % 10)\n\
    \        val hexKey14 = hexKey13.map(x => x % 10)\n        val hexKey15 = hexKey14.map(x\
    \ => x % 10)\n        val hexKey16 = hexKey15.map(x => x % 10)\n        val hexKey17\
    \ = hexKey16.map(x => x % 10)\n        val hexKey18 = hexKey17.map(x => x % 10)\n\
    \        val hexKey19 = hexKey18.map(x => x % 10)\n        val hexKey20 = hexKey19.map(x\
    \ => x % 10)\n        val hexKey21 = hexKey20.map(x => x % 10)\n        val hexKey22\
    \ = hexKey21.map(x => x % 10)\n        val hexKey23 = hexKey22.map(x => x % 10)\n\
    \        val hexKey24 = hexKey23.map(x => x % 10)\n        val hexKey25 = hexKey24.map(x\
    \ => x % 10)\n        val hexKey26 = hexKey25.map(x => x % 10)\n        val hexKey27\
    \ = hexKey26.map(x => x % 10)\n        val hexKey28 = hexKey27.map(x => x % 10)\n\
    \        val hexKey29 = hexKey28.map(x => x % 10)\n        val hexKey30 = hexKey29.map(x\
    \ => x % 10)\n        val hexKey31 = hexKey30.map(x => x % 10)\n        val hexKey32\
    \ = hexKey31.map(x => x % 10)\n        val hexKey33", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexString = hex.mkString(\"\")\n        val hexKey = hexString.toUpperCase.map(x\
    \ => (x to hexString.indexOf(x)).sum)\n        hexKey.toLong", "        val hex\
    \ = num.toCharArray.map(_.toString.toInt)\n        val hexKey = hex.foldLeft(0l){\
    \ (sum, digit) =>\n            val prime = sum + digit\n            if (prime\
    \ < 10) {\n                prime\n            } else if (prime < 100) {\n    \
    \            prime * 2\n            } else if (prime < 1000) {\n             \
    \   prime * 3\n            } else if (prime < 10000) {\n                prime\
    \ * 5\n            } else if (prime < 100000) {\n                prime * 7\n \
    \           } else if (prime < 1000000) {\n                prime * 11\n      \
    \      } else if (prime < 10000000) {\n                prime * 13\n          \
    \  } else {\n                prime * 17\n            }\n        }\n        hexKey",
  "        val hex = num.toCharArray\n        val hexLength = hex.length\n       \
    \ val hexKey = new mutable.HashMap[Int, Int]()\n        var hexKeyCount = 0\n\
    \        var hexKeyCount2 = 0\n        var hexKeyCount3 = 0\n        var hexKeyCount4\
    \ = 0\n        var hexKeyCount5 = 0\n        var hexKeyCount6 = 0\n        var\
    \ hexKeyCount7 = 0\n        var hexKeyCount8 = 0\n        var hexKeyCount9 = 0\n\
    \        var hexKeyCount10 = 0\n        var hexKeyCount11 = 0\n        var hexKeyCount12\
    \ = 0\n        var hexKeyCount13 = 0\n        var hexKeyCount14 = 0\n        var\
    \ hexKeyCount15 = 0\n        var hexKeyCount16 = 0\n        var hexKeyCount17\
    \ = 0\n        var hexKeyCount18 = 0\n        var hexKeyCount19 = 0\n        var\
    \ hexKeyCount20 = 0\n        var hexKeyCount21 = 0\n        var hexKeyCount22\
    \ = 0\n        var hexKeyCount23 = 0\n        var hexKeyCount24 = 0\n        var\
    \ hexKeyCount25 = 0\n        var hexKeyCount26 = 0\n        var hexKeyCount27\
    \ = 0\n        var hexKeyCount28 = 0\n        var hexKeyCount29 = 0\n        var\
    \ hexKeyCount30 = 0\n        var hexKeyCount31 = 0\n        var hexKeyCount32\
    \ = 0\n        var hexKeyCount33 = 0\n        var hexKeyCount34 = 0\n        var\
    \ hexKeyCount35 = 0\n        var hexKeyCount36 = 0\n        var hexKeyCount37\
    \ = 0\n        var hexKeyCount38 = 0\n        var hexKeyCount39 = 0\n        var\
    \ hexKeyCount40 = 0\n        var hexKeyCount41 = 0\n        var hexKeyCount42\
    \ = 0\n        var hexKeyCount43 = 0\n        var hexKeyCount44 = 0\n        var\
    \ hexKeyCount45 = 0\n        var hexKeyCount46 = 0\n        var hexKeyCount47\
    \ = 0\n        var hexKeyCount48 = 0\n        var hexKeyCount49 = 0\n        var\
    \ hexKeyCount50 = 0\n        var hexKeyCount51 = 0\n        var hexKeyCount52\
    \ = 0\n        var hexKeyCount53 = 0\n        var hexKeyCount54 = 0\n        var\
    \ hexKeyCount55 = 0\n        var hexKeyCount56 = 0\n        var hexKeyCount57\
    \ = 0\n        var hexKeyCount58 = 0\n        var hexKeyCount59 = 0\n        var\
    \ hexKeyCount60 = 0\n        var hexKeyCount61 = 0\n        var hexKeyCount62\
    \ = 0\n        var hexKeyCount63 = 0\n        var hexKeyCount64 = 0\n        var\
    \ hexKeyCount65 = 0\n        var hexKeyCount66 = 0\n        var hexKeyCount67\
    \ = 0\n        var hexKeyCount68 = 0\n        var hexKeyCount69 = 0", "      \
    \  val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n   \
    \     val hexKeyList = hexKey.toList\n        val hexKeyListLength = hexKeyList.size\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n",
  "        val nums = num.split(\"\\\\W+\")\n        val numsCount = nums.length\n\
    \        val hexDigits = nums.map(_.toInt)\n        val hexDigitsCount = hexDigits.length\n\
    \        val hexDigitsToCount = hexDigits.map(_.toInt)\n        val hexDigitsToCountCount\
    \ = hexDigitsToCount.length\n        val hexDigitsToCountCountCount = hexDigitsToCountCount.length\n\
    \        val hexDigitsToCountCountCountCount = hexDigitsToCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCount = hexDigitsToCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCount = hexDigitsToCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCount = hexDigitsToCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCount = hexDigitsToCountCountCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCount = hexDigitsToCountCountCountCountCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount.length\n\
    \        val hexDigitsToCountCountCountCountCountCount", "        val hex = num.toCharArray\n\
    \        val hexCount = hex.length\n        val hexDigits = hex.filter(_ >= '0'\
    \ && _ <='9').length\n        val hexPrimes = hex.filter(_ >= '0' && _ <='9' &&\
    \ _ != 'A' && _ != 'B' && _ != 'C' && _ != 'D' && _ != 'E' && _ != 'F').length\n\
    \        val hexPrime = hexPrimes.toDouble\n        val hexPrimeCount = hexPrime.toInt\n\
    \        val hexPrimeDigits = hexPrime.toCharArray\n        val hexPrimeDigitCount\
    \ = hexPrimeDigits.length\n        val hexPrimePrimes = hexPrimeDigits.filter(_\
    \ >= '0' && _ <='9').filter(_ != 'A' && _ != 'B' && _ != 'C' && _ != 'D' && _\
    \ != 'E' && _ != 'F').length\n        val hexPrimePrime = hexPrimePrimes.toDouble\n\
    \        val hexPrimePrimeCount = hexPrimePrime.toInt\n        val hexPrimePrimeDigits\
    \ = hexPrimePrime.toCharArray\n        val hexPrimePrimeDigitCount = hexPrimePrimeDigits.length\n\
    \        val hexPrimePrimePrimes = hexPrimePrimeDigits.filter(_ >= '0' && _ <='9').filter(_\
    \ != 'A' && _ != 'B' && _ != 'C' && _ != 'D' && _ != 'E' && _ != 'F').length\n\
    \        val hexPrimePrimePrime = hexPrimePrimePrimes.toDouble\n        val hexPrimePrimePrimeCount\
    \ = hexPrimePrimePrime.toInt\n        val hexPrimePrimePrimeDigits = hexPrimePrimePrime.toCharArray\n\
    \        val hexPrimePrimePrimeDigitCount = hexPrimePrimePrimeDigits.length\n\
    \        val hexPrimePrimePrimePrimes = hexPrimePrimePrimeDigits.filter(_ >= '0'\
    \ && _ <='9').filter(_ != 'A' && _ != 'B' && _ != 'C' && _ != 'D' && _ != 'E'\
    \ && _ != 'F').length\n        val hexPrimePrimePrimePrime = hexPrimePrimePrimePrimes.toDouble\n\
    \        val hexPrimePrimePrimePrimeCount = hexPrimePrimePrimePrime.toInt\n  \
    \      val hexPrimePrimePrimePrimeDigits = ", "        val hex = num.toCharArray\n\
    \        val hexCount = hex.length\n        val hexDigits = hex.map(x => x.toInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.toMap",
  "        val numList = num.split(\"\").toList\n        val numList2 = numList.map(_.toInt)\n\
    \        val numList3 = numList2.filter(_%2==0)\n        val numList4 = numList3.filter(_%2==0)\n\
    \        val numList5 = numList4.filter(_%2==0)\n        val numList6 = numList5.filter(_%2==0)\n\
    \        val numList7 = numList6.filter(_%2==0)\n        val numList8 = numList7.filter(_%2==0)\n\
    \        val numList9 = numList8.filter(_%2==0)\n        val numList10 = numList9.filter(_%2==0)\n\
    \        val numList11 = numList10.filter(_%2==0)\n        val numList12 = numList11.filter(_%2==0)\n\
    \        val numList13 = numList12.filter(_%2==0)\n        val numList14 = numList13.filter(_%2==0)\n\
    \        val numList15 = numList14.filter(_%2==0)\n        val numList16 = numList15.filter(_%2==0)\n\
    \        val numList17 = numList16.filter(_%2==0)\n        val numList18 = numList17.filter(_%2==0)\n\
    \        val numList19 = numList18.filter(_%2==0)\n        val numList20 = numList19.filter(_%2==0)\n\
    \        val numList21 = numList20.filter(_%2==0)\n        val numList22 = numList21.filter(_%2==0)\n\
    \        val numList23 = numList22.filter(_%2==0)\n        val numList24 = numList23.filter(_%2==0)\n\
    \        val numList25 = numList24.filter(_%2==0)\n        val numList26 = numList25.filter(_%2==0)\n\
    \        val numList27 = numList26.filter(_%2==0)\n        val numList28 = numList27.filter(_%2==0)\n\
    \        val numList29 = numList28.filter(_%2==0)\n        val numList30 = numList29.filter(_%2==0)\n\
    \        val numList31 = numList30.filter(_%2==0)\n        val numList32 = numList31.filter(_%2==0)\n\
    \        val numList33 = numList32.filter(_%2==0)\n        val ", "        val\
    \ hex = num.toCharArray\n        val hexCount = hex.length\n        val hexDigits\
    \ = hex.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n    \
    \    val hexDigitMap = hexDigits.groupBy(x => x)\n        val hexDigitMapCount\
    \ = hexDigitMap.length\n        val hexDigitMapValues = hexDigitMap.mapValues(_.length)\n\
    \        val hexDigitMapValuesCount = hexDigitMapValues.length\n        val hexDigitMapValuesSum\
    \ = hexDigitMapValues.sum\n        val hexDigitMapValuesSumCount = hexDigitMapValuesSum.length\n\
    \        val hexDigitMapValuesSumSum = hexDigitMapValuesSum.sum\n        val hexDigitMapValuesSumSumCount\
    \ = hexDigitMapValuesSumSum.length\n        val hexDigitMapValuesSumSumSum = hexDigitMapValuesSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumCount = hexDigitMapValuesSumSumSum.length\n\
    \        val hexDigitMapValuesSumSumSumSum = hexDigitMapValuesSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumCount = hexDigitMapValuesSumSumSumSum.length\n\
    \        val hexDigitMapValuesSumSumSumSumSum = hexDigitMapValuesSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSum.length\n\
    \        val hexDigitMapValuesSumSumSumSumSumSum = hexDigitMapValuesSumSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSumSum.length\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSum = hexDigitMapValuesSumSumSumSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSumSumSumSum.length\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSum = hexDigitMapValuesSumSumSumSumSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSumSumSumSum.length\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumSum = hexDigitMapValuesSumSumSumSumSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSumSumSumSumSum.length\n\
    \        val hexDigitMapValues", "        val numList = num.toList\n        var\
    \ count = 0\n        var prime = 0\n        var primeCount = 0\n        var primePrime\
    \ = 0\n        var primePrimeCount = 0\n        var primePrimePrime = 0\n    \
    \    var primePrimePrimeCount = 0\n        var primePrimePrimePrime = 0\n    \
    \    var primePrimePrimePrimeCount = 0\n        var primePrimePrimePrimePrime\
    \ = 0\n        var primePrimePrimePrimePrimeCount = 0\n        var primePrimePrimePrimePrimePrime\
    \ = 0\n        var primePrimePrimePrimePrimePrimeCount = 0\n        var primePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var primePrimePrimePrimePrimePrimePrimeCount = 0\n        var primePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var primePrimePrimePrimePrimePrimePrimePrimeCount = 0\n       \
    \ var primePrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var primePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n        var primePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n  \
    \      var primePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n     \
    \   var primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var\
    \ primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n        var\
    \ primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n        var primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n        var primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n        var primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePri",
  "        val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexDigits = hex.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitPrimes = hexDigits.filter(x => x % 2 == 0).map(x => x % 10)\n\
    \        val hexDigitPrimeCount = hexDigitPrimes.length\n        val hexDigitPrimePrimes\
    \ = hexDigitPrimes.filter(x => x % 2 == 0).map(x => x % 10)\n        val hexDigitPrimePrimeCount\
    \ = hexDigitPrimePrimes.length\n        val hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter(x\
    \ => x % 2 == 0).map(x => x % 10)\n        val hexDigitPrimePrimePrimeCount =\
    \ hexDigitPrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimes =\
    \ hexDigitPrimePrimePrimes.filter(x => x % 2 == 0).map(x => x % 10)\n        val\
    \ hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.length\n \
    \       val hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimes.filter(x\
    \ => x % 2 == 0).map(x => x % 10)\n        val hexDigitPrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimes.filter(x => x % 2 == 0).map(x => x % 10)\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter(x\
    \ => x % 2 == 0).map(x => x % 10)\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrime", "        val hex =\
    \ num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n        val hexKeyLength\
    \ = hexKey.length\n        val hexKeyArray = hexKey.toArray\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArray.length\n        val hexKeyArrayLength = hexKeyArray.length\n \
    \       val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hex", "        val nums = num.split(\"\\\\W+\")\n        val hexNums = nums.map(_.toInt)\n\
    \        val primes = hexNums.filter(_.isPrime)\n        primes.count(_ % 2 ==\
    \ 0).asInstanceOf[Long]", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        ", "        val hex = num.map(_.toChar).map(_.toInt)\n        val hexKeys\
    \ = mutable.Set[Long]()\n        hex.foreach(x => {\n            val y = hex.filter(_\
    \ != x)\n            val z = (x % y).toInt\n            if (z == 0) hexKeys +=\
    \ x\n        })\n        hexKeys.size", "        val hex = num.toCharArray\n \
    \       val hexKey = new mutable.HashMap[Int, Int]()\n        val hexKey2 = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKey3 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey4 = new mutable.HashMap[Int, Int]()\n        val hexKey5\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey6 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey7 = new mutable.HashMap[Int, Int]()\n        val hexKey8\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey9 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey10 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey11 = new mutable.HashMap[Int, Int]()\n        val hexKey12 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey13 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey14 = new mutable.HashMap[Int, Int]()\n        val hexKey15 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey16 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey17 = new mutable.HashMap[Int, Int]()\n        val hexKey18 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey19 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey20 = new mutable.HashMap[Int, Int]()\n        val hexKey21 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey22 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey23 = new mutable.HashMap[Int, Int]()\n        val hexKey24 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey25 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey26 = new mutable.HashMap[Int, Int]()\n        val hexKey27 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey28 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey29 = new mutable.HashMap[Int, Int]()\n        val hexKey30 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey31 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey32 = new ", "        val hex = num.toCharArray\n        val hexKey = hex.map(x\
    \ => x.toInt)\n        val hexKeyList = hexKey.toList\n        val hexKeyList2\
    \ = hexKeyList.map(x => x % 10)\n        val hexKeyList3 = hexKeyList2.filter(x\
    \ => x != 0)\n        val hexKeyList4 = hexKeyList3.map(x => x % 10)\n       \
    \ val hexKeyList5 = hexKeyList4.filter(x => x != 0)\n        val hexKeyList6 =\
    \ hexKeyList5.map(x => x % 10)\n        val hexKeyList7 = hexKeyList6.filter(x\
    \ => x != 0)\n        val hexKeyList8 = hexKeyList7.map(x => x % 10)\n       \
    \ val hexKeyList9 = hexKeyList8.filter(x => x != 0)\n        val hexKeyList10\
    \ = hexKeyList9.map(x => x % 10)\n        val hexKeyList11 = hexKeyList10.filter(x\
    \ => x != 0)\n        val hexKeyList12 = hexKeyList11.map(x => x % 10)\n     \
    \   val hexKeyList13 = hexKeyList12.filter(x => x != 0)\n        val hexKeyList14\
    \ = hexKeyList13.map(x => x % 10)\n        val hexKeyList15 = hexKeyList14.filter(x\
    \ => x != 0)\n        val hexKeyList16 = hexKeyList15.map(x => x % 10)\n     \
    \   val hexKeyList17 = hexKeyList16.filter(x => x != 0)\n        val hexKeyList18\
    \ = hexKeyList17.map(x => x % 10)\n        val hexKeyList19 = hexKeyList18.filter(x\
    \ => x != 0)\n        val hexKeyList20 = hexKeyList19.map(x => x % 10)\n     \
    \   val hexKeyList21 = hexKeyList20.filter(x => x != 0)\n        val hexKeyList22\
    \ = hexKeyList21.map(x => x % 10)\n        val hexKeyList23 = hexKeyList22.filter(x\
    \ => x != 0)\n        val hexKeyList24 = hexKeyList23.map(x => x % 10)\n     \
    \   val hexKeyList25 = hexKeyList24.filter(x => x != 0)\n        val hexKeyList26\
    \ = hexKeyList25.map(x => x % 10)\n        val hexKeyList27 = hexKeyList26.filter(x\
    \ => x != 0)\n        val hexKeyList28 = hexKeyList27.map(x => x % 10)\n     \
    \   val hexKeyList", "        val hex = num.toCharArray\n        val hexLength\
    \ = hex.length\n        val hexKey = hexLength.toLong\n        val hexKeyArray\
    \ = hexKey.toArray\n        val hexKeyArrayLength = hexKeyArray.length\n     \
    \   val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength",
  "        val hex = num.toCharArray.map(_.toString.toInt)\n        val hexKey = hex.map(x\
    \ => x % 10).filter(_ > 0).count\n        hexKey", "        val nums = num.split(\"\
    \\\\W+\")\n        val numsLen = nums.length\n        val numsLen2 = numsLen /\
    \ 2\n        val numsLen3 = numsLen / 3\n        val numsLen4 = numsLen / 4\n\
    \        val numsLen5 = numsLen / 5\n        val numsLen6 = numsLen / 6\n    \
    \    val numsLen7 = numsLen / 7\n        val numsLen8 = numsLen / 8\n        val\
    \ numsLen9 = numsLen / 9\n        val numsLen10 = numsLen / 10\n        val numsLen11\
    \ = numsLen / 11\n        val numsLen12 = numsLen / 12\n        val numsLen13\
    \ = numsLen / 13\n        val numsLen14 = numsLen / 14\n        val numsLen15\
    \ = numsLen / 15\n        val numsLen16 = numsLen / 16\n        val numsLen17\
    \ = numsLen / 17\n        val numsLen18 = numsLen / 18\n        val numsLen19\
    \ = numsLen / 19\n        val numsLen20 = numsLen / 20\n        val numsLen21\
    \ = numsLen / 21\n        val numsLen22 = numsLen / 22\n        val numsLen23\
    \ = numsLen / 23\n        val numsLen24 = numsLen / 24\n        val numsLen25\
    \ = numsLen / 25\n        val numsLen26 = numsLen / 26\n        val numsLen27\
    \ = numsLen / 27\n        val numsLen28 = numsLen / 28\n        val numsLen29\
    \ = numsLen / 29\n        val numsLen30 = numsLen / 30\n        val numsLen31\
    \ = numsLen / 31\n        val numsLen32 = numsLen / 32\n        val numsLen33\
    \ = numsLen / 33\n        val numsLen34 = numsLen / 34\n        val numsLen35\
    \ = numsLen / 35\n        val numsLen36 = numsLen / 36\n        val numsLen37\
    \ = numsLen / 37\n        val numsLen38 = numsLen / 38\n        val numsLen39\
    \ = numsLen / 39\n        val numsLen40 = nums", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKeyList = hexKey.toList\n\
    \        val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n", "        val hex =\
    \ num.toCharArray\n        val hexKey = new mutable.HashMap[Int, Int]()\n    \
    \    val hexKey2 = new mutable.HashMap[Int, Int]()\n        val hexKey3 = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKey4 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey5 = new mutable.HashMap[Int, Int]()\n        val hexKey6\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey7 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey8 = new mutable.HashMap[Int, Int]()\n        val hexKey9\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey10 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey11 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey12 = new mutable.HashMap[Int, Int]()\n        val hexKey13 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey14 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey15 = new mutable.HashMap[Int, Int]()\n        val hexKey16 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey17 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey18 = new mutable.HashMap[Int, Int]()\n        val hexKey19 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey20 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey21 = new mutable.HashMap[Int, Int]()\n        val hexKey22 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey23 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey24 = new mutable.HashMap[Int, Int]()\n        val hexKey25 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey26 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey27 = new mutable.HashMap[Int, Int]()\n        val hexKey28 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey29 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey30 = new mutable.HashMap[Int, Int]()\n        val hexKey31 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey32 = new ", "        val nums = num.split(\"\\\\W+\"\
    ).map(_.toInt)\n        val primes = nums.filter(x => x % 2 == 0 && x != 0)\n\
    \        val primesCount = primes.length\n        val primesSum = primes.sum\n\
    \        val primesSum2 = primesSum * primesSum\n        val primesSum3 = primesSum2\
    \ * primesSum\n        val primesSum4 = primesSum3 * primesSum\n        val primesSum5\
    \ = primesSum4 * primesSum\n        val primesSum6 = primesSum5 * primesSum\n\
    \        val primesSum7 = primesSum6 * primesSum\n        val primesSum8 = primesSum7\
    \ * primesSum\n        val primesSum9 = primesSum8 * primesSum\n        val primesSum10\
    \ = primesSum9 * primesSum\n        val primesSum11 = primesSum10 * primesSum\n\
    \        val primesSum12 = primesSum11 * primesSum\n        val primesSum13 =\
    \ primesSum12 * primesSum\n        val primesSum14 = primesSum13 * primesSum\n\
    \        val primesSum15 = primesSum14 * primesSum\n        val primesSum16 =\
    \ primesSum15 * primesSum\n        val primesSum17 = primesSum16 * primesSum\n\
    \        val primesSum18 = primesSum17 * primesSum\n        val primesSum19 =\
    \ primesSum18 * primesSum\n        val primesSum20 = primesSum19 * primesSum\n\
    \        val primesSum21 = primesSum20 * primesSum\n        val primesSum22 =\
    \ primesSum21 * primesSum\n        val primesSum23 = primesSum22 * primesSum\n\
    \        val primesSum24 = primesSum23 * primesSum\n        val primesSum25 =\
    \ primesSum24 * primesSum\n        val primesSum26 = primesSum25 * primesSum\n\
    \        val primesSum27 = primesSum26 * primesSum\n        val primesSum28 =\
    \ primesSum27 * primesSum\n        val primesSum29 = primesSum28 * primesSum\n\
    \        val primesSum30 = primesSum29 * primesSum\n        val primesSum31 =\
    \ primesSum30 * primes", "        val nums = num.split(\"\\\\D+\")\n        val\
    \ primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34", "        val nums = num.split(\"\\\\W+\")\n       \
    \ val numsLen = nums.length\n        val numsLen2 = numsLen * numsLen\n      \
    \  val numsLen3 = numsLen2 * numsLen\n        val numsLen4 = numsLen3 * numsLen\n\
    \        val numsLen5 = numsLen4 * numsLen\n        val numsLen6 = numsLen5 *\
    \ numsLen\n        val numsLen7 = numsLen6 * numsLen\n        val numsLen8 = numsLen7\
    \ * numsLen\n        val numsLen9 = numsLen8 * numsLen\n        val numsLen10\
    \ = numsLen9 * numsLen\n        val numsLen11 = numsLen10 * numsLen\n        val\
    \ numsLen12 = numsLen11 * numsLen\n        val numsLen13 = numsLen12 * numsLen\n\
    \        val numsLen14 = numsLen13 * numsLen\n        val numsLen15 = numsLen14\
    \ * numsLen\n        val numsLen16 = numsLen15 * numsLen\n        val numsLen17\
    \ = numsLen16 * numsLen\n        val numsLen18 = numsLen17 * numsLen\n       \
    \ val numsLen19 = numsLen18 * numsLen\n        val numsLen20 = numsLen19 * numsLen\n\
    \        val numsLen21 = numsLen20 * numsLen\n        val numsLen22 = numsLen21\
    \ * numsLen\n        val numsLen23 = numsLen22 * numsLen\n        val numsLen24\
    \ = numsLen23 * numsLen\n        val numsLen25 = numsLen24 * numsLen\n       \
    \ val numsLen26 = numsLen25 * numsLen\n        val numsLen27 = numsLen26 * numsLen\n\
    \        val numsLen28 = numsLen27 * numsLen\n        val numsLen29 = numsLen28\
    \ * numsLen\n        val numsLen30 = numsLen29 * numsLen\n        val numsLen31\
    \ = numsLen30 * numsLen\n        val numsLen32 = numsLen31 * numsLen\n       \
    \ val numsLen33 = numsLen32 * nums", "        val hex = num.toCharArray\n    \
    \    val hexKey = hex.map(x => x.toInt)\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKeyLength.toLong\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKey",
  "        val hex = num.toCharArray.map(_.toInt)\n        val hexLen = hex.length\n\
    \        val hexKey = hex.foldLeft(0)((sum, digit) => {\n            val hexDigit\
    \ = digit % 16\n            val hexDigitCount = hexDigit / 16\n            val\
    \ hexDigitPrime = hexDigit % 16\n            val hexDigitPrimeCount = hexDigitPrime\
    \ / 16\n            val hexDigitPrimePrime = hexDigitPrime % 16\n            val\
    \ hexDigitPrimePrimeCount = hexDigitPrimePrime / 16\n            val hexDigitPrimePrimePrime\
    \ = hexDigitPrimePrime % 16\n            val hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrime\
    \ / 16\n            val hexDigitPrimePrimePrimePrime = hexDigitPrimePrimePrime\
    \ % 16\n            val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrime\
    \ / 16\n            val hexDigitPrimePrimePrimePrimePrime = hexDigitPrimePrimePrimePrimePrime\
    \ % 16\n            val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrime\
    \ / 16\n            val hexDigitPrimePrimePrimePrimePrimePrime = hexDigitPrimePrimePrimePrimePrimePrime\
    \ % 16\n            val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrime\
    \ / 16\n            val hexDigitPrimePrimePrimePrimePrimePrimePrime = hexDigitPrimePrimePrimePrimePrimePrimePrime\
    \ % 16\n            val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrime\
    \ / 16\n            val hexDigitPrimePrimePrimePrimePrimePrimePrimePrime = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ % 16\n            val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrime / 16\n            val\
    \ hexDigit", "        val hex = num.toCharArray\n        val hexKey = hex.map(x\
    \ => x.toInt)\n        val hexKeyList = hexKey.toList\n        val hexKeyListLength\
    \ = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n    \
    \    val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength =\
    \ hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n      \
    \  val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n\
    \        val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength\
    \ = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n    \
    \    val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength =\
    \ hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n      \
    \  val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n\
    \        val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength\
    \ = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n    \
    \    val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength =\
    \ hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n      \
    \  val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n\
    \        val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength\
    \ = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n    \
    \    val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength =\
    \ hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n      \
    \  val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n\
    \        val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength\
    \ = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n    \
    \    val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength =\
    \ hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n      \
    \  val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n\
    \        val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength\
    \ = hexKeyList.length\n        val hexKeyListLength = hexKeyList.length\n    \
    \    val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength = ",
  "        val nums = num.split(\"\\\\W+\").map(_.toInt).toList\n        val primes\
    \ = nums.filter(num => num > 1).map(num => num * num).toSet\n        val hexDigits\
    \ = nums.filter(num => num % 2 == 0).map(num => num * 16).toSet\n        val hexKeys\
    \ = hexDigits.map(hexDigit => hexDigit + primes.count(hexDigit => hexDigit ==\
    \ hexDigit))\n        hexKeys.sum", "        val hex = num.toCharArray\n     \
    \   val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x =>\
    \ x % 10)\n        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4\
    \ = hexKey3.map(x => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n\
    \        val hexKey6 = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9\
    \ = hexKey8.map(x => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n\
    \        val hexKey11 = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14\
    \ = hexKey13.map(x => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n\
    \        val hexKey16 = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19\
    \ = hexKey18.map(x => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n\
    \        val hexKey21 = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24\
    \ = hexKey23.map(x => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n\
    \        val hexKey26 = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29\
    \ = hexKey28.map(x => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n\
    \        val hexKey31 = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x\
    \ => x % 10)\n        val hexKey33", "        val nums = num.split(\"\\\\W+\"\
    )\n        val hexs = nums.map(_.toInt)\n        val primes = hexs.filter(x =>\
    \ isPrime(x)).map(x => (x, hexs.count(_ == x)))\n        primes.map(x => (x._1,\
    \ x._2.toLong)).maxBy(_._2)._1", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexKey = hex.foldLeft(1l) {\n            (acc, elem) => acc * elem\
    \ % 10\n        }\n        hexKey", "        val hex = num.toCharArray\n     \
    \   val hexKey = new mutable.HashMap[Int, Int]()\n        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesSet = primes.toSet\n        val hexLength\
    \ = hex.length\n        val hexKeyLength = hexKey.size\n        val hexKeySet\
    \ = hexKey.toSet\n        val hexKeySetLength = hexKeySet.size\n        val hexKeySetLength\
    \ = hexKeySetLength\n        val hexKeySetLength2 = hexKeySetLength * hexKeyLength\n\
    \        val hexKeySetLength3 = hexKeySetLength2 * hexKeyLength\n        val hexKeySetLength4\
    \ = hexKeySetLength3 * hexKeyLength\n        val hexKeySetLength5 = hexKeySetLength4\
    \ * hexKeyLength\n        val hexKeySetLength6 = hexKeySetLength5 * hexKeyLength\n\
    \        val hexKeySetLength7 = hexKeySetLength6 * hexKeyLength\n        val hexKeySetLength8\
    \ = hexKeySetLength7 * hexKeyLength\n        val hexKeySetLength9 = hexKeySetLength8\
    \ * hexKeyLength\n        val hexKeySetLength10 = hexKeySetLength9 * hexKeyLength\n\
    \        val hexKeySetLength11 = hexKeySetLength10 * hexKeyLength\n        val\
    \ hexKeySetLength12 = hexKeySetLength11 * hexKeyLength\n        val hexKeySetLength13\
    \ = hexKeySetLength12 * hexKeyLength\n        val hexKeySetLength14 = hexKeySetLength13\
    \ * hexKeyLength\n        val hexKeySetLength15 = hexKeySetLength14 * hexKeyLength\n\
    \        val hexKeySetLength16 = hexKeySetLength15 * hexKeyLength\n        val\
    \ hexKeySetLength17 = hexKeySetLength16 * hexKeyLength\n        val hexKeySetLength18\
    \ = hexKeySetLength17 * hexKeyLength\n        val hexKeySetLength19 = hexKeySetLength18\
    \ * hexKeyLength\n        val hexKeySetLength20 = hexKeySetLength19 * hexKeyLength\n\
    \        val hexKeySetLength21 = hexKeySetLength20 * hexKeyLength\n        val\
    \ hexKeySetLength22 = hexKeySetLength21 * hexKeyLength\n        val hexKeySetLength23\
    \ = hexKeySetLength22 * hexKeyLength\n        val hexKeySetLength24 = hex", " \
    \       val hex = num.toCharArray\n        val hexLength = hex.length\n      \
    \  val hexKey = hexLength.toLong\n        val hexKeyList = hexKey.toList\n   \
    \     val hexKeyListLength = hexKeyList.length\n        val hexKeyListLength =\
    \ hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.to", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexLength = hex.length\n        val hexKey = hex.map(x => math.pow(16,\
    \ hexLength - x - 1))\n        val hexKeySum = hexKey.sum\n        val hexKeySumInt\
    \ = math.pow(16, hexLength - hexKeySum)\n        val hexKeySumIntInt = math.pow(16,\
    \ hexLength - hexKeySumInt)\n        val hexKeySumIntInt = math.pow(16, hexLength\
    \ - hexKeySumIntInt)\n        val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n\
    \        val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n   \
    \     val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n      \
    \  val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n        val\
    \ hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n        val hexKeySumIntInt\
    \ = math.pow(16, hexLength - hexKeySumIntInt)\n        val hexKeySumIntInt = math.pow(16,\
    \ hexLength - hexKeySumIntInt)\n        val hexKeySumIntInt = math.pow(16, hexLength\
    \ - hexKeySumIntInt)\n        val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n\
    \        val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n   \
    \     val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n      \
    \  val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n        val\
    \ hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n        val hexKeySumIntInt\
    \ = math.pow(16, hexLength - hexKeySumIntInt)\n        val hexKeySumIntInt = math.pow(16,\
    \ hexLength - hexKeySumIntInt)\n        val hexKeySumIntInt = math.pow(16, hexLength\
    \ - hexKeySumIntInt)\n        val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n\
    \        val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n   \
    \     val hexKeySumIntInt = math.pow(16, hexLength - hexKeySumIntInt)\n      \
    \  val hexKeySum", "        val hex = num.toCharArray\n        val hexKey = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKey2 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey3 = new mutable.HashMap[Int, Int]()\n        val hexKey4\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey5 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey6 = new mutable.HashMap[Int, Int]()\n        val hexKey7\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey8 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey9 = new mutable.HashMap[Int, Int]()\n        val hexKey10\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey11 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey12 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey13 = new mutable.HashMap[Int, Int]()\n        val hexKey14 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey15 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey16 = new mutable.HashMap[Int, Int]()\n        val hexKey17 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey18 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey19 = new mutable.HashMap[Int, Int]()\n        val hexKey20 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey21 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey22 = new mutable.HashMap[Int, Int]()\n        val hexKey23 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey24 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey25 = new mutable.HashMap[Int, Int]()\n        val hexKey26 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey27 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey28 = new mutable.HashMap[Int, Int]()\n        val hexKey29 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey30 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey31 = new mutable.HashMap[Int, Int]()\n        val hexKey32 = new ", " \
    \       val nums = num.split(\"\\\\D+\").map(_.toInt)\n        val primes = nums.filter(x\
    \ => x > 1).map(x => math.gcd(x, x))\n        val primesCount = primes.count(x\
    \ => x > 1)\n        val primesSum = primes.sum\n        val primesSum2 = primes.sum\
    \ * primes.sum\n        val primesSum3 = primes.sum * primes.sum * primes.sum\n\
    \        val primesSum4 = primes.sum * primes.sum * primes.sum * primes.sum\n\
    \        val primesSum5 = primes.sum * primes.sum * primes.sum * primes.sum *\
    \ primes.sum\n        val primesSum6 = primes.sum * primes.sum * primes.sum *\
    \ primes.sum * primes.sum * primes.sum\n        val primesSum7 = primes.sum *\
    \ primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\n\
    \        val primesSum8 = primes.sum * primes.sum * primes.sum * primes.sum *\
    \ primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\n        val\
    \ primesSum9 = primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\
    \ * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\n\
    \        val primesSum10 = primes.sum * primes.sum * primes.sum * primes.sum *\
    \ primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\
    \ * primes.sum * primes.sum * primes.sum * primes.sum\n        val primesSum11\
    \ = primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\
    \ * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\
    \ * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\
    \ * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\
    \ * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\
    \ * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum * primes.sum\
    \ * primes.sum * prime", "        val hex = num.map(_.toInt)\n        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet", "        val hex = num.toCharArray\n        val hexKey\
    \ = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x => x % 10)\n   \
    \     val hexKey3 = hexKey.map(x => x % 16)\n        val hexKey4 = hexKey.map(x\
    \ => x % 32)\n        val hexKey5 = hexKey.map(x => x % 64)\n        val hexKey6\
    \ = hexKey.map(x => x % 128)\n        val hexKey7 = hexKey.map(x => x % 256)\n\
    \        val hexKey8 = hexKey.map(x => x % 512)\n        val hexKey9 = hexKey.map(x\
    \ => x % 1024)\n        val hexKey10 = hexKey.map(x => x % 2048)\n        val\
    \ hexKey11 = hexKey.map(x => x % 4096)\n        val hexKey12 = hexKey.map(x =>\
    \ x % 8192)\n        val hexKey13 = hexKey.map(x => x % 16384)\n        val hexKey14\
    \ = hexKey.map(x => x % 32768)\n        val hexKey15 = hexKey.map(x => x % 65536)\n\
    \        val hexKey16 = hexKey.map(x => x % 131072)\n        val hexKey17 = hexKey.map(x\
    \ => x % 262144)\n        val hexKey18 = hexKey.map(x => x % 524288)\n       \
    \ val hexKey19 = hexKey.map(x => x % 1048576)\n        val hexKey20 = hexKey.map(x\
    \ => x % 2097152)\n        val hexKey21 = hexKey.map(x => x % 4194304)\n     \
    \   val hexKey22 = hexKey.map(x => x % 8388608)\n        val hexKey23 = hexKey.map(x\
    \ => x % 16777216)\n        val hexKey24 = hexKey.map(x => x % 33554432)\n   \
    \     val hexKey25 = hexKey.map(x => x % 67108864)\n        val hexKey26 = hexKey.map(x\
    \ => x % 134217728)\n        val hexKey27 = hexKey.map(x => x % 268435456)\n \
    \       val hexKey28 = hexKey.map(x => x % 536870912)\n        val hexKey29 =\
    \ hexKey.map(x => x % 1073741824)\n        val hexKey30 = hexKey.map(x => x %\
    \ 2147483648)\n        val hexKey31 = hexKey.map(x ", "        val hex = num.toCharArray\n\
    \        val hexLength = hex.length\n        val hexKey = hex.foldLeft(0l){ (sum,\
    \ digit) =>\n            val hexDigit = digit.toLong\n            val hexDigitCount\
    \ = hexDigit / 16\n            val hexDigitRemainder = hexDigit % 16\n       \
    \     val hexDigitSum = sum + hexDigitCount\n            val hexDigitRemainderSum\
    \ = hexDigitSum + hexDigitRemainder\n            val hexDigitSumHex = hexDigitSum.toHexString\n\
    \            val hexDigitRemainderSumHex = hexDigitRemainderSum.toHexString\n\
    \            val hexDigitSumHexDigit = hexDigitSumHex.charAt(0)\n            val\
    \ hexDigitRemainderSumHexDigit = hexDigitRemainderSumHex.charAt(0)\n         \
    \   val hexDigitSumHexDigitCount = hexDigitSumHexDigit / 16\n            val hexDigitSumHexDigitRemainder\
    \ = hexDigitSumHexDigit % 16\n            val hexDigitSumHexDigitRemainderSum\
    \ = hexDigitSumHexDigitRemainder + hexDigitSumHexDigitCount\n            val hexDigitSumHexDigitRemainderSumHex\
    \ = hexDigitSumHexDigitRemainderSum.toHexString\n            val hexDigitSumHexDigitRemainderSumHexDigit\
    \ = hexDigitSumHexDigitRemainderSumHex.charAt(0)\n            val hexDigitSumHexDigitRemainderSumHexDigitCount\
    \ = hexDigitSumHexDigitRemainderSumHexDigit / 16\n            val hexDigitSumHexDigitRemainderSumHexDigitRemainder\
    \ = hexDigitSumHexDigitRemainderSumHexDigit\n            val hexDigitSumHexDigitRemainderSumHexDigitRemainderSum\
    \ = hexDigitSumHexDigitRemainderSumHexDigitRemainder + hexDigitSumHexDigitRemainderSumHexDigitCount\n\
    \            val hexDigitSumHexDigitRemainderSumHexDigitRemainderSumHex = hexDigitSumHexDigitRemainderSumHexDigitRemainderSum.toHexString\n\
    \            val hexDigitSumHexDigitRemainderSumHexDigitRemainderSumHexDigit =\
    \ hexDigitSumHexDigitRemainderSumHexDigitRemainderSumHex.charAt(0)\n         \
    \   val hexDigitSumHexDigitRemainderSumHexDigitRemainderSumHexDigitCount = hexDigitSumHexDigitRemainderSumHexDigitRemainderSumHexDigit\n\
    \            val hexDigitSumHexDigitRemainderSumHexDigitRemainderSumHexDigitRemainder\
    \ = hexDigitSumHexDigitRemainderSumHexDigitRemainderSumHexDigit\n            val\
    \ hexDigit", "        val nums = num.split(\"\\\\\").toList\n        val hex =\
    \ nums.map(_.toInt)\n        val hexDigits = hex.map(x => x % 16).distinct\n \
    \       val hexDigitCount = hexDigits.size\n        val hexDigitPrimes = hexDigits.filter(x\
    \ => x % 2 == 0).size\n        val hexDigitPrimeCount = hexDigitPrimes.size\n\
    \        val hexDigitPrimePrimes = hexDigitPrimes.filter(x => x % 3 == 0).size\n\
    \        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.size\n        val hexDigitPrimePrimePrimes\
    \ = hexDigitPrimePrimes.filter(x => x % 5 == 0).size\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.size\n        val hexDigitPrimePrimePrimePrimes =\
    \ hexDigitPrimePrimePrimes.filter(x => x % 7 == 0).size\n        val hexDigitPrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimes.size\n        val hexDigitPrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimes.filter(x => x % 11 == 0).size\n        val hexDigitPrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimes.size\n        val hexDigitPrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimes.filter(x => x % 13 == 0).size\n       \
    \ val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter(x\
    \ => x % 17 == 0).size\n        val hexDigitPrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.filter(x => x % 19 == 0).size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPri",
  "        val hex = num.toCharArray.map(_.toString.toInt)\n        val hexArray =\
    \ hex.toArray\n        val hexArrayLength = hexArray.length\n        val hexArrayLength\
    \ = hexArray.length\n        val hexArrayLength = hexArray.length\n        val\
    \ hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        ", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => if (x == 'A') 1 else 0).sum\n        hexKey",
  "        val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n\
    \        val hexKey2 = hexKey.map(x => x % 10)\n        val hexKey3 = hexKey2.map(x\
    \ => x % 10)\n        val hexKey4 = hexKey3.map(x => x % 10)\n        val hexKey5\
    \ = hexKey4.map(x => x % 10)\n        val hexKey6 = hexKey5.map(x => x % 10)\n\
    \        val hexKey7 = hexKey6.map(x => x % 10)\n        val hexKey8 = hexKey7.map(x\
    \ => x % 10)\n        val hexKey9 = hexKey8.map(x => x % 10)\n        val hexKey10\
    \ = hexKey9.map(x => x % 10)\n        val hexKey11 = hexKey10.map(x => x % 10)\n\
    \        val hexKey12 = hexKey11.map(x => x % 10)\n        val hexKey13 = hexKey12.map(x\
    \ => x % 10)\n        val hexKey14 = hexKey13.map(x => x % 10)\n        val hexKey15\
    \ = hexKey14.map(x => x % 10)\n        val hexKey16 = hexKey15.map(x => x % 10)\n\
    \        val hexKey17 = hexKey16.map(x => x % 10)\n        val hexKey18 = hexKey17.map(x\
    \ => x % 10)\n        val hexKey19 = hexKey18.map(x => x % 10)\n        val hexKey20\
    \ = hexKey19.map(x => x % 10)\n        val hexKey21 = hexKey20.map(x => x % 10)\n\
    \        val hexKey22 = hexKey21.map(x => x % 10)\n        val hexKey23 = hexKey22.map(x\
    \ => x % 10)\n        val hexKey24 = hexKey23.map(x => x % 10)\n        val hexKey25\
    \ = hexKey24.map(x => x % 10)\n        val hexKey26 = hexKey25.map(x => x % 10)\n\
    \        val hexKey27 = hexKey26.map(x => x % 10)\n        val hexKey28 = hexKey27.map(x\
    \ => x % 10)\n        val hexKey29 = hexKey28.map(x => x % 10)\n        val hexKey30\
    \ = hexKey29.map(x => x % 10)\n        val hexKey31 = hexKey30.map(x => x % 10)\n\
    \        val hexKey32 = hexKey31.map(x => x % 10)\n        val hexKey33", "  \
    \      val nums = num.split(\"\\\\D+\").map(_.toInt)\n        val primes = nums.filter(x\
    \ => isPrime(x))\n        primes.length", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x\
    \ => x % 10)\n        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4\
    \ = hexKey3.map(x => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n\
    \        val hexKey6 = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9\
    \ = hexKey8.map(x => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n\
    \        val hexKey11 = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14\
    \ = hexKey13.map(x => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n\
    \        val hexKey16 = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19\
    \ = hexKey18.map(x => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n\
    \        val hexKey21 = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24\
    \ = hexKey23.map(x => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n\
    \        val hexKey26 = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29\
    \ = hexKey28.map(x => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n\
    \        val hexKey31 = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x\
    \ => x % 10)\n        val hexKey33", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexKey = new mutable.HashSet[Int]()\n        hex.foreach(x => {\n\
    \            val hexDigit = hex(x).asInstanceOf[Int]\n            hexKey.add(hexDigit)\n\
    \        })\n        hexKey.size", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexKey = hex.map(x => x % 16).filter(_ > 0).count(_ == 2)\n     \
    \   hexKey", "        val hex = num.toCharArray\n        val hexLength = hex.length\n\
    \        val hexKey = hexLength.toLong\n        val hexKeyArray = hexKey.toArray\n\
    \        val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength", "        val nums = num.split(\"\
    \\\\D+\").map(_.toInt)\n        val primes = nums.filter(x => x % 2 == 0).filter(x\
    \ => x % 3 == 0).filter(x => x % 5 == 0).filter(x => x % 7 == 0).filter(x => x\
    \ % 11 == 0).filter(x => x % 13 == 0).filter(x => x % 17 == 0).filter(x => x %\
    \ 19 == 0).filter(x => x % 23 == 0).filter(x => x % 29 == 0).filter(x => x % 31\
    \ == 0).filter(x => x % 37 == 0).filter(x => x % 41 == 0).filter(x => x % 43 ==\
    \ 0).filter(x => x % 47 == 0).filter(x => x % 53 == 0).filter(x => x % 59 == 0).filter(x\
    \ => x % 61 == 0).filter(x => x % 67 == 0).filter(x => x % 71 == 0).filter(x =>\
    \ x % 73 == 0).filter(x => x % 79 == 0).filter(x => x % 83 == 0).filter(x => x\
    \ % 89 == 0).filter(x => x % 97 == 0).filter(x => x % 101 == 0).filter(x => x\
    \ % 107 == 0).filter(x => x % 113 == 0).filter(x => x % 119 == 0).filter(x =>\
    \ x % 127 == 0).filter(x => x % 131 == 0).filter(x => x % 137 == 0).filter(x =>\
    \ x % 143 == 0).filter(x => x % 149 == 0).filter(x => x % 153 == 0).filter(x =>\
    \ x % 157 == 0).filter(x => x % 163 == 0).filter(x => x % 169 == 0).filter(x =>\
    \ x % 173 == 0).filter(x => x % 177 == 0).filter(x => x % 183 == 0).filter(x =>\
    \ x % 189 == 0).filter(x => x % 193 == 0).filter(x => x % 197 == 0).filter(x =>\
    \ x % 203 == 0).filter(x => x % 209 == 0).filter(x => x % 213 == 0).filter(x =>\
    \ x % 217 == 0).filter(x => x % 223 == 0).filter(x => x % 227 == 0).filter(x =>\
    \ x % 233 == 0).filter(x => x % 239 == 0).filter(x => x % 243 == 0).filter(x =>\
    \ x % 247 == 0).filter(x => x % 251 == 0).filter(x => x % 257 == 0).filter(x =>\
    \ x % 263 == 0).filter(x => x % 269 == 0).filter(x => x % 273 == 0).filter(x =>\
    \ x % 277 == 0).filter(x => x % 283 == 0).filter(x => ", "        val nums = num.toCharArray.map(_.toInt)\n\
    \        val numsLength = nums.length\n        val numsLength = numsLength.toLong\n\
    \        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesLength\
    \ = primes.length\n        val primesLength = primesLength.toLong\n        val\
    \ primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        val primesLength = primesLength.toLong\n        val primesLength = primesLength.toLong\n\
    \        ", "        val hex = num.toCharArray\n        val hexLen = hex.length\n\
    \        val hexKey = new mutable.HashMap[Int, Int]()\n        val hexKeyLen =\
    \ hexKey.length\n        var i = 0\n        while (i < hexLen) {\n           \
    \ val hexDigit = hex(i)\n            val hexKeyDigit = hexKey.getOrElse(hexDigit,\
    \ 0)\n            hexKey.put(hexDigit, hexKeyDigit + 1)\n            i += 1\n\
    \        }\n        val hexKeyLen = hexKey.length\n        var j = 0\n       \
    \ while (j < hexKeyLen) {\n            val hexKeyDigit = hexKey.get(j)\n     \
    \       if (hexKeyDigit == 2) {\n                hexKey.remove(j)\n          \
    \      hexKeyLen -= 1\n            }\n            j += 1\n        }\n        hexKey.toSeq.sum",
  "        val hex = num.toCharArray\n        val hexCount = hex.count\n        val\
    \ hexDigits = hexCount / 2\n        val hexDigitPrimes = hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits\
    \ * hexDigits * hexDigits * hexDigits * hexDigits * hexDigits * hexDig", "   \
    \     val hex = num.toCharArray\n        val hexLength = hex.length\n        val\
    \ hexKey = hexLength.toLong\n        val hexKeyArray = hexKey.toArray\n      \
    \  val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArrayLength =\
    \ hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength.toLong\n        val hexKeyArrayLength\
    \ = hexKeyArrayLength.toLong\n        val hexKeyArrayLength = hexKeyArrayLength.toLong\n\
    \        val hexKeyArrayLength = hexKeyArrayLength", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.filter(_ >= '0' && _ <='9').length\n        val hexKeyPrime\
    \ = hex.filter(_ >= '0' && _ <='9' && _ != 'A' && _ != 'B' && _ != 'C' && _ !=\
    \ 'D' && _ != 'E' && _ != 'F').length\n        hexKey + (hexKeyPrime * 2)", " \
    \       val hex = num.toCharArray.map(_.toInt)\n        val hexKey = hex.map(x\
    \ => math.pow(16, x))\n        val hexKeySum = hexKey.sum\n        val hexKeySumInt\
    \ = hexKeySum.toInt\n        val hexKeySumIntInt = hexKeySumInt.toInt\n      \
    \  val hexKeySumIntIntInt = hexKeySumIntInt.toInt\n        val hexKeySumIntIntIntInt\
    \ = hexKeySumIntIntInt.toInt\n        val hexKeySumIntIntIntIntInt = hexKeySumIntIntIntInt.toInt\n\
    \        val hexKeySumIntIntIntIntIntInt = hexKeySumIntIntIntIntInt.toInt\n  \
    \      val hexKeySumIntIntIntIntIntIntInt = hexKeySumIntIntIntIntIntInt.toInt\n\
    \        val hexKeySumIntIntIntIntIntIntIntInt = hexKeySumIntIntIntIntIntIntIntInt.toInt\n\
    \        val hexKeySumIntIntIntIntIntIntIntIntIntInt = hexKeySumIntIntIntIntIntIntIntIntIntInt.toInt\n\
    \        val hexKeySumIntIntIntIntIntIntIntIntIntIntIntInt = hexKeySumIntIntIntIntIntIntIntIntIntIntIntInt.toInt\n\
    \        val hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntInt = hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntInt.toInt\n\
    \        val hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt = hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntInt.toInt\n\
    \        val hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt = hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt.toInt\n\
    \        val hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt =\
    \ hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt.toInt\n       \
    \ val hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt =\
    \ hexKeySumIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt.toInt\n    \
    \    val hexKeySumIntIntIntIntInt", "        val hex = num.toCharArray\n     \
    \   val hexCount = hex.length\n        val hexDigits = hexCount / 2\n        val\
    \ hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap2 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap3 = mutable.HashMap[Int, Int]()\n        val hexDigitMap4 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Int, Int]()\n        val hexDigitMap7 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Int, Int]()\n        val hexDigitMap10 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Int, Int]()\n        val hexDigitMap13 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Int, Int]()\n        val hexDigitMap16 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Int, Int]()\n        val hexDigitMap19 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Int, Int]()\n        val hexDigitMap22 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Int, Int]()\n        val hexDigitMap25 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Int, Int]()\n        val hexDigitMap28 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Int, Int", "        val\
    \ hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n        val\
    \ hexKeyList = hexKey.toList\n        val hexKeyListLength = hexKeyList.size\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n",
  "        val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexKey = new mutable.HashMap[Int, Int]()\n        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.length\n        val primesMap\
    \ = new mutable.HashMap[Int, Int]()\n        val primesMapCount = primesMap.length\n\
    \        val primesMapKey = new mutable.HashMap[Int, Int]()\n        val primesMapKeyCount\
    \ = primesMapKey.length\n        val primesMapValue = new mutable.HashMap[Int,\
    \ Int]()\n        val primesMapValueCount = primesMapValue.length\n        val\
    \ primesMapValueKey = new mutable.HashMap[Int, Int]()\n        val primesMapValueKeyCount\
    \ = primesMapValueKey.length\n        val primesMapValueValue = new mutable.HashMap[Int,\
    \ Int]()\n        val primesMapValueValueCount = primesMapValueValue.length\n\
    \        val primesMapValueValueKey = new mutable.HashMap[Int, Int]()\n      \
    \  val primesMapValueValueKeyCount = primesMapValueValueKey.length\n        val\
    \ primesMapValueValueValue = new mutable.HashMap[Int, Int]()\n        val primesMapValueValueValueCount\
    \ = primesMapValueValueValue.length\n        val primesMapValueValueValueKey =\
    \ new mutable.HashMap[Int, Int]()\n        val primesMapValueValueValueKeyCount\
    \ = primesMapValueValueValueKey.length\n        val primesMapValueValueValueValue\
    \ = new mutable.HashMap[Int, Int]()\n        val primesMapValueValueValueValueCount\
    \ = primesMapValueValueValueValue.length\n        val primesMapValueValueValueValueKey\
    \ = new mutable.HashMap[Int, Int]()\n        val primesMapValueValueValueValueKeyCount\
    \ = primesMapValueValueValueValueKey.length\n        val primesMapValueValueValueValueValue\
    \ = new mutable.HashMap[Int, Int]()\n        val primesMapValueValueValueValueCount\
    \ = primesMapValueValueValueValueValue.length\n        val primesMapValueValueValueValueKey\
    \ = new mutable.HashMap[Int, Int]()\n        val primesMapValueValueValueValueKeyCount\
    \ = primesMapValueValueValueValueKey.length\n        val primes", "        val\
    \ nums = num.toCharArray.map(_.toInt)\n        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val prime", "        val\
    \ hex = num.map(_.toInt)\n        val hexKey = hex.map(x => (x % 16).asInstanceOf[Int])\n\
    \        val hexKeyMap = hexKey.toMap\n        val hexKeyMap2 = hexKeyMap.filter(_._2\
    \ % 2 == 0)\n        val hexKeyMap3 = hexKeyMap2.filter(_._2 % 3 == 0)\n     \
    \   val hexKeyMap4 = hexKeyMap3.filter(_._2 % 5 == 0)\n        val hexKeyMap5\
    \ = hexKeyMap4.filter(_._2 % 7 == 0)\n        val hexKeyMap6 = hexKeyMap5.filter(_._2\
    \ % 11 == 0)\n        val hexKeyMap7 = hexKeyMap6.filter(_._2 % 13 == 0)\n   \
    \     val hexKeyMap8 = hexKeyMap7.filter(_._2 % 17 == 0)\n        val hexKeyMap9\
    \ = hexKeyMap8.filter(_._2 % 19 == 0)\n        val hexKeyMap10 = hexKeyMap9.filter(_._2\
    \ % 23 == 0)\n        val hexKeyMap11 = hexKeyMap10.filter(_._2 % 29 == 0)\n \
    \       val hexKeyMap12 = hexKeyMap11.filter(_._2 % 31 == 0)\n        val hexKeyMap13\
    \ = hexKeyMap12.filter(_._2 % 37 == 0)\n        val hexKeyMap14 = hexKeyMap13.filter(_._2\
    \ % 41 == 0)\n        val hexKeyMap15 = hexKeyMap14.filter(_._2 % 43 == 0)\n \
    \       val hexKeyMap16 = hexKeyMap15.filter(_._2 % 47 == 0)\n        val hexKeyMap17\
    \ = hexKeyMap16.filter(_._2 % 51 == 0)\n        val hexKeyMap18 = hexKeyMap17.filter(_._2\
    \ % 55 == 0)\n        val hexKeyMap19 = hexKeyMap18.filter(_._2 % 59 == 0)\n \
    \       val hexKeyMap20 = hexKeyMap19.filter(_._2 % 63 == 0)\n        val hexKeyMap21\
    \ = hexKeyMap20.filter(_._2 % 67 == 0)\n        val hexKeyMap22 = hexKeyMap21.filter(_._2\
    \ % 71 == 0)\n        val hexKeyMap23 = hexKeyMap22.filter(_._2 % 75 == 0)\n \
    \       val hexKeyMap24 = hexKeyMap23.filter(_._2 % 79 == 0)\n        val hexKeyMap25\
    \ = hexKeyMap24.filter(_._2 % 83 == 0)\n        val hexKey", "        val hex\
    \ = num.toCharArray\n        val hexCount = hex.length\n        val hexMap = mutable.Map[Int,\
    \ Int]()\n        val hexMap2 = mutable.Map[Int, Int]()\n        val hexMap3 =\
    \ mutable.Map[Int, Int]()\n        val hexMap4 = mutable.Map[Int, Int]()\n   \
    \     val hexMap5 = mutable.Map[Int, Int]()\n        val hexMap6 = mutable.Map[Int,\
    \ Int]()\n        val hexMap7 = mutable.Map[Int, Int]()\n        val hexMap8 =\
    \ mutable.Map[Int, Int]()\n        val hexMap9 = mutable.Map[Int, Int]()\n   \
    \     val hexMap10 = mutable.Map[Int, Int]()\n        val hexMap11 = mutable.Map[Int,\
    \ Int]()\n        val hexMap12 = mutable.Map[Int, Int]()\n        val hexMap13\
    \ = mutable.Map[Int, Int]()\n        val hexMap14 = mutable.Map[Int, Int]()\n\
    \        val hexMap15 = mutable.Map[Int, Int]()\n        val hexMap16 = mutable.Map[Int,\
    \ Int]()\n        val hexMap17 = mutable.Map[Int, Int]()\n        val hexMap18\
    \ = mutable.Map[Int, Int]()\n        val hexMap19 = mutable.Map[Int, Int]()\n\
    \        val hexMap20 = mutable.Map[Int, Int]()\n        val hexMap21 = mutable.Map[Int,\
    \ Int]()\n        val hexMap22 = mutable.Map[Int, Int]()\n        val hexMap23\
    \ = mutable.Map[Int, Int]()\n        val hexMap24 = mutable.Map[Int, Int]()\n\
    \        val hexMap25 = mutable.Map[Int, Int]()\n        val hexMap26 = mutable.Map[Int,\
    \ Int]()\n        val hexMap27 = mutable.Map[Int, Int]()\n        val hexMap28\
    \ = mutable.Map[Int, Int]()\n        val hexMap29 = mutable.Map[Int, Int]()\n\
    \        val hexMap30 = mutable.Map[Int, Int]()\n        val hexMap31 = mutable.Map[Int,\
    \ Int]()\n        val hexMap32 = mutable.Map[Int, Int]()\n        val hexMap33\
    \ = mutable.Map[Int, Int]()\n        val hexMap34 = mutable.Map[Int, Int]()",
  "        val hex = num.toCharArray.map(_.toInt)\n        val hexKey = new mutable.HashMap[Int,\
    \ Int]()\n        hex.foreach(x => {\n            hexKey.getOrElse(x, 0)\n   \
    \     })\n        hexKey.size", "        val hex = num.map(_.toInt)\n        val\
    \ hexKey = hex.map(x => (x % 16).toLong)\n        val hexKeyCount = hexKey.count(x\
    \ => x > 0)\n        val hexKeySum = hexKey.sum\n        val hexKeySum2 = hexKeySum\
    \ * hexKeySum\n        val hexKeySum3 = hexKeySum2 * hexKeySum\n        val hexKeySum4\
    \ = hexKeySum3 * hexKeySum\n        val hexKeySum5 = hexKeySum4 * hexKeySum\n\
    \        val hexKeySum6 = hexKeySum5 * hexKeySum\n        val hexKeySum7 = hexKeySum6\
    \ * hexKeySum\n        val hexKeySum8 = hexKeySum7 * hexKeySum\n        val hexKeySum9\
    \ = hexKeySum8 * hexKeySum\n        val hexKeySum10 = hexKeySum9 * hexKeySum\n\
    \        val hexKeySum11 = hexKeySum10 * hexKeySum\n        val hexKeySum12 =\
    \ hexKeySum11 * hexKeySum\n        val hexKeySum13 = hexKeySum12 * hexKeySum\n\
    \        val hexKeySum14 = hexKeySum13 * hexKeySum\n        val hexKeySum15 =\
    \ hexKeySum14 * hexKeySum\n        val hexKeySum16 = hexKeySum15 * hexKeySum\n\
    \        val hexKeySum17 = hexKeySum16 * hexKeySum\n        val hexKeySum18 =\
    \ hexKeySum17 * hexKeySum\n        val hexKeySum19 = hexKeySum18 * hexKeySum\n\
    \        val hexKeySum20 = hexKeySum19 * hexKeySum\n        val hexKeySum21 =\
    \ hexKeySum20 * hexKeySum\n        val hexKeySum22 = hexKeySum21 * hexKeySum\n\
    \        val hexKeySum23 = hexKeySum22 * hexKeySum\n        val hexKeySum24 =\
    \ hexKeySum23 * hexKeySum\n        val hexKeySum25 = hexKeySum24 * hexKeySum\n\
    \        val hexKeySum26 = hexKeySum25 * hexKeySum\n        val hexKeySum27 =\
    \ hexKeySum26 * hexKeySum\n        val hexKeySum28 = hexKeySum27 * hexKeySum\n\
    \        val hexKeySum29 = hexKeySum28 * hexKeySum\n        val hexKeySum30 =\
    \ hexKeySum29 * hexKeySum\n        val hexKeySum31 = hexKeySum30 * hexKeySum",
  "        val nums = num.split(\"\")\n        val numsCount = nums.length\n     \
    \   val primes = mutable.Set[Long]()\n        val primesCount = primes.length\n\
    \        val primesSum = primes.sum\n        val primesSumCount = primesSum.length\n\
    \        val primesSumCount2 = primesSumCount/2\n        val primesSumCount3 =\
    \ primesSumCount*primesSumCount2\n        val primesSumCount4 = primesSumCount3*primesSumCount\n\
    \        val primesSumCount5 = primesSumCount4*primesSumCount\n        val primesSumCount6\
    \ = primesSumCount5*primesSumCount\n        val primesSumCount7 = primesSumCount6*primesSumCount\n\
    \        val primesSumCount8 = primesSumCount7*primesSumCount\n        val primesSumCount9\
    \ = primesSumCount8*primesSumCount\n        val primesSumCount10 = primesSumCount9*primesSumCount\n\
    \        val primesSumCount11 = primesSumCount10*primesSumCount\n        val primesSumCount12\
    \ = primesSumCount11*primesSumCount\n        val primesSumCount13 = primesSumCount12*primesSumCount\n\
    \        val primesSumCount14 = primesSumCount13*primesSumCount\n        val primesSumCount15\
    \ = primesSumCount14*primesSumCount\n        val primesSumCount16 = primesSumCount15*primesSumCount\n\
    \        val primesSumCount17 = primesSumCount16*primesSumCount\n        val primesSumCount18\
    \ = primesSumCount17*primesSumCount\n        val primesSumCount19 = primesSumCount18*primesSumCount\n\
    \        val primesSumCount20 = primesSumCount19*primesSumCount\n        val primesSumCount21\
    \ = primesSumCount20*primesSumCount\n        val primesSumCount22 = primesSumCount21*primesSumCount\n\
    \        val primesSumCount23 = primesSumCount22*primesSumCount\n        val primesSumCount24\
    \ = primesSumCount23*primesSumCount\n        val primesSumCount25 = primesSumCount24*primesSumCount\n\
    \        val primesSumCount26 = primesSumCount25*primesSumCount", "        val\
    \ hex = num.map(x => x.toInt)\n        val primes = mutable.Set[Long]()\n    \
    \    val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val prime", "        val\
    \ hex = num.toCharArray\n        val hexCount = hex.length\n        val hexDigits\
    \ = hex.filter(_ >= '0' && _ <='9')\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitPrimes = hexDigits.filter(_ % 2 == 0)\n        val hexDigitPrimeCount\
    \ = hexDigitPrimes.length\n        val hexPrimes = hexDigitPrimes.filter(_ > 1)\n\
    \        val hexPrimeCount = hexPrimes.length\n        val hexPrimePrimes = hexPrimes.filter(_\
    \ % 3 == 0)\n        val hexPrimePrimeCount = hexPrimePrimes.length\n        val\
    \ hexPrimePrimePrimes = hexPrimePrimes.filter(_ > 1)\n        val hexPrimePrimePrimeCount\
    \ = hexPrimePrimePrimes.length\n        val hexPrimePrimePrimePrimes = hexPrimePrimePrimes.filter(_\
    \ % 5 == 0)\n        val hexPrimePrimePrimePrimeCount = hexPrimePrimePrimePrimes.length\n\
    \        val hexPrimePrimePrimePrimePrimes = hexPrimePrimePrimePrimePrimes.filter(_\
    \ > 1)\n        val hexPrimePrimePrimePrimePrimeCount = hexPrimePrimePrimePrimePrimes.length\n\
    \        val hexPrimePrimePrimePrimePrimePrimes = hexPrimePrimePrimePrimePrimePrimes.filter(_\
    \ % 7 == 0)\n        val hexPrimePrimePrimePrimePrimePrimeCount = hexPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexPrimePrimePrimePrimePrimePrimePrimes = hexPrimePrimePrimePrimePrimePrimePrimePrimes.filter(_\
    \ > 1)\n        val hexPrimePrimePrimePrimePrimePrimePrimeCount = hexPrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexPrimePrimePrimePrimePrimePrimePrimePrimes = hexPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter(_\
    \ % 11 == 0)\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexPrimePrimePrimePrimePri", "        val hex = num.toCharArray\n        val\
    \ hexLength = hex.length\n        val hexKey = hex.map(x => x.toInt)\n       \
    \ val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toInt\n",
  "        val nums = num.split(\"\\\\\").toList\n        val hex = nums.map(_.toInt)\n\
    \        val primes = hex.filter(x => x % 2 == 0 && x != 0)\n        val primesCount\
    \ = primes.count\n        val hexCount = hex.count\n        val hexKey = (hexCount\
    \ / primesCount).toLong\n        hexKey", "        val hex = num.toCharArray\n\
    \        val hexLength = hex.length\n        val hexKey = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyMap = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKeyMap2 = new mutable.HashMap[Int, Int]()\n        val hexKeyMap3 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyMap4 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKeyMap5 = new mutable.HashMap[Int, Int]()\n        val hexKeyMap6 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyMap7 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKeyMap8 = new mutable.HashMap[Int, Int]()\n        val hexKeyMap9 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyMap10 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKeyMap11 = new mutable.HashMap[Int, Int]()\n        val hexKeyMap12 = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKeyMap13 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyMap14 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKeyMap15 = new mutable.HashMap[Int, Int]()\n        val hexKeyMap16 = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKeyMap17 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyMap18 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKeyMap19 = new mutable.HashMap[Int, Int]()\n        val hexKeyMap20 = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKeyMap21 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyMap22 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKeyMap23 = new mutable.HashMap[Int, Int]()\n        val hexKeyMap24 = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKeyMap25 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyMap26 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKeyMap27 = new mutable.HashMap[Int, Int]()\n        val hexKeyMap28 = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKeyMap", "        val nums = num.split(\"\
    \").toList\n        val primes = mutable.Set[Long]()\n        val primesSet =\
    \ mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n        val\
    \ primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34", "  \
    \      val hex = num.toCharArray.map(_.toString.toInt)\n        val hexMap = hex.groupBy(x\
    \ => x % 10)\n        val primes = hexMap.filter(_._2.length == 1).map(_._1)\n\
    \        val hexDigits = hex.filter(_ > 'A' && _ < 'F').length\n        val hexDigitPrimes\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 0).length\n        val hexDigitPrimes2\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 1).length\n        val hexDigitPrimes3\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 2).length\n        val hexDigitPrimes4\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 3).length\n        val hexDigitPrimes5\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 4).length\n        val hexDigitPrimes6\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 5).length\n        val hexDigitPrimes7\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 6).length\n        val hexDigitPrimes8\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 7).length\n        val hexDigitPrimes9\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 8).length\n        val hexDigitPrimes10\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 9).length\n        val hexDigitPrimes11\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 10).length\n        val hexDigitPrimes12\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 11).length\n        val hexDigitPrimes13\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 12).length\n        val hexDigitPrimes14\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 13).length\n        val hexDigitPrimes15\
    \ = hex.filter(_ > 'A' && _ < 'F').filter(_ % 10 == 14).length\n        val hexDigitPrimes16\
    \ = hex.filter(_ > 'A' && _ < '", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexKey = hex.foldLeft(1l) {\n            case (acc, hexDigit) =>\
    \ \n                val hexDigitCount = hexDigit.toInt\n                val hexDigitPrime\
    \ = hexDigitCount % 2 == 0\n                val hexDigitPrime2 = hexDigitPrime\
    \ && hexDigitCount != 1\n                val hexDigitPrime3 = hexDigitPrime2 &&\
    \ hexDigitCount != 2\n                val hexDigitPrime4 = hexDigitPrime3 && hexDigitCount\
    \ != 3\n                val hexDigitPrime5 = hexDigitPrime4 && hexDigitCount !=\
    \ 4\n                val hexDigitPrime6 = hexDigitPrime5 && hexDigitCount != 5\n\
    \                val hexDigitPrime7 = hexDigitPrime6 && hexDigitCount != 6\n \
    \               val hexDigitPrime8 = hexDigitPrime7 && hexDigitCount != 7\n  \
    \              val hexDigitPrime9 = hexDigitPrime8 && hexDigitCount != 8\n   \
    \             val hexDigitPrime10 = hexDigitPrime9 && hexDigitCount != 9\n   \
    \             val hexDigitPrime11 = hexDigitPrime10 && hexDigitCount != 10\n \
    \               val hexDigitPrime12 = hexDigitPrime11 && hexDigitCount != 11\n\
    \                val hexDigitPrime13 = hexDigitPrime12 && hexDigitCount != 12\n\
    \                val hexDigitPrime14 = hexDigitPrime13 && hexDigitCount != 13\n\
    \                val hexDigitPrime15 = hexDigitPrime14 && hexDigitCount != 14\n\
    \                val hexDigitPrime16 = hexDigitPrime15 && hexDigitCount != 15\n\
    \                val hexDigitPrime17 = hexDigitPrime16 && hexDigitCount != 16\n\
    \                val hexDigitPrime18 = hexDigitPrime17 && hexDigitCount != 17\n\
    \                val hexDigitPrime19 = hexDigitPrime18 && hexDigitCount != 18\n\
    \                val hexDigitPrime20 = hexDigitPrime19 && hexDigitCount != 19\n\
    \                val hexDigitPrime21 = hexDigitPrime20 && hexDigitCount != 20\n\
    \                val hexDigitPrime22 = hexDigitPrime21 && hexDigitCount != 21\n\
    \                val hexDigitPrime23 = hexDigitPrime22 && hexDigitCount != 22\n\
    \                val hexDigitPrime24 = hexDigitPrime23 && hexDigitCount != 23\n\
    \                val hexDigitPrime", "        val nums = num.toCharArray.map(_.toInt)\n\
    \        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesSet\
    \ = primes.toSet\n        val primesCount = primes.count(_ > 0)\n        val primesCount2\
    \ = primesCount * primesCount\n        val primesCount3 = primesCount2 * primesCount\n\
    \        val primesCount4 = primesCount3 * primesCount\n        val primesCount5\
    \ = primesCount4 * primesCount\n        val primesCount6 = primesCount5 * primesCount\n\
    \        val primesCount7 = primesCount6 * primesCount\n        val primesCount8\
    \ = primesCount7 * primesCount\n        val primesCount9 = primesCount8 * primesCount\n\
    \        val primesCount10 = primesCount9 * primesCount\n        val primesCount11\
    \ = primesCount10 * primesCount\n        val primesCount12 = primesCount11 * primesCount\n\
    \        val primesCount13 = primesCount12 * primesCount\n        val primesCount14\
    \ = primesCount13 * primesCount\n        val primesCount15 = primesCount14 * primesCount\n\
    \        val primesCount16 = primesCount15 * primesCount\n        val primesCount17\
    \ = primesCount16 * primesCount\n        val primesCount18 = primesCount17 * primesCount\n\
    \        val primesCount19 = primesCount18 * primesCount\n        val primesCount20\
    \ = primesCount19 * primesCount\n        val primesCount21 = primesCount20 * primesCount\n\
    \        val primesCount22 = primesCount21 * primesCount\n        val primesCount23\
    \ = primesCount22 * primesCount\n        val primesCount24 = primesCount23 * primesCount\n\
    \        val primesCount25 = primesCount24 * primesCount\n        val primesCount26\
    \ = primesCount25 * primesCount\n        val primesCount27 = primesCount26 * primesCount\n\
    \        val primesCount28 = primesCount27 * primesCount\n        val primesCount29\
    \ = primesCount28 * primesCount\n        val primes", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x\
    \ => x % 10)\n        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4\
    \ = hexKey3.map(x => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n\
    \        val hexKey6 = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9\
    \ = hexKey8.map(x => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n\
    \        val hexKey11 = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14\
    \ = hexKey13.map(x => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n\
    \        val hexKey16 = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19\
    \ = hexKey18.map(x => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n\
    \        val hexKey21 = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24\
    \ = hexKey23.map(x => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n\
    \        val hexKey26 = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29\
    \ = hexKey28.map(x => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n\
    \        val hexKey31 = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x\
    \ => x % 10)\n        val hexKey33", "        val nums = num.split(\"\\\\D+\"\
    )\n        val numsLen = nums.length\n        val numsLen2 = numsLen / 2\n   \
    \     val numsLen3 = numsLen / 3\n        val numsLen4 = numsLen / 4\n       \
    \ val numsLen5 = numsLen / 5\n        val numsLen6 = numsLen / 6\n        val\
    \ numsLen7 = numsLen / 7\n        val numsLen8 = numsLen / 8\n        val numsLen9\
    \ = numsLen / 9\n        val numsLen10 = numsLen / 10\n        val numsLen11 =\
    \ numsLen / 11\n        val numsLen12 = numsLen / 12\n        val numsLen13 =\
    \ numsLen / 13\n        val numsLen14 = numsLen / 14\n        val numsLen15 =\
    \ numsLen / 15\n        val numsLen16 = numsLen / 16\n        val numsLen17 =\
    \ numsLen / 17\n        val numsLen18 = numsLen / 18\n        val numsLen19 =\
    \ numsLen / 19\n        val numsLen20 = numsLen / 20\n        val numsLen21 =\
    \ numsLen / 21\n        val numsLen22 = numsLen / 22\n        val numsLen23 =\
    \ numsLen / 23\n        val numsLen24 = numsLen / 24\n        val numsLen25 =\
    \ numsLen / 25\n        val numsLen26 = numsLen / 26\n        val numsLen27 =\
    \ numsLen / 27\n        val numsLen28 = numsLen / 28\n        val numsLen29 =\
    \ numsLen / 29\n        val numsLen30 = numsLen / 30\n        val numsLen31 =\
    \ numsLen / 31\n        val numsLen32 = numsLen / 32\n        val numsLen33 =\
    \ numsLen / 33\n        val numsLen34 = numsLen / 34\n        val numsLen35 =\
    \ numsLen / 35\n        val numsLen36 = numsLen / 36\n        val numsLen37 =\
    \ numsLen / 37\n        val numsLen38 = numsLen / 38\n        val numsLen39 =\
    \ numsLen / 39\n        val numsLen40 = nums", "        val hex = num.toCharArray\n\
    \        val hexCount = hex.length\n        val hexDigits = hex.map(x => x.toInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.size)\n        val hexDigitMapCount = hexDigitMap.size\n \
    \       val hexDigitMapKeys = hexDigitMap.keys.toList\n        val hexDigitMapValues\
    \ = hexDigitMap.values.toList\n        val hexDigitMapValuesCount = hexDigitMapValues.size\n\
    \        val hexDigitMapValuesSum = hexDigitMapValues.sum\n        val hexDigitMapValuesSumCount\
    \ = hexDigitMapValuesSum.toInt\n        val hexDigitMapValuesSumCount2 = hexDigitMapValuesSumCount\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount3 = hexDigitMapValuesSumCount2\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount4 = hexDigitMapValuesSumCount3\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount5 = hexDigitMapValuesSumCount4\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount6 = hexDigitMapValuesSumCount5\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount7 = hexDigitMapValuesSumCount6\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount8 = hexDigitMapValuesSumCount7\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount9 = hexDigitMapValuesSumCount8\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount10 = hexDigitMapValuesSumCount9\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount11 = hexDigitMapValuesSumCount10\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount12 = hexDigitMapValuesSumCount11\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount13 = hexDigitMapValuesSumCount12\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount14 = hexDigitMapValuesSumCount13\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount15 = hexDigitMapValuesSumCount14\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount16 = hexDigitMapValuesSumCount15\
    \ * hexDigitMapValuesSumCount\n        val hexDigitMapValuesSumCount17 = hexDigitMap",
  "        val hex = num.toCharArray.map(_.toHexString)\n        val hexString = hex.mkString(\"\
    \")\n        val hexArray = hexString.toList\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArray.length\n        val hexArrayLength = hexArray.length\n\
    \        ", "        val hex = num.toCharArray\n        val hexKey = hex.map(x\
    \ => x.toInt)\n        val hexKeyList = hexKey.toList\n        val hexKeyListLength\
    \ = hexKeyList.size\n        val hexKeyListLength = hexKeyListLength.toInt\n \
    \       val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n", "        val hex = num.toCharArray\n        val\
    \ hexKey = hex.map(x => if (x == 'A') 1 else 0).sum\n        hexKey", "      \
    \  val nums = num.split(\"\\\\D+\")\n        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34", "  \
    \      val hex = num.map(_.toInt)\n        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > hex(0))\n      \
    \  val primesCount2 = primes.count(_ > hex(1))\n        val primesCount3 = primes.count(_\
    \ > hex(2))\n        val primesCount4 = primes.count(_ > hex(3))\n        val\
    \ primesCount5 = primes.count(_ > hex(4))\n        val primesCount6 = primes.count(_\
    \ > hex(5))\n        val primesCount7 = primes.count(_ > hex(6))\n        val\
    \ primesCount8 = primes.count(_ > hex(7))\n        val primesCount9 = primes.count(_\
    \ > hex(8))\n        val primesCount10 = primes.count(_ > hex(9))\n        val\
    \ primesCount11 = primes.count(_ > hex(10))\n        val primesCount12 = primes.count(_\
    \ > hex(11))\n        val primesCount13 = primes.count(_ > hex(12))\n        val\
    \ primesCount14 = primes.count(_ > hex(13))\n        val primesCount15 = primes.count(_\
    \ > hex(14))\n        val primesCount16 = primes.count(_ > hex(15))\n        val\
    \ primesCount17 = primes.count(_ > hex(16))\n        val primesCount18 = primes.count(_\
    \ > hex(17))\n        val primesCount19 = primes.count(_ > hex(18))\n        val\
    \ primesCount20 = primes.count(_ > hex(19))\n        val primesCount21 = primes.count(_\
    \ > hex(20))\n        val primesCount22 = primes.count(_ > hex(21))\n        val\
    \ primesCount23 = primes.count(_ > hex(22))\n        val primesCount24 = primes.count(_\
    \ > hex(23))\n        val primesCount25 = primes.count(_ > hex(24))\n        val\
    \ primesCount26 = primes.count(_ > hex(25))\n        val primesCount27 = primes.count(_\
    \ > hex(26))\n        val primesCount28 = primes.count(_ > hex(27))\n        val\
    \ primesCount29 = primes.count(_ > hex(28))\n        val primesCount30 = primes.count(_\
    \ > hex(29))\n        val primes", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexKey = hex.foldLeft(0l) { (sum, digit) => sum + digit * digit }\n\
    \        hexKey", "        val numArray = num.toCharArray\n        val numArrayLength\
    \ = numArray.length\n        val hexKeyArray = Array.ofDim[Long](numArrayLength)\n\
    \        val hexKeyArrayLength = hexKeyArray.length\n        val hexKeyArray2\
    \ = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray2Length = hexKeyArray2.length\n\
    \        val hexKeyArray3 = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray3Length\
    \ = hexKeyArray3.length\n        val hexKeyArray4 = Array.ofDim[Long](numArrayLength)\n\
    \        val hexKeyArray4Length = hexKeyArray4.length\n        val hexKeyArray5\
    \ = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray5Length = hexKeyArray5.length\n\
    \        val hexKeyArray6 = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray6Length\
    \ = hexKeyArray6.length\n        val hexKeyArray7 = Array.ofDim[Long](numArrayLength)\n\
    \        val hexKeyArray7Length = hexKeyArray7.length\n        val hexKeyArray8\
    \ = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray8Length = hexKeyArray8.length\n\
    \        val hexKeyArray9 = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray9Length\
    \ = hexKeyArray9.length\n        val hexKeyArray10 = Array.ofDim[Long](numArrayLength)\n\
    \        val hexKeyArray10Length = hexKeyArray10.length\n        val hexKeyArray11\
    \ = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray11Length = hexKeyArray11.length\n\
    \        val hexKeyArray12 = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray12Length\
    \ = hexKeyArray12.length\n        val hexKeyArray13 = Array.ofDim[Long](numArrayLength)\n\
    \        val hexKeyArray13Length = hexKeyArray13.length\n        val hexKeyArray14\
    \ = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray14Length = hexKeyArray14.length\n\
    \        val hexKeyArray15 = Array.ofDim[Long](numArrayLength)\n        val hexKeyArray15Length\
    \ = hexKeyArray15.length\n        val hexKeyArray16 = Array.ofDim[Long](numArrayLength)\n\
    \        val hexKeyArray16Length = hexKeyArray16.length\n        val hexKeyArray17\
    \ = Array.ofDim[", "        val hex = num.toCharArray\n        val hexKey = hex.foldLeft(0l){\
    \ (sum, digit) => sum + digit * 16l}\n        hexKey", "        val hex = num.map(x\
    \ => x.toInt)\n        val hex2 = hex.map(x => x % 10)\n        val hex3 = hex2.map(x\
    \ => x % 10)\n        val hex4 = hex3.map(x => x % 10)\n        val hex5 = hex4.map(x\
    \ => x % 10)\n        val hex6 = hex5.map(x => x % 10)\n        val hex7 = hex6.map(x\
    \ => x % 10)\n        val hex8 = hex7.map(x => x % 10)\n        val hex9 = hex8.map(x\
    \ => x % 10)\n        val hex10 = hex9.map(x => x % 10)\n        val hex11 = hex10.map(x\
    \ => x % 10)\n        val hex12 = hex11.map(x => x % 10)\n        val hex13 =\
    \ hex12.map(x => x % 10)\n        val hex14 = hex13.map(x => x % 10)\n       \
    \ val hex15 = hex14.map(x => x % 10)\n        val hex16 = hex15.map(x => x % 10)\n\
    \        val hex17 = hex16.map(x => x % 10)\n        val hex18 = hex17.map(x =>\
    \ x % 10)\n        val hex19 = hex18.map(x => x % 10)\n        val hex20 = hex19.map(x\
    \ => x % 10)\n        val hex21 = hex20.map(x => x % 10)\n        val hex22 =\
    \ hex21.map(x => x % 10)\n        val hex23 = hex22.map(x => x % 10)\n       \
    \ val hex24 = hex23.map(x => x % 10)\n        val hex25 = hex24.map(x => x % 10)\n\
    \        val hex26 = hex25.map(x => x % 10)\n        val hex27 = hex26.map(x =>\
    \ x % 10)\n        val hex28 = hex27.map(x => x % 10)\n        val hex29 = hex28.map(x\
    \ => x % 10)\n        val hex30 = hex29.map(x => x % 10)\n        val hex31 =\
    \ hex30.map(x => x % 10)\n        val hex32 = hex31.map(x => x % 10)\n       \
    \ val hex33 = hex32.map(x => x % 10)\n        val hex34 = hex33.map(x => x % 10)\n\
    \        val hex35 = hex34.map(x => x % 10)\n        val hex36 = hex35.map(x =>\
    \ x % 10)\n        val hex37 = hex36.map(x => x % 10)\n        val hex38 = ",
  "        val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n\
    \        val hexKey2 = hexKey.map(x => x % 10)\n        val hexKey3 = hexKey2.map(x\
    \ => x % 10)\n        val hexKey4 = hexKey3.map(x => x % 10)\n        val hexKey5\
    \ = hexKey4.map(x => x % 10)\n        val hexKey6 = hexKey5.map(x => x % 10)\n\
    \        val hexKey7 = hexKey6.map(x => x % 10)\n        val hexKey8 = hexKey7.map(x\
    \ => x % 10)\n        val hexKey9 = hexKey8.map(x => x % 10)\n        val hexKey10\
    \ = hexKey9.map(x => x % 10)\n        val hexKey11 = hexKey10.map(x => x % 10)\n\
    \        val hexKey12 = hexKey11.map(x => x % 10)\n        val hexKey13 = hexKey12.map(x\
    \ => x % 10)\n        val hexKey14 = hexKey13.map(x => x % 10)\n        val hexKey15\
    \ = hexKey14.map(x => x % 10)\n        val hexKey16 = hexKey15.map(x => x % 10)\n\
    \        val hexKey17 = hexKey16.map(x => x % 10)\n        val hexKey18 = hexKey17.map(x\
    \ => x % 10)\n        val hexKey19 = hexKey18.map(x => x % 10)\n        val hexKey20\
    \ = hexKey19.map(x => x % 10)\n        val hexKey21 = hexKey20.map(x => x % 10)\n\
    \        val hexKey22 = hexKey21.map(x => x % 10)\n        val hexKey23 = hexKey22.map(x\
    \ => x % 10)\n        val hexKey24 = hexKey23.map(x => x % 10)\n        val hexKey25\
    \ = hexKey24.map(x => x % 10)\n        val hexKey26 = hexKey25.map(x => x % 10)\n\
    \        val hexKey27 = hexKey26.map(x => x % 10)\n        val hexKey28 = hexKey27.map(x\
    \ => x % 10)\n        val hexKey29 = hexKey28.map(x => x % 10)\n        val hexKey30\
    \ = hexKey29.map(x => x % 10)\n        val hexKey31 = hexKey30.map(x => x % 10)\n\
    \        val hexKey32 = hexKey31.map(x => x % 10)\n        val hexKey33", "  \
    \      val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKey.length\n\
    \        val hex", "        val nums = num.split(\"\\\\D+\")\n        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val hexKey = hex.foldLeft(0L){ (sum, digit) => sum + digit * digit}\n\
    \        hexKey", "        val hex = num.toCharArray.map(_.toHexString).mkString\n\
    \        val hexArray = hex.split(\"\\\\\")\n        val hexArrayLength = hexArray.length\n\
    \        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength =\
    \ hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n      \
    \  val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n    \
    \    val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n    \
    \    val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n    \
    \    val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n    \
    \    val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n    \
    \    val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n    \
    \    val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n    \
    \    val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength - 1\n    \
    \    val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength = hexArrayLength\
    \ - 1\n        val hexArrayLength = hexArrayLength - 1\n        val hexArrayLength\
    \ = hexArrayLength - 1\n        val hexArrayLength = ", "        val nums = num.split(\"\
    \").toList\n        val numsCount = nums.length\n        val hexDigits = nums.map(x\
    \ => x.toInt)\n        val hexDigitsCount = hexDigits.length\n        val primes\
    \ = hexDigits.filter(x => x % 2 == 0 && x != 0)\n        val primesCount = primes.length\n\
    \        val hexDigitsToPrimes = primes.zip(hexDigits).filter(_._1 == _._2)\n\
    \        val hexDigitsToPrimesCount = hexDigitsToPrimes.length\n        val primesToHexDigits\
    \ = hexDigitsToPrimes.map(x => x._2)\n        val primesToHexDigitsCount = primesToHexDigits.length\n\
    \        val primesToHexDigitsToPrimes = primesToHexDigits.zip(primes).filter(_._1\
    \ == _._2)\n        val primesToHexDigitsToPrimesCount = primesToHexDigitsToPrimes.length\n\
    \        val primesToHexDigitsToPrimesToHexDigits = primesToHexDigitsToPrimes.map(x\
    \ => x._2)\n        val primesToHexDigitsToPrimesToHexDigitsCount = primesToHexDigitsToPrimesToHexDigits.length\n\
    \        val primesToHexDigitsToPrimesToHexDigitsToPrimes = primesToHexDigitsToPrimesToHexDigits.zip(primes).filter(_._1\
    \ == _._2)\n        val primesToHexDigitsToPrimesToHexDigitsToPrimesCount = primesToHexDigitsToPrimesToHexDigitsToPrimes.length\n\
    \        val primesToHexDigitsToPrimesToHexDigitsToPrimesToHexDigits = primesToHexDigitsToPrimesToHexDigitsToPrimes.map(x\
    \ => x._2)\n        val primesToHexDigitsToPrimesToHexDigitsToPrimesToHexDigitsCount\
    \ = primesToHexDigitsToPrimesToHexDigitsToPrimesToHexDigits.length\n        val\
    \ primesToHexDigitsToPrimesToHexDigitsToPrimesToHexDigitsToPrimes = primesToHexDigitsToPrimesToHexDigitsToPrimesToHexDigits.zip(primes).filter(_._1\
    \ == _._2)\n        val primesToHexDigitsToPrimesToHexDigitsToPrimesToHexDigitsToPrimesCount\
    \ = primesToHexDigitsToPrimesToHexDigitsToPrimesToHexDigits", "        val hex\
    \ = num.toCharArray.map(_.toString.toInt)\n        val hexKey = hex.map(x => x\
    \ % 16).filter(_ > 0).count() * 16\n        hexKey", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val hexMap = hex.map(x => (x % 16).asInstanceOf[Int])\n        val hexMap2\
    \ = hexMap.map(x => (x % 16).asInstanceOf[Int])\n        val hexMap3 = hexMap2.map(x\
    \ => (x % 16).asInstanceOf[Int])\n        val hexMap4 = hexMap3.map(x => (x %\
    \ 16).asInstanceOf[Int])\n        val hexMap5 = hexMap4.map(x => (x % 16).asInstanceOf[Int])\n\
    \        val hexMap6 = hexMap5.map(x => (x % 16).asInstanceOf[Int])\n        val\
    \ hexMap7 = hexMap6.map(x => (x % 16).asInstanceOf[Int])\n        val hexMap8\
    \ = hexMap7.map(x => (x % 16).asInstanceOf[Int])\n        val hexMap9 = hexMap8.map(x\
    \ => (x % 16).asInstanceOf[Int])\n        val hexMap10 = hexMap9.map(x => (x %\
    \ 16).asInstanceOf[Int])\n        val hexMap11 = hexMap10.map(x => (x % 16).asInstanceOf[Int])\n\
    \        val hexMap12 = hexMap11.map(x => (x % 16).asInstanceOf[Int])\n      \
    \  val hexMap13 = hexMap12.map(x => (x % 16).asInstanceOf[Int])\n        val hexMap14\
    \ = hexMap13.map(x => (x % 16).asInstanceOf[Int])\n        val hexMap15 = hexMap14.map(x\
    \ => (x % 16).asInstanceOf[Int])\n        val hexMap16 = hexMap15.map(x => (x\
    \ % 16).asInstanceOf[Int])\n        val hexMap17 = hexMap16.map(x => (x % 16).asInstanceOf[Int])\n\
    \        val hexMap18 = hexMap17.map(x => (x % 16).asInstanceOf[Int])\n      \
    \  val hexMap19 = hexMap18.map(x => (x % 16).asInstanceOf[Int])\n        val hexMap20\
    \ = hexMap19.map(x => (x % 16).asInstanceOf[Int])\n        val hexMap21 = hexMap20.map(x\
    \ => (x % 16).asInstanceOf[Int])\n        val hexMap22 = hexMap21.map(x => (x\
    \ % 16).asInstanceOf[Int])\n        val hexMap23", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.foldLeft(0L){ (sum, digit) => sum + digit * 16L }\n\
    \        hexKey % 10L", "        val hex = num.toCharArray\n        val hexKey\
    \ = hex.map(x => x.toInt)\n        val hexKeyList = hexKey.toList\n        val\
    \ hexKeyListLength = hexKeyList.size\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toLong\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toLong\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toLong\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val hexString = hex.mkString(\"\")\n        val hexStringList = hexString.split(\"\
    \\\\\")\n        val hexStringListLength = hexStringList.length\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexStringListLength - 1\n        val\
    \ hexStringListLength = hexStringListLength - 1\n        val hexStringListLength\
    \ = hexStringListLength - 1\n        val hexStringListLength = hexStringListLength\
    \ - 1\n        val hexStringListLength = hexString", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val primes = mutable.Set[Int]()\n        val primesSet = mutable.Set[Int]()\n\
    \        val primesSet2 = mutable.Set[Int]()\n        val primesSet3 = mutable.Set[Int]()\n\
    \        val primesSet4 = mutable.Set[Int]()\n        val primesSet5 = mutable.Set[Int]()\n\
    \        val primesSet6 = mutable.Set[Int]()\n        val primesSet7 = mutable.Set[Int]()\n\
    \        val primesSet8 = mutable.Set[Int]()\n        val primesSet9 = mutable.Set[Int]()\n\
    \        val primesSet10 = mutable.Set[Int]()\n        val primesSet11 = mutable.Set[Int]()\n\
    \        val primesSet12 = mutable.Set[Int]()\n        val primesSet13 = mutable.Set[Int]()\n\
    \        val primesSet14 = mutable.Set[Int]()\n        val primesSet15 = mutable.Set[Int]()\n\
    \        val primesSet16 = mutable.Set[Int]()\n        val primesSet17 = mutable.Set[Int]()\n\
    \        val primesSet18 = mutable.Set[Int]()\n        val primesSet19 = mutable.Set[Int]()\n\
    \        val primesSet20 = mutable.Set[Int]()\n        val primesSet21 = mutable.Set[Int]()\n\
    \        val primesSet22 = mutable.Set[Int]()\n        val primesSet23 = mutable.Set[Int]()\n\
    \        val primesSet24 = mutable.Set[Int]()\n        val primesSet25 = mutable.Set[Int]()\n\
    \        val primesSet26 = mutable.Set[Int]()\n        val primesSet27 = mutable.Set[Int]()\n\
    \        val primesSet28 = mutable.Set[Int]()\n        val primesSet29 = mutable.Set[Int]()\n\
    \        val primesSet30 = mutable.Set[Int]()\n        val primesSet31 = mutable.Set[Int]()\n\
    \        val primesSet32 = mutable.Set[Int]()\n        val primesSet33 = mutable.Set[Int]()\n\
    \        val prime", "        val nums = num.split(\"\").toList\n        val numsMap\
    \ = nums.map(x => x.toLong).toMap\n        val numsMap2 = numsMap.filter(_._2\
    \ % 2 == 0)\n        val numsMap3 = numsMap2.filter(_._2 % 3 == 0)\n        val\
    \ numsMap4 = numsMap3.filter(_._2 % 5 == 0)\n        val numsMap5 = numsMap4.filter(_._2\
    \ % 7 == 0)\n        val numsMap6 = numsMap5.filter(_._2 % 11 == 0)\n        val\
    \ numsMap7 = numsMap6.filter(_._2 % 13 == 0)\n        val numsMap8 = numsMap7.filter(_._2\
    \ % 17 == 0)\n        val numsMap9 = numsMap8.filter(_._2 % 19 == 0)\n       \
    \ val numsMap10 = numsMap9.filter(_._2 % 23 == 0)\n        val numsMap11 = numsMap10.filter(_._2\
    \ % 29 == 0)\n        val numsMap12 = numsMap11.filter(_._2 % 31 == 0)\n     \
    \   val numsMap13 = numsMap12.filter(_._2 % 37 == 0)\n        val numsMap14 =\
    \ numsMap13.filter(_._2 % 41 == 0)\n        val numsMap15 = numsMap14.filter(_._2\
    \ % 43 == 0)\n        val numsMap16 = numsMap15.filter(_._2 % 47 == 0)\n     \
    \   val numsMap17 = numsMap16.filter(_._2 % 51 == 0)\n        val numsMap18 =\
    \ numsMap17.filter(_._2 % 55 == 0)\n        val numsMap19 = numsMap18.filter(_._2\
    \ % 59 == 0)\n        val numsMap20 = numsMap19.filter(_._2 % 63 == 0)\n     \
    \   val numsMap21 = numsMap20.filter(_._2 % 67 == 0)\n        val numsMap22 =\
    \ numsMap21.filter(_._2 % 71 == 0)\n        val numsMap23 = numsMap22.filter(_._2\
    \ % 73 == 0)\n        val numsMap24 = numsMap23.filter(_._2 % 79 == 0)\n     \
    \   val numsMap25 = numsMap24.filter(_._2 % 83 == 0)\n        val numsMap26 =\
    \ numsMap25.filter(_._2 % 89 == 0)", "        val hex = num.toCharArray.map(_.toHexString)\n\
    \        val hexArray = hex.map(_.toInt)\n        val hexArray2 = hexArray.filter(_\
    \ % 2 == 0)\n        val hexArray3 = hexArray2.filter(_ % 3 == 0)\n        val\
    \ hexArray4 = hexArray3.filter(_ % 5 == 0)\n        val hexArray5 = hexArray4.filter(_\
    \ % 7 == 0)\n        val hexArray6 = hexArray5.filter(_ % 11 == 0)\n        val\
    \ hexArray7 = hexArray6.filter(_ % 13 == 0)\n        val hexArray8 = hexArray7.filter(_\
    \ % 17 == 0)\n        val hexArray9 = hexArray8.filter(_ % 19 == 0)\n        val\
    \ hexArray10 = hexArray9.filter(_ % 23 == 0)\n        val hexArray11 = hexArray10.filter(_\
    \ % 29 == 0)\n        val hexArray12 = hexArray11.filter(_ % 31 == 0)\n      \
    \  val hexArray13 = hexArray12.filter(_ % 37 == 0)\n        val hexArray14 = hexArray13.filter(_\
    \ % 41 == 0)\n        val hexArray15 = hexArray14.filter(_ % 43 == 0)\n      \
    \  val hexArray16 = hexArray15.filter(_ % 47 == 0)\n        val hexArray17 = hexArray16.filter(_\
    \ % 53 == 0)\n        val hexArray18 = hexArray17.filter(_ % 59 == 0)\n      \
    \  val hexArray19 = hexArray18.filter(_ % 61 == 0)\n        val hexArray20 = hexArray19.filter(_\
    \ % 67 == 0)\n        val hexArray21 = hexArray20.filter(_ % 71 == 0)\n      \
    \  val hexArray22 = hexArray21.filter(_ % 73 == 0)\n        val hexArray23 = hexArray22.filter(_\
    \ % 79 == 0)\n        val hexArray24 = hexArray23.filter(_ % 83 == 0)\n      \
    \  val hexArray25 = hexArray24.filter(_ % 89 == 0)\n        val hexArray26 = hexArray25.filter(_\
    \ % 97 == 0)\n        val hexArray27 = hexArray26.filter(_ % 101 == 0)\n     \
    \   val hexArray28 = hexArray27.filter(_ % 107 == 0)\n        val hexArray29 =\
    \ hexArray28.filter(_ % 113 == 0)\n        val hexArray30 = hexArray29.filter(_\
    \ % 119 == 0)\n        val hexArray31 = hexArray30.filter(_ % 127 == 0)\n    \
    \    val hexArray32 = hexArray31.filter(_ % 131 == 0)\n        val hex", "   \
    \     val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n\
    \        val hexKeyLength = hexKey.length\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKeyLength.toInt\n        val hexKeyLength = hexKeyLength.toLong\n\
    \        val hexKeyLength = hexKey", "        val hex = num.toCharArray\n    \
    \    val hexKey = hex.map(x => x.toInt)\n        val hexKeyList = hexKey.toList\n\
    \        val hexKeyListLength = hexKeyList.size\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n        val hexKeyListLength\
    \ = hexKeyListLength.toInt\n        val hexKeyListLength = hexKeyListLength.toInt\n\
    \        val hexKeyListLength = hexKeyListLength.toInt\n", "        val hex =\
    \ num.toCharArray\n        val hexCount = hex.length\n        val hexDigits =\
    \ hex.map(x => x.toInt)\n        val hexDigitsCount = hexDigits.length\n     \
    \   val hexDigitsToCount = hexDigits.toList\n        val hexDigitsToCountCount\
    \ = hexDigitsToCount.size\n        val hexDigitsToCountCountCount = hexDigitsToCountCount.size\n\
    \        val hexDigitsToCountCountCountCount = hexDigitsToCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCount = hexDigitsToCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCount = hexDigitsToCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCount = hexDigitsToCountCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCount = hexDigitsToCountCountCountCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCount = hexDigitsToCountCountCountCountCountCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount.size\n\
    \        val hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = hexDigitsToCountCountCountCountCountCountCountCountCountCountCountCountCount",
  "        val hex = num.toCharArray.map(_.toInt)\n        val hexKey = hex.map(x\
    \ => (x % 16).asInstanceOf[Int]).toSet\n        val hexKeySet = hexKey.toSet\n\
    \        val hexKeySet2 = hexKey.toSet\n        val hexKeySet3 = hexKey.toSet\n\
    \        val hexKeySet4 = hexKey.toSet\n        val hexKeySet5 = hexKey.toSet\n\
    \        val hexKeySet6 = hexKey.toSet\n        val hexKeySet7 = hexKey.toSet\n\
    \        val hexKeySet8 = hexKey.toSet\n        val hexKeySet9 = hexKey.toSet\n\
    \        val hexKeySet10 = hexKey.toSet\n        val hexKeySet11 = hexKey.toSet\n\
    \        val hexKeySet12 = hexKey.toSet\n        val hexKeySet13 = hexKey.toSet\n\
    \        val hexKeySet14 = hexKey.toSet\n        val hexKeySet15 = hexKey.toSet\n\
    \        val hexKeySet16 = hexKey.toSet\n        val hexKeySet17 = hexKey.toSet\n\
    \        val hexKeySet18 = hexKey.toSet\n        val hexKeySet19 = hexKey.toSet\n\
    \        val hexKeySet20 = hexKey.toSet\n        val hexKeySet21 = hexKey.toSet\n\
    \        val hexKeySet22 = hexKey.toSet\n        val hexKeySet23 = hexKey.toSet\n\
    \        val hexKeySet24 = hexKey.toSet\n        val hexKeySet25 = hexKey.toSet\n\
    \        val hexKeySet26 = hexKey.toSet\n        val hexKeySet27 = hexKey.toSet\n\
    \        val hexKeySet28 = hexKey.toSet\n        val hexKeySet29 = hexKey.toSet\n\
    \        val hexKeySet30 = hexKey.toSet\n        val hexKeySet31 = hexKey.toSet\n\
    \        val hexKeySet32 = hexKey.toSet\n        val hexKeySet33 = hexKey.toSet\n\
    \        val hexKeySet34 = hexKey.toSet\n        val hexKeySet35 = hexKey.toSet\n\
    \        val hexKeySet36 = hexKey.toSet\n        val hexKeySet37 = hexKey.toSet\n\
    \        val hexKeySet38 = hexKey.toSet\n        val hexKeySet39 = hexKey.toSet\n\
    \        val hexKeySet40 = hexKey.toSet\n        val hexKeySet41 = hex", "   \
    \     val hex = num.toCharArray\n        val hexLen = hex.length\n        val\
    \ hexMap = mutable.Map[Int, Int]()\n        val hexMapLen = hexMap.length\n  \
    \      val hexMap2 = mutable.Map[Int, Int]()\n        val hexMap2Len = hexMap2.length\n\
    \        val hexMap3 = mutable.Map[Int, Int]()\n        val hexMap3Len = hexMap3.length\n\
    \        val hexMap4 = mutable.Map[Int, Int]()\n        val hexMap4Len = hexMap4.length\n\
    \        val hexMap5 = mutable.Map[Int, Int]()\n        val hexMap5Len = hexMap5.length\n\
    \        val hexMap6 = mutable.Map[Int, Int]()\n        val hexMap6Len = hexMap6.length\n\
    \        val hexMap7 = mutable.Map[Int, Int]()\n        val hexMap7Len = hexMap7.length\n\
    \        val hexMap8 = mutable.Map[Int, Int]()\n        val hexMap8Len = hexMap8.length\n\
    \        val hexMap9 = mutable.Map[Int, Int]()\n        val hexMap9Len = hexMap9.length\n\
    \        val hexMap10 = mutable.Map[Int, Int]()\n        val hexMap10Len = hexMap10.length\n\
    \        val hexMap11 = mutable.Map[Int, Int]()\n        val hexMap11Len = hexMap11.length\n\
    \        val hexMap12 = mutable.Map[Int, Int]()\n        val hexMap12Len = hexMap12.length\n\
    \        val hexMap13 = mutable.Map[Int, Int]()\n        val hexMap13Len = hexMap13.length\n\
    \        val hexMap14 = mutable.Map[Int, Int]()\n        val hexMap14Len = hexMap14.length\n\
    \        val hexMap15 = mutable.Map[Int, Int]()\n        val hexMap15Len = hexMap15.length\n\
    \        val hexMap16 = mutable.Map[Int, Int]()\n        val hexMap16Len = hexMap16.length\n\
    \        val hexMap17 = mutable.Map[Int, Int]()\n        val hexMap17Len = hexMap17.length\n\
    \        val hexMap18 = mutable.Map[Int, Int]()\n        val hexMap18Len = hexMap18.length\n\
    \        val hexMap19 = mutable.Map[Int, Int]()\n        val hexMap19Len = hexMap",
  "        val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n\
    \        val hexKey2 = hexKey.map(x => (x % 16).toInt)\n        val hexKey3 =\
    \ hexKey2.map(x => (x % 16).toInt)\n        val hexKey4 = hexKey3.map(x => (x\
    \ % 16).toInt)\n        val hexKey5 = hexKey4.map(x => (x % 16).toInt)\n     \
    \   val hexKey6 = hexKey5.map(x => (x % 16).toInt)\n        val hexKey7 = hexKey6.map(x\
    \ => (x % 16).toInt)\n        val hexKey8 = hexKey7.map(x => (x % 16).toInt)\n\
    \        val hexKey9 = hexKey8.map(x => (x % 16).toInt)\n        val hexKey10\
    \ = hexKey9.map(x => (x % 16).toInt)\n        val hexKey11 = hexKey10.map(x =>\
    \ (x % 16).toInt)\n        val hexKey12 = hexKey11.map(x => (x % 16).toInt)\n\
    \        val hexKey13 = hexKey12.map(x => (x % 16).toInt)\n        val hexKey14\
    \ = hexKey13.map(x => (x % 16).toInt)\n        val hexKey15 = hexKey14.map(x =>\
    \ (x % 16).toInt)\n        val hexKey16 = hexKey15.map(x => (x % 16).toInt)\n\
    \        val hexKey17 = hexKey16.map(x => (x % 16).toInt)\n        val hexKey18\
    \ = hexKey17.map(x => (x % 16).toInt)\n        val hexKey19 = hexKey18.map(x =>\
    \ (x % 16).toInt)\n        val hexKey20 = hexKey19.map(x => (x % 16).toInt)\n\
    \        val hexKey21 = hexKey20.map(x => (x % 16).toInt)\n        val hexKey22\
    \ = hexKey21.map(x => (x % 16).toInt)\n        val hexKey23 = hexKey22.map(x =>\
    \ (x % 16).toInt)\n        val hexKey24 = hexKey23.map(x => (x % 16).toInt)\n\
    \        val hexKey25 = hexKey24.map(x => (x % 16).toInt)\n        val hexKey26\
    \ = hexKey25.map(x => (x % 16).toInt)\n        val hexKey27 = hexKey26.map(x =>\
    \ (x % 16).toInt)\n        val hexKey28 = hex", "        val nums = num.split(\"\
    \\\\\").toList\n        val hexNums = nums.map(_.toInt)\n        val hexNumsCount\
    \ = hexNums.size\n        val hexNumsSum = hexNums.sum\n        val hexNumsSum2\
    \ = hexNumsSum * hexNumsSum\n        val hexNumsSum3 = hexNumsSum2 * hexNumsSum\n\
    \        val hexNumsSum4 = hexNumsSum3 * hexNumsSum\n        val hexNumsSum5 =\
    \ hexNumsSum4 * hexNumsSum\n        val hexNumsSum6 = hexNumsSum5 * hexNumsSum\n\
    \        val hexNumsSum7 = hexNumsSum6 * hexNumsSum\n        val hexNumsSum8 =\
    \ hexNumsSum7 * hexNumsSum\n        val hexNumsSum9 = hexNumsSum8 * hexNumsSum\n\
    \        val hexNumsSum10 = hexNumsSum9 * hexNumsSum\n        val hexNumsSum11\
    \ = hexNumsSum10 * hexNumsSum\n        val hexNumsSum12 = hexNumsSum11 * hexNumsSum\n\
    \        val hexNumsSum13 = hexNumsSum12 * hexNumsSum\n        val hexNumsSum14\
    \ = hexNumsSum13 * hexNumsSum\n        val hexNumsSum15 = hexNumsSum14 * hexNumsSum\n\
    \        val hexNumsSum16 = hexNumsSum15 * hexNumsSum\n        val hexNumsSum17\
    \ = hexNumsSum16 * hexNumsSum\n        val hexNumsSum18 = hexNumsSum17 * hexNumsSum\n\
    \        val hexNumsSum19 = hexNumsSum18 * hexNumsSum\n        val hexNumsSum20\
    \ = hexNumsSum19 * hexNumsSum\n        val hexNumsSum21 = hexNumsSum20 * hexNumsSum\n\
    \        val hexNumsSum22 = hexNumsSum21 * hexNumsSum\n        val hexNumsSum23\
    \ = hexNumsSum22 * hexNumsSum\n        val hexNumsSum24 = hexNumsSum23 * hexNumsSum\n\
    \        val hexNumsSum25 = hexNumsSum24 * hexNumsSum\n        val hexNumsSum26\
    \ = hexNumsSum25 * hexNumsSum\n        val hexNumsSum27 = ", "        val hex\
    \ = num.toCharArray\n        val hexCount = hex.length\n        val hexMap = new\
    \ mutable.HashMap[Int, Int]()\n        val hexMap2 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap3 = new mutable.HashMap[Int, Int]()\n        val hexMap4\
    \ = new mutable.HashMap[Int, Int]()\n        val hexMap5 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap6 = new mutable.HashMap[Int, Int]()\n        val hexMap7\
    \ = new mutable.HashMap[Int, Int]()\n        val hexMap8 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap9 = new mutable.HashMap[Int, Int]()\n        val hexMap10\
    \ = new mutable.HashMap[Int, Int]()\n        val hexMap11 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap12 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexMap13 = new mutable.HashMap[Int, Int]()\n        val hexMap14 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap15 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexMap16 = new mutable.HashMap[Int, Int]()\n        val hexMap17 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap18 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexMap19 = new mutable.HashMap[Int, Int]()\n        val hexMap20 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap21 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexMap22 = new mutable.HashMap[Int, Int]()\n        val hexMap23 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap24 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexMap25 = new mutable.HashMap[Int, Int]()\n        val hexMap26 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap27 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexMap28 = new mutable.HashMap[Int, Int]()\n        val hexMap29 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexMap30 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexMap31 = new mutable.HashMap[Int, Int]()", "        val hex = num.toCharArray\n\
    \        val hexCount = hex.length\n        val hexKey = hex.foldLeft(0l) { (acc,\
    \ c) =>\n            val hexDigit = c.toInt\n            val hexDigitCount = hexDigit\
    \ / 16\n            val hexDigitRemainder = hexDigit % 16\n            val hexDigitRemainderCount\
    \ = hexDigitRemainder / 16\n            val hexDigitRemainderRemainder = hexDigitRemainder\
    \ % 16\n            val hexDigitRemainderRemainderCount = hexDigitRemainderRemainder\
    \ / 16\n            val hexDigitRemainderRemainderRemainder = hexDigitRemainderRemainder\
    \ % 16\n            val hexDigitRemainderRemainderRemainderCount = hexDigitRemainderRemainderRemainder\
    \ / 16\n            val hexDigitRemainderRemainderRemainderRemainder = hexDigitRemainderRemainderRemainder\
    \ % 16\n            val hexDigitRemainderRemainderRemainderRemainderCount = hexDigitRemainderRemainderRemainderRemainder\
    \ / 16\n            val hexDigitRemainderRemainderRemainderRemainderRemainder\
    \ = hexDigitRemainderRemainderRemainderRemainder % 16\n            val hexDigitRemainderRemainderRemainderRemainderRemainderCount\
    \ = hexDigitRemainderRemainderRemainderRemainderRemainder / 16\n            val\
    \ hexDigitRemainderRemainderRemainderRemainderRemainderRemainder = hexDigitRemainderRemainderRemainderRemainderRemainder\
    \ % 16\n            val hexDigitRemainderRemainderRemainderRemainderRemainderCount\
    \ = hexDigitRemainderRemainderRemainderRemainderRemainderRemainder / 16\n    \
    \        val hexDigitRemainderRemainderRemainderRemainderRemainderRemainder =\
    \ hexDigitRemainderRemainderRemainderRemainderRemainderRemainder % 16\n      \
    \      val hexDigitRemainderRemainderRemainderRemainderRemainderCount = hexDigitRemainderRemainderRemainderRemainderRemainderRemainder\
    \ / 16\n            val hexDigitRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = hexDigitRemainderRemainderRemainderRemainderRemainderRemainder % 16\n    \
    \        val hexDigitRemainderRemainderRemainderRemainderRemainderCount = hexDigitRemainderRemainderRemainderRemainderRemainderRemainder\
    \ / 16\n            val hexDigitRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = hexDigitRemainderRemainderRemainderRemainderRemainderRemainder % 16\n    \
    \        val hexDigitRemainderRemainderRemainderRemainderRemainderCount = hexDigitRemainderRemainderRemainderRemainderRemain",
  "        val hex = num.map(x => x.toInt)\n        val primes = mutable.Set[Long]()\n\
    \        val hexPrimes = mutable.Set[Long]()\n        val hexPrime = mutable.Set[Long]()\n\
    \        val hexPrimePrime = mutable.Set[Long]()\n        val hexPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val hexPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrime =\
    \ mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val hexPrimePrimePri", "        val hex = num.toCharArray\n\
    \        val hexLength = hex.length\n        val hexKey = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLength = new mutable.HashMap[Int, Int]()\n       \
    \ val hexKeyLength2 = new mutable.HashMap[Int, Int]()\n        val hexKeyLength3\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLength4 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLength5 = new mutable.HashMap[Int, Int]()\n      \
    \  val hexKeyLength6 = new mutable.HashMap[Int, Int]()\n        val hexKeyLength7\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLength8 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLength9 = new mutable.HashMap[Int, Int]()\n      \
    \  val hexKeyLength10 = new mutable.HashMap[Int, Int]()\n        val hexKeyLength11\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLength12 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLength13 = new mutable.HashMap[Int, Int]()\n     \
    \   val hexKeyLength14 = new mutable.HashMap[Int, Int]()\n        val hexKeyLength15\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLength16 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLength17 = new mutable.HashMap[Int, Int]()\n     \
    \   val hexKeyLength18 = new mutable.HashMap[Int, Int]()\n        val hexKeyLength19\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLength20 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLength21 = new mutable.HashMap[Int, Int]()\n     \
    \   val hexKeyLength22 = new mutable.HashMap[Int, Int]()\n        val hexKeyLength23\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLength24 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLength25 = new mutable.HashMap[Int, Int]()\n     \
    \   val hexKeyLength26 = new mutable.HashMap[Int, Int]()\n        val hexKeyLength27\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLength28 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLength", "        val hex = num.toCharArray\n    \
    \    val hexKey = hex.foldLeft(0L){\n            case (acc, c) =>\n          \
    \      val hexDigit = hexToInt(c)\n                val hexDigitCount = hexDigit\
    \ / 16\n                val hexDigitRemainder = hexDigit % 16\n              \
    \  val hexDigitCount = hexDigitCount + hexDigitRemainder\n                val\
    \ hexDigitCount = hexDigitCount + hexDigitCount\n                val hexDigitCount\
    \ = hexDigitCount + hexDigitCount\n                val hexDigitCount = hexDigitCount\
    \ + hexDigitCount\n                val hexDigitCount = hexDigitCount + hexDigitCount\n\
    \                val hexDigitCount = hexDigitCount + hexDigitCount\n         \
    \       val hexDigitCount = hexDigitCount + hexDigitCount\n                val\
    \ hexDigitCount = hexDigitCount + hexDigitCount\n                val hexDigitCount\
    \ = hexDigitCount + hexDigitCount\n                val hexDigitCount = hexDigitCount\
    \ + hexDigitCount\n                val hexDigitCount = hexDigitCount + hexDigitCount\n\
    \                val hexDigitCount = hexDigitCount + hexDigitCount\n         \
    \       val hexDigitCount = hexDigitCount + hexDigitCount\n                val\
    \ hexDigitCount = hexDigitCount + hexDigitCount\n                val hexDigitCount\
    \ = hexDigitCount + hexDigitCount\n                val hexDigitCount = hexDigitCount\
    \ + hexDigitCount\n                val hexDigitCount = hexDigitCount + hexDigitCount\n\
    \                val hexDigitCount = hexDigitCount + hexDigitCount\n         \
    \       val hexDigitCount = hexDigitCount + hexDigitCount\n                val\
    \ hexDigitCount = hexDigitCount + hexDigitCount\n                val hexDigitCount\
    \ = hexDigitCount + hexDigitCount\n                val hexDigitCount = hexDigitCount\
    \ + hexDigitCount\n                val hexDigitCount = hexDigitCount + hexDigitCount\n\
    \                val hexDigitCount = hexDigitCount + hexDigitCount\n         \
    \       val hexDigitCount = hexDigitCount + hexDigitCount\n                val\
    \ hexDigitCount = hexDigitCount + hexDigitCount\n                val hexDigitCount\
    \ = hexDigitCount + hexDigitCount\n                val hexDigitCount = hexDigitCount\
    \ + hexDigitCount\n                val hexDigitCount = hexDigitCount + hexDigitCount\n\
    \                val hexDigitCount = hexDigitCount + hexDigitCount\n         \
    \       val hexDigitCount = hexDigitCount + hexDigitCount\n                val\
    \ hexDigitCount = hexDigitCount + hexDigitCount\n                val hexDigitCount\
    \ = hexDigitCount + hexDigitCount\n                val hexDigitCount = hexDigitCount\
    \ + hexDigitCount\n                val hexDigitCount = hex", "        val nums\
    \ = num.split(\"\").toList\n        val primes = mutable.ArrayBuffer(2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997)\n        val primesCount = primes.count(_ > 0)\n        val hexDigits =\
    \ nums.filter(x => x != \"A\" && x != \"B\" && x != \"C\" && x != \"D\" && x !=\
    \ \"E\" && x != \"F\")\n        val hexDigitCount = hexDigits.size\n        val\
    \ hexDigitPrimes = hexDigits.filter(x => primes.contains(x.toInt))\n        val\
    \ hexDigitPrimeCount = hexDigitPrimes.size\n        val hexDigitPrimePrimes =\
    \ hexDigitPrimes.filter(x => primes.contains(x.toInt))\n        val hexDigitPrimePrimeCount\
    \ = hexDigitPrimePrimes.size\n        val hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter(x\
    \ => primes.contains(x.toInt))\n        val hexDigitPrimePrimePri", "        val\
    \ hex = num.toCharArray.map(_.toString.toInt)\n        val hexKey = hex.map(x\
    \ => x % 10).sum\n        hexKey", "        val hex = num.toCharArray.map(_.toHexString)\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x\
    \ => x % 10)\n        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4\
    \ = hexKey3.map(x => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n\
    \        val hexKey6 = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9\
    \ = hexKey8.map(x => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n\
    \        val hexKey11 = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14\
    \ = hexKey13.map(x => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n\
    \        val hexKey16 = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19\
    \ = hexKey18.map(x => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n\
    \        val hexKey21 = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24\
    \ = hexKey23.map(x => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n\
    \        val hexKey26 = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29\
    \ = hexKey28.map(x => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n\
    \        val hexKey31 = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x\
    \ => x % 10)\n", "        val hex = num.toCharArray.map(_.toInt)\n        val\
    \ primes = mutable.Set[Int]()\n        val primesSet = mutable.Set[Int]()\n  \
    \      val primesSet2 = mutable.Set[Int]()\n        val primesSet3 = mutable.Set[Int]()\n\
    \        val primesSet4 = mutable.Set[Int]()\n        val primesSet5 = mutable.Set[Int]()\n\
    \        val primesSet6 = mutable.Set[Int]()\n        val primesSet7 = mutable.Set[Int]()\n\
    \        val primesSet8 = mutable.Set[Int]()\n        val primesSet9 = mutable.Set[Int]()\n\
    \        val primesSet10 = mutable.Set[Int]()\n        val primesSet11 = mutable.Set[Int]()\n\
    \        val primesSet12 = mutable.Set[Int]()\n        val primesSet13 = mutable.Set[Int]()\n\
    \        val primesSet14 = mutable.Set[Int]()\n        val primesSet15 = mutable.Set[Int]()\n\
    \        val primesSet16 = mutable.Set[Int]()\n        val primesSet17 = mutable.Set[Int]()\n\
    \        val primesSet18 = mutable.Set[Int]()\n        val primesSet19 = mutable.Set[Int]()\n\
    \        val primesSet20 = mutable.Set[Int]()\n        val primesSet21 = mutable.Set[Int]()\n\
    \        val primesSet22 = mutable.Set[Int]()\n        val primesSet23 = mutable.Set[Int]()\n\
    \        val primesSet24 = mutable.Set[Int]()\n        val primesSet25 = mutable.Set[Int]()\n\
    \        val primesSet26 = mutable.Set[Int]()\n        val primesSet27 = mutable.Set[Int]()\n\
    \        val primesSet28 = mutable.Set[Int]()\n        val primesSet29 = mutable.Set[Int]()\n\
    \        val primesSet30 = mutable.Set[Int]()\n        val primesSet31 = mutable.Set[Int]()\n\
    \        val primesSet32 = mutable.Set[Int]()\n        val primesSet33 = mutable.Set[Int]()\n\
    \        val prime", "        val hex = num.toCharArray.map(_.toInt)\n       \
    \ val hexKey = hex.map(x => math.pow(16, x))\n        val hexKeySum = hexKey.sum\n\
    \        val hexKeySumInt = hexKeySum.toInt\n        val hexKeySumInt = hexKeySumInt.toLong\n\
    \        hexKeySumInt", "        val hex = num.toCharArray\n        val hexCount\
    \ = hex.length\n        val hexKey = hex.map(x => x.toInt).map(x => x * x).sum\n\
    \        val hexKey2 = hexKey.toLong\n        val hexKey3 = hexKey2.toLong\n \
    \       val hexKey4 = hexKey3.toLong\n        val hexKey5 = hexKey4.toLong\n \
    \       val hexKey6 = hexKey5.toLong\n        val hexKey7 = hexKey6.toLong\n \
    \       val hexKey8 = hexKey7.toLong\n        val hexKey9 = hexKey8.toLong\n \
    \       val hexKey10 = hexKey9.toLong\n        val hexKey11 = hexKey10.toLong\n\
    \        val hexKey12 = hexKey11.toLong\n        val hexKey13 = hexKey12.toLong\n\
    \        val hexKey14 = hexKey13.toLong\n        val hexKey15 = hexKey14.toLong\n\
    \        val hexKey16 = hexKey15.toLong\n        val hexKey17 = hexKey16.toLong\n\
    \        val hexKey18 = hexKey17.toLong\n        val hexKey19 = hexKey18.toLong\n\
    \        val hexKey20 = hexKey19.toLong\n        val hexKey21 = hexKey20.toLong\n\
    \        val hexKey22 = hexKey21.toLong\n        val hexKey23 = hexKey22.toLong\n\
    \        val hexKey24 = hexKey23.toLong\n        val hexKey25 = hexKey24.toLong\n\
    \        val hexKey26 = hexKey25.toLong\n        val hexKey27 = hexKey26.toLong\n\
    \        val hexKey28 = hexKey27.toLong\n        val hexKey29 = hexKey28.toLong\n\
    \        val hexKey30 = hexKey29.toLong\n        val hexKey31 = hexKey30.toLong\n\
    \        val hexKey32 = hexKey31.toLong\n        val hexKey33 = hexKey32.toLong\n\
    \        val hexKey34 = hexKey33.toLong\n        val hexKey35 = hexKey34.toLong\n\
    \        val hexKey36 = hexKey35.toLong\n        val hexKey37 = hexKey36.toLong\n\
    \        val hexKey38 = hexKey37.toLong\n        val hexKey39 = hexKey38.toLong\n\
    \        val hexKey40 = hexKey39.toLong\n        val hexKey41 = hexKey40.toLong\n\
    \        val hexKey42 = hex", "        val nums = num.split(\"\").toList\n   \
    \     val hexNums = nums.map(_.toInt)\n        val primes = hexNums.filter(x =>\
    \ isPrime(x))\n        primes.count(x => hexNums.contains(x))", "        val hex\
    \ = num.toCharArray.map(_.toString.toInt)\n        val hexKey = hex.map(x => x\
    \ % 10).sum\n        hexKey", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val hexKey = hex.foldLeft(0L){ (sum, digit) => sum + digit * digit}\n\
    \        hexKey"]
stop_tokens:
- "\n    }\n"

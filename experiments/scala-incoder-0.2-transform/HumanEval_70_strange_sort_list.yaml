name: HumanEval_70_strange_sort_list
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given list of integers, return list in strange order.\n    // Strange sorting,\
  \ is when you start with the minimum value,\n    // then maximum of the remaining\
  \ integers, then minimum and so on.\n    // Examples:\n    // >>> strangeSortList((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong)))\n    // (List[Long](1l.toLong, 4l.toLong, 2l.toLong,\
  \ 3l.toLong))\n    // >>> strangeSortList((List[Long](5l.toLong, 5l.toLong, 5l.toLong,\
  \ 5l.toLong)))\n    // (List[Long](5l.toLong, 5l.toLong, 5l.toLong, 5l.toLong))\n\
  \    // >>> strangeSortList((List[Long]()))\n    // (List[Long]())\n    def strangeSortList(lst\
  \ : List[Long]) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(strangeSortList((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 4l.toLong, 2l.toLong,\
  \ 3l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 6l.toLong, 7l.toLong,\
  \ 8l.toLong, 9l.toLong))).equals((List[Long](5l.toLong, 9l.toLong, 6l.toLong, 8l.toLong,\
  \ 7l.toLong))));\n    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong,\
  \ 4l.toLong, 5l.toLong))).equals((List[Long](1l.toLong, 5l.toLong, 2l.toLong, 4l.toLong,\
  \ 3l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 6l.toLong, 7l.toLong,\
  \ 8l.toLong, 9l.toLong, 1l.toLong))).equals((List[Long](1l.toLong, 9l.toLong, 5l.toLong,\
  \ 8l.toLong, 6l.toLong, 7l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong,\
  \ 5l.toLong, 5l.toLong, 5l.toLong))).equals((List[Long](5l.toLong, 5l.toLong, 5l.toLong,\
  \ 5l.toLong))));\n    assert(strangeSortList((List[Long]())).equals((List[Long]())));\n\
  \    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong))).equals((List[Long](1l.toLong, 8l.toLong,\
  \ 2l.toLong, 7l.toLong, 3l.toLong, 6l.toLong, 4l.toLong, 5l.toLong))));\n    assert(strangeSortList((List[Long](0l.toLong,\
  \ 2l.toLong, 2l.toLong, 2l.toLong, 5l.toLong, 5l.toLong, -5l.toLong, -5l.toLong))).equals((List[Long](-5l.toLong,\
  \ 5l.toLong, -5l.toLong, 5l.toLong, 0l.toLong, 2l.toLong, 2l.toLong, 2l.toLong))));\n\
  \    assert(strangeSortList((List[Long](111111l.toLong))).equals((List[Long](111111l.toLong))));\n\
  \    }\n\n}\n"
completions: ["        val maxIndex = lst.map(_.toLong).max\n        val minIndex\
    \ = lst.map(_.toLong).min\n        val maxValue = lst.map(_.toLong).max\n    \
    \    val minValue = lst.map(_.toLong).min\n        val maxIndex2 = lst.map(_.toLong).max\n\
    \        val minIndex2 = lst.map(_.toLong).min\n        val maxValue2 = lst.map(_.toLong).max\n\
    \        val minValue2 = lst.map(_.toLong).min\n        val maxIndex3 = lst.map(_.toLong).max\n\
    \        val minIndex3 = lst.map(_.toLong).min\n        val maxValue3 = lst.map(_.toLong).max\n\
    \        val minValue3 = lst.map(_.toLong).min\n        val maxIndex4 = lst.map(_.toLong).max\n\
    \        val minIndex4 = lst.map(_.toLong).min\n        val maxValue4 = lst.map(_.toLong).max\n\
    \        val minValue4 = lst.map(_.toLong).min\n        val maxIndex5 = lst.map(_.toLong).max\n\
    \        val minIndex5 = lst.map(_.toLong).min\n        val maxValue5 = lst.map(_.toLong).max\n\
    \        val minValue5 = lst.map(_.toLong).min\n        val maxIndex6 = lst.map(_.toLong).max\n\
    \        val minIndex6 = lst.map(_.toLong).min\n        val maxValue6 = lst.map(_.toLong).max\n\
    \        val minValue6 = lst.map(_.toLong).min\n        val maxIndex7 = lst.map(_.toLong).max\n\
    \        val minIndex7 = lst.map(_.toLong).min\n        val maxValue7 = lst.map(_.toLong).max\n\
    \        val minValue7 = lst.map(_.toLong).min\n        val maxIndex8 = lst.map(_.toLong).max\n\
    \        val minIndex8 = lst.map(_.toLong).min\n        val maxValue8 = lst.map(_.toLong).max\n\
    \        val minValue8 = lst.map(_.toLong).min\n        val maxIndex9 = lst.map(_.toLong).max\n\
    \        val minIndex9 = lst.map(_.toLong).min\n        val maxValue9 = lst.map(_.toLong).max\n\
    \        val minValue9 = lst.map(_.toLong).min\n        val maxIndex10 = lst.map(_.toLong).",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val minValue = lst.min\n   \
    \     val maxValue = lst.max\n        val minIndex = lst.indexWhere(x => x ==\
    \ minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n     \
    \   val minList = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex)\n\
    \        val minListWithMax = minList ++ maxList\n        val maxListWithMin =\
    \ maxList ++ minList\n        val minListWithMaxAndMin = minListWithMax ++ minListWithMin\n\
    \        val maxListWithMinAndMax = maxListWithMin ++ maxListWithMax\n       \
    \ val minListWithMaxAndMinAndMax = minListWithMaxAndMin ++ maxListWithMinAndMax\n\
    \        minListWithMaxAndMinAndMax", "        val minValue = lst.min\n      \
    \  val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n    \
    \    val maxIndex = lst.indexOf(maxValue)\n        val middleIndex = math.max(minIndex,maxIndex)\
    \ / 2\n        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middleIndex)\n        val middleIndex = lst.indexOf(middleValue)\n\
    \        val middleValue = lst(middle", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val currentIndex = minIndex\n        while(currentIndex < maxIndex){\n  \
    \          result.add(lst(currentIndex))\n            currentIndex += 1\n    \
    \    }\n        result.toList", "        val sorted = lst.sortWith((a, b) => a\
    \ < b)\n        val result: List[Long] = lst.filterNot(sorted.contains)\n    \
    \    result", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = 0\n        val maxIndex = lst.size - 1\n        val tempList\
    \ = lst.sortWith(_ < _)\n        val newList = tempList.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val max", "      \
    \  val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex =\
    \ lst.indexWhere(x => x == minVal)\n        val maxIndex = lst.indexWhere(x =>\
    \ x == maxVal)\n        val minValIndex = lst.indexWhere(x => x == minVal)\n \
    \       val maxValIndex = lst.indexWhere(x => x == maxVal)\n        val minValIndex2\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex2 = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex3 = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex3 = lst.indexWhere(x => x == maxVal)\n        val minValIndex4\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex4 = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex5 = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex5 = lst.indexWhere(x => x == maxVal)\n        val minValIndex6\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex6 = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex7 = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex7 = lst.indexWhere(x => x == maxVal)\n        val minValIndex8\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex8 = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex9 = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex9 = lst.indexWhere(x => x == maxVal)\n        val minValIndex10\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex10 = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex11 = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex11 = lst.indexWhere(x => x == maxVal)\n        val minValIndex12\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex12 = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex13 = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex13 = lst.indexWhere(x ", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex2 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n        val minIndex3\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex3 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex4 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n        val minIndex5\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex5 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex6 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n        val minIndex7\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex7 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex8 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n        val minIndex9\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex9 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex10 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n        val minIndex11\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex11 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex12 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n        val minIndex13\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex13 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex14 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n        val minIndex15\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex15 = lst.indexWhere(x\
    \ => x == maxValue)", "        val minValue = lst.min\n        val maxValue =\
    \ lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val listToSort = lst.filter(_ != minValue &&\
    \ _ != maxValue)\n        val listToSort2 = listToSort.sortWith((x, y) => x -\
    \ y)\n        val listToSort3 = listToSort2.filter(_ != minValue)\n        val\
    \ listToSort4 = listToSort3.filter(_ != maxValue)\n        listToSort4.take(minIndex).reverse.take(maxIndex).reverse.sortWith((x,\
    \ y) => x - y)", "        val newList = mutable.ListBuffer.empty[Long]\n     \
    \   val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val midIndex = minIndex + maxIndex / 2\n        val midValue = lst(midIndex)\n\
    \        newList += minValue\n        newList += midValue\n        newList +=\
    \ maxValue\n        newList", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex2 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n        val minIndex3\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex3 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex4 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n        val minIndex5\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex5 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex6 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n        val minIndex7\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex7 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex8 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n        val minIndex9\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex9 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex10 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n        val minIndex11\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex11 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex12 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n        val minIndex13\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex13 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex14 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n        val minIndex15\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex15 = lst.indexWhere(x\
    \ => x == maxValue)", "        val list = new mutable.ListBuffer[Long]()\n   \
    \     val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    for(i <- minIndex to maxIndex){\n            list += lst(i)\n        }\n\
    \        list.toList", "        val minValue = lst.min\n        val maxValue =\
    \ lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n       \
    \ val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex)\n        val minListWithMax = minList\
    \ ++ maxList\n        val maxListWithMin = maxList ++ minList\n        val minListWithMaxAndMin\
    \ = minListWithMax ++ minListWithMin\n        val maxListWithMinAndMax = maxListWithMin\
    \ ++ maxListWithMax\n        val minListWithMaxAndMinAndMax = minListWithMaxAndMin\
    \ ++ maxListWithMinAndMax\n        minListWithMaxAndMinAndMax", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => \n            if (x == minValue) y else x\n        )\n        if (newList.size\
    \ < 2) newList\n        else strangeSortList(newList.take(minIndex) + newList.drop(maxIndex))",
  "        val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minVal)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minVal2 = lst.take(minIndex).min\n        val maxVal2\
    \ = lst.take(maxIndex).max\n        val minIndex2 = lst.indexWhere(x => x == minVal2)\n\
    \        val maxIndex2 = lst.indexWhere(x => x == maxVal2)\n        val minVal3\
    \ = lst.take(minIndex2).min\n        val maxVal3 = lst.take(maxIndex2).max\n \
    \       val minIndex3 = lst.indexWhere(x => x == minVal3)\n        val maxIndex3\
    \ = lst.indexWhere(x => x == maxVal3)\n        lst.sortWith((x, y) => if (x ==\
    \ minVal) y else x)", "        val list = lst.sortWith((a, b) => a < b)\n    \
    \    val list2 = list.sortWith((a, b) => a < b)\n        val list3 = list.sortWith((a,\
    \ b) => a > b)\n        val list4 = list.sortWith((a, b) => a > b)\n        val\
    \ list5 = list.sortWith((a, b) => a < b)\n        val list6 = list.sortWith((a,\
    \ b) => a > b)\n        val list7 = list.sortWith((a, b) => a < b)\n        val\
    \ list8 = list.sortWith((a, b) => a > b)\n        val list9 = list.sortWith((a,\
    \ b) => a < b)\n        val list10 = list.sortWith((a, b) => a > b)\n        val\
    \ list11 = list.sortWith((a, b) => a < b)\n        val list12 = list.sortWith((a,\
    \ b) => a > b)\n        val list13 = list.sortWith((a, b) => a < b)\n        val\
    \ list14 = list.sortWith((a, b) => a > b)\n        val list15 = list.sortWith((a,\
    \ b) => a < b)\n        val list16 = list.sortWith((a, b) => a > b)\n        val\
    \ list17 = list.sortWith((a, b) => a < b)\n        val list18 = list.sortWith((a,\
    \ b) => a > b)\n        val list19 = list.sortWith((a, b) => a < b)\n        val\
    \ list20 = list.sortWith((a, b) => a > b)\n        val list21 = list.sortWith((a,\
    \ b) => a < b)\n        val list22 = list.sortWith((a, b) => a > b)\n        val\
    \ list23 = list.sortWith((a, b) => a < b)\n        val list24 = list.sortWith((a,\
    \ b) => a > b)\n        val list25 = list.sortWith((a, b) => a < b)\n        val\
    \ list26 = list.sortWith((a, b) => a > b)\n        val list27 = list.sortWith((a,\
    \ b) => a < b)\n        val list28 = list.sortWith((a, b) => a > b)\n        val\
    \ list29 = list.sortWith((a, b) => a < b)\n        val list30 = list.sortWith((a,\
    \ b) => a > b)\n        val list31 = list.sortWith((a, b) => a < b)\n        val\
    \ list32 = list.sortWith((a, b) => a > b)\n        val list33 = list.sortWith((a,\
    \ b) => a < b)\n        val list34 = list.sortWith((a, b) => a > b)\n        val\
    \ list35 = list.sortWith((a, b) => a < b)", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexWhere(x => x\
    \ == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n  \
    \      val minList = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex\
    \ + 1)\n        val minList2 = minList.map(_ + minValue)\n        val maxList2\
    \ = maxList.map(_ - maxValue)\n        val minList3 = minList2.zip(maxList2).map{case\
    \ (x, y) => x + y}\n        val maxList3 = minList2.zip(maxList2).map{case (x,\
    \ y) => x - y}\n        val minList4 = minList3.zip(maxList3).map{case (x, y)\
    \ => x + y}\n        val maxList4 = minList3.zip(maxList3).map{case (x, y) =>\
    \ x - y}\n        val minList5 = minList4.zip(maxList4).map{case (x, y) => x +\
    \ y}\n        val maxList5 = minList4.zip(maxList4).map{case (x, y) => x - y}\n\
    \        val minList6 = minList5.zip(maxList5).map{case (x, y) => x + y}\n   \
    \     val maxList6 = minList5.zip(maxList5).map{case (x, y) => x - y}\n      \
    \  val minList7 = minList6.zip(maxList6).map{case (x, y) => x + y}\n        val\
    \ maxList7 = minList6.zip(maxList6).map{case (x, y) => x - y}\n        val minList8\
    \ = minList7.zip(maxList7).map{case (x, y) => x + y}\n        val maxList8 = minList7.zip(maxList7).map{case\
    \ (x, y) => x - y}\n        val minList9 = minList8.zip(maxList8).map{case (x,\
    \ y) => x + y}\n        val maxList9 = minList8.zip(maxList8).map{case (x, y)\
    \ => x - y}\n        val minList10 = minList9.zip(maxList9).map{case (x, y) =>\
    \ x + y}\n        val maxList10 = minList9.zip(maxList9).map{case (x, y) => x\
    \ - y}\n        val minList11 = minList10.zip(maxList10).map{case (x, y) => x\
    \ + y}\n        val maxList11 = minList10.zip(maxList10).map{case (x, y) => x\
    \ - y}\n        val minList12 = minList11.", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        newList.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse",
  "        val sorted = lst.sortWith((x, y) => x < y)\n        val reversed = sorted.reverse\n\
    \        reversed.toList", "        val lst2 = lst.sortWith((x, y) => x < y)\n\
    \        val lst3 = lst2.sortWith((x, y) => x > y)\n        val lst4 = lst3.sortWith((x,\
    \ y) => x < y)\n        val lst5 = lst4.sortWith((x, y) => x > y)\n        lst5",
  "        val minLst = lst.min\n        val maxLst = lst.max\n        val minLstIndex\
    \ = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n     \
    \   val minLstValue = lst.apply(minLstIndex)\n        val maxLstValue = lst.apply(maxLstIndex)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex = ",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.sortWith((x,\
    \ y) => y < x)\n        val newList3 = newList2.sortWith((x, y) => x < y)\n  \
    \      val newList4 = newList3.sortWith((x, y) => y < x)\n        newList4.toList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minList = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex)\n\
    \        val newList = minList ++ maxList ++ minList\n        newList", "    \
    \    val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.filter((x,\
    \ i) => newList.indexOf(x) == i)\n        newList2.reverse", "        val minVal\
    \ = lst.min\n        val maxVal = lst.max\n        val minIndex = lst.indexOf(minVal)\n\
    \        val maxIndex = lst.indexOf(maxVal)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex)\n        val newList = minList ++ maxList\
    \ ++ minList\n        newList", "        val sorted = lst.sortWith(_ < _)\n  \
    \      val reversed = sorted.reverse\n        reversed.toList", "        val minLst\
    \ = lst.min\n        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex2 + 1)\n   \
    \     val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex2 + 1)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex3 + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex3 + 1)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex4\
    \ + 1)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex4 + 1)\n   \
    \     val minLstIndex6 = lst.indexOf(minLst, minLstIndex5 + 1)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex5 + 1)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex6 + 1)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6\
    \ + 1)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex7 + 1)\n   \
    \     val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex7 + 1)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex8 + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex8 + 1)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex9\
    \ + 1)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex9 + 1)\n  \
    \      val minLstIndex11 = lst.indexOf(minLst, minLstIndex10 + 1)\n        val\
    \ maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10 + 1)\n        val minLstIndex12\
    \ = lst.indexOf(minLst, minLstIndex11 + 1)\n        val maxLstIndex12 = lst.indexOf(maxLst,\
    \ maxLstIndex11 + 1)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex12\
    \ + 1)\n        val maxLstIndex13 = l", "        val minValue = lst.min\n    \
    \    val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n  \
    \      val maxIndex = lst.indexOf(maxValue)\n        val minValues = lst.take(minIndex)\n\
    \        val maxValues = lst.drop(maxIndex + 1)\n        val minValuesAndMaxValues\
    \ = minValues ++ maxValues\n        val minValuesAndMaxIndexes = minValuesAndMaxValues.zipWithIndex\n\
    \        val maxValuesAndMinValues = maxValues ++ minValues\n        val maxValuesAndMinIndexes\
    \ = maxValuesAndMinValues.zipWithIndex\n        val minValuesAndMaxIndexesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxIndexes ++ maxValuesAndMinIndexes\n        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexes\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxValues.zipWithIndex\n        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValues\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexes.zipWithIndex\n        val\
    \ minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValues.zipWithIndex\n\
    \        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexes\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues.zipWithIndex\n\
    \        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValues\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexes.zipWithIndex\n\
    \        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexes.zipWithIndex\n\
    \        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexes\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValues.zipWithIndex\n\
    \        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValues\
    \ = minValuesAndMaxIndexesAnd", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue, minIndex\
    \ + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n        val\
    \ minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue,\
    \ maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n\
    \        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5\
    \ = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue,\
    \ maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n\
    \        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7\
    \ = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue,\
    \ maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n\
    \        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9\
    \ = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue,\
    \ maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n\
    \        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11\
    \ = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue,\
    \ maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n\
    \        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13\
    \ = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue,\
    \ maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n\
    \        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15\
    \ = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue,\
    \ maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n\
    \        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17\
    \ = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.filterNot(_\
    \ == minValue)\n        newList.sortWith((x, y) => y > x)\n        newList.take(minIndex)\
    \ ++ newList.drop(maxIndex) ++ newList.take(minIndex)", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex + 1)\n        val newList = minList ++\
    \ maxList\n        newList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n        val\
    \ maxList = lst.drop(maxIndex+1)\n        val newList = minList ++ maxList\n \
    \       newList", "        val minVal = lst.min\n        val maxVal = lst.max\n\
    \        val minIndex = lst.indexWhere(x => x == minVal)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxVal)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex)\n        val newList = minList ++ maxList\
    \ ++ minList\n        newList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex)\n        val minListWithMax = minList\
    \ ++ maxList\n        val maxListWithMin = maxList ++ minList\n        val minListWithMaxAndMin\
    \ = minListWithMax ++ minListWithMin\n        val maxListWithMinAndMax = maxListWithMin\
    \ ++ maxListWithMax\n        val minListWithMaxAndMinAndMax = minListWithMaxAndMin\
    \ ++ maxListWithMinAndMax\n        minListWithMaxAndMinAndMax", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith(\
    \ (a,b) => \n            if (minIndex < maxIndex) \n                if (a < b)\
    \ minIndex\n                else maxIndex\n            else maxIndex\n       \
    \ )\n        newList", "        val maxVal = lst.max\n        val minVal = lst.min\n\
    \        val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.sortWith((x,\
    \ y) => x > y)\n        val newList3 = newList2.sortWith((x, y) => x < y)\n  \
    \      val newList4 = newList3.sortWith((x, y) => x > y)\n        val newList5\
    \ = newList4.sortWith((x, y) => x < y)\n        val newList6 = newList5.sortWith((x,\
    \ y) => x > y)\n        val newList7 = newList6.sortWith((x, y) => x < y)\n  \
    \      val newList8 = newList7.sortWith((x, y) => x > y)\n        val newList9\
    \ = newList8.sortWith((x, y) => x < y)\n        val newList10 = newList9.sortWith((x,\
    \ y) => x > y)\n        val newList11 = newList10.sortWith((x, y) => x < y)\n\
    \        val newList12 = newList11.sortWith((x, y) => x > y)\n        val newList13\
    \ = newList12.sortWith((x, y) => x < y)\n        val newList14 = newList13.sortWith((x,\
    \ y) => x > y)\n        val newList15 = newList14.sortWith((x, y) => x < y)\n\
    \        val newList16 = newList15.sortWith((x, y) => x > y)\n        val newList17\
    \ = newList16.sortWith((x, y) => x < y)\n        val newList18 = newList17.sortWith((x,\
    \ y) => x > y)\n        val newList19 = newList18.sortWith((x, y) => x < y)\n\
    \        val newList20 = newList19.sortWith((x, y) => x > y)\n        val newList21\
    \ = newList20.sortWith((x, y) => x < y)\n        val newList22 = newList21.sortWith((x,\
    \ y) => x > y)\n        val newList23 = newList22.sortWith((x, y) => x < y)\n\
    \        val newList24 = newList23.sortWith((x, y) => x > y)\n        val newList25\
    \ = newList24.sortWith((x, y) => x < y)\n        val newList26 = newList25.sortWith((x,\
    \ y) => x > y)\n        val newList27 = newList26.sortWith((x, y) => x < y)\n\
    \        val newList28 = newList27.sortWith((x, y) => x > y)\n        val newList29\
    \ = newList28.sortWith((x, y) => x < y)\n        val newList30 = newList29.sortWith((x,\
    \ y) => x > y)\n        val newList31 = newList30.sortWith((x, y) => x < y)",
  "        val newList = mutable.ListBuffer[Long]()\n        var minValue = lst.head\n\
    \        var maxValue = lst.last\n        var currentMinValue = lst.head\n   \
    \     var currentMaxValue = lst.last\n        var currentMinIndex = 0\n      \
    \  var currentMaxIndex = 0\n        var currentMinIndex = 0\n        var currentMaxIndex\
    \ = 0\n        var currentMinIndex = 0\n        var currentMaxIndex = 0\n    \
    \    var currentMinIndex = 0\n        var currentMaxIndex = 0\n        var currentMinIndex\
    \ = 0\n        var currentMaxIndex = 0\n        var currentMinIndex = 0\n    \
    \    var currentMaxIndex = 0\n        var currentMinIndex = 0\n        var currentMaxIndex\
    \ = 0\n        var currentMinIndex = 0\n        var currentMaxIndex = 0\n    \
    \    var currentMinIndex = 0\n        var currentMaxIndex = 0\n        var currentMinIndex\
    \ = 0\n        var currentMaxIndex = 0\n        var currentMinIndex = 0\n    \
    \    var currentMaxIndex = 0\n        var currentMinIndex = 0\n        var currentMaxIndex\
    \ = 0\n        var currentMinIndex = 0\n        var currentMaxIndex = 0\n    \
    \    var currentMinIndex = 0\n        var currentMaxIndex = 0\n        var currentMinIndex\
    \ = 0\n        var currentMaxIndex = 0\n        var currentMinIndex = 0\n    \
    \    var currentMaxIndex = 0\n        var currentMinIndex = 0\n        var currentMaxIndex\
    \ = 0\n        var currentMinIndex = 0\n        var currentMaxIndex = 0\n    \
    \    var currentMinIndex = 0\n        var currentMaxIndex = 0\n        var currentMinIndex\
    \ = 0\n        var currentMaxIndex = 0\n        var currentMinIndex = 0\n    \
    \    var currentMaxIndex = 0\n        var currentMinIndex = 0\n        var currentMaxIndex\
    \ = 0\n        var currentMinIndex = 0\n        var currentMaxIndex = 0\n    \
    \    var currentMinIndex = 0\n        var currentMaxIndex = 0\n        var currentMinIndex\
    \ = 0\n        var currentMaxIndex = 0\n        var currentMinIndex = 0\n    \
    \    var currentMaxIndex = 0\n        var currentMinIndex = 0\n        var currentMaxIndex\
    \ = 0\n        var currentMinIndex = 0\n        var currentMaxIndex = 0\n    \
    \    var currentMinIndex = 0\n        var currentMaxIndex = 0\n        var currentMinIndex\
    \ = 0\n        var currentMaxIndex = 0\n        var currentMinIndex = 0\n    \
    \    var currentMaxIndex = 0\n        var currentMinIndex = 0\n        var currentMaxIndex\
    \ = 0\n        var currentMinIndex = 0\n        var currentMaxIndex = 0\n    \
    \    var currentMinIndex = 0\n        var currentMaxIndex = 0\n        var currentMinIndex\
    \ = 0\n        var currentMaxIndex = 0\n        var currentMinIndex = 0\n    \
    \    var currentMaxIndex = 0\n        var currentMinIndex = 0\n        var currentMaxIndex\
    \ = 0\n        var currentMinIndex = 0\n        var currentMaxIndex = 0\n    \
    \    var currentMinIndex = 0\n        var currentMaxIndex = 0\n        var ",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((a, b) => a < b ? -1 : a > b ? 1 : 0)\n      \
    \  newList.take(minIndex) ++ newList.drop(maxIndex) ++ newList.take(minIndex)",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.filter((_,\
    \ i) => i != minIndex && i != maxIndex)\n        newList2.reverse", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val max", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val lst2 = lst.sortBy(x => x)\n\
    \        val lst3 = lst2.sortBy(x => x)\n        val lst4 = lst3.sortBy(x => x)\n\
    \        val lst5 = lst4.sortBy(x => x)\n        val lst6 = lst5.sortBy(x => x)\n\
    \        val lst7 = lst6.sortBy(x => x)\n        val lst8 = lst7.sortBy(x => x)\n\
    \        val lst9 = lst8.sortBy(x => x)\n        val lst10 = lst9.sortBy(x =>\
    \ x)\n        val lst11 = lst10.sortBy(x => x)\n        val lst12 = lst11.sortBy(x\
    \ => x)\n        val lst13 = lst12.sortBy(x => x)\n        val lst14 = lst13.sortBy(x\
    \ => x)\n        val lst15 = lst14.sortBy(x => x)\n        val lst16 = lst15.sortBy(x\
    \ => x)\n        val lst17 = lst16.sortBy(x => x)\n        val lst18 = lst17.sortBy(x\
    \ => x)\n        val lst19 = lst18.sortBy(x => x)\n        val lst20 = lst19.sortBy(x\
    \ => x)\n        val lst21 = lst20.sortBy(x => x)\n        val lst22 = lst21.sortBy(x\
    \ => x)\n        val lst23 = lst22.sortBy(x => x)\n        val lst24 = lst23.sortBy(x\
    \ => x)\n        val lst25 = lst24.sortBy(x => x)\n        val lst26 = lst25.sortBy(x\
    \ => x)\n        val lst27 = lst26.sortBy(x => x)\n        val lst28 = lst27.sortBy(x\
    \ => x)\n        val lst29 = lst28.sortBy(x => x)\n        val lst30 = lst29.sortBy(x\
    \ => x)\n        val lst31 = lst30.sortBy(x => x)\n        val lst32 = lst31.sortBy(x\
    \ => x)\n        val lst33 = lst32.sortBy(x => x)\n        val lst34 = lst33.sortBy(x\
    \ => x)\n        val lst35 = lst34.sortBy(x => x)\n        val lst36 = lst35.sortBy(x\
    \ => x)\n        val lst37 = lst36.sortBy(x => x)\n        val lst38 = lst37.sortBy(x\
    \ => x)\n        val lst39 = lst38.sortBy(x => x)\n        val lst40 = lst39.sortBy(x\
    \ => x)\n        val lst41 = lst40.sortBy(x => x)\n        ", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.filterNot(_\
    \ == minValue)\n        val newList2 = newList.filterNot(_ == maxValue)\n    \
    \    val newList3 = newList2.filterNot(_ == minValue)\n        val newList4 =\
    \ newList3.filterNot(_ == maxValue)\n        val newList5 = newList4.filterNot(_\
    \ == minValue)\n        val newList6 = newList5.filterNot(_ == maxValue)\n   \
    \     val newList7 = newList6.filterNot(_ == minValue)\n        val newList8 =\
    \ newList7.filterNot(_ == maxValue)\n        val newList9 = newList8.filterNot(_\
    \ == minValue)\n        val newList10 = newList9.filterNot(_ == maxValue)\n  \
    \      val newList11 = newList10.filterNot(_ == minValue)\n        val newList12\
    \ = newList11.filterNot(_ == maxValue)\n        val newList13 = newList12.filterNot(_\
    \ == minValue)\n        val newList14 = newList13.filterNot(_ == maxValue)\n \
    \       val newList15 = newList14.filterNot(_ == minValue)\n        val newList16\
    \ = newList15.filterNot(_ == maxValue)\n        val newList17 = newList16.filterNot(_\
    \ == minValue)\n        val newList18 = newList17.filterNot(_ == maxValue)\n \
    \       val newList19 = newList18.filterNot(_ == minValue)\n        val newList20\
    \ = newList19.filterNot(_ == maxValue)\n        val newList21 = newList20.filterNot(_\
    \ == minValue)\n        val newList22 = newList21.filterNot(_ == maxValue)\n \
    \       val newList23 = newList22.filterNot(_ == minValue)\n        val newList24\
    \ = newList23.filterNot(_ == maxValue)\n        val newList25 = newList24.filterNot(_\
    \ == minValue)\n        val newList26 = newList25.filterNot(_ == maxValue)\n \
    \       val newList27 = newList26.filterNot(_ == minValue)\n        val newList28\
    \ = newList27.filterNot(_ == maxValue)\n        val newList29 = newList28.filterNot(_\
    \ == minValue)\n        val newList30 = newList29.filterNot(_ == max", "     \
    \   val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex =\
    \ lst.indexOf(minVal)\n        val maxIndex = lst.indexOf(maxVal)\n        val\
    \ newList = lst.filterNot(x => x == minVal || x == maxVal)\n        newList.sortWith((x,\
    \ y) => if (x == minVal) y < y else x < y)", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexWhere(x => x\
    \ == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n  \
    \      val minIndex2 = lst.indexWhere(x => x == minValue)\n        val maxIndex2\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex3 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex3 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex4 = lst.indexWhere(x => x == minValue)\n        val maxIndex4\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex5 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex5 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex6 = lst.indexWhere(x => x == minValue)\n        val maxIndex6\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex7 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex7 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex8 = lst.indexWhere(x => x == minValue)\n        val maxIndex8\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex9 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex9 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex10 = lst.indexWhere(x => x == minValue)\n        val maxIndex10\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex11 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex11 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex12 = lst.indexWhere(x => x == minValue)\n        val maxIndex12\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex13 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex13 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex14 = lst.indexWhere(x => x == minValue)\n        val maxIndex14\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex15 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex15 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex16 = lst.indexWhere(x ", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        newList.take(minIndex) ++ newList.drop(maxIndex) ++ newList.take(minIndex)",
  "        val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexWhere(x => x\
    \ == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n  \
    \      val minIndex2 = lst.indexWhere(x => x == minValue)\n        val maxIndex2\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex3 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex3 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex4 = lst.indexWhere(x => x == minValue)\n        val maxIndex4\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex5 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex5 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex6 = lst.indexWhere(x => x == minValue)\n        val maxIndex6\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex7 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex7 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex8 = lst.indexWhere(x => x == minValue)\n        val maxIndex8\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex9 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex9 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex10 = lst.indexWhere(x => x == minValue)\n        val maxIndex10\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex11 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex11 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex12 = lst.indexWhere(x => x == minValue)\n        val maxIndex12\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex13 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex13 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex14 = lst.indexWhere(x => x == minValue)\n        val maxIndex14\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex15 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex15 = lst.indexWhere(x => x == maxValue)",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minList = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex\
    \ + 1)\n        val minListWithMax = minList ++ maxList\n        val maxListWithMin\
    \ = maxList ++ minList\n        val maxListWithMinAndMax = minListWithMax ++ maxListWithMin\n\
    \        val maxListWithMinAndMaxAndMin = minListWithMaxAndMin ++ maxListWithMinAndMax\n\
    \        val maxListWithMinAndMaxAndMinAndMax = minListWithMaxAndMinAndMax ++\
    \ maxListWithMinAndMaxAndMin\n        val maxListWithMinAndMaxAndMinAndMaxAndMin\
    \ = minListWithMaxAndMinAndMaxAndMin ++ maxListWithMinAndMaxAndMinAndMax\n   \
    \     val maxListWithMinAndMaxAndMinAndMaxAndMinAndMax = minListWithMaxAndMinAndMaxAndMinAndMax\
    \ ++ maxListWithMinAndMaxAndMinAndMaxAndMin\n        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\
    \ = minListWithMaxAndMinAndMaxAndMinAndMaxAndMin ++ maxListWithMinAndMaxAndMinAndMaxAndMinAndMax\n\
    \        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMax = minListWithMaxAndMinAndMaxAndMinAndMaxAndMinAndMax\
    \ ++ maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\n        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\
    \ = minListWithMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMin ++ maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMax\n\
    \        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMax\
    \ = minListWithMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMax ++ maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\n\
    \        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\
    \ = minListWithMaxAndMinAndMaxAndMinAndMaxAndMin", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex+1)\n        val minList2 = minList.map(_+1).reverse\n\
    \        val maxList2 = maxList.map(_-1).reverse\n        val newList = minList2\
    \ ++ maxList2\n        newList", "        val sortedList = lst.sortWith(_ < _)\n\
    \        val reversedList = sortedList.reverse\n        reversedList", "     \
    \   val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex =\
    \ lst.indexOf(minVal)\n        val maxIndex = lst.indexOf(maxVal)\n        val\
    \ newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.filter((x,\
    \ y) => x < y)\n        val newList3 = newList2.filter((x, y) => x < y)\n    \
    \    val newList4 = newList3.filter((x, y) => x < y)\n        val newList5 = newList4.filter((x,\
    \ y) => x < y)\n        val newList6 = newList5.filter((x, y) => x < y)\n    \
    \    val newList7 = newList6.filter((x, y) => x < y)\n        val newList8 = newList7.filter((x,\
    \ y) => x < y)\n        val newList9 = newList8.filter((x, y) => x < y)\n    \
    \    val newList10 = newList9.filter((x, y) => x < y)\n        val newList11 =\
    \ newList10.filter((x, y) => x < y)\n        val newList12 = newList11.filter((x,\
    \ y) => x < y)\n        val newList13 = newList12.filter((x, y) => x < y)\n  \
    \      val newList14 = newList13.filter((x, y) => x < y)\n        val newList15\
    \ = newList14.filter((x, y) => x < y)\n        val newList16 = newList15.filter((x,\
    \ y) => x < y)\n        val newList17 = newList16.filter((x, y) => x < y)\n  \
    \      val newList18 = newList17.filter((x, y) => x < y)\n        val newList19\
    \ = newList18.filter((x, y) => x < y)\n        val newList20 = newList19.filter((x,\
    \ y) => x < y)\n        val newList21 = newList20.filter((x, y) => x < y)\n  \
    \      val newList22 = newList21.filter((x, y) => x < y)\n        val newList23\
    \ = newList22.filter((x, y) => x < y)\n        val newList24 = newList23.filter((x,\
    \ y) => x < y)\n        val newList25 = newList24.filter((x, y) => x < y)\n  \
    \      val newList26 = newList25.filter((x, y) => x < y)\n        val newList27\
    \ = newList26.filter((x, y) => x < y)\n        val newList28 = newList27.filter((x,\
    \ y) => x < y)\n        val newList29 = newList28.filter((x, y) => x < y)\n  \
    \      val newList30 = newList29.filter((x, y) => x < y)\n        val newList31\
    \ = newList30.filter((x, y) => x < y)\n        val newList32 = newList", "   \
    \     val lst2 = lst.sortWith(_ < _)\n        val lst3 = lst2.sortWith(_ > _)\n\
    \        val lst4 = lst3.sortWith(_ < _)\n        val lst5 = lst4.sortWith(_ >\
    \ _)\n        val lst6 = lst5.sortWith(_ < _)\n        val lst7 = lst6.sortWith(_\
    \ > _)\n        val lst8 = lst7.sortWith(_ < _)\n        val lst9 = lst8.sortWith(_\
    \ > _)\n        val lst10 = lst9.sortWith(_ < _)\n        val lst11 = lst10.sortWith(_\
    \ > _)\n        val lst12 = lst11.sortWith(_ < _)\n        val lst13 = lst12.sortWith(_\
    \ > _)\n        val lst14 = lst13.sortWith(_ < _)\n        val lst15 = lst14.sortWith(_\
    \ > _)\n        val lst16 = lst15.sortWith(_ < _)\n        val lst17 = lst16.sortWith(_\
    \ > _)\n        val lst18 = lst17.sortWith(_ < _)\n        val lst19 = lst18.sortWith(_\
    \ > _)\n        val lst20 = lst19.sortWith(_ < _)\n        val lst21 = lst20.sortWith(_\
    \ > _)\n        val lst22 = lst21.sortWith(_ < _)\n        val lst23 = lst22.sortWith(_\
    \ > _)\n        val lst24 = lst23.sortWith(_ < _)\n        val lst25 = lst24.sortWith(_\
    \ > _)\n        val lst26 = lst25.sortWith(_ < _)\n        val lst27 = lst26.sortWith(_\
    \ > _)\n        val lst28 = lst27.sortWith(_ < _)\n        val lst29 = lst28.sortWith(_\
    \ > _)\n        val lst30 = lst29.sortWith(_ < _)\n        val lst31 = lst30.sortWith(_\
    \ > _)\n        val lst32 = lst31.sortWith(_ < _)\n        val lst33 = lst32.sortWith(_\
    \ > _)\n        val lst34 = lst33.sortWith(_ < _)\n        val lst35 = lst34.sortWith(_\
    \ > _)\n        val lst36 = lst35.sortWith(_ < _)\n        val lst37 = lst36.sortWith(_\
    \ > _)\n        val lst38 = lst37.sortWith(_ < _)\n        val lst39 = ", "  \
    \      val lst2 = lst.sortBy(x => x)\n        val lst3 = lst2.sortBy(x => x)\n\
    \        val lst4 = lst3.sortBy(x => x)\n        val lst5 = lst4.sortBy(x => x)\n\
    \        val lst6 = lst5.sortBy(x => x)\n        val lst7 = lst6.sortBy(x => x)\n\
    \        val lst8 = lst7.sortBy(x => x)\n        val lst9 = lst8.sortBy(x => x)\n\
    \        val lst10 = lst9.sortBy(x => x)\n        val lst11 = lst10.sortBy(x =>\
    \ x)\n        val lst12 = lst11.sortBy(x => x)\n        val lst13 = lst12.sortBy(x\
    \ => x)\n        val lst14 = lst13.sortBy(x => x)\n        val lst15 = lst14.sortBy(x\
    \ => x)\n        val lst16 = lst15.sortBy(x => x)\n        val lst17 = lst16.sortBy(x\
    \ => x)\n        val lst18 = lst17.sortBy(x => x)\n        val lst19 = lst18.sortBy(x\
    \ => x)\n        val lst20 = lst19.sortBy(x => x)\n        val lst21 = lst20.sortBy(x\
    \ => x)\n        val lst22 = lst21.sortBy(x => x)\n        val lst23 = lst22.sortBy(x\
    \ => x)\n        val lst24 = lst23.sortBy(x => x)\n        val lst25 = lst24.sortBy(x\
    \ => x)\n        val lst26 = lst25.sortBy(x => x)\n        val lst27 = lst26.sortBy(x\
    \ => x)\n        val lst28 = lst27.sortBy(x => x)\n        val lst29 = lst28.sortBy(x\
    \ => x)\n        val lst30 = lst29.sortBy(x => x)\n        val lst31 = lst30.sortBy(x\
    \ => x)\n        val lst32 = lst31.sortBy(x => x)\n        val lst33 = lst32.sortBy(x\
    \ => x)\n        val lst34 = lst33.sortBy(x => x)\n        val lst35 = lst34.sortBy(x\
    \ => x)\n        val lst36 = lst35.sortBy(x => x)\n        val lst37 = lst36.sortBy(x\
    \ => x)\n        val lst38 = lst37.sortBy(x => x)\n        val lst39 = lst38.sortBy(x\
    \ => x)\n        val lst40 = lst39.sortBy(x => x)\n        val lst41 = lst40.sortBy(x\
    \ => x)\n        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minValues = lst.take(minIndex)\n        val maxValues = lst.drop(maxIndex+1)\n\
    \        val maxValuesList = maxValues.toList\n        val maxValuesListLength\
    \ = maxValuesList.size\n        val maxValuesListLength = maxValuesListLength.toLong\n\
    \        val maxValuesListLength = maxValuesListLength.toInt\n        val maxValuesListLength\
    \ = maxValuesListLength.toLong\n        val maxValuesListLength = maxValuesListLength.toInt\n\
    \        val maxValuesListLength = maxValuesListLength.toLong\n        val maxValuesListLength\
    \ = maxValuesListLength.toInt\n        val maxValuesListLength = maxValuesListLength.toLong\n\
    \        val maxValuesListLength = maxValuesListLength.toInt\n        val maxValuesListLength\
    \ = maxValuesListLength.toLong\n        val maxValuesListLength = maxValuesListLength.toInt\n\
    \        val maxValuesListLength = maxValuesListLength.toLong\n        val maxValuesListLength\
    \ = maxValuesListLength.toInt\n        val maxValuesListLength = maxValuesListLength.toLong\n\
    \        val maxValuesListLength = maxValuesListLength.toInt\n        val maxValuesListLength\
    \ = maxValuesListLength.toLong\n        val maxValuesListLength = maxValuesListLength.toInt\n\
    \        val maxValuesListLength = maxValuesListLength.toLong\n        val maxValuesListLength\
    \ = maxValuesListLength.toInt\n        val maxValuesListLength = maxValuesListLength.toLong\n\
    \        val maxValuesListLength = maxValuesListLength.toInt\n        val maxValuesListLength\
    \ = maxValuesListLength.toLong\n        val maxValuesListLength = maxValuesListLength.toInt\n\
    \        val maxValuesListLength = maxValuesListLength.toLong\n        val maxValuesListLength\
    \ = maxValuesListLength.toInt\n        val maxValuesListLength = maxValuesListLength.toLong\n\
    \        val maxValuesListLength = maxValuesListLength.toInt\n        val maxValuesListLength\
    \ = maxValuesListLength.toLong\n        val maxValuesListLength = maxValuesListLength.toInt\n\
    \        val maxValuesListLength = maxValuesListLength.toLong\n        val maxValuesListLength\
    \ = maxValuesListLength.toInt\n        val maxValuesListLength = maxValuesListLength.toLong\n\
    \        val maxValuesListLength = maxValuesListLength.toInt\n        val maxValuesListLength\
    \ = maxValuesListLength.toLong\n", "        val minValue = lst.min\n        val\
    \ maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val\
    \ maxIndex = lst.indexOf(maxValue)\n        val minValues = lst.take(minIndex)\n\
    \        val maxValues = lst.take(maxIndex)\n        val minValuesAndMaxValues\
    \ = minValues ++ maxValues\n        val maxValuesAndMinValues = maxValues ++ minValues\n\
    \        val minValuesAndMaxValuesAndMinValues = minValuesAndMaxValues ++ minValuesAndMaxValues\n\
    \        val maxValuesAndMinValuesAndMaxValues = maxValuesAndMinValues ++ maxValuesAndMinValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValues = minValuesAndMaxValuesAndMinValues\
    \ ++ minValuesAndMaxValuesAndMaxValues\n        val maxValuesAndMinValuesAndMinValuesAndMaxValues\
    \ = maxValuesAndMinValuesAndMinValues ++ maxValuesAndMinValuesAndMaxValues\n \
    \       val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues = minValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ ++ minValuesAndMaxValuesAndMinValuesAndMaxValues\n        val maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = maxValuesAndMinValuesAndMinValuesAndMaxValues ++ maxValuesAndMinValuesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues ++ minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\n\
    \        val maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValues ++ maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues ++ minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\n\
    \        val maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues ++ maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\n\
    \        val min", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val minValue = lst.min\n   \
    \     val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n \
    \       val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex2 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n        val minIndex3\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex3 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex4 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n        val minIndex5\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex5 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex6 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n        val minIndex7\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex7 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex8 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n        val minIndex9\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex9 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex10 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n        val minIndex11\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex11 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex12 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n        val minIndex13\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex13 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex14 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n        val minIndex15\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex15 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex16 = lst.indexWhere(x ", "        val\
    \ lst2 = lst.sortBy(x => x)\n        val lst3 = lst2.sortBy(x => x)\n        val\
    \ lst4 = lst3.sortBy(x => x)\n        val lst5 = lst4.sortBy(x => x)\n       \
    \ val lst6 = lst5.sortBy(x => x)\n        val lst7 = lst6.sortBy(x => x)\n   \
    \     val lst8 = lst7.sortBy(x => x)\n        val lst9 = lst8.sortBy(x => x)\n\
    \        val lst10 = lst9.sortBy(x => x)\n        val lst11 = lst10.sortBy(x =>\
    \ x)\n        val lst12 = lst11.sortBy(x => x)\n        val lst13 = lst12.sortBy(x\
    \ => x)\n        val lst14 = lst13.sortBy(x => x)\n        val lst15 = lst14.sortBy(x\
    \ => x)\n        val lst16 = lst15.sortBy(x => x)\n        val lst17 = lst16.sortBy(x\
    \ => x)\n        val lst18 = lst17.sortBy(x => x)\n        val lst19 = lst18.sortBy(x\
    \ => x)\n        val lst20 = lst19.sortBy(x => x)\n        val lst21 = lst20.sortBy(x\
    \ => x)\n        val lst22 = lst21.sortBy(x => x)\n        val lst23 = lst22.sortBy(x\
    \ => x)\n        val lst24 = lst23.sortBy(x => x)\n        val lst25 = lst24.sortBy(x\
    \ => x)\n        val lst26 = lst25.sortBy(x => x)\n        val lst27 = lst26.sortBy(x\
    \ => x)\n        val lst28 = lst27.sortBy(x => x)\n        val lst29 = lst28.sortBy(x\
    \ => x)\n        val lst30 = lst29.sortBy(x => x)\n        val lst31 = lst30.sortBy(x\
    \ => x)\n        val lst32 = lst31.sortBy(x => x)\n        val lst33 = lst32.sortBy(x\
    \ => x)\n        val lst34 = lst33.sortBy(x => x)\n        val lst35 = lst34.sortBy(x\
    \ => x)\n        val lst36 = lst35.sortBy(x => x)\n        val lst37 = lst36.sortBy(x\
    \ => x)\n        val lst38 = lst37.sortBy(x => x)\n        val lst39 = lst38.sortBy(x\
    \ => x)\n        val lst40 = lst39.sortBy(x => x)\n        val lst41 = lst40.sortBy(x\
    \ => x)\n        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val newList = lst.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        newList", "        val result = new mutable.ListBuffer[Long]()\n    \
    \    val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(_ == minValue)\n        val maxIndex = lst.indexWhere(_ ==\
    \ maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex = maxIndex\
    \ - 1\n        val minValue = lst.take(minIndex)\n        val maxValue = lst.drop(maxIndex)\n\
    \        val minIndex = lst.indexWhere(_ == minValue)\n        val maxIndex =\
    \ lst.indexWhere(_ == maxValue)\n        val minIndex = minIndex + 1\n       \
    \ val maxIndex = maxIndex - 1\n        val minValue = lst.take(minIndex)\n   \
    \     val maxValue = lst.drop(maxIndex)\n        val minIndex = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex = lst.indexWhere(_ == maxValue)\n       \
    \ val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n        val\
    \ minValue = lst.take(minIndex)\n        val maxValue = lst.drop(maxIndex)\n \
    \       val minIndex = lst.indexWhere(_ == minValue)\n        val maxIndex = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex = maxIndex\
    \ - 1\n        val minValue = lst.take(minIndex)\n        val maxValue = lst.drop(maxIndex)\n\
    \        val minIndex = lst.indexWhere(_ == minValue)\n        val maxIndex =\
    \ lst.indexWhere(_ == maxValue)\n        val minIndex = minIndex + 1\n       \
    \ val maxIndex = maxIndex - 1\n        val minValue = lst.take(minIndex)\n   \
    \     val maxValue = lst.drop(maxIndex)\n        val minIndex = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex = lst.indexWhere(_ == maxValue)\n       \
    \ val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n        val\
    \ minValue = lst.take(minIndex)\n        val maxValue = lst.drop(maxIndex)\n \
    \       val minIndex = lst.indexWhere(_ == minValue)\n        val maxIndex = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex = maxIndex\
    \ - 1\n        val minValue = lst.take(minIndex)\n        val maxValue = lst.drop(maxIndex)\n\
    \        val minIndex = lst.indexWhere(_ == minValue)\n        val maxIndex =\
    \ lst.indexWhere(_ == maxValue)\n        val minIndex = minIndex + 1\n       \
    \ val maxIndex = maxIndex - 1\n", "        val minValue = lst.min\n        val\
    \ maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val\
    \ maxIndex = lst.indexOf(maxValue)\n        val list2 = lst.filterNot(_ == minValue)\n\
    \        val list3 = lst.filterNot(_ == maxValue)\n        val list4 = lst.filterNot(_\
    \ == minValue)\n        val list5 = lst.filterNot(_ == maxValue)\n        val\
    \ list6 = lst.filterNot(_ == minValue)\n        val list7 = lst.filterNot(_ ==\
    \ maxValue)\n        val list8 = lst.filterNot(_ == minValue)\n        val list9\
    \ = lst.filterNot(_ == maxValue)\n        val list10 = lst.filterNot(_ == minValue)\n\
    \        val list11 = lst.filterNot(_ == maxValue)\n        val list12 = lst.filterNot(_\
    \ == minValue)\n        val list13 = lst.filterNot(_ == maxValue)\n        val\
    \ list14 = lst.filterNot(_ == minValue)\n        val list15 = lst.filterNot(_\
    \ == maxValue)\n        val list16 = lst.filterNot(_ == minValue)\n        val\
    \ list17 = lst.filterNot(_ == maxValue)\n        val list18 = lst.filterNot(_\
    \ == minValue)\n        val list19 = lst.filterNot(_ == maxValue)\n        val\
    \ list20 = lst.filterNot(_ == minValue)\n        val list21 = lst.filterNot(_\
    \ == maxValue)\n        val list22 = lst.filterNot(_ == minValue)\n        val\
    \ list23 = lst.filterNot(_ == maxValue)\n        val list24 = lst.filterNot(_\
    \ == minValue)\n        val list25 = lst.filterNot(_ == maxValue)\n        val\
    \ list26 = lst.filterNot(_ == minValue)\n        val list27 = lst.filterNot(_\
    \ == maxValue)\n        val list28 = lst.filterNot(_ == minValue)\n        val\
    \ list29 = lst.filterNot(_ == maxValue)\n        val list30 = lst.filterNot(_\
    \ == minValue)\n        val list31 = lst.filterNot(_ == maxValue)\n        val\
    \ list32 = lst.filterNot(_ == minValue)\n        val list33 = lst.filterNot(_\
    \ == maxValue)\n        val list34 = lst.", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.filterNot(x\
    \ => x == minValue)\n        newList.sortWith((x, y) => x - y)", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val middleIndex = math.floor((minIndex\
    \ + maxIndex) / 2)\n        val middleValue = lst(middleIndex)\n        val leftList\
    \ = lst.take(minIndex)\n        val rightList = lst.drop(maxIndex)\n        val\
    \ leftListSorted = strangeSortList(leftList)\n        val rightListSorted = strangeSortList(rightList)\n\
    \        val sortedList = leftListSorted ++ List(middleValue) ++  rightListSorted\n\
    \        sortedList", "        val minValue = lst.min\n        val maxValue =\
    \ lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n        val\
    \ maxList = lst.drop(maxIndex + 1)\n        val newList = minList ++ maxList ++\
    \ minList\n        newList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n        val\
    \ maxList = lst.drop(maxIndex+1)\n        val newList = minList ++ maxList ++\
    \ minList\n        newList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue, minIndex\
    \ + 1)\n        val maxValueIndex = lst.indexOf(maxValue, maxIndex + 1)\n    \
    \    val minValueIndex2 = lst.indexOf(minValue, minIndex + 2)\n        val maxValueIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minValueIndex3 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxValueIndex3 = lst.indexOf(maxValue, maxIndex +\
    \ 3)\n        val minValueIndex4 = lst.indexOf(minValue, minIndex + 4)\n     \
    \   val maxValueIndex4 = lst.indexOf(maxValue, maxIndex + 4)\n        val minValueIndex5\
    \ = lst.indexOf(minValue, minIndex + 5)\n        val maxValueIndex5 = lst.indexOf(maxValue,\
    \ maxIndex + 5)\n        val minValueIndex6 = lst.indexOf(minValue, minIndex +\
    \ 6)\n        val maxValueIndex6 = lst.indexOf(maxValue, maxIndex + 6)\n     \
    \   val minValueIndex7 = lst.indexOf(minValue, minIndex + 7)\n        val maxValueIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minValueIndex8 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxValueIndex8 = lst.indexOf(maxValue, maxIndex +\
    \ 8)\n        val minValueIndex9 = lst.indexOf(minValue, minIndex + 9)\n     \
    \   val maxValueIndex9 = lst.indexOf(maxValue, maxIndex + 9)\n        val minValueIndex10\
    \ = lst.indexOf(minValue, minIndex + 10)\n        val maxValueIndex10 = lst.indexOf(maxValue,\
    \ maxIndex + 10)\n        val minValueIndex11 = lst.indexOf(minValue, minIndex\
    \ + 11)\n        val maxValueIndex11 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minValueIndex12 = lst.indexOf(minValue, minIndex + 12)\n        val\
    \ maxValueIndex12 = lst.indexOf(maxValue, maxIndex + 12)\n        val minValueIndex13\
    \ = lst.indexOf(minValue, minIndex + 13)\n        val maxValueIndex13 = lst.indexOf(maxValue,\
    \ maxIndex + 13)\n        val minValueIndex14 = lst.indexOf(minValue, minIndex\
    \ + 14)\n        val maxValueIndex14 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minValueIndex15 = lst.indexOf(minValue, minIndex + 15)\n        val\
    \ maxValueIndex15 = lst.indexOf(max", "        val minLst = lst.min\n        val\
    \ maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n        val\
    \ maxLstIndex = lst.indexOf(maxLst)\n        val minLstValue = lst.apply(minLstIndex)\n\
    \        val maxLstValue = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = ", "        val sortedList = lst.sortBy(x => x)\n \
    \       val reversedList = sortedList.reverse\n        reversedList", "      \
    \  val list = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = l", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minValues = lst.take(minIndex)\n      \
    \  val maxValues = lst.drop(maxIndex + 1)\n        val minValuesAndMaxValues =\
    \ minValues ++ maxValues\n        val minValuesAndMaxIndexes = minValuesAndMaxValues.zipWithIndex\n\
    \        val maxValuesAndMinValues = maxValues ++ minValues\n        val maxValuesAndMinIndexes\
    \ = maxValuesAndMinValues.zipWithIndex\n        val minValuesAndMaxIndexesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxIndexes ++ maxValuesAndMinIndexes\n        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexes\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxValues.zipWithIndex\n        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexes ++ minValuesAndMaxIndexesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexes\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues.zipWithIndex\n\
    \        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexes ++\
    \ minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues\n  \
    \      val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexes\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues.zipWithIndex\n\
    \        val minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexes\
    \ ++ minValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxIndexesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxIndexesAnd", "        val newList = mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += ", "        val result = new\
    \ mutable.ListBuffer[Long]()\n        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex2 =\
    \ lst.indexWhere(x => x == minValue)\n        val maxIndex2 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex3 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex3 = lst.indexWhere(x => x == maxValue)\n        val minIndex4\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex4 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex5 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex5 = lst.indexWhere(x => x == maxValue)\n        val minIndex6\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex6 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex7 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex7 = lst.indexWhere(x => x == maxValue)\n        val minIndex8\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex8 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex9 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex9 = lst.indexWhere(x => x == maxValue)\n        val minIndex10\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex10 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex11 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex11 = lst.indexWhere(x => x == maxValue)\n        val minIndex12\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex12 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex13 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex13 = lst.indexWhere(x => x == maxValue)\n        val minIndex14\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex14 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex15 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex15 = lst.indexWhere(x => x == maxValue)", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        val newList2 = newList.sortWith((x, y) => y < x)\n   \
    \     newList2.reverse.take(minIndex).reverse ++ newList.take(maxIndex).reverse",
  "        val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minVal)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minList = lst.take(minIndex)\n        val maxList\
    \ = lst.drop(maxIndex)\n        val newList = minList ++ maxList ++ minList\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val newList = lst.sortWith((a, b) => a < b ? -1 : 1)\n        val newList2\
    \ = newList.filter(_ != minValue)\n        val newList3 = newList2.filter(_ !=\
    \ maxValue)\n        val newList4 = newList3.filter(_ != minValue)\n        val\
    \ newList5 = newList4.filter(_ != maxValue)\n        newList5", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = 0\n      \
    \  val maxIndex = lst.size - 1\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex2\
    \ = lst.indexOf(minValue, minValueIndex + 1)\n        val maxValueIndex2 = lst.indexOf(maxValue,\
    \ maxValueIndex - 1)\n        val minValueIndex3 = lst.indexOf(minValue, minValueIndex\
    \ + 2)\n        val maxValueIndex3 = lst.indexOf(maxValue, maxValueIndex - 2)\n\
    \        val minValueIndex4 = lst.indexOf(minValue, minValueIndex + 3)\n     \
    \   val maxValueIndex4 = lst.indexOf(maxValue, maxValueIndex - 3)\n        val\
    \ minValueIndex5 = lst.indexOf(minValue, minValueIndex + 4)\n        val maxValueIndex5\
    \ = lst.indexOf(maxValue, maxValueIndex - 4)\n        val minValueIndex6 = lst.indexOf(minValue,\
    \ minValueIndex + 5)\n        val maxValueIndex6 = lst.indexOf(maxValue, maxValueIndex\
    \ - 5)\n        val minValueIndex7 = lst.indexOf(minValue, minValueIndex + 6)\n\
    \        val maxValueIndex7 = lst.indexOf(maxValue, maxValueIndex - 6)\n     \
    \   val minValueIndex8 = lst.indexOf(minValue, minValueIndex + 7)\n        val\
    \ maxValueIndex8 = lst.indexOf(maxValue, maxValueIndex - 7)\n        val minValueIndex9\
    \ = lst.indexOf(minValue, minValueIndex + 8)\n        val maxValueIndex9 = lst.indexOf(maxValue,\
    \ maxValueIndex - 8)\n        val minValueIndex10 = lst.indexOf(minValue, minValueIndex\
    \ + 9)\n        val maxValueIndex10 = lst.indexOf(maxValue, maxValueIndex - 9)\n\
    \        val minValueIndex11 = lst.indexOf(minValue, minValueIndex + 10)\n   \
    \     val maxValueIndex11 = lst.indexOf(maxValue, maxValueIndex - 10)\n      \
    \  val minValueIndex12 = lst.indexOf(minValue, minValueIndex + 11)\n        val\
    \ maxValueIndex12 = lst.indexOf(maxValue, maxValueIndex - 11)\n        val minValueIndex13\
    \ = lst.indexOf(minValue, minValueIndex + 12)\n        val maxValueIndex13 = lst.indexOf(maxValue,\
    \ maxValueIndex - 12)\n        val minValueIndex14 = lst.indexOf(minValue, minValueIndex\
    \ + 13)\n        val maxValueIndex14 = lst.indexOf(maxValue, maxValueIndex - 13)\n\
    \        val minValueIndex15 = lst.indexOf(minValue, minValueIndex", "       \
    \ val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue)\n        val maxIndex2 = lst.indexOf(maxValue)\n\
    \        val minIndex3 = lst.indexOf(minValue)\n        val maxIndex3 = lst.indexOf(maxValue)\n\
    \        val minIndex4 = lst.indexOf(minValue)\n        val maxIndex4 = lst.indexOf(maxValue)\n\
    \        val minIndex5 = lst.indexOf(minValue)\n        val maxIndex5 = lst.indexOf(maxValue)\n\
    \        val minIndex6 = lst.indexOf(minValue)\n        val maxIndex6 = lst.indexOf(maxValue)\n\
    \        val minIndex7 = lst.indexOf(minValue)\n        val maxIndex7 = lst.indexOf(maxValue)\n\
    \        val minIndex8 = lst.indexOf(minValue)\n        val maxIndex8 = lst.indexOf(maxValue)\n\
    \        val minIndex9 = lst.indexOf(minValue)\n        val maxIndex9 = lst.indexOf(maxValue)\n\
    \        val minIndex10 = lst.indexOf(minValue)\n        val maxIndex10 = lst.indexOf(maxValue)\n\
    \        val minIndex11 = lst.indexOf(minValue)\n        val maxIndex11 = lst.indexOf(maxValue)\n\
    \        val minIndex12 = lst.indexOf(minValue)\n        val maxIndex12 = lst.indexOf(maxValue)\n\
    \        val minIndex13 = lst.indexOf(minValue)\n        val maxIndex13 = lst.indexOf(maxValue)\n\
    \        val minIndex14 = lst.indexOf(minValue)\n        val maxIndex14 = lst.indexOf(maxValue)\n\
    \        val minIndex15 = lst.indexOf(minValue)\n        val maxIndex15 = lst.indexOf(maxValue)\n\
    \        val minIndex16 = lst.indexOf(minValue)\n        val maxIndex16 = lst.indexOf(maxValue)\n\
    \        val minIndex17 = lst.indexOf(minValue)\n        val maxIndex17 = lst.indexOf(maxValue)\n\
    \        val minIndex18 = lst.indexOf(minValue)\n        val maxIndex18 = lst.indexOf(maxValue)\n\
    \        val minIndex19 = lst.indexOf(minValue)\n        val maxIndex19 = lst.indexOf(maxValue)\n\
    \        val minIndex20 = lst.indexOf(minValue)\n        val maxIndex20 = lst.indexOf(maxValue)\n\
    \        val minIndex21 = lst.indexOf(minValue)\n        val maxIndex21 = lst.indexOf(maxValue)\n\
    \        val minIndex22 = lst.indexOf(minValue)\n        val maxIndex22 = ", " \
    \       val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minList = lst.take(minIndex)\n        val maxList\
    \ = lst.drop(maxIndex)\n        val newList = minList ++ maxList\n        newList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex2 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n        val minIndex3\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex3 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex4 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n        val minIndex5\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex5 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex6 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n        val minIndex7\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex7 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex8 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n        val minIndex9\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex9 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex10 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n        val minIndex11\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex11 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex12 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n        val minIndex13\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex13 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex14 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n        val minIndex15\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex15 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex16 = lst.indexWhere(x ", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex2 = lst.indexWhere(x => x == minValue)\n        val maxIndex2\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex3 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex3 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex4 = lst.indexWhere(x => x == minValue)\n        val maxIndex4\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex5 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex5 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex6 = lst.indexWhere(x => x == minValue)\n        val maxIndex6\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex7 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex7 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex8 = lst.indexWhere(x => x == minValue)\n        val maxIndex8\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex9 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex9 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex10 = lst.indexWhere(x => x == minValue)\n        val maxIndex10\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex11 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex11 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex12 = lst.indexWhere(x => x == minValue)\n        val maxIndex12\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex13 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex13 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex14 = lst.indexWhere(x => x == minValue)\n        val maxIndex14\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex15 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex15 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex16 = lst.indexWhere(x ", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue, minIndex + 1)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minValueIndex2 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxValueIndex2 = lst.indexOf(maxValue, maxIndex +\
    \ 2)\n        val minValueIndex3 = lst.indexOf(minValue, minIndex + 3)\n     \
    \   val maxValueIndex3 = lst.indexOf(maxValue, maxIndex + 3)\n        val minValueIndex4\
    \ = lst.indexOf(minValue, minIndex + 4)\n        val maxValueIndex4 = lst.indexOf(maxValue,\
    \ maxIndex + 4)\n        val minValueIndex5 = lst.indexOf(minValue, minIndex +\
    \ 5)\n        val maxValueIndex5 = lst.indexOf(maxValue, maxIndex + 5)\n     \
    \   val minValueIndex6 = lst.indexOf(minValue, minIndex + 6)\n        val maxValueIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minValueIndex7 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxValueIndex7 = lst.indexOf(maxValue, maxIndex +\
    \ 7)\n        val minValueIndex8 = lst.indexOf(minValue, minIndex + 8)\n     \
    \   val maxValueIndex8 = lst.indexOf(maxValue, maxIndex + 8)\n        val minValueIndex9\
    \ = lst.indexOf(minValue, minIndex + 9)\n        val maxValueIndex9 = lst.indexOf(maxValue,\
    \ maxIndex + 9)\n        val minValueIndex10 = lst.indexOf(minValue, minIndex\
    \ + 10)\n        val maxValueIndex10 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minValueIndex11 = lst.indexOf(minValue, minIndex + 11)\n        val\
    \ maxValueIndex11 = lst.indexOf(maxValue, maxIndex + 11)\n        val minValueIndex12\
    \ = lst.indexOf(minValue, minIndex + 12)\n        val maxValueIndex12 = lst.indexOf(maxValue,\
    \ maxIndex + 12)\n        val minValueIndex13 = lst.indexOf(minValue, minIndex\
    \ + 13)\n        val maxValueIndex13 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minValueIndex14 = lst.indexOf(minValue, minIndex + 14)\n        val\
    \ maxValueIndex14 = lst.indexOf(maxValue, maxIndex + 14)\n        val minValueIndex15\
    \ = lst.indexOf(minValue, minIndex + ", "        val minValue = lst.min\n    \
    \    val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n  \
    \      val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex2 = lst.indexOf(minValue)\n        val maxValueIndex2\
    \ = lst.indexOf(maxValue)\n        val minValueIndex3 = lst.indexOf(minValue)\n\
    \        val maxValueIndex3 = lst.indexOf(maxValue)\n        val minValueIndex4\
    \ = lst.indexOf(minValue)\n        val maxValueIndex4 = lst.indexOf(maxValue)\n\
    \        val minValueIndex5 = lst.indexOf(minValue)\n        val maxValueIndex5\
    \ = lst.indexOf(maxValue)\n        val minValueIndex6 = lst.indexOf(minValue)\n\
    \        val maxValueIndex6 = lst.indexOf(maxValue)\n        val minValueIndex7\
    \ = lst.indexOf(minValue)\n        val maxValueIndex7 = lst.indexOf(maxValue)\n\
    \        val minValueIndex8 = lst.indexOf(minValue)\n        val maxValueIndex8\
    \ = lst.indexOf(maxValue)\n        val minValueIndex9 = lst.indexOf(minValue)\n\
    \        val maxValueIndex9 = lst.indexOf(maxValue)\n        val minValueIndex10\
    \ = lst.indexOf(minValue)\n        val maxValueIndex10 = lst.indexOf(maxValue)\n\
    \        val minValueIndex11 = lst.indexOf(minValue)\n        val maxValueIndex11\
    \ = lst.indexOf(maxValue)\n        val minValueIndex12 = lst.indexOf(minValue)\n\
    \        val maxValueIndex12 = lst.indexOf(maxValue)\n        val minValueIndex13\
    \ = lst.indexOf(minValue)\n        val maxValueIndex13 = lst.indexOf(maxValue)\n\
    \        val minValueIndex14 = lst.indexOf(minValue)\n        val maxValueIndex14\
    \ = lst.indexOf(maxValue)\n        val minValueIndex15 = lst.indexOf(minValue)\n\
    \        val maxValueIndex15 = lst.indexOf(maxValue)\n        val minValueIndex16\
    \ = lst.indexOf(minValue)\n        val maxValueIndex16 = lst.indexOf(maxValue)\n\
    \        val minValueIndex17 = lst.indexOf(minValue)\n        val maxValueIndex17\
    \ = lst.indexOf(maxValue)\n        val minValueIndex18 = lst.indexOf(minValue)\n\
    \        val maxValueIndex18 = lst.indexOf(maxValue)\n        val minValueIndex19\
    \ = lst.indexOf(minValue)\n        val maxValueIndex19 = lst.indexOf(maxValue)\n\
    \        val minValueIndex20 = l", "        val sortedList = lst.sortBy(_.toLong)\n\
    \        val reversedList = sortedList.reverse\n        reversedList.take(lst.size)",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex - 1\n        val maxIndex\
    \ = maxIndex + 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex - 1\n        val maxIndex\
    \ = maxIndex + 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex - 1\n        val maxIndex\
    \ = maxIndex + 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex - 1\n        val maxIndex\
    \ = maxIndex + 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex - 1\n        val maxIndex\
    \ = maxIndex + 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex - 1\n        val maxIndex\
    \ = maxIndex + 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = l", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x,\
    \ y) => x < y)\n        newList.take(minIndex) ++ newList.drop(maxIndex) ++ newList.take(minIndex)",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.filter((x,\
    \ i) => i < minIndex || i > maxIndex)\n        newList2.reverse", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((a,\
    \ b) => a < b)\n        val newList2 = newList.filter((_, i) => i < minIndex ||\
    \ i > maxIndex)\n        newList2.reverse", "        val lst2 = lst.sortBy(x =>\
    \ x)\n        val lst3 = lst2.sortBy(x => x)\n        val lst4 = lst3.sortBy(x\
    \ => x)\n        val lst5 = lst4.sortBy(x => x)\n        val lst6 = lst5.sortBy(x\
    \ => x)\n        val lst7 = lst6.sortBy(x => x)\n        val lst8 = lst7.sortBy(x\
    \ => x)\n        val lst9 = lst8.sortBy(x => x)\n        val lst10 = lst9.sortBy(x\
    \ => x)\n        val lst11 = lst10.sortBy(x => x)\n        val lst12 = lst11.sortBy(x\
    \ => x)\n        val lst13 = lst12.sortBy(x => x)\n        val lst14 = lst13.sortBy(x\
    \ => x)\n        val lst15 = lst14.sortBy(x => x)\n        val lst16 = lst15.sortBy(x\
    \ => x)\n        val lst17 = lst16.sortBy(x => x)\n        val lst18 = lst17.sortBy(x\
    \ => x)\n        val lst19 = lst18.sortBy(x => x)\n        val lst20 = lst19.sortBy(x\
    \ => x)\n        val lst21 = lst20.sortBy(x => x)\n        val lst22 = lst21.sortBy(x\
    \ => x)\n        val lst23 = lst22.sortBy(x => x)\n        val lst24 = lst23.sortBy(x\
    \ => x)\n        val lst25 = lst24.sortBy(x => x)\n        val lst26 = lst25.sortBy(x\
    \ => x)\n        val lst27 = lst26.sortBy(x => x)\n        val lst28 = lst27.sortBy(x\
    \ => x)\n        val lst29 = lst28.sortBy(x => x)\n        val lst30 = lst29.sortBy(x\
    \ => x)\n        val lst31 = lst30.sortBy(x => x)\n        val lst32 = lst31.sortBy(x\
    \ => x)\n        val lst33 = lst32.sortBy(x => x)\n        val lst34 = lst33.sortBy(x\
    \ => x)\n        val lst35 = lst34.sortBy(x => x)\n        val lst36 = lst35.sortBy(x\
    \ => x)\n        val lst37 = lst36.sortBy(x => x)\n        val lst38 = lst37.sortBy(x\
    \ => x)\n        val lst39 = lst38.sortBy(x => x)\n        val lst40 = lst39.sortBy(x\
    \ => x)\n        val lst41 = lst40.sortBy(x => x)\n        ", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith(\
    \ (a,b) => a < b )\n        val newList2 = newList.filter( x => x != minValue\
    \ )\n        val newList3 = newList2.filter( x => x != maxValue )\n        newList3.reverse",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        if (minIndex == maxIndex)\
    \ {\n            newList\n        } else {\n            newList.take(minIndex).reverse\
    \ ++ newList.drop(minIndex + 1)\n        }", "        val lst2 = lst.sortBy(x\
    \ => x)\n        val lst3 = lst2.sortBy(x => x)\n        val lst4 = lst3.sortBy(x\
    \ => x)\n        val lst5 = lst4.sortBy(x => x)\n        val lst6 = lst5.sortBy(x\
    \ => x)\n        val lst7 = lst6.sortBy(x => x)\n        val lst8 = lst7.sortBy(x\
    \ => x)\n        val lst9 = lst8.sortBy(x => x)\n        val lst10 = lst9.sortBy(x\
    \ => x)\n        val lst11 = lst10.sortBy(x => x)\n        val lst12 = lst11.sortBy(x\
    \ => x)\n        val lst13 = lst12.sortBy(x => x)\n        val lst14 = lst13.sortBy(x\
    \ => x)\n        val lst15 = lst14.sortBy(x => x)\n        val lst16 = lst15.sortBy(x\
    \ => x)\n        val lst17 = lst16.sortBy(x => x)\n        val lst18 = lst17.sortBy(x\
    \ => x)\n        val lst19 = lst18.sortBy(x => x)\n        val lst20 = lst19.sortBy(x\
    \ => x)\n        val lst21 = lst20.sortBy(x => x)\n        val lst22 = lst21.sortBy(x\
    \ => x)\n        val lst23 = lst22.sortBy(x => x)\n        val lst24 = lst23.sortBy(x\
    \ => x)\n        val lst25 = lst24.sortBy(x => x)\n        val lst26 = lst25.sortBy(x\
    \ => x)\n        val lst27 = lst26.sortBy(x => x)\n        val lst28 = lst27.sortBy(x\
    \ => x)\n        val lst29 = lst28.sortBy(x => x)\n        val lst30 = lst29.sortBy(x\
    \ => x)\n        val lst31 = lst30.sortBy(x => x)\n        val lst32 = lst31.sortBy(x\
    \ => x)\n        val lst33 = lst32.sortBy(x => x)\n        val lst34 = lst33.sortBy(x\
    \ => x)\n        val lst35 = lst34.sortBy(x => x)\n        val lst36 = lst35.sortBy(x\
    \ => x)\n        val lst37 = lst36.sortBy(x => x)\n        val lst38 = lst37.sortBy(x\
    \ => x)\n        val lst39 = lst38.sortBy(x => x)\n        val lst40 = lst39.sortBy(x\
    \ => x)\n        val lst41 = lst40.sortBy(x => x)\n        ", "        val minLst\
    \ = lst.min\n        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstIndex2 = lst.indexOf(minLst,\
    \ minLstIndex + 1)\n        val maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex\
    \ + 1)\n        val minLstIndex3 = lst.indexOf(minLst, minLstIndex2 + 1)\n   \
    \     val maxLstIndex3 = lst.indexOf(maxLst, maxLstIndex2 + 1)\n        val minLstIndex4\
    \ = lst.indexOf(minLst, minLstIndex3 + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst,\
    \ maxLstIndex3 + 1)\n        val minLstIndex5 = lst.indexOf(minLst, minLstIndex4\
    \ + 1)\n        val maxLstIndex5 = lst.indexOf(maxLst, maxLstIndex4 + 1)\n   \
    \     val minLstIndex6 = lst.indexOf(minLst, minLstIndex5 + 1)\n        val maxLstIndex6\
    \ = lst.indexOf(maxLst, maxLstIndex5 + 1)\n        val minLstIndex7 = lst.indexOf(minLst,\
    \ minLstIndex6 + 1)\n        val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6\
    \ + 1)\n        val minLstIndex8 = lst.indexOf(minLst, minLstIndex7 + 1)\n   \
    \     val maxLstIndex8 = lst.indexOf(maxLst, maxLstIndex7 + 1)\n        val minLstIndex9\
    \ = lst.indexOf(minLst, minLstIndex8 + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst,\
    \ maxLstIndex8 + 1)\n        val minLstIndex10 = lst.indexOf(minLst, minLstIndex9\
    \ + 1)\n        val maxLstIndex10 = lst.indexOf(maxLst, maxLstIndex9 + 1)\n  \
    \      val minLstIndex11 = lst.indexOf(minLst, minLstIndex10 + 1)\n        val\
    \ maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10 + 1)\n        val minLstIndex12\
    \ = lst.indexOf(minLst, minLstIndex11 + 1)\n        val maxLstIndex12 = lst.indexOf(maxLst,\
    \ maxLstIndex11 + 1)\n        val minLstIndex13 = lst.indexOf(minLst, minLstIndex12\
    \ + 1)\n        val maxLstIndex13 = l", "        val minVal = lst.min\n      \
    \  val maxVal = lst.max\n        val minIndex = lst.indexWhere(x => x == minVal)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxVal)\n        val minList\
    \ = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex)\n        val\
    \ newList = minList ++ maxList\n        newList", "        val minVal = lst.min\n\
    \        val maxVal = lst.max\n        val minIndex = lst.indexOf(minVal)\n  \
    \      val maxIndex = lst.indexOf(maxVal)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex)\n       \
    \ val minValIndex2 = lst.indexOf(minVal, minIndex+1)\n        val maxValIndex2\
    \ = lst.indexOf(maxVal, maxIndex+1)\n        val minValIndex3 = lst.indexOf(minVal,\
    \ minIndex+2)\n        val maxValIndex3 = lst.indexOf(maxVal, maxIndex+2)\n  \
    \      val minValIndex4 = lst.indexOf(minVal, minIndex+3)\n        val maxValIndex4\
    \ = lst.indexOf(maxVal, maxIndex+3)\n        val minValIndex5 = lst.indexOf(minVal,\
    \ minIndex+4)\n        val maxValIndex5 = lst.indexOf(maxVal, maxIndex+4)\n  \
    \      val minValIndex6 = lst.indexOf(minVal, minIndex+5)\n        val maxValIndex6\
    \ = lst.indexOf(maxVal, maxIndex+5)\n        val minValIndex7 = lst.indexOf(minVal,\
    \ minIndex+6)\n        val maxValIndex7 = lst.indexOf(maxVal, maxIndex+6)\n  \
    \      val minValIndex8 = lst.indexOf(minVal, minIndex+7)\n        val maxValIndex8\
    \ = lst.indexOf(maxVal, maxIndex+7)\n        val minValIndex9 = lst.indexOf(minVal,\
    \ minIndex+8)\n        val maxValIndex9 = lst.indexOf(maxVal, maxIndex+8)\n  \
    \      val minValIndex10 = lst.indexOf(minVal, minIndex+9)\n        val maxValIndex10\
    \ = lst.indexOf(maxVal, maxIndex+9)\n        val minValIndex11 = lst.indexOf(minVal,\
    \ minIndex+10)\n        val maxValIndex11 = lst.indexOf(maxVal, maxIndex+10)\n\
    \        val minValIndex12 = lst.indexOf(minVal, minIndex+11)\n        val maxValIndex12\
    \ = lst.indexOf(maxVal, maxIndex+11)\n        val minValIndex13 = lst.indexOf(minVal,\
    \ minIndex+12)\n        val maxValIndex13 = lst.indexOf(maxVal, maxIndex+12)\n\
    \        val minValIndex14 = lst.indexOf(minVal, minIndex+13)\n        val maxValIndex14\
    \ = lst.indexOf(maxVal, maxIndex+13)\n", "        val result = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex2 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n        val minIndex3\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex3 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex4 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n        val minIndex5\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex5 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex6 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n        val minIndex7\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex7 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex8 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n        val minIndex9\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex9 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex10 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n        val minIndex11\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex11 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex12 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n        val minIndex13\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex13 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex14 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n        val minIndex15\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex15 = lst.indexWhere(x\
    \ => x == maxValue)", "        val sortedList = lst.sortWith(_.compareTo(_) <\
    \ 0)\n        val newList = sortedList.take(sortedList.size - 1).reverse.take(sortedList.size)\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = 0\n        val maxIndex = 0\n        val newList = mutable.ListBuffer[Long]()\n\
    \        for(i <- 0 until lst.size) {\n            val currentValue = lst(i)\n\
    \            val currentIndex = i\n            val currentMinValue = minValue\n\
    \            val currentMaxValue = maxValue\n            val currentMinIndex =\
    \ minIndex\n            val currentMaxIndex = maxIndex\n            val currentMinValue\
    \ = if (currentValue < currentMinValue) currentMinValue else currentValue\n  \
    \          val currentMaxValue = if (currentValue > currentMaxValue) currentMaxValue\
    \ else currentValue\n            val currentMinIndex = if (currentIndex < currentMinIndex)\
    \ currentMinIndex else currentIndex\n            val currentMaxIndex = if (currentIndex\
    \ > currentMaxIndex) currentMaxIndex else currentIndex\n            val currentMinValue\
    \ = if (currentValue < currentMinValue) currentMinValue else currentValue\n  \
    \          val currentMaxValue = if (currentValue > currentMaxValue) currentMaxValue\
    \ else currentValue\n            val currentMinIndex = if (currentIndex < currentMinIndex)\
    \ currentMinIndex else currentIndex\n            val currentMaxIndex = if (currentIndex\
    \ > currentMaxIndex) currentMaxIndex else currentIndex\n            val currentMinValue\
    \ = if (currentValue < currentMinValue) currentMinValue else currentValue\n  \
    \          val currentMaxValue = if (currentValue > currentMaxValue) currentMaxValue\
    \ else currentValue\n            val currentMinIndex = if (currentIndex < currentMinIndex)\
    \ currentMinIndex else currentIndex\n            val currentMaxIndex = if (currentIndex\
    \ > currentMaxIndex) currentMaxIndex else currentIndex\n            val currentMinValue\
    \ = if (currentValue < currentMinValue) currentMinValue else currentValue\n  \
    \          val currentMaxValue = if (currentValue > currentMaxValue) currentMaxValue\
    \ else currentValue\n            val currentMinIndex = if (currentIndex < currentMinIndex)\
    \ currentMinIndex else currentIndex\n            val currentMaxIndex = if (currentIndex\
    \ > currentMaxIndex) currentMaxIndex else currentIndex\n            val currentMinValue\
    \ = if (currentValue < currentMinValue) currentMinValue else currentValue\n  \
    \          val currentMaxValue = if (currentValue > currentMaxValue) currentMaxValue\
    \ else currentValue\n            val currentMinIndex = if (currentIndex < currentMinIndex)\
    \ currentMinIndex else currentIndex\n            val currentMaxIndex = if (currentIndex\
    \ > currentMaxIndex) currentMaxIndex else currentIndex\n            val currentMinValue\
    \ = if (currentValue < currentMinValue) currentMinValue ", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith((a,\
    \ b) => a < b ? -1 : a > b ? 1 : 0)\n        val newList2 = newList.map((x, i)\
    \ => if (i == minIndex) x else maxValue)\n        newList2.reverse", "       \
    \ val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith( (a,b) => a < b )\n        newList.take(minIndex)\
    \ ++ newList.drop(maxIndex) ++ newList.take(minIndex)", "        val sortedList\
    \ = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n     \
    \   reversedList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val newList = lst.sortWith((x, y) => y > x)\n        val newList2 = newList.map((x)\
    \ => minValue + x)\n        val newList3 = newList2.map((x) => maxValue - x)\n\
    \        newList3.reverse", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minValues = lst.take(minIndex)\n      \
    \  val maxValues = lst.drop(maxIndex + 1)\n        val minAndMaxValues = minValues\
    \ ++ maxValues\n        val sortedList = minAndMaxValues.sorted\n        sortedList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(_ == minValue)\n        val maxIndex = lst.indexWhere(_ ==\
    \ maxValue)\n        val minValueIndex = lst.indexWhere(_ == minValue)\n     \
    \   val maxValueIndex = lst.indexWhere(_ == maxValue)\n        val minValueIndex2\
    \ = lst.indexWhere(_ == minValue)\n        val maxValueIndex2 = lst.indexWhere(_\
    \ == maxValue)\n        val minValueIndex3 = lst.indexWhere(_ == minValue)\n \
    \       val maxValueIndex3 = lst.indexWhere(_ == maxValue)\n        val minValueIndex4\
    \ = lst.indexWhere(_ == minValue)\n        val maxValueIndex4 = lst.indexWhere(_\
    \ == maxValue)\n        val minValueIndex5 = lst.indexWhere(_ == minValue)\n \
    \       val maxValueIndex5 = lst.indexWhere(_ == maxValue)\n        val minValueIndex6\
    \ = lst.indexWhere(_ == minValue)\n        val maxValueIndex6 = lst.indexWhere(_\
    \ == maxValue)\n        val minValueIndex7 = lst.indexWhere(_ == minValue)\n \
    \       val maxValueIndex7 = lst.indexWhere(_ == maxValue)\n        val minValueIndex8\
    \ = lst.indexWhere(_ == minValue)\n        val maxValueIndex8 = lst.indexWhere(_\
    \ == maxValue)\n        val minValueIndex9 = lst.indexWhere(_ == minValue)\n \
    \       val maxValueIndex9 = lst.indexWhere(_ == maxValue)\n        val minValueIndex10\
    \ = lst.indexWhere(_ == minValue)\n        val maxValueIndex10 = lst.indexWhere(_\
    \ == maxValue)\n        val minValueIndex11 = lst.indexWhere(_ == minValue)\n\
    \        val maxValueIndex11 = lst.indexWhere(_ == maxValue)\n        val minValueIndex12\
    \ = lst.indexWhere(_ == minValue)\n        val maxValueIndex12 = lst.indexWhere(_\
    \ == maxValue)\n        val minValueIndex13 = lst.indexWhere(_ == minValue)\n\
    \        val maxValueIndex13 = lst.indexWhere(_ == maxValue)\n        val minValueIndex14\
    \ = lst.indexWhere(_ == minValue)\n        val maxValueIndex14 = lst.indexWhere(_\
    \ == maxValue)\n        val minValueIndex15 = lst.indexWhere(_ == minValue)\n\
    \        val maxValueIndex15 = lst.indexWhere(_ == maxValue)\n        val minValueIndex16\
    \ = lst.indexWhere(_ == minValue)\n", "        val minValue = lst.min\n      \
    \  val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n    \
    \    val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        if (minIndex == maxIndex)\
    \ {\n            newList\n        } else {\n            newList.take(minIndex).reverse.take(maxIndex).reverse.sortWith((x,\
    \ y) => x < y).reverse\n        }", "        val minValue = lst.min\n        val\
    \ maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val\
    \ maxIndex = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex+1)\n        val newList = minList ++\
    \ maxList\n        newList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex2 =\
    \ lst.indexWhere(x => x == minValue)\n        val maxIndex2 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex3 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex3 = lst.indexWhere(x => x == maxValue)\n        val minIndex4\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex4 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex5 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex5 = lst.indexWhere(x => x == maxValue)\n        val minIndex6\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex6 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex7 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex7 = lst.indexWhere(x => x == maxValue)\n        val minIndex8\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex8 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex9 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex9 = lst.indexWhere(x => x == maxValue)\n        val minIndex10\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex10 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex11 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex11 = lst.indexWhere(x => x == maxValue)\n        val minIndex12\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex12 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex13 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex13 = lst.indexWhere(x => x == maxValue)\n        val minIndex14\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex14 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex15 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex15 = lst.indexWhere(x => x == maxValue)\n        val minIndex16\
    \ = lst.indexWhere(x ", "        val sorted = lst.sortWith(_ < _)\n        val\
    \ reversed = sorted.reverse\n        reversed.toList", "        val lst2 = lst.sortBy(x\
    \ => x)\n        val lst3 = lst2.sortBy(x => x)\n        val lst4 = lst3.sortBy(x\
    \ => x)\n        val lst5 = lst4.sortBy(x => x)\n        val lst6 = lst5.sortBy(x\
    \ => x)\n        val lst7 = lst6.sortBy(x => x)\n        val lst8 = lst7.sortBy(x\
    \ => x)\n        val lst9 = lst8.sortBy(x => x)\n        val lst10 = lst9.sortBy(x\
    \ => x)\n        val lst11 = lst10.sortBy(x => x)\n        val lst12 = lst11.sortBy(x\
    \ => x)\n        val lst13 = lst12.sortBy(x => x)\n        val lst14 = lst13.sortBy(x\
    \ => x)\n        val lst15 = lst14.sortBy(x => x)\n        val lst16 = lst15.sortBy(x\
    \ => x)\n        val lst17 = lst16.sortBy(x => x)\n        val lst18 = lst17.sortBy(x\
    \ => x)\n        val lst19 = lst18.sortBy(x => x)\n        val lst20 = lst19.sortBy(x\
    \ => x)\n        val lst21 = lst20.sortBy(x => x)\n        val lst22 = lst21.sortBy(x\
    \ => x)\n        val lst23 = lst22.sortBy(x => x)\n        val lst24 = lst23.sortBy(x\
    \ => x)\n        val lst25 = lst24.sortBy(x => x)\n        val lst26 = lst25.sortBy(x\
    \ => x)\n        val lst27 = lst26.sortBy(x => x)\n        val lst28 = lst27.sortBy(x\
    \ => x)\n        val lst29 = lst28.sortBy(x => x)\n        val lst30 = lst29.sortBy(x\
    \ => x)\n        val lst31 = lst30.sortBy(x => x)\n        val lst32 = lst31.sortBy(x\
    \ => x)\n        val lst33 = lst32.sortBy(x => x)\n        val lst34 = lst33.sortBy(x\
    \ => x)\n        val lst35 = lst34.sortBy(x => x)\n        val lst36 = lst35.sortBy(x\
    \ => x)\n        val lst37 = lst36.sortBy(x => x)\n        val lst38 = lst37.sortBy(x\
    \ => x)\n        val lst39 = lst38.sortBy(x => x)\n        val lst40 = lst39.sortBy(x\
    \ => x)\n        val lst41 = lst40.sortBy(x => x)\n        ", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex = lst.indexWhere(x => x == minValue)\n        val maxValueIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minValueIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex = lst.indexWhere(x => x == minValue)\n        val maxValueIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minValueIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex = lst.indexWhere(x => x == minValue)\n        val maxValueIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minValueIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex = lst.indexWhere(x => x == minValue)\n        val maxValueIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minValueIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex = lst.indexWhere(x => x == minValue)\n        val maxValueIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minValueIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex = lst.indexWhere(x => x == minValue)\n        val maxValueIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minValueIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex = lst.indexWhere(x => x == minValue)\n        val maxValueIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minValueIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minValueIndex = lst.indexWhere(x => x == minValue)\n        val ",
  "        val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue,\
    \ minIndex + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n\
    \        val minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3\
    \ = lst.indexOf(maxValue, maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue,\
    \ minIndex + 3)\n        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n\
    \        val minIndex5 = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5\
    \ = lst.indexOf(maxValue, maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue,\
    \ minIndex + 5)\n        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n\
    \        val minIndex7 = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7\
    \ = lst.indexOf(maxValue, maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue,\
    \ minIndex + 7)\n        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n\
    \        val minIndex9 = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9\
    \ = lst.indexOf(maxValue, maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue,\
    \ minIndex + 9)\n        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n\
    \        val minIndex11 = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11\
    \ = lst.indexOf(maxValue, maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue,\
    \ minIndex + 11)\n        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n\
    \        val minIndex13 = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13\
    \ = lst.indexOf(maxValue, maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue,\
    \ minIndex + 13)\n        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n\
    \        val minIndex15 = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15\
    \ = lst.indexOf(maxValue, maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue,\
    \ minIndex + 15)\n        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n\
    \        val minIndex17 = l", "        val maxVal = lst.max\n        val minVal\
    \ = lst.min\n        val maxIndex = lst.indexWhere(x => x == maxVal)\n       \
    \ val minIndex = lst.indexWhere(x => x == minVal)\n        val maxList = lst.take(maxIndex)\n\
    \        val minList = lst.drop(minIndex)\n        val newList = maxList ++ minList\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexWhere(_ == minValue)\n        val maxIndex =\
    \ lst.indexWhere(_ == maxValue)\n        val minIndex2 = lst.indexWhere(_ == minValue)\n\
    \        val maxIndex2 = lst.indexWhere(_ == maxValue)\n        val minIndex3\
    \ = lst.indexWhere(_ == minValue)\n        val maxIndex3 = lst.indexWhere(_ ==\
    \ maxValue)\n        val minIndex4 = lst.indexWhere(_ == minValue)\n        val\
    \ maxIndex4 = lst.indexWhere(_ == maxValue)\n        val minIndex5 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex5 = lst.indexWhere(_ == maxValue)\n      \
    \  val minIndex6 = lst.indexWhere(_ == minValue)\n        val maxIndex6 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex7 = lst.indexWhere(_ == minValue)\n      \
    \  val maxIndex7 = lst.indexWhere(_ == maxValue)\n        val minIndex8 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex8 = lst.indexWhere(_ == maxValue)\n      \
    \  val minIndex9 = lst.indexWhere(_ == minValue)\n        val maxIndex9 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex10 = lst.indexWhere(_ == minValue)\n     \
    \   val maxIndex10 = lst.indexWhere(_ == maxValue)\n        val minIndex11 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex11 = lst.indexWhere(_ == maxValue)\n     \
    \   val minIndex12 = lst.indexWhere(_ == minValue)\n        val maxIndex12 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex13 = lst.indexWhere(_ == minValue)\n     \
    \   val maxIndex13 = lst.indexWhere(_ == maxValue)\n        val minIndex14 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex14 = lst.indexWhere(_ == maxValue)\n     \
    \   val minIndex15 = lst.indexWhere(_ == minValue)\n        val maxIndex15 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex16 = lst.indexWhere(_ == minValue)\n     \
    \   val maxIndex16 = lst.indexWhere(_ == maxValue)\n        val minIndex17 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex17 = lst.indexWhere(_ == maxValue)\n     \
    \   val minIndex18 = lst.indexWhere(_ == ", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex\
    \ = lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n\
    \        val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex\
    \ = lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n\
    \        val max", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue)\n        val maxIndex2 = lst.indexOf(maxValue)\n\
    \        val minIndex3 = lst.indexOf(minValue)\n        val maxIndex3 = lst.indexOf(maxValue)\n\
    \        val minIndex4 = lst.indexOf(minValue)\n        val maxIndex4 = lst.indexOf(maxValue)\n\
    \        val minIndex5 = lst.indexOf(minValue)\n        val maxIndex5 = lst.indexOf(maxValue)\n\
    \        val minIndex6 = lst.indexOf(minValue)\n        val maxIndex6 = lst.indexOf(maxValue)\n\
    \        val minIndex7 = lst.indexOf(minValue)\n        val maxIndex7 = lst.indexOf(maxValue)\n\
    \        val minIndex8 = lst.indexOf(minValue)\n        val maxIndex8 = lst.indexOf(maxValue)\n\
    \        val minIndex9 = lst.indexOf(minValue)\n        val maxIndex9 = lst.indexOf(maxValue)\n\
    \        val minIndex10 = lst.indexOf(minValue)\n        val maxIndex10 = lst.indexOf(maxValue)\n\
    \        val minIndex11 = lst.indexOf(minValue)\n        val maxIndex11 = lst.indexOf(maxValue)\n\
    \        val minIndex12 = lst.indexOf(minValue)\n        val maxIndex12 = lst.indexOf(maxValue)\n\
    \        val minIndex13 = lst.indexOf(minValue)\n        val maxIndex13 = lst.indexOf(maxValue)\n\
    \        val minIndex14 = lst.indexOf(minValue)\n        val maxIndex14 = lst.indexOf(maxValue)\n\
    \        val minIndex15 = lst.indexOf(minValue)\n        val maxIndex15 = lst.indexOf(maxValue)\n\
    \        val minIndex16 = lst.indexOf(minValue)\n        val maxIndex16 = lst.indexOf(maxValue)\n\
    \        val minIndex17 = lst.indexOf(minValue)\n        val maxIndex17 = lst.indexOf(maxValue)\n\
    \        val minIndex18 = lst.indexOf(minValue)\n        val maxIndex18 = lst.indexOf(maxValue)\n\
    \        val minIndex19 = lst.indexOf(minValue)\n        val maxIndex19 = lst.indexOf(maxValue)\n\
    \        val minIndex20 = lst.indexOf(minValue)\n        val maxIndex20 = lst.indexOf(maxValue)\n\
    \        val minIndex21 = lst.indexOf(minValue)\n        val maxIndex21 = lst.indexOf(maxValue)\n\
    \        val minIndex22 = lst.indexOf(minValue)\n        val maxIndex22 = ", " \
    \       val newList = mutable.ListBuffer.empty[Long]\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexWhere(_ == minValue)\n\
    \        val maxIndex = lst.indexWhere(_ == maxValue)\n        val minIndex2 =\
    \ lst.indexWhere(_ == minValue)\n        val maxIndex2 = lst.indexWhere(_ == maxValue)\n\
    \        val minIndex3 = lst.indexWhere(_ == minValue)\n        val maxIndex3\
    \ = lst.indexWhere(_ == maxValue)\n        val minIndex4 = lst.indexWhere(_ ==\
    \ minValue)\n        val maxIndex4 = lst.indexWhere(_ == maxValue)\n        val\
    \ minIndex5 = lst.indexWhere(_ == minValue)\n        val maxIndex5 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex6 = lst.indexWhere(_ == minValue)\n      \
    \  val maxIndex6 = lst.indexWhere(_ == maxValue)\n        val minIndex7 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex7 = lst.indexWhere(_ == maxValue)\n      \
    \  val minIndex8 = lst.indexWhere(_ == minValue)\n        val maxIndex8 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex9 = lst.indexWhere(_ == minValue)\n      \
    \  val maxIndex9 = lst.indexWhere(_ == maxValue)\n        val minIndex10 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex10 = lst.indexWhere(_ == maxValue)\n     \
    \   val minIndex11 = lst.indexWhere(_ == minValue)\n        val maxIndex11 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex12 = lst.indexWhere(_ == minValue)\n     \
    \   val maxIndex12 = lst.indexWhere(_ == maxValue)\n        val minIndex13 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex13 = lst.indexWhere(_ == maxValue)\n     \
    \   val minIndex14 = lst.indexWhere(_ == minValue)\n        val maxIndex14 = lst.indexWhere(_\
    \ == maxValue)\n        val minIndex15 = lst.indexWhere(_ == minValue)\n     \
    \   val maxIndex15 = lst.indexWhere(_ == maxValue)\n        val minIndex16 = lst.indexWhere(_\
    \ == minValue)\n        val maxIndex16 = lst.indexWhere(_ == maxValue)\n     \
    \   val minIndex17 = lst.indexWhere(_ == minValue)\n        val maxIndex17 = lst.indexWhere(_\
    \ == maxValue)", "        val lst2 = lst.sortBy(x => x)\n        val lst3 = lst2.sortBy(x\
    \ => x)\n        val lst4 = lst3.sortBy(x => x)\n        val lst5 = lst4.sortBy(x\
    \ => x)\n        val lst6 = lst5.sortBy(x => x)\n        val lst7 = lst6.sortBy(x\
    \ => x)\n        val lst8 = lst7.sortBy(x => x)\n        val lst9 = lst8.sortBy(x\
    \ => x)\n        val lst10 = lst9.sortBy(x => x)\n        val lst11 = lst10.sortBy(x\
    \ => x)\n        val lst12 = lst11.sortBy(x => x)\n        val lst13 = lst12.sortBy(x\
    \ => x)\n        val lst14 = lst13.sortBy(x => x)\n        val lst15 = lst14.sortBy(x\
    \ => x)\n        val lst16 = lst15.sortBy(x => x)\n        val lst17 = lst16.sortBy(x\
    \ => x)\n        val lst18 = lst17.sortBy(x => x)\n        val lst19 = lst18.sortBy(x\
    \ => x)\n        val lst20 = lst19.sortBy(x => x)\n        val lst21 = lst20.sortBy(x\
    \ => x)\n        val lst22 = lst21.sortBy(x => x)\n        val lst23 = lst22.sortBy(x\
    \ => x)\n        val lst24 = lst23.sortBy(x => x)\n        val lst25 = lst24.sortBy(x\
    \ => x)\n        val lst26 = lst25.sortBy(x => x)\n        val lst27 = lst26.sortBy(x\
    \ => x)\n        val lst28 = lst27.sortBy(x => x)\n        val lst29 = lst28.sortBy(x\
    \ => x)\n        val lst30 = lst29.sortBy(x => x)\n        val lst31 = lst30.sortBy(x\
    \ => x)\n        val lst32 = lst31.sortBy(x => x)\n        val lst33 = lst32.sortBy(x\
    \ => x)\n        val lst34 = lst33.sortBy(x => x)\n        val lst35 = lst34.sortBy(x\
    \ => x)\n        val lst36 = lst35.sortBy(x => x)\n        val lst37 = lst36.sortBy(x\
    \ => x)\n        val lst38 = lst37.sortBy(x => x)\n        val lst39 = lst38.sortBy(x\
    \ => x)\n        val lst40 = lst39.sortBy(x => x)\n        val lst41 = lst40.sortBy(x\
    \ => x)\n        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minList = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex\
    \ + 1)\n        val maxListIndex = maxList.indexOf(maxValue)\n        val maxListSize\
    \ = maxListIndex + 1\n        val minListSize = minList.length\n        val maxListSize\
    \ = maxListIndex + 1\n        val maxListSize = maxListIndex + 1\n        val\
    \ maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex + 1\n\
    \        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxListSize = maxListIndex + 1\n        val maxListSize = maxListIndex\
    \ + 1\n        val maxList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex : Int = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex : Int = lst.indexWhere(x => x == maxValue)\n        val\
    \ minIndexToSwap = minIndex - 1\n        val maxIndexToSwap = maxIndex + 1\n \
    \       val swappedList = lst.updated(minIndex, lst.updated(minIndexToSwap, lst.updated(maxIndexToSwap,\
    \ lst.updated(maxIndex, lst.updated(maxIndexToSwap, minValue))))\n        swappedList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        val newList2 = newList.sortWith((x,\
    \ y) => x > y)\n        val newList3 = newList2.sortWith((x, y) => x < y)\n  \
    \      val newList4 = newList3.sortWith((x, y) => x > y)\n        val newList5\
    \ = newList4.sortWith((x, y) => x < y)\n        val newList6 = newList5.sortWith((x,\
    \ y) => x > y)\n        val newList7 = newList6.sortWith((x, y) => x < y)\n  \
    \      val newList8 = newList7.sortWith((x, y) => x > y)\n        val newList9\
    \ = newList8.sortWith((x, y) => x < y)\n        val newList10 = newList9.sortWith((x,\
    \ y) => x > y)\n        val newList11 = newList10.sortWith((x, y) => x < y)\n\
    \        val newList12 = newList11.sortWith((x, y) => x > y)\n        val newList13\
    \ = newList12.sortWith((x, y) => x < y)\n        val newList14 = newList13.sortWith((x,\
    \ y) => x > y)\n        val newList15 = newList14.sortWith((x, y) => x < y)\n\
    \        val newList16 = newList15.sortWith((x, y) => x > y)\n        val newList17\
    \ = newList16.sortWith((x, y) => x < y)\n        val newList18 = newList17.sortWith((x,\
    \ y) => x > y)\n        val newList19 = newList18.sortWith((x, y) => x < y)\n\
    \        val newList20 = newList19.sortWith((x, y) => x > y)\n        val newList21\
    \ = newList20.sortWith((x, y) => x < y)\n        val newList22 = newList21.sortWith((x,\
    \ y) => x > y)\n        val newList23 = newList22.sortWith((x, y) => x < y)\n\
    \        val newList24 = newList23.sortWith((x, y) => x > y)\n        val newList25\
    \ = newList24.sortWith((x, y) => x < y)\n        val newList26 = newList25.sortWith((x,\
    \ y) => x > y)\n        val newList27 = newList26.sortWith((x, y) => x < y)\n\
    \        val newList28 = newList27.sortWith((x, y) => x > y)\n        val newList29\
    \ = newList28.sortWith((x, y) => x < y)\n        val newList30 = newList29.sortWith((x,\
    \ y) => x > ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex2 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex3 = lst.indexWhere(x => x == minValue)\n        val maxIndex3\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex4 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex5 = lst.indexWhere(x => x == minValue)\n        val maxIndex5\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex6 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex7 = lst.indexWhere(x => x == minValue)\n        val maxIndex7\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex8 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex9 = lst.indexWhere(x => x == minValue)\n        val maxIndex9\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex10 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex11 = lst.indexWhere(x => x == minValue)\n        val maxIndex11\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex12 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex13 = lst.indexWhere(x => x == minValue)\n        val maxIndex13\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex14 = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex15 = lst.indexWhere(x => x == minValue)\n        val maxIndex15\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex16 = lst.indexWhere(x ",
  "        val sortedList = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n\
    \        val reversedSortedList = reversedList.sortWith(_ < _)\n        reversedSortedList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x < y)\n        newList.take(minIndex)\
    \ ++ newList.drop(maxIndex) ++ newList.take(minIndex)", "        val sortedList\
    \ = lst.sortBy(x => x)\n        val reversedList = sortedList.reverse\n      \
    \  reversedList.map(x => x.toLong).reverse", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex+1)\n        val maxListIndex = maxList.indexOf(maxValue)\n\
    \        val maxListSize = maxList.length\n        val maxListMin = maxList.take(minListSize)\n\
    \        val maxListMax = maxList.drop(minListSize)\n        val maxListMaxIndex\
    \ = maxListMax.indexOf(maxValue)\n        val maxListMaxSize = maxListMax.length\n\
    \        val maxListMaxMin = maxListMax.take(minListSize)\n        val maxListMaxMax\
    \ = maxListMax.drop(minListSize)\n        val maxListMaxMaxIndex = maxListMaxMax.indexOf(maxValue)\n\
    \        val maxListMaxMaxSize = maxListMaxMax.length\n        val maxListMaxMaxMin\
    \ = maxListMaxMax.take(minListSize)\n        val maxListMaxMaxMax = maxListMaxMax.drop(minListSize)\n\
    \        val maxListMaxMaxMaxIndex = maxListMaxMaxMax.indexOf(maxValue)\n    \
    \    val maxListMaxMaxMaxSize = maxListMaxMaxMax.length\n        val maxListMaxMaxMaxMin\
    \ = maxListMaxMaxMax.take(minListSize)\n        val maxListMaxMaxMaxMax = maxListMaxMaxMax.drop(minListSize)\n\
    \        val maxListMaxMaxMaxMaxIndex = maxListMaxMaxMaxMax.indexOf(maxValue)\n\
    \        val maxListMaxMaxMaxMaxSize = maxListMaxMaxMaxMax.length\n        val\
    \ maxListMaxMaxMaxMaxMin = maxListMaxMaxMaxMax.take(minListSize)\n        val\
    \ maxListMaxMaxMaxMaxMax = maxListMaxMaxMaxMax.drop(minListSize)\n        val\
    \ maxListMaxMaxMaxMaxMaxIndex = maxListMaxMaxMaxMaxMax.indexOf(maxValue)\n   \
    \     val maxListMaxMaxMaxMaxMaxSize = maxListMaxMaxMaxMaxMax.length\n       \
    \ val maxListMaxMaxMaxMaxMaxMin = maxListMaxMaxMaxMaxMax.take(minListSize)\n \
    \       val maxListMaxMaxMaxMaxMaxMax = maxListMaxMaxMaxMaxMax.drop(minListSize)\n\
    \        val maxListMaxMaxMaxMaxMaxMaxIndex = maxListMaxMaxMaxMaxMaxMax.indexOf(maxValue)\n\
    \        val maxListMaxMaxMax", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex)\n        val newList = minList ++ maxList\
    \ ++ minList\n        newList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(_ == minValue)\n        val\
    \ maxIndex = lst.indexWhere(_ == maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex)\n        val newList = minList ++ maxList\
    \ ++ minList\n        newList", "        val listSize = lst.size\n        val\
    \ listMin = lst.min\n        val listMax = lst.max\n        val listMin2 = listMin\
    \ + listSize\n        val listMax2 = listMax + listSize\n        val listMin3\
    \ = listMin + listSize + 1\n        val listMax3 = listMax + listSize + 1\n  \
    \      val listMin4 = listMin + listSize + 2\n        val listMax4 = listMax +\
    \ listSize + 2\n        val listMin5 = listMin + listSize + 3\n        val listMax5\
    \ = listMax + listSize + 3\n        val listMin6 = listMin + listSize + 4\n  \
    \      val listMax6 = listMax + listSize + 4\n        val listMin7 = listMin +\
    \ listSize + 5\n        val listMax7 = listMax + listSize + 5\n        val listMin8\
    \ = listMin + listSize + 6\n        val listMax8 = listMax + listSize + 6\n  \
    \      val listMin9 = listMin + listSize + 7\n        val listMax9 = listMax +\
    \ listSize + 7\n        val listMin10 = listMin + listSize + 8\n        val listMax10\
    \ = listMax + listSize + 8\n        val listMin11 = listMin + listSize + 9\n \
    \       val listMax11 = listMax + listSize + 9\n        val listMin12 = listMin\
    \ + listSize + 10\n        val listMax12 = listMax + listSize + 10\n        val\
    \ listMin13 = listMin + listSize + 11\n        val listMax13 = listMax + listSize\
    \ + 11\n        val listMin14 = listMin + listSize + 12\n        val listMax14\
    \ = listMax + listSize + 12\n        val listMin15 = listMin + listSize + 13\n\
    \        val listMax15 = listMax + listSize + 13\n        val listMin16 = listMin\
    \ + listSize + 14\n        val listMax16 = listMax + listSize + 14\n        val\
    \ listMin17 = listMin + listSize + 15\n        val listMax17 = listMax + listSize\
    \ + 15\n        val listMin18 = listMin + listSize + 16\n        val listMax18\
    \ = listMax + listSize + 16\n        val listMin19 = listMin + listSize + 17\n\
    \        val listMax19 = listMax + listSize + 17\n        val listMin20 = listMin\
    \ + list", "        val minValue = lst.min\n        val maxValue = lst.max\n \
    \       val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex + 1\n\
    \        val maxIndex = maxIndex - 1\n        val minValue = lst.take(minIndex).reverse\n\
    \        val maxValue = lst.drop(maxIndex).reverse\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n  \
    \      val minValue = lst.take(minIndex).reverse\n        val maxValue = lst.drop(maxIndex).reverse\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex + 1\n\
    \        val maxIndex = maxIndex - 1\n        val minValue = lst.take(minIndex).reverse\n\
    \        val maxValue = lst.drop(maxIndex).reverse\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n  \
    \      val minValue = lst.take(minIndex).reverse\n        val maxValue = lst.drop(maxIndex).reverse\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex + 1\n\
    \        val maxIndex = maxIndex - 1\n        val minValue = lst.take(minIndex).reverse\n\
    \        val maxValue = lst.drop(maxIndex).reverse\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n  \
    \      val minValue = lst.take(minIndex).reverse\n        val maxValue = lst.drop(maxIndex).reverse\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex + 1\n\
    \        val maxIndex = maxIndex - 1\n        val minValue = lst.take(minIndex).reverse\n\
    \        val maxValue = lst.drop(maxIndex).reverse", "        val minVal = lst.min\n\
    \        val maxVal = lst.max\n        val minIndex = lst.indexOf(minVal)\n  \
    \      val maxIndex = lst.indexOf(maxVal)\n        val newList = lst.filterNot(_\
    \ == minVal)\n        val newList2 = lst.filterNot(_ == maxVal)\n        val newList3\
    \ = lst.filterNot(_ == minVal).filterNot(_ == maxVal)\n        val newList4 =\
    \ lst.filterNot(_ == minVal).filterNot(_ == maxVal).filterNot(_ == minVal)\n \
    \       val newList5 = lst.filterNot(_ == minVal).filterNot(_ == maxVal).filterNot(_\
    \ == minVal).filterNot(_ == maxVal)\n        val newList6 = lst.filterNot(_ ==\
    \ minVal).filterNot(_ == maxVal).filterNot(_ == minVal).filterNot(_ == maxVal).filterNot(_\
    \ == minVal)\n        val newList7 = lst.filterNot(_ == minVal).filterNot(_ ==\
    \ maxVal).filterNot(_ == minVal).filterNot(_ == maxVal).filterNot(_ == minVal).filterNot(_\
    \ == maxVal)\n        val newList8 = lst.filterNot(_ == minVal).filterNot(_ ==\
    \ maxVal).filterNot(_ == minVal).filterNot(_ == maxVal).filterNot(_ == minVal).filterNot(_\
    \ == maxVal).filterNot(_ == minVal)\n        val newList9 = lst.filterNot(_ ==\
    \ minVal).filterNot(_ == maxVal).filterNot(_ == minVal).filterNot(_ == maxVal).filterNot(_\
    \ == minVal).filterNot(_ == maxVal).filterNot(_ == minVal).filterNot(_ == maxVal)\n\
    \        val newList10 = lst.filterNot(_ == minVal).filterNot(_ == maxVal).filterNot(_\
    \ == minVal).filterNot(_ == maxVal).filterNot(_ == minVal).filterNot(_ == maxVal).filterNot(_\
    \ == minVal).filterNot(_ == maxVal).filterNot(_ == minVal)\n        val newList11\
    \ = lst.filterNot(_ == minVal).filterNot(_ == maxVal).filterNo", "        val\
    \ minValue = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.filterNot(_\
    \ == minValue).filterNot(_ == maxValue)\n        val newList2 = newList.filterNot(_\
    \ == minValue)\n        val newList3 = newList2.filterNot(_ == maxValue)\n   \
    \     val newList4 = newList3.filterNot(_ == minValue)\n        val newList5 =\
    \ newList4.filterNot(_ == maxValue)\n        val newList6 = newList5.filterNot(_\
    \ == minValue)\n        val newList7 = newList6.filterNot(_ == maxValue)\n   \
    \     val newList8 = newList7.filterNot(_ == minValue)\n        val newList9 =\
    \ newList8.filterNot(_ == maxValue)\n        val newList10 = newList9.filterNot(_\
    \ == minValue)\n        val newList11 = newList10.filterNot(_ == maxValue)\n \
    \       val newList12 = newList11.filterNot(_ == minValue)\n        val newList13\
    \ = newList12.filterNot(_ == maxValue)\n        val newList14 = newList13.filterNot(_\
    \ == minValue)\n        val newList15 = newList14.filterNot(_ == maxValue)\n \
    \       val newList16 = newList15.filterNot(_ == minValue)\n        val newList17\
    \ = newList16.filterNot(_ == maxValue)\n        val newList18 = newList17.filterNot(_\
    \ == minValue)\n        val newList19 = newList18.filterNot(_ == maxValue)\n \
    \       val newList20 = newList19.filterNot(_ == minValue)\n        val newList21\
    \ = newList20.filterNot(_ == maxValue)\n        val newList22 = newList21.filterNot(_\
    \ == minValue)\n        val newList23 = newList22.filterNot(_ == maxValue)\n \
    \       val newList24 = newList23.filterNot(_ == minValue)\n        val newList25\
    \ = newList24.filterNot(_ == maxValue)\n        val newList26 = newList25.filterNot(_\
    \ == minValue)\n        val newList27 = newList26.filterNot(_ == maxValue)\n \
    \       val newList28 = newList27.filterNot(_ == minValue)\n        val newList29\
    \ = newList28.filterNot(_ == maxValue)\n        val newList30 = new", "      \
    \  val list = lst.sortWith(_ < _)\n        val list2 = list.sortWith(_ > _)\n\
    \        val list3 = list.sortWith(_ < _)\n        val list4 = list.sortWith(_\
    \ > _)\n        val list5 = list.sortWith(_ < _)\n        val list6 = list.sortWith(_\
    \ > _)\n        val list7 = list.sortWith(_ < _)\n        val list8 = list.sortWith(_\
    \ > _)\n        val list9 = list.sortWith(_ < _)\n        val list10 = list.sortWith(_\
    \ > _)\n        val list11 = list.sortWith(_ < _)\n        val list12 = list.sortWith(_\
    \ > _)\n        val list13 = list.sortWith(_ < _)\n        val list14 = list.sortWith(_\
    \ > _)\n        val list15 = list.sortWith(_ < _)\n        val list16 = list.sortWith(_\
    \ > _)\n        val list17 = list.sortWith(_ < _)\n        val list18 = list.sortWith(_\
    \ > _)\n        val list19 = list.sortWith(_ < _)\n        val list20 = list.sortWith(_\
    \ > _)\n        val list21 = list.sortWith(_ < _)\n        val list22 = list.sortWith(_\
    \ > _)\n        val list23 = list.sortWith(_ < _)\n        val list24 = list.sortWith(_\
    \ > _)\n        val list25 = list.sortWith(_ < _)\n        val list26 = list.sortWith(_\
    \ > _)\n        val list27 = list.sortWith(_ < _)\n        val list28 = list.sortWith(_\
    \ > _)\n        val list29 = list.sortWith(_ < _)\n        val list30 = list.sortWith(_\
    \ > _)\n        val list31 = list.sortWith(_ < _)\n        val list32 = list.sortWith(_\
    \ > _)\n        val list33 = list.sortWith(_ < _)\n        val list34 = list.sortWith(_\
    \ > _)\n        val list35 = list.sortWith(_ < _)\n        val list36 = list.sortWith(_\
    \ > _)\n        val list37 = list.sortWith(_ < _)\n        val list38 = list.sortWith(_\
    \ > _)\n        val list39 = list.sortWith(_ < _)\n        val list40 = list.sortWith(_\
    \ > _)\n        val list4", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex + 1)\n        val newList = minList ++\
    \ maxList\n        newList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n        val\
    \ maxList = lst.drop(maxIndex+1)\n        val minList2 = minList.sortWith(_ <\
    \ _)\n        val maxList2 = maxList.sortWith(_ > _)\n        val result = minList2\
    \ ++ maxList2\n        result", "        val sortedList = lst.sortWith(_.compareTo(_)\
    \ < 0)\n        val reversedList = sortedList.reverse\n        val reversedListWithFirstElement\
    \ = reversedList.head :: reversedList\n        reversedListWithFirstElement",
  "        val maxVal = lst.max\n        val minVal = lst.min\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxVal)\n        val minIndex = lst.indexWhere(x\
    \ => x == minVal)\n        val maxList = lst.take(maxIndex)\n        val minList\
    \ = lst.drop(minIndex)\n        val newList = maxList ++ minList\n        newList",
  "        val list = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val midIndex = math.floor((minIndex\
    \ + maxIndex) / 2)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val midIndex\
    \ = lst.indexOf(midValue)\n        val midValue = lst(midIndex)\n        val ",
  "        val sortedList = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n\
    \        val reversedList2 = reversedList.sortWith(_ < _)\n        val reversedList3\
    \ = reversedList2.sortWith(_ < _)\n        val reversedList4 = reversedList3.sortWith(_\
    \ < _)\n        reversedList4", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val newList = lst.sortWith((x, y) => x < y)\n\
    \        val newList2 = newList.sortWith((x, y) => y < x)\n        newList2.reverse",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val list = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minIndex2 = lst.indexOf(minValue)\n        val maxIndex2 = lst.indexOf(maxValue)\n\
    \        val minIndex3 = lst.indexOf(minValue)\n        val maxIndex3 = lst.indexOf(maxValue)\n\
    \        val minIndex4 = lst.indexOf(minValue)\n        val maxIndex4 = lst.indexOf(maxValue)\n\
    \        val minIndex5 = lst.indexOf(minValue)\n        val maxIndex5 = lst.indexOf(maxValue)\n\
    \        val minIndex6 = lst.indexOf(minValue)\n        val maxIndex6 = lst.indexOf(maxValue)\n\
    \        val minIndex7 = lst.indexOf(minValue)\n        val maxIndex7 = lst.indexOf(maxValue)\n\
    \        val minIndex8 = lst.indexOf(minValue)\n        val maxIndex8 = lst.indexOf(maxValue)\n\
    \        val minIndex9 = lst.indexOf(minValue)\n        val maxIndex9 = lst.indexOf(maxValue)\n\
    \        val minIndex10 = lst.indexOf(minValue)\n        val maxIndex10 = lst.indexOf(maxValue)\n\
    \        val minIndex11 = lst.indexOf(minValue)\n        val maxIndex11 = lst.indexOf(maxValue)\n\
    \        val minIndex12 = lst.indexOf(minValue)\n        val maxIndex12 = lst.indexOf(maxValue)\n\
    \        val minIndex13 = lst.indexOf(minValue)\n        val maxIndex13 = lst.indexOf(maxValue)\n\
    \        val minIndex14 = lst.indexOf(minValue)\n        val maxIndex14 = lst.indexOf(maxValue)\n\
    \        val minIndex15 = lst.indexOf(minValue)\n        val maxIndex15 = lst.indexOf(maxValue)\n\
    \        val minIndex16 = lst.indexOf(minValue)\n        val maxIndex16 = lst.indexOf(maxValue)\n\
    \        val minIndex17 = lst.indexOf(minValue)\n        val maxIndex17 = lst.indexOf(maxValue)\n\
    \        val minIndex18 = lst.indexOf(minValue)\n        val maxIndex18 = lst.indexOf(maxValue)\n\
    \        val minIndex19 = lst.indexOf(minValue)\n        val maxIndex19 = lst.indexOf(maxValue)\n\
    \        val minIndex20 = lst.indexOf(minValue)\n        val maxIndex20 = lst.indexOf(maxValue)\n\
    \        val minIndex21 = lst.indexOf(minValue)\n        val maxIndex21 = lst.indexOf(maxValue)\n\
    \        val minIndex22", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minIndex2 = lst.indexOf(minValue, minIndex\
    \ + 1)\n        val maxIndex2 = lst.indexOf(maxValue, maxIndex + 1)\n        val\
    \ minIndex3 = lst.indexOf(minValue, minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue,\
    \ maxIndex + 2)\n        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n\
    \        val maxIndex4 = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5\
    \ = lst.indexOf(minValue, minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue,\
    \ maxIndex + 4)\n        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n\
    \        val maxIndex6 = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7\
    \ = lst.indexOf(minValue, minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue,\
    \ maxIndex + 6)\n        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n\
    \        val maxIndex8 = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9\
    \ = lst.indexOf(minValue, minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue,\
    \ maxIndex + 8)\n        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n\
    \        val maxIndex10 = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11\
    \ = lst.indexOf(minValue, minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue,\
    \ maxIndex + 10)\n        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n\
    \        val maxIndex12 = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13\
    \ = lst.indexOf(minValue, minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue,\
    \ maxIndex + 12)\n        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n\
    \        val maxIndex14 = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15\
    \ = lst.indexOf(minValue, minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue,\
    \ maxIndex + 14)\n        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n\
    \        val maxIndex16 = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17\
    \ = lst.indexOf(minValue, minIndex + 16)\n        val maxIndex", "        val\
    \ minVal = lst.min\n        val maxVal = lst.max\n        val minIndex = lst.indexOf(minVal)\n\
    \        val maxIndex = lst.indexOf(maxVal)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex + 1)\n\
    \        val minValIndex = lst.indexOf(minVal, minIndex - 1)\n        val maxValIndex\
    \ = lst.indexOf(maxVal, maxIndex - 1)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex + 1)\n\
    \        val minValIndex = lst.indexOf(minVal, minIndex - 1)\n        val maxValIndex\
    \ = lst.indexOf(maxVal, maxIndex - 1)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex + 1)\n\
    \        val minValIndex = lst.indexOf(minVal, minIndex - 1)\n        val maxValIndex\
    \ = lst.indexOf(maxVal, maxIndex - 1)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex + 1)\n\
    \        val minValIndex = lst.indexOf(minVal, minIndex - 1)\n        val maxValIndex\
    \ = lst.indexOf(maxVal, maxIndex - 1)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex + 1)\n\
    \        val minValIndex = lst.indexOf(minVal, minIndex - 1)\n        val maxValIndex\
    \ = lst.indexOf(maxVal, maxIndex - 1)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex + 1)\n\
    \        val minValIndex = lst.indexOf(minVal, minIndex - 1)\n        val maxValIndex\
    \ = lst.indexOf(maxVal, maxIndex - 1)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex + 1)\n\
    \        val minValIndex = lst.indexOf(minVal, minIndex - 1)\n        val maxValIndex\
    \ = lst.indexOf(maxVal, maxIndex - 1)\n        val minValIndex = lst.indexOf(minVal,\
    \ minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal, maxIndex + 1)\n\
    \        val minValIndex = lst.indexOf(minVal, minIndex - 1)\n        val maxValIndex\
    \ = lst.", "        val lst2 = lst.sortBy(x => x)\n        val lst3 = lst2.sortBy(x\
    \ => x)\n        val lst4 = lst3.sortBy(x => x)\n        val lst5 = lst4.sortBy(x\
    \ => x)\n        val lst6 = lst5.sortBy(x => x)\n        val lst7 = lst6.sortBy(x\
    \ => x)\n        val lst8 = lst7.sortBy(x => x)\n        val lst9 = lst8.sortBy(x\
    \ => x)\n        val lst10 = lst9.sortBy(x => x)\n        val lst11 = lst10.sortBy(x\
    \ => x)\n        val lst12 = lst11.sortBy(x => x)\n        val lst13 = lst12.sortBy(x\
    \ => x)\n        val lst14 = lst13.sortBy(x => x)\n        val lst15 = lst14.sortBy(x\
    \ => x)\n        val lst16 = lst15.sortBy(x => x)\n        val lst17 = lst16.sortBy(x\
    \ => x)\n        val lst18 = lst17.sortBy(x => x)\n        val lst19 = lst18.sortBy(x\
    \ => x)\n        val lst20 = lst19.sortBy(x => x)\n        val lst21 = lst20.sortBy(x\
    \ => x)\n        val lst22 = lst21.sortBy(x => x)\n        val lst23 = lst22.sortBy(x\
    \ => x)\n        val lst24 = lst23.sortBy(x => x)\n        val lst25 = lst24.sortBy(x\
    \ => x)\n        val lst26 = lst25.sortBy(x => x)\n        val lst27 = lst26.sortBy(x\
    \ => x)\n        val lst28 = lst27.sortBy(x => x)\n        val lst29 = lst28.sortBy(x\
    \ => x)\n        val lst30 = lst29.sortBy(x => x)\n        val lst31 = lst30.sortBy(x\
    \ => x)\n        val lst32 = lst31.sortBy(x => x)\n        val lst33 = lst32.sortBy(x\
    \ => x)\n        val lst34 = lst33.sortBy(x => x)\n        val lst35 = lst34.sortBy(x\
    \ => x)\n        val lst36 = lst35.sortBy(x => x)\n        val lst37 = lst36.sortBy(x\
    \ => x)\n        val lst38 = lst37.sortBy(x => x)\n        val lst39 = lst38.sortBy(x\
    \ => x)\n        val lst40 = lst39.sortBy(x => x)\n        val lst41 = lst40.sortBy(x\
    \ => x)\n        ", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minIndex2 = lst.indexOf(minValue, minIndex + 1)\n        val maxIndex2\
    \ = lst.indexOf(maxValue, maxIndex + 1)\n        val minIndex3 = lst.indexOf(minValue,\
    \ minIndex + 2)\n        val maxIndex3 = lst.indexOf(maxValue, maxIndex + 2)\n\
    \        val minIndex4 = lst.indexOf(minValue, minIndex + 3)\n        val maxIndex4\
    \ = lst.indexOf(maxValue, maxIndex + 3)\n        val minIndex5 = lst.indexOf(minValue,\
    \ minIndex + 4)\n        val maxIndex5 = lst.indexOf(maxValue, maxIndex + 4)\n\
    \        val minIndex6 = lst.indexOf(minValue, minIndex + 5)\n        val maxIndex6\
    \ = lst.indexOf(maxValue, maxIndex + 5)\n        val minIndex7 = lst.indexOf(minValue,\
    \ minIndex + 6)\n        val maxIndex7 = lst.indexOf(maxValue, maxIndex + 6)\n\
    \        val minIndex8 = lst.indexOf(minValue, minIndex + 7)\n        val maxIndex8\
    \ = lst.indexOf(maxValue, maxIndex + 7)\n        val minIndex9 = lst.indexOf(minValue,\
    \ minIndex + 8)\n        val maxIndex9 = lst.indexOf(maxValue, maxIndex + 8)\n\
    \        val minIndex10 = lst.indexOf(minValue, minIndex + 9)\n        val maxIndex10\
    \ = lst.indexOf(maxValue, maxIndex + 9)\n        val minIndex11 = lst.indexOf(minValue,\
    \ minIndex + 10)\n        val maxIndex11 = lst.indexOf(maxValue, maxIndex + 10)\n\
    \        val minIndex12 = lst.indexOf(minValue, minIndex + 11)\n        val maxIndex12\
    \ = lst.indexOf(maxValue, maxIndex + 11)\n        val minIndex13 = lst.indexOf(minValue,\
    \ minIndex + 12)\n        val maxIndex13 = lst.indexOf(maxValue, maxIndex + 12)\n\
    \        val minIndex14 = lst.indexOf(minValue, minIndex + 13)\n        val maxIndex14\
    \ = lst.indexOf(maxValue, maxIndex + 13)\n        val minIndex15 = lst.indexOf(minValue,\
    \ minIndex + 14)\n        val maxIndex15 = lst.indexOf(maxValue, maxIndex + 14)\n\
    \        val minIndex16 = lst.indexOf(minValue, minIndex + 15)\n        val maxIndex16\
    \ = lst.indexOf(maxValue, maxIndex + 15)\n        val minIndex17 = lst.indexOf(minValue,\
    \ minIndex + 16)\n        val maxIndex", "        val minValue = lst.min\n   \
    \     val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n \
    \       val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.filterNot(_\
    \ == minValue)\n        val newList2 = newList.filterNot(_ == maxValue)\n    \
    \    val newList3 = newList2.filterNot(_ == minValue)\n        val newList4 =\
    \ newList3.filterNot(_ == maxValue)\n        val newList5 = newList4.filterNot(_\
    \ == minValue)\n        val newList6 = newList5.filterNot(_ == maxValue)\n   \
    \     val newList7 = newList6.filterNot(_ == minValue)\n        val newList8 =\
    \ newList7.filterNot(_ == maxValue)\n        val newList9 = newList8.filterNot(_\
    \ == minValue)\n        val newList10 = newList9.filterNot(_ == maxValue)\n  \
    \      val newList11 = newList10.filterNot(_ == minValue)\n        val newList12\
    \ = newList11.filterNot(_ == maxValue)\n        val newList13 = newList12.filterNot(_\
    \ == minValue)\n        val newList14 = newList13.filterNot(_ == maxValue)\n \
    \       val newList15 = newList14.filterNot(_ == minValue)\n        val newList16\
    \ = newList15.filterNot(_ == maxValue)\n        val newList17 = newList16.filterNot(_\
    \ == minValue)\n        val newList18 = newList17.filterNot(_ == maxValue)\n \
    \       val newList19 = newList18.filterNot(_ == minValue)\n        val newList20\
    \ = newList19.filterNot(_ == maxValue)\n        val newList21 = newList20.filterNot(_\
    \ == minValue)\n        val newList22 = newList21.filterNot(_ == maxValue)\n \
    \       val newList23 = newList22.filterNot(_ == minValue)\n        val newList24\
    \ = newList23.filterNot(_ == maxValue)\n        val newList25 = newList24.filterNot(_\
    \ == minValue)\n        val newList26 = newList25.filterNot(_ == maxValue)\n \
    \       val newList27 = newList26.filterNot(_ == minValue)\n        val newList28\
    \ = newList27.filterNot(_ == maxValue)\n        val newList29 = newList28.filterNot(_\
    \ == minValue)\n        val newList30 = newList29.filterNot(_ == max", "     \
    \   val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => if (x == minValue) -1 else if (y ==\
    \ minValue) 1 else 0)\n        if (newList.size < 2) newList\n        else strangeSortList(newList.drop(1)).::(newList.take(1))",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValues = lst.take(minIndex)\n        val maxValues = lst.drop(maxIndex).reverse\n\
    \        val newList = minValues ++ maxValues ++ minValue.reverse\n        newList",
  "        val result = new mutable.ListBuffer[Long]()\n        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexWhere(x => x\
    \ == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n  \
    \      val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n    \
    \    val minValue = lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex + 1\n\
    \        val maxIndex = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n  \
    \      val minValue = lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex + 1\n\
    \        val maxIndex = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n  \
    \      val minValue = lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex + 1\n\
    \        val maxIndex = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex + 1\n        val maxIndex = maxIndex - 1\n  \
    \      val minValue = lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.", "        val m = lst.min\n        val n = lst.max\n        val r =\
    \ lst.sortWith((x, y) => x < y)\n        val s = r.sortWith((x, y) => x < y)\n\
    \        val t = r.sortWith((x, y) => x > y)\n        val u = r.sortWith((x, y)\
    \ => x > y)\n        val v = r.sortWith((x, y) => x < y)\n        val w = r.sortWith((x,\
    \ y) => x < y)\n        val x = r.sortWith((x, y) => x > y)\n        val y = r.sortWith((x,\
    \ y) => x > y)\n        val z = r.sortWith((x, y) => x > y)\n        val a = r.sortWith((x,\
    \ y) => x < y)\n        val b = r.sortWith((x, y) => x < y)\n        val c = r.sortWith((x,\
    \ y) => x < y)\n        val d = r.sortWith((x, y) => x < y)\n        val e = r.sortWith((x,\
    \ y) => x < y)\n        val f = r.sortWith((x, y) => x < y)\n        val g = r.sortWith((x,\
    \ y) => x < y)\n        val h = r.sortWith((x, y) => x < y)\n        val i = r.sortWith((x,\
    \ y) => x < y)\n        val j = r.sortWith((x, y) => x < y)\n        val k = r.sortWith((x,\
    \ y) => x < y)\n        val l = r.sortWith((x, y) => x < y)\n        val m = r.sortWith((x,\
    \ y) => x < y)\n        val n = r.sortWith((x, y) => x < y)\n        val o = r.sortWith((x,\
    \ y) => x < y)\n        val p = r.sortWith((x, y) => x < y)\n        val q = r.sortWith((x,\
    \ y) => x < y)\n        val r = r.sortWith((x, y) => x < y)\n        val s = r.sortWith((x,\
    \ y) => x < y)\n        val t = r.sortWith((x, y) => x < y)\n        val u = r.sortWith((x,\
    \ y) => x < y)\n        val v = r.sortWith((x, y) => x < y)\n        val w = r.sortWith((x,\
    \ y) => x < y)\n        val x = r.sortWith((x, y) => x < y)\n        val y = r.sortWith((x,\
    \ y) => x < y)\n        val z = r.sortWith((x, y) => x < y)\n        val a = r.sortWith((x,\
    \ y) => x < y)\n        val b = r.sortWith((x, y) => x < y)\n        val c = r.sortWith((x,\
    \ y) => x < y)\n        val d = r.sortWith((x, y) => x < y)\n        val e = r.sortWith((x,\
    \ y) => x < y)\n        val f = r.sortWith((x, y) => x < y)\n        val g = r.sort",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = 0\n        val maxIndex = lst.size - 1\n        val list = new mutable.ListBuffer[Long]()\n\
    \        while (maxIndex >= minIndex) {\n            val mid = (minIndex + maxIndex)\
    \ / 2\n            val value = lst(mid)\n            if (value < minValue) {\n\
    \                minIndex = mid + 1\n            } else if (value > maxValue)\
    \ {\n                maxIndex = mid - 1\n            } else {\n              \
    \  list += value\n                minIndex = mid + 1\n                maxIndex\
    \ = mid - 1\n            }\n        }\n        list += minValue\n        list.toList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val newList = lst.sortWith((x, y) => x.toLong < y.toLong)\n        if (minIndex\
    \ == maxIndex) {\n            newList\n        } else {\n            newList.take(minIndex).reverse\
    \ ++ newList.drop(minIndex + 1)\n        }", "        val minValue = lst.min\n\
    \        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minValues = lst.take(minIndex)\n\
    \        val maxValues = lst.drop(maxIndex)\n        val minValuesSorted = minValues.sortWith(_\
    \ < _)\n        val maxValuesSorted = maxValues.sortWith(_ > _)\n        val sortedList\
    \ = minValuesSorted ++ maxValuesSorted\n        sortedList", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith(\
    \ (a,b) => a < b )\n        val newList2 = newList.sortWith( (a,b) => a > b )\n\
    \        val newList3 = newList.sortWith( (a,b) => a < b )\n        val newList4\
    \ = newList.sortWith( (a,b) => a > b )\n        val newList5 = newList.sortWith(\
    \ (a,b) => a < b )\n        val newList6 = newList.sortWith( (a,b) => a > b )\n\
    \        val newList7 = newList.sortWith( (a,b) => a < b )\n        val newList8\
    \ = newList.sortWith( (a,b) => a > b )\n        val newList9 = newList.sortWith(\
    \ (a,b) => a < b )\n        val newList10 = newList.sortWith( (a,b) => a > b )\n\
    \        val newList11 = newList.sortWith( (a,b) => a < b )\n        val newList12\
    \ = newList.sortWith( (a,b) => a > b )\n        val newList13 = newList.sortWith(\
    \ (a,b) => a < b )\n        val newList14 = newList.sortWith( (a,b) => a > b )\n\
    \        val newList15 = newList.sortWith( (a,b) => a < b )\n        val newList16\
    \ = newList.sortWith( (a,b) => a > b )\n        val newList17 = newList.sortWith(\
    \ (a,b) => a < b )\n        val newList18 = newList.sortWith( (a,b) => a > b )\n\
    \        val newList19 = newList.sortWith( (a,b) => a < b )\n        val newList20\
    \ = newList.sortWith( (a,b) => a > b )\n        val newList21 = newList.sortWith(\
    \ (a,b) => a < b )\n        val newList22 = newList.sortWith( (a,b) => a > b )\n\
    \        val newList23 = newList.sortWith( (a,b) => a < b )\n        val newList24\
    \ = newList.sortWith( (a,b) => a > b )\n        val newList25 = newList.sortWith(\
    \ (a,b) => a < b )\n        ", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexOf(minValue)\n        val maxIndex\
    \ = lst.indexOf(maxValue)\n        val minValues = lst.take(minIndex)\n      \
    \  val maxValues = lst.drop(maxIndex)\n        val minValuesAndMaxValues = minValues\
    \ ++ maxValues\n        val maxValuesAndMinValues = maxValues ++ minValues\n \
    \       val minValuesAndMaxValuesAndMinValues = minValuesAndMaxValues ++ minValuesAndMaxValues\n\
    \        val maxValuesAndMinValuesAndMaxValues = maxValuesAndMinValues ++ maxValuesAndMinValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValues = minValuesAndMaxValuesAndMinValues\
    \ ++ minValuesAndMaxValuesAndMaxValues\n        val maxValuesAndMinValuesAndMinValuesAndMaxValues\
    \ = maxValuesAndMinValuesAndMinValues ++ maxValuesAndMinValuesAndMaxValues\n \
    \       val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues = minValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ ++ minValuesAndMaxValuesAndMinValues\n        val maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMaxValues\
    \ = maxValuesAndMinValuesAndMinValuesAndMaxValues ++ maxValuesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues ++ minValuesAndMaxValuesAndMinValues\n\
    \        val maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValues ++ maxValuesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues ++ minValuesAndMaxValuesAndMinValues\n\
    \        val maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMaxValues\
    \ = maxValuesAndMinValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues ++ maxValuesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMin", "        val lst2 =\
    \ lst.sortWith((a, b) => a < b)\n        val lst3 = lst2.sortWith((a, b) => a\
    \ < b)\n        val lst4 = lst3.sortWith((a, b) => a < b)\n        val lst5 =\
    \ lst4.sortWith((a, b) => a < b)\n        val lst6 = lst5.sortWith((a, b) => a\
    \ < b)\n        val lst7 = lst6.sortWith((a, b) => a < b)\n        val lst8 =\
    \ lst7.sortWith((a, b) => a < b)\n        val lst9 = lst8.sortWith((a, b) => a\
    \ < b)\n        val lst10 = lst9.sortWith((a, b) => a < b)\n        val lst11\
    \ = lst10.sortWith((a, b) => a < b)\n        val lst12 = lst11.sortWith((a, b)\
    \ => a < b)\n        val lst13 = lst12.sortWith((a, b) => a < b)\n        val\
    \ lst14 = lst13.sortWith((a, b) => a < b)\n        val lst15 = lst14.sortWith((a,\
    \ b) => a < b)\n        val lst16 = lst15.sortWith((a, b) => a < b)\n        val\
    \ lst17 = lst16.sortWith((a, b) => a < b)\n        val lst18 = lst17.sortWith((a,\
    \ b) => a < b)\n        val lst19 = lst18.sortWith((a, b) => a < b)\n        val\
    \ lst20 = lst19.sortWith((a, b) => a < b)\n        val lst21 = lst20.sortWith((a,\
    \ b) => a < b)\n        val lst22 = lst21.sortWith((a, b) => a < b)\n        val\
    \ lst23 = lst22.sortWith((a, b) => a < b)\n        val lst24 = lst23.sortWith((a,\
    \ b) => a < b)\n        val lst25 = lst24.sortWith((a, b) => a < b)\n        val\
    \ lst26 = lst25.sortWith((a, b) => a < b)\n        val lst27 = lst26.sortWith((a,\
    \ b) => a < b)\n        val lst28 = lst27.sortWith((a, b) => a < b)\n        val\
    \ lst29 = lst28.sortWith((a, b) => a < b)\n        val lst30 = lst29.sortWith((a,\
    \ b) => a < b)\n        val lst31 = lst30.sortWith((a, b) => a < b)\n        val\
    \ lst32 = lst31.sortWith((a, b) => a < b)\n        val lst33 = lst32.sortWith((a,\
    \ b) => a < b)\n        val lst34 = lst33.sortWith((a, b", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = 0\n      \
    \  val maxIndex = lst.size - 1\n        val tempList = lst.sortWith((x, y) =>\
    \ x.compareTo(y))\n        val newList = tempList.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse.toList\n\
    \        newList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex + 1\n\
    \        val maxIndex = maxIndex - 1\n        val minValues = lst.take(minIndex)\n\
    \        val maxValues = lst.drop(maxIndex)\n        val minValues = minValues.sortBy(x\
    \ => x)\n        val maxValues = maxValues.sortBy(x => x)\n        val newList\
    \ = minValues ++ maxValues ++ minValues\n        newList", "        val sortedList\
    \ = lst.sortWith((x, y) => x < y)\n        val reversedList = sortedList.reverse\n\
    \        val newList = reversedList.take(lst.size)\n        newList", "      \
    \  val sorted = lst.sortWith((x, y) => x < y)\n        val reversed = sorted.reverse\n\
    \        reversed", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val minList = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex\
    \ + 1)\n        val newList = minList ++ maxList ++ minList\n        newList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minValues = lst.take(minIndex)\n        val maxValues = lst.drop(maxIndex)\n\
    \        val minValuesAndMaxValues = minValues ++ maxValues\n        val maxValuesAndMinValues\
    \ = maxValues ++ minValues\n        val minValuesAndMaxValuesAndMinValues = minValuesAndMaxValues\
    \ ++ minValuesAndMaxValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValues ++ maxValuesAndMinValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValues ++ minValuesAndMaxValuesAndMinValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues ++ maxValuesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues ++ minValuesAndMaxValuesAndMinValuesAndMaxValues\n\
    \        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ ++ maxValuesAndMinValuesAndMaxValuesAndMinValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ ++ minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\
    \ = minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValues\
    \ ++ maxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValues\n        val minValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMinValuesAndMaxValuesAndMin",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n        val minValueIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxValueIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n        val minValueIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxValueIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n        val minValueIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxValueIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n        val minValueIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxValueIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n        val minValueIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxValueIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n        val minValueIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxValueIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxValueIndex = lst.indexWhere(x => x == maxValue)\n        val minValueIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxValueIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minValueIndex = lst.indexWhere(x => x == minValue)\n\
    \        val ", "        val list = new mutable.ListBuffer[Long]()\n        val\
    \ min = lst.min\n        val max = lst.max\n        val minIndex = lst.indexOf(min)\n\
    \        val maxIndex = lst.indexOf(max)\n        val minValue = lst.take(minIndex)\n\
    \        val maxValue = lst.drop(maxIndex).reverse.take(minIndex).reverse\n  \
    \      val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex =\
    \ lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n \
    \       val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex =\
    \ lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n \
    \       val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex =\
    \ lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n \
    \       val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex =\
    \ lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n \
    \       val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex =\
    \ lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n \
    \       val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex =\
    \ lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n \
    \       val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex =\
    \ lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n \
    \       val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex =\
    \ lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n \
    \       val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex =\
    \ lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n \
    \       val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex =\
    \ lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n \
    \       val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex =\
    \ lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n \
    \       val maxValueIndex = lst.indexOf(maxValue)\n        val minValueIndex =\
    \ lst.indexOf(minValue)\n        val maxValueIndex = lst.indexOf(maxValue)\n \
    \       val minValueIndex = lst.indexOf(minValue)\n        val maxValueIndex =\
    \ lst.indexOf(maxValue)\n        val minValueIndex = lst.indexOf(minValue)\n \
    \       val maxValueIndex = lst.indexOf(", "        val list = new mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex2 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex2 = lst.indexWhere(x => x == maxValue)\n        val minIndex3\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex3 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex4 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex4 = lst.indexWhere(x => x == maxValue)\n        val minIndex5\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex5 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex6 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex6 = lst.indexWhere(x => x == maxValue)\n        val minIndex7\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex7 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex8 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex8 = lst.indexWhere(x => x == maxValue)\n        val minIndex9\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex9 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex10 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex10 = lst.indexWhere(x => x == maxValue)\n        val minIndex11\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex11 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex12 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex12 = lst.indexWhere(x => x == maxValue)\n        val minIndex13\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex13 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex14 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex14 = lst.indexWhere(x => x == maxValue)\n        val minIndex15\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex15 = lst.indexWhere(x\
    \ => x == maxValue)", "        val minValue = lst.min\n        val maxValue =\
    \ lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n       \
    \ val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        ", "     \
    \   val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = 0\n        val maxIndex = lst.size - 1\n        val tempList = lst.sortWith((x,\
    \ y) => x.compareTo(y) < 0)\n        val newList = tempList.take(minIndex).zip(tempList.drop(minIndex)).map(x\
    \ => x._1 + x._2)\n        newList.zip(tempList.drop(maxIndex)).map(x => x._1\
    \ + x._2)", "        val minLst = lst.min\n        val maxLst = lst.max\n    \
    \    val minLstIndex = lst.indexOf(minLst)\n        val maxLstIndex = lst.indexOf(maxLst)\n\
    \        val minLstIndex2 = lst.indexOf(minLst, minLstIndex + 1)\n        val\
    \ maxLstIndex2 = lst.indexOf(maxLst, maxLstIndex + 1)\n        val minLstIndex3\
    \ = lst.indexOf(minLst, minLstIndex2 + 1)\n        val maxLstIndex3 = lst.indexOf(maxLst,\
    \ maxLstIndex2 + 1)\n        val minLstIndex4 = lst.indexOf(minLst, minLstIndex3\
    \ + 1)\n        val maxLstIndex4 = lst.indexOf(maxLst, maxLstIndex3 + 1)\n   \
    \     val minLstIndex5 = lst.indexOf(minLst, minLstIndex4 + 1)\n        val maxLstIndex5\
    \ = lst.indexOf(maxLst, maxLstIndex4 + 1)\n        val minLstIndex6 = lst.indexOf(minLst,\
    \ minLstIndex5 + 1)\n        val maxLstIndex6 = lst.indexOf(maxLst, maxLstIndex5\
    \ + 1)\n        val minLstIndex7 = lst.indexOf(minLst, minLstIndex6 + 1)\n   \
    \     val maxLstIndex7 = lst.indexOf(maxLst, maxLstIndex6 + 1)\n        val minLstIndex8\
    \ = lst.indexOf(minLst, minLstIndex7 + 1)\n        val maxLstIndex8 = lst.indexOf(maxLst,\
    \ maxLstIndex7 + 1)\n        val minLstIndex9 = lst.indexOf(minLst, minLstIndex8\
    \ + 1)\n        val maxLstIndex9 = lst.indexOf(maxLst, maxLstIndex8 + 1)\n   \
    \     val minLstIndex10 = lst.indexOf(minLst, minLstIndex9 + 1)\n        val maxLstIndex10\
    \ = lst.indexOf(maxLst, maxLstIndex9 + 1)\n        val minLstIndex11 = lst.indexOf(minLst,\
    \ minLstIndex10 + 1)\n        val maxLstIndex11 = lst.indexOf(maxLst, maxLstIndex10\
    \ + 1)\n        val minLstIndex12 = lst.indexOf(minLst, minLstIndex11 + 1)\n \
    \       val maxLstIndex12 = lst.indexOf(maxLst, maxLstIndex11 + 1)\n        val\
    \ minLstIndex13 = lst.indexOf(minLst, minLstIndex12 + 1)\n        val maxLstIndex13\
    \ = l", "        val sortedList = lst.sortWith((x, y) => x < y)\n        val reversedList\
    \ = sortedList.reverse\n        reversedList", "        val minVal = lst.min\n\
    \        val maxVal = lst.max\n        val minIndex = lst.indexWhere(x => x ==\
    \ minVal)\n        val maxIndex = lst.indexWhere(x => x == maxVal)\n        val\
    \ minValIndex = lst.indexWhere(x => x == minVal)\n        val maxValIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex = lst.indexWhere(x => x == maxVal)\n        val minValIndex\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex = lst.indexWhere(x => x == maxVal)\n        val minValIndex\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex = lst.indexWhere(x => x == maxVal)\n        val minValIndex\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex = lst.indexWhere(x => x == maxVal)\n        val minValIndex\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex = lst.indexWhere(x => x == maxVal)\n        val minValIndex\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex = lst.indexWhere(x => x == minVal)\n\
    \        val maxValIndex = lst.indexWhere(x => x == maxVal)\n        val minValIndex\
    \ = lst.indexWhere(x => x == minVal)\n        val maxValIndex = lst.indexWhere(x\
    \ => x == maxVal)\n        val minValIndex = lst.indexWhere(x => x == minVal)\n\
    \        val max", "        val list = new mutable.ListBuffer[Long]()\n      \
    \  val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.take(minIndex)\n        val maxValue\
    \ = lst.drop(maxIndex).last\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = minIndex + 1\n        val maxIndex = maxIndex - 1\n        val minValue =\
    \ lst.take(minIndex)\n        val maxValue = lst.drop(maxIndex).last\n       \
    \ val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.take(minIndex)\n        val maxValue\
    \ = lst.drop(maxIndex).last\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = minIndex + 1\n        val maxIndex = maxIndex - 1\n        val minValue =\
    \ lst.take(minIndex)\n        val maxValue = lst.drop(maxIndex).last\n       \
    \ val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.take(minIndex)\n        val maxValue\
    \ = lst.drop(maxIndex).last\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = minIndex + 1\n        val maxIndex = maxIndex - 1\n        val minValue =\
    \ lst.take(minIndex)\n        val maxValue = lst.drop(maxIndex).last\n       \
    \ val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.take(minIndex)\n        val maxValue\
    \ = lst.drop(maxIndex).last\n", "        val sortedList = lst.sortWith(_.compareTo(_)\
    \ < 0)\n        sortedList", "        val newList = mutable.ListBuffer[Long]()\n\
    \        val minValue = lst.min\n        val maxValue = lst.max\n        newList\
    \ += minValue\n        newList += maxValue\n        newList += minValue\n    \
    \    newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList +=\
    \ minValue\n        newList += maxValue\n        newList += minValue\n       \
    \ newList += maxValue\n        newList += minValue\n        newList += maxValue\n\
    \        newList += minValue\n        newList += maxValue\n        newList += ",
  "        val sortedList = lst.sortBy(x => x)\n        val reversedList = sortedList.reverse\n\
    \        reversedList", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex =\
    \ minIndex.max(maxIndex)\n        val maxIndex = maxIndex.min(minIndex)\n    \
    \    val minValue = lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex.max(maxIndex)\n\
    \        val maxIndex = maxIndex.min(minIndex)\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex.max(maxIndex)\n        val maxIndex = maxIndex.min(minIndex)\n\
    \        val minValue = lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex.max(maxIndex)\n\
    \        val maxIndex = maxIndex.min(minIndex)\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex.max(maxIndex)\n        val maxIndex = maxIndex.min(minIndex)\n\
    \        val minValue = lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n\
    \        val minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex\
    \ = lst.indexWhere(x => x == maxValue)\n        val minIndex = minIndex.max(maxIndex)\n\
    \        val maxIndex = maxIndex.min(minIndex)\n        val minValue = lst.apply(minIndex)\n\
    \        val maxValue = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x\
    \ => x == minValue)\n        val maxIndex = lst.indexWhere(x => x == maxValue)\n\
    \        val minIndex = minIndex.max(maxIndex)\n        val maxIndex = maxIndex.min(minIndex)\n\
    \        val minValue = lst.apply(minIndex)\n        val ", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.take(maxIndex)\n        val minListWithMax = minList\
    \ ++ maxList\n        val maxListWithMin = maxList ++ minList\n        val maxListWithMinAndMax\
    \ = minListWithMax ++ maxListWithMin\n        val maxListWithMinAndMaxAndMin =\
    \ minListWithMaxAndMin ++ maxListWithMinAndMax\n        val maxListWithMinAndMaxAndMinAndMax\
    \ = minListWithMaxAndMinAndMax ++ maxListWithMinAndMaxAndMin\n        val maxListWithMinAndMaxAndMinAndMaxAndMin\
    \ = minListWithMaxAndMinAndMaxAndMin ++ maxListWithMinAndMaxAndMinAndMax\n   \
    \     val maxListWithMinAndMaxAndMinAndMaxAndMinAndMax = minListWithMaxAndMinAndMaxAndMinAndMax\
    \ ++ maxListWithMinAndMaxAndMinAndMaxAndMin\n        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\
    \ = minListWithMaxAndMinAndMaxAndMinAndMaxAndMin ++ maxListWithMinAndMaxAndMinAndMaxAndMinAndMax\n\
    \        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMax = minListWithMaxAndMinAndMaxAndMinAndMaxAndMinAndMax\
    \ ++ maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\n        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\
    \ = minListWithMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMin ++ maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMax\n\
    \        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMax\
    \ = minListWithMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMax ++ maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\n\
    \        val maxListWithMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMinAndMaxAndMin\
    \ = minListWithMaxAndMinAndMaxAndMinAndMaxAndMinAnd", "        val minVal = lst.min\n\
    \        val maxVal = lst.max\n        val minIndex = lst.indexOf(minVal)\n  \
    \      val maxIndex = lst.indexOf(maxVal)\n        val newList = lst.sortWith((x,\
    \ y) => if (x == minVal) -1 else if (y == minVal) 1 else 0)\n        newList.take(minIndex)\
    \ ++ newList.drop(maxIndex) ++ newList.take(minIndex)", "        val sorted =\
    \ lst.sortWith(_ < _)\n        val reversed = sorted.reverse\n        reversed.toList",
  "        val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n    \
    \    val minList = lst.take(minIndex)\n        val maxList = lst.drop(maxIndex+1)\n\
    \        val newList = minList ++ maxList ++ minList\n        newList", "    \
    \    val minVal = lst.min\n        val maxVal = lst.max\n        val minIndex\
    \ = lst.indexOf(minVal)\n        val maxIndex = lst.indexOf(maxVal)\n        val\
    \ minValIndex = lst.indexOf(minVal, minIndex + 1)\n        val maxValIndex = lst.indexOf(maxVal,\
    \ maxIndex + 1)\n        val minValIndex2 = lst.indexOf(minVal, minIndex + 2)\n\
    \        val maxValIndex2 = lst.indexOf(maxVal, maxIndex + 2)\n        val minValIndex3\
    \ = lst.indexOf(minVal, minIndex + 3)\n        val maxValIndex3 = lst.indexOf(maxVal,\
    \ maxIndex + 3)\n        val minValIndex4 = lst.indexOf(minVal, minIndex + 4)\n\
    \        val maxValIndex4 = lst.indexOf(maxVal, maxIndex + 4)\n        val minValIndex5\
    \ = lst.indexOf(minVal, minIndex + 5)\n        val maxValIndex5 = lst.indexOf(maxVal,\
    \ maxIndex + 5)\n        val minValIndex6 = lst.indexOf(minVal, minIndex + 6)\n\
    \        val maxValIndex6 = lst.indexOf(maxVal, maxIndex + 6)\n        val minValIndex7\
    \ = lst.indexOf(minVal, minIndex + 7)\n        val maxValIndex7 = lst.indexOf(maxVal,\
    \ maxIndex + 7)\n        val minValIndex8 = lst.indexOf(minVal, minIndex + 8)\n\
    \        val maxValIndex8 = lst.indexOf(maxVal, maxIndex + 8)\n        val minValIndex9\
    \ = lst.indexOf(minVal, minIndex + 9)\n        val maxValIndex9 = lst.indexOf(maxVal,\
    \ maxIndex + 9)\n        val minValIndex10 = lst.indexOf(minVal, minIndex + 10)\n\
    \        val maxValIndex10 = lst.indexOf(maxVal, maxIndex + 10)\n        val minValIndex11\
    \ = lst.indexOf(minVal, minIndex + 11)\n        val maxValIndex11 = lst.indexOf(maxVal,\
    \ maxIndex + 11)\n        val minValIndex12 = lst.indexOf(minVal, minIndex + 12)\n\
    \        val maxValIndex12 = lst.indexOf(maxVal, maxIndex + 12)\n        val minValIndex13\
    \ = lst.indexOf(minVal, minIndex + 13)\n        val maxValIndex13 = lst.indexOf(maxVal,\
    \ maxIndex + 13)\n        val minValIndex14 = lst.indexOf(minVal, minIndex + 14)\n\
    \        val maxValIndex14 = lst.indexOf(maxVal, max", "        val minValue =\
    \ lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val newList = lst.sortWith(\
    \ (a,b) => if (a < b) -1 else if (a > b) 1 else 0 )\n        newList.take(minIndex).reverse\
    \ ++ newList.drop(maxIndex+1)", "        val sortedList = lst.sortBy(x => x)\n\
    \        val reversedList = sortedList.reverse\n        val reversedList2 = reversedList.sortBy(x\
    \ => x)\n        val reversedList3 = reversedList2.sortBy(x => x)\n        val\
    \ reversedList4 = reversedList3.sortBy(x => x)\n        val reversedList5 = reversedList4.sortBy(x\
    \ => x)\n        val reversedList6 = reversedList5.sortBy(x => x)\n        val\
    \ reversedList7 = reversedList6.sortBy(x => x)\n        val reversedList8 = reversedList7.sortBy(x\
    \ => x)\n        val reversedList9 = reversedList8.sortBy(x => x)\n        val\
    \ reversedList10 = reversedList9.sortBy(x => x)\n        val reversedList11 =\
    \ reversedList10.sortBy(x => x)\n        val reversedList12 = reversedList11.sortBy(x\
    \ => x)\n        val reversedList13 = reversedList12.sortBy(x => x)\n        val\
    \ reversedList14 = reversedList13.sortBy(x => x)\n        val reversedList15 =\
    \ reversedList14.sortBy(x => x)\n        val reversedList16 = reversedList15.sortBy(x\
    \ => x)\n        val reversedList17 = reversedList16.sortBy(x => x)\n        val\
    \ reversedList18 = reversedList17.sortBy(x => x)\n        val reversedList19 =\
    \ reversedList18.sortBy(x => x)\n        val reversedList20 = reversedList19.sortBy(x\
    \ => x)\n        val reversedList21 = reversedList20.sortBy(x => x)\n        val\
    \ reversedList22 = reversedList21.sortBy(x => x)\n        val reversedList23 =\
    \ reversedList22.sortBy(x => x)\n        val reversedList24 = reversedList23.sortBy(x\
    \ => x)\n        val reversedList25 = reversedList24.sortBy(x => x)\n        val\
    \ reversedList26 = reversedList25.sortBy(x => x)\n        val reversedList27 =\
    \ reversedList26.sortBy(x => x)\n        val reversedList28 = reversedList27.sortBy(x\
    \ => x)\n        val reversedList29 = reversedList28.sortBy(x => x)\n        val\
    \ reversedList30 = reversedList29.sortBy(x => x)\n        val reversedList31 =\
    \ reversedList", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexOf(minValue)\n        val maxIndex = lst.indexOf(maxValue)\n\
    \        val newList = lst.sortWith((x, y) => x < y)\n        if (newList.size\
    \ < lst.size) {\n            newList\n        } else {\n            newList.take(minIndex).reverse.take(maxIndex).reverse.take(minIndex).reverse.take(maxIndex).reverse\n\
    \        }", "        val minValue = lst.min\n        val maxValue = lst.max\n\
    \        val minIndex = lst.indexWhere(_ == minValue)\n        val maxIndex =\
    \ lst.indexWhere(_ == maxValue)\n        val minList = lst.take(minIndex)\n  \
    \      val maxList = lst.drop(maxIndex + 1)\n        val minList2 = minList.map(_\
    \ + minValue)\n        val maxList2 = maxList.map(_ - maxValue)\n        val minList3\
    \ = minList2.map(_ - minValue)\n        val maxList3 = maxList2.map(_ + minValue)\n\
    \        val minList4 = minList3.map(_ + minValue)\n        val maxList4 = maxList3.map(_\
    \ - maxValue)\n        val minList5 = minList4.map(_ - minValue)\n        val\
    \ maxList5 = maxList4.map(_ + minValue)\n        val minList6 = minList5.map(_\
    \ + minValue)\n        val maxList6 = maxList5.map(_ - maxValue)\n        val\
    \ minList7 = minList6.map(_ - minValue)\n        val maxList7 = maxList6.map(_\
    \ + minValue)\n        val minList8 = minList7.map(_ + minValue)\n        val\
    \ maxList8 = maxList7.map(_ - maxValue)\n        val minList9 = minList8.map(_\
    \ - minValue)\n        val maxList9 = maxList8.map(_ + minValue)\n        val\
    \ minList10 = minList9.map(_ + minValue)\n        val maxList10 = maxList9.map(_\
    \ - maxValue)\n        val minList11 = minList10.map(_ - minValue)\n        val\
    \ maxList11 = maxList10.map(_ + minValue)\n        val minList12 = minList11.map(_\
    \ + minValue)\n        val maxList12 = maxList11.map(_ - maxValue)\n        val\
    \ minList13 = minList12.map(_ - minValue)\n        val maxList13 = maxList12.map(_\
    \ + minValue)\n        val minList14 = minList13.map(_ + minValue)\n        val\
    \ maxList14 = maxList13.map(_ - maxValue)\n        val minList15 = minList14.map(_\
    \ - minValue)\n        val maxList15 = maxList14.map(_ + minValue)\n        val\
    \ minList16 = minList15.map(_ + minValue)\n        val maxList16 = maxList15.map(_\
    \ - maxValue)\n        val minList17 = minList16.map(_ - minValue)\n        val\
    \ maxList17 = max", "        val list = new mutable.ListBuffer[Long]()\n     \
    \   val min = lst.min\n        val max = lst.max\n        val len = lst.size\n\
    \        for(i <- 0 until len){\n            val curr = lst.apply(i)\n       \
    \     if(curr < min){\n                list.add(min)\n            }\n        \
    \    else if(curr > max){\n                list.add(max)\n            }\n    \
    \        else{\n                list.add(curr)\n            }\n        }\n   \
    \     list.toList", "        val m = lst.min\n        val n = lst.max\n      \
    \  val r = lst.sortBy(x => if (x < m) x else m)\n        val s = lst.sortBy(x\
    \ => if (x > n) x else n)\n        val t = lst.sortBy(x => if (x < m) x else m)\n\
    \        val u = lst.sortBy(x => if (x > n) x else n)\n        (r ++ s ++ t ++\
    \ u).distinct", "        val sorted = lst.sortWith(_.compareTo(_) < 0)\n     \
    \   val result = new mutable.ListBuffer[Long]()\n        result.+=(sorted.head)\n\
    \        sorted.tail.foreach(x => result.+=(x.toLong))\n        result.toList",
  "        val sortedList = lst.sortWith(_ < _)\n        val reversedList = sortedList.reverse\n\
    \        val reversedSortedList = reversedList.sortWith(_ < _)\n        val reversedSortedList2\
    \ = reversedSortedList.reverse\n        val reversedSortedList3 = reversedSortedList2.sortWith(_\
    \ < _)\n        val reversedSortedList4 = reversedSortedList3.sortWith(_ < _)\n\
    \        val reversedSortedList5 = reversedSortedList4.sortWith(_ < _)\n     \
    \   val reversedSortedList6 = reversedSortedList5.sortWith(_ < _)\n        val\
    \ reversedSortedList7 = reversedSortedList6.sortWith(_ < _)\n        val reversedSortedList8\
    \ = reversedSortedList7.sortWith(_ < _)\n        val reversedSortedList9 = reversedSortedList8.sortWith(_\
    \ < _)\n        val reversedSortedList10 = reversedSortedList9.sortWith(_ < _)\n\
    \        val reversedSortedList11 = reversedSortedList10.sortWith(_ < _)\n   \
    \     val reversedSortedList12 = reversedSortedList11.sortWith(_ < _)\n      \
    \  val reversedSortedList13 = reversedSortedList12.sortWith(_ < _)\n        val\
    \ reversedSortedList14 = reversedSortedList13.sortWith(_ < _)\n        val reversedSortedList15\
    \ = reversedSortedList14.sortWith(_ < _)\n        val reversedSortedList16 = reversedSortedList15.sortWith(_\
    \ < _)\n        val reversedSortedList17 = reversedSortedList16.sortWith(_ < _)\n\
    \        val reversedSortedList18 = reversedSortedList17.sortWith(_ < _)\n   \
    \     val reversedSortedList19 = reversedSortedList18.sortWith(_ < _)\n      \
    \  val reversedSortedList20 = reversedSortedList19.sortWith(_ < _)\n        val\
    \ reversedSortedList21 = reversedSortedList20.sortWith(_ < _)\n        val reversedSortedList22\
    \ = reversedSortedList21.sortWith(_ < _)\n        val reversedSortedList23 = reversedSortedList22.sortWith(_\
    \ < _)\n        val reversedSortedList24 = reversedSortedList23.sortWith(_ < _)\n\
    \        val reversedSortedList25 = reversedSortedList24.sortWith(_ < _)\n   \
    \     val reversedSortedList26 = reversedSorted", "        val minLst = lst.min\n\
    \        val maxLst = lst.max\n        val minLstIndex = lst.indexOf(minLst)\n\
    \        val maxLstIndex = lst.indexOf(maxLst)\n        val minLstValue = lst.apply(minLstIndex)\n\
    \        val maxLstValue = lst.apply(maxLstIndex)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = lst.indexOf(maxLstValue)\n        val minLstIndex =\
    \ lst.indexOf(minLstValue)\n        val maxLstIndex = lst.indexOf(maxLstValue)\n\
    \        val minLstIndex = lst.indexOf(minLstValue)\n        val maxLstIndex =\
    \ lst.indexOf(maxLstValue)\n        val minLstIndex = lst.indexOf(minLstValue)\n\
    \        val maxLstIndex = ", "        val minValue = lst.min\n        val maxValue\
    \ = lst.max\n        val minIndex = lst.indexWhere(x => x == minValue)\n     \
    \   val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex2 =\
    \ lst.indexWhere(x => x == minValue)\n        val maxIndex2 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex3 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex3 = lst.indexWhere(x => x == maxValue)\n        val minIndex4\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex4 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex5 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex5 = lst.indexWhere(x => x == maxValue)\n        val minIndex6\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex6 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex7 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex7 = lst.indexWhere(x => x == maxValue)\n        val minIndex8\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex8 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex9 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex9 = lst.indexWhere(x => x == maxValue)\n        val minIndex10\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex10 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex11 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex11 = lst.indexWhere(x => x == maxValue)\n        val minIndex12\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex12 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex13 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex13 = lst.indexWhere(x => x == maxValue)\n        val minIndex14\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex14 = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex15 = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex15 = lst.indexWhere(x => x == maxValue)\n        val minIndex16\
    \ = lst.indexWhere(x ", "        val list = new mutable.ListBuffer[Long]()\n \
    \       val minValue = lst.min\n        val maxValue = lst.max\n        val minIndex\
    \ = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = minIndex + 1\n        val maxIndex = maxIndex - 1\n        val minValue =\
    \ lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n        val\
    \ minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = minIndex + 1\n        val maxIndex = maxIndex - 1\n        val minValue =\
    \ lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n        val\
    \ minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.indexWhere(x => x == maxValue)\n        val minIndex\
    \ = minIndex + 1\n        val maxIndex = maxIndex - 1\n        val minValue =\
    \ lst.apply(minIndex)\n        val maxValue = lst.apply(maxIndex)\n        val\
    \ minIndex = lst.indexWhere(x => x == minValue)\n        val maxIndex = lst.indexWhere(x\
    \ => x == maxValue)\n        val minIndex = minIndex + 1\n        val maxIndex\
    \ = maxIndex - 1\n        val minValue = lst.apply(minIndex)\n        val maxValue\
    \ = lst.apply(maxIndex)\n        val minIndex = lst.indexWhere(x => x == minValue)\n\
    \        val maxIndex = lst.", "        val lst2 = lst.sortBy(x => x)\n      \
    \  val lst3 = lst2.sortBy(x => x)\n        val lst4 = lst3.sortBy(x => x)\n  \
    \      val lst5 = lst4.sortBy(x => x)\n        val lst6 = lst5.sortBy(x => x)\n\
    \        val lst7 = lst6.sortBy(x => x)\n        val lst8 = lst7.sortBy(x => x)\n\
    \        val lst9 = lst8.sortBy(x => x)\n        val lst10 = lst9.sortBy(x =>\
    \ x)\n        val lst11 = lst10.sortBy(x => x)\n        val lst12 = lst11.sortBy(x\
    \ => x)\n        val lst13 = lst12.sortBy(x => x)\n        val lst14 = lst13.sortBy(x\
    \ => x)\n        val lst15 = lst14.sortBy(x => x)\n        val lst16 = lst15.sortBy(x\
    \ => x)\n        val lst17 = lst16.sortBy(x => x)\n        val lst18 = lst17.sortBy(x\
    \ => x)\n        val lst19 = lst18.sortBy(x => x)\n        val lst20 = lst19.sortBy(x\
    \ => x)\n        val lst21 = lst20.sortBy(x => x)\n        val lst22 = lst21.sortBy(x\
    \ => x)\n        val lst23 = lst22.sortBy(x => x)\n        val lst24 = lst23.sortBy(x\
    \ => x)\n        val lst25 = lst24.sortBy(x => x)\n        val lst26 = lst25.sortBy(x\
    \ => x)\n        val lst27 = lst26.sortBy(x => x)\n        val lst28 = lst27.sortBy(x\
    \ => x)\n        val lst29 = lst28.sortBy(x => x)\n        val lst30 = lst29.sortBy(x\
    \ => x)\n        val lst31 = lst30.sortBy(x => x)\n        val lst32 = lst31.sortBy(x\
    \ => x)\n        val lst33 = lst32.sortBy(x => x)\n        val lst34 = lst33.sortBy(x\
    \ => x)\n        val lst35 = lst34.sortBy(x => x)\n        val lst36 = lst35.sortBy(x\
    \ => x)\n        val lst37 = lst36.sortBy(x => x)\n        val lst38 = lst37.sortBy(x\
    \ => x)\n        val lst39 = lst38.sortBy(x => x)\n        val lst40 = lst39.sortBy(x\
    \ => x)\n        val lst41 = lst40.sortBy(x => x)\n        ", "        val minValue\
    \ = lst.min\n        val maxValue = lst.max\n        val minIndex = lst.indexOf(minValue)\n\
    \        val maxIndex = lst.indexOf(maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex)\n        val newList = minList ++ maxList\
    \ ++ minList\n        newList", "        val m = lst.min\n        val n = lst.max\n\
    \        val r = lst.filter(_ < m)\n        val s = lst.filter(_ > n)\n      \
    \  val t = lst.filter(_ < n)\n        val u = lst.filter(_ > m)\n        val v\
    \ = lst.filter(_ < m)\n        val w = lst.filter(_ > n)\n        val x = lst.filter(_\
    \ < n)\n        val y = lst.filter(_ > m)\n        val z = lst.filter(_ < m)\n\
    \        val a = lst.filter(_ > n)\n        val b = lst.filter(_ < m)\n      \
    \  val c = lst.filter(_ > n)\n        val d = lst.filter(_ < m)\n        val e\
    \ = lst.filter(_ > n)\n        val f = lst.filter(_ < m)\n        val g = lst.filter(_\
    \ > n)\n        val h = lst.filter(_ < m)\n        val i = lst.filter(_ > n)\n\
    \        val j = lst.filter(_ < m)\n        val k = lst.filter(_ > n)\n      \
    \  val l = lst.filter(_ < m)\n        val m = lst.filter(_ > n)\n        val n\
    \ = lst.filter(_ < m)\n        val o = lst.filter(_ > n)\n        val p = lst.filter(_\
    \ < m)\n        val q = lst.filter(_ > n)\n        val r = lst.filter(_ < m)\n\
    \        val s = lst.filter(_ > n)\n        val t = lst.filter(_ < m)\n      \
    \  val u = lst.filter(_ > n)\n        val v = lst.filter(_ < m)\n        val w\
    \ = lst.filter(_ > n)\n        val x = lst.filter(_ < n)\n        val y = lst.filter(_\
    \ > m)\n        val z = lst.filter(_ < m)\n        val a = lst.filter(_ > n)\n\
    \        val b = lst.filter(_ < m)\n        val c = lst.filter(_ > n)\n      \
    \  val d = lst.filter(_ < m)\n        val e = lst.filter(_ > n)\n        val f\
    \ = lst.filter(_ < m)\n        val g = lst.filter(_ > n)\n        val h = lst.filter(_\
    \ < m)\n        val i = lst.filter(_ > n)\n        val j = lst.filter(_ < m)\n\
    \        val k = lst.filter(_ > n)\n        val l = lst.filter(_ < m)\n      \
    \  val m = lst.filter(_ > n)\n        val n = lst.filter(_ < m)\n        val o\
    \ = lst.filter(_ > ", "        val minValue = lst.min\n        val maxValue =\
    \ lst.max\n        val minIndex = lst.indexWhere(_ == minValue)\n        val maxIndex\
    \ = lst.indexWhere(_ == maxValue)\n        val minList = lst.take(minIndex)\n\
    \        val maxList = lst.drop(maxIndex)\n        val newList = minList ++ maxList\n\
    \        newList"]
stop_tokens:
- "\n    }\n"

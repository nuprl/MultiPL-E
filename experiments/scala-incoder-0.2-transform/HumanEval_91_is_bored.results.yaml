language: scala
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomStart = sentence.indexOf(\"i\")\n    \
    \        if (boredomStart != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgjvany7h.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms.add(sentence)\n           \
    \ }\n        })\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpykp3dmj0.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            val boredomIndex = sentence.indexOf(\"i\")\n    \
    \        if (boredomIndex != -1) {\n                boredoms += sentence\n   \
    \         }\n        }\n        boredoms.size + 1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqjj4zgo.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence =>\
    \ {\n            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += word\n                }\n            })\n        })\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq5rltrqv.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu1w1eg9n.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"i\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6m2aj16.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).filter(_.nonEmpty)\n    \
    \    sentences.foreach { sentence =>\n            val boredomStart = sentence.indexOf(\"\
    I\")\n            if (boredomStart != -1) {\n                boredoms.add(sentence)\n\
    \            }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsx69e0s4.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.startsWith(\"I\")\n          \
    \  if (boredomStart) {\n                boredoms.add(sentence)\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuazgaqck.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        S.split(\"\\\\.|\\\\?|\\\\!\").foreach { sentence =>\n            val\
    \ boredomCount = sentence.startsWith(\"I\")\n            boredoms.put(sentence,\
    \ boredomCount)\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3yhgzf1f.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        sentences.foreach(sentence\
    \ => {\n            val words = sentence.split(\" \")\n            words.foreach(word\
    \ => {\n                if (word.startsWith(\"I\")) {\n                    boredoms\
    \ += (word -> 1L)\n                }\n            })\n        })\n        boredoms.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdpu7z87m.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.Set[String]()\n       \
    \ val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach\
    \ { sentence =>\n            if (sentence.startsWith(\"I\")) {\n             \
    \   boredoms += sentence\n            }\n        }\n        boredoms.size\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpygs0_x_j.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach { s =>\n            if (s.startsWith(\"\
    I\")) {\n                boredoms += s\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpciyc6gk_.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     S.split(\"\\\\.|\\\\?|\\\\!\").foreach(boredoms += _)\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2g990bgu.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.trim).toList\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"I\")\n            if\
    \ (boredomStart != -1) {\n                boredoms += sentence\n            }\n\
    \        })\n        boredoms.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is\
    \ the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_112q7c9.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.ListBuffer[String]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            val boredomStart = sentence.indexOf(\"I\")\n            if (boredomStart\
    \ != -1) {\n                boredoms += sentence\n            }\n        }\n \
    \       boredoms.toList.size\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the\
    \ sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n \
    \   assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo7m62zll.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\"\\\\.\")\n        for(word <- words) {\n         \
    \   if(word.startsWith(\"I\")) {\n                boredoms += word\n         \
    \   }\n        }\n        boredoms.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"\
    Is the sky blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n\
    \    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"I feel good today.\
    \ I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"You\
    \ and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt_s1n8e.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val words = S.split(\" \")\n        for(word <- words) {\n            if(word.startsWith(\"\
    I\")) {\n                boredoms += word\n            }\n        }\n        boredoms.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello world\"\
    )) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n    assert(isBored((\"\
    I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) == (0l));\n    assert(isBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2l));\n    assert(isBored((\"\
    You and I are going for a walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8k5eb2s.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashSet[String]()\n   \
    \     val sentences = S.split(\"[.?!]\").map(_.toLowerCase)\n        sentences.foreach(sentence\
    \ => {\n            val boredomStart = sentence.indexOf(\"i\")\n            if(boredomStart\
    \ != -1) {\n                boredoms += sentence\n            }\n        })\n\
    \        boredoms.size\n    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"\
    Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
    \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"\
    )) == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
    \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
    )) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoc5501uf.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You'll be given a string of words, and your task is to count the number\n\
    \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
    \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n   \
    \ // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
    \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    def isBored(S\
    \ : String) : Long = {\n        val boredoms = mutable.HashMap[String, Long]()\n\
    \        val sentences = S.split(\"[.?!]\")\n        for (sentence <- sentences)\
    \ {\n            val words = sentence.split(\"\\\\s+\")\n            val boredomWord\
    \ = words.head\n            val boredomCount = boredoms.getOrElse(boredomWord,\
    \ 0L)\n            boredoms.put(boredomWord, boredomCount + 1L)\n        }\n \
    \       boredoms.values.sum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(isBored((\"Hello world\")) == (0l));\n    assert(isBored((\"Is the sky\
    \ blue?\")) == (0l));\n    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"\
    bIt\")) == (0l));\n    assert(isBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a\
    \ walk\")) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsri94ojk.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mboredoms\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445

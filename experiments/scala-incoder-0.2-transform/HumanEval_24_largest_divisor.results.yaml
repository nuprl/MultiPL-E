language: scala
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.max\n\
    \            divisors -= d\n            if(d % 2 == 0) {\n                return\
    \ d\n            }\n        }\n        return -1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvlsksvjo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n) divisors += d\n        divisors.toList.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk59wgu7y.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpk59wgu7y.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) divisors\
    \ += d\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792574
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        var maxDivisorFactor = 0\n        var currentDivisor\
    \ = 1\n        var currentDivisorFactor = 1\n        var currentDivisorFactor2\
    \ = 1\n        var currentDivisorFactor3 = 1\n        var currentDivisorFactor4\
    \ = 1\n        var currentDivisorFactor5 = 1\n        var currentDivisorFactor6\
    \ = 1\n        var currentDivisorFactor7 = 1\n        var currentDivisorFactor8\
    \ = 1\n        var currentDivisorFactor9 = 1\n        var currentDivisorFactor10\
    \ = 1\n        var currentDivisorFactor11 = 1\n        var currentDivisorFactor12\
    \ = 1\n        var currentDivisorFactor13 = 1\n        var currentDivisorFactor14\
    \ = 1\n        var currentDivisorFactor15 = 1\n        var currentDivisorFactor16\
    \ = 1\n        var currentDivisorFactor17 = 1\n        var currentDivisorFactor18\
    \ = 1\n        var currentDivisorFactor19 = 1\n        var currentDivisorFactor20\
    \ = 1\n        var currentDivisorFactor21 = 1\n        var currentDivisorFactor22\
    \ = 1\n        var currentDivisorFactor23 = 1\n        var currentDivisorFactor24\
    \ = 1\n        var currentDivisorFactor25 = 1\n        var currentDivisorFactor26\
    \ = 1\n        var currentDivisorFactor27 = 1\n        var currentDivisorFactor28\
    \ = 1\n        var currentDivisorFactor29 = 1\n        var currentDivisorFactor30\
    \ = 1\n        var currentDivisorFactor31 = 1\n        var currentDivisorFactor32\
    \ = 1\n        var currentDivisorFactor33 = 1\n        var currentDivisorFactor34\
    \ = 1\n        var currentDivisorFactor35 = 1\n        var currentDivisorFactor36\
    \ = 1\n        var currentDivisorFactor37 = 1\n        var currentDivisorFactor38\
    \ = 1\n        var currentDivisorFactor39 = 1\n        var currentDivisorFactor40\
    \ = 1\n        var currentDivisorFactor41 = 1\n        var currentDivisorFactor42\
    \ = 1\n        var currentDivisorFactor43 = 1\n        var currentDivisorFactor44\
    \ = 1\n        var currentDivisorFactor45 = 1\n        var currentDivisorFactor46\
    \ = 1\n        var currentDivisorFactor47 = 1\n        var currentDivisorFactor48\
    \ = 1\n        var currentDivisorFactor49 = 1\n        var currentDivisorFactor50\
    \ = 1\n        var currentDivisorFactor51 = 1\n        var currentDivisorFactor52\
    \ = 1\n        var currentDivisorFactor53 = 1\n        var currentDivisorFactor54\
    \ = 1\n        var currentDivisorFactor55 = 1\n        var currentDivisorFactor56\
    \ = 1\n        var currentDivisorFactor57 = 1\n        var currentDivisorFactor58\
    \ = 1\n        var currentDivisorFactor59 = 1\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpydgqtf39.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpydgqtf39.scala:72:5 ---------------------\e\
    [0m\e[0m\n\e[31m72 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659792574
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpzadwxx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnpzadwxx.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors += 5l\n\
    \        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n    \
    \    divisors += 9l\n        divisors += 10l\n        divisors += 11l\n      \
    \  divisors += 12l\n        divisors += 13l\n        divisors += 14l\n       \
    \ divisors += 15l\n        divisors += 16l\n        divisors += 17l\n        divisors\
    \ += 18l\n        divisors += 19l\n        divisors += 20l\n        divisors +=\
    \ 21l\n        divisors += 22l\n        divisors += 23l\n        divisors += 24l\n\
    \        divisors += 25l\n        divisors += 26l\n        divisors += 27l\n \
    \       divisors += 28l\n        divisors += 29l\n        divisors += 30l\n  \
    \      divisors += 31l\n        divisors += 32l\n        divisors += 33l\n   \
    \     divisors += 34l\n        divisors += 35l\n        divisors += 36l\n    \
    \    divisors += 37l\n        divisors += 38l\n        divisors += 39l\n     \
    \   divisors += 40l\n        divisors += 41l\n        divisors += 42l\n      \
    \  divisors += 43l\n        divisors += 44l\n        divisors += 45l\n       \
    \ divisors += 46l\n        divisors += 47l\n        divisors += 48l\n        divisors\
    \ += 49l\n        divisors += 50l\n        divisors += 51l\n        divisors +=\
    \ 52l\n        divisors += 53l\n        divisors += 54l\n        divisors += 55l\n\
    \        divisors += 56l\n        divisors += 57l\n        divisors += 58l\n \
    \       divisors += 59l\n        divisors += 60l\n        divisors += 61l\n  \
    \      divisors += 62l\n        divisors += 63l\n        divisors += 64l\n   \
    \     divisors += 65l\n        divisors += 66l\n        divisors += 67l\n    \
    \    divisors += 68l\n        divisors += 69l\n        divisors += 70l\n     \
    \   divisors += 71l\n        divisors += 72l\n        divisors += 73l\n      \
    \  divisors += 74l\n        divisors += 75l\n        divisors += 76l\n       \
    \ divisors += 77l\n        divisors += 78l\n        divisors += 79l\n        divisors\
    \ += 80l\n        divisors += 81l\n        divisors += 82l\n        divisors +=\
    \ 83l\n        divisors += 84l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 183l\n\
    \        divisors += 187l\n        divisors += 189l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 231l\n\
    \        divisors += 233l\n        divisors += 237l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpb5tynjq3.scala:89:19 ---------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb5tynjq3.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 149\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 193\n        divisors += 197\n   \
    \     divisors += 199\n        divisors += 211\n        divisors += 223\n    \
    \    divisors += 227\n        divisors += 229\n        divisors += 233\n     \
    \   divisors += 239\n        divisors += 241\n        divisors += 243\n      \
    \  divisors += 247\n        divisors += 251\n        divisors += 253\n       \
    \ divisors += 257\n        divisors += 263\n        divisors += 269\n        divisors\
    \ += 271\n        divisors += 277\n        divisors += 281\n        divisors +=\
    \ 283\n        divisors += 293\n        divisors += 307\n        divisors += 311\n\
    \        divisors += 313\n        divisors += 317\n        divisors += 323\n \
    \       divisors += 329\n        divisors += 331\n        divisors += 337\n  \
    \      divisors += 343\n        divisors += 347\n        divisors += 353\n   \
    \     divisors += 359\n        divisors += 363\n        divisors += 369\n    \
    \    divisors += 373\n        divisors += 379\n        divisors += 383\n     \
    \   divisors += 389\n        divisors += 393\n        divisors += 397\n      \
    \  divisors += 401\n        divisors += 407\n        divisors += 411\n       \
    \ divisors += 413\n        divisors += 417\n        divisors += 423\n        divisors\
    \ += 429\n        divisors += 433\n        divisors += 4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5asjeyte.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(5l)\n\
    \        divisors.add(7l)\n        divisors.add(11l)\n        divisors.add(13l)\n\
    \        divisors.add(17l)\n        divisors.add(19l)\n        divisors.add(23l)\n\
    \        divisors.add(29l)\n        divisors.add(31l)\n        divisors.add(37l)\n\
    \        divisors.add(41l)\n        divisors.add(43l)\n        divisors.add(47l)\n\
    \        divisors.add(53l)\n        divisors.add(59l)\n        divisors.add(61l)\n\
    \        divisors.add(67l)\n        divisors.add(71l)\n        divisors.add(73l)\n\
    \        divisors.add(79l)\n        divisors.add(83l)\n        divisors.add(89l)\n\
    \        divisors.add(97l)\n        divisors.add(101l)\n        divisors.add(107l)\n\
    \        divisors.add(109l)\n        divisors.add(113l)\n        divisors.add(127l)\n\
    \        divisors.add(131l)\n        divisors.add(137l)\n        divisors.add(139l)\n\
    \        divisors.add(149l)\n        divisors.add(151l)\n        divisors.add(157l)\n\
    \        divisors.add(159l)\n        divisors.add(161l)\n        divisors.add(163l)\n\
    \        divisors.add(167l)\n        divisors.add(173l)\n        divisors.add(179l)\n\
    \        divisors.add(181l)\n        divisors.add(191l)\n        divisors.add(193l)\n\
    \        divisors.add(197l)\n        divisors.add(199l)\n        divisors.add(211l)\n\
    \        divisors.add(223l)\n        divisors.add(227l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(247l)\n        divisors.add(251l)\n        divisors.add(257l)\n\
    \        divisors.add(263l)\n        divisors.add(269l)\n        divisors.add(271l)\n\
    \        divisors.add(277l)\n        divisors.add(281l)\n        divisors.add(283l)\n\
    \        divisors.add(293l)\n        divisors.add(307l)\n        divisors.add(311l)\n\
    \        divisors.add(313l)\n        divisors.add(317l)\n        divisors.add(321l)\n\
    \        divisors.add(327l)\n        divisors.add(329l)\n        divisors.add(331l)\n\
    \        divisors.add(337l)\n        divisors.add(347l)\n        divisors.add(349l)\n\
    \        divisors.add(353l)\n        divisors.add(359l)\n        divisors.add(363l)\n\
    \        divisors.add(369l)\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxe2pgo58.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n.toLong / 2\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 197\n    \
    \    divisors += 199\n        divisors += 211\n        divisors += 223\n     \
    \   divisors += 227\n        divisors += 229\n        divisors += 233\n      \
    \  divisors += 239\n        divisors += 241\n        divisors += 247\n       \
    \ divisors += 251\n        divisors += 257\n        divisors += 263\n        divisors\
    \ += 269\n        divisors += 271\n        divisors += 277\n        divisors +=\
    \ 281\n        divisors += 283\n        divisors += 293\n        divisors += 307\n\
    \        divisors += 311\n        divisors += 317\n        divisors += 323\n \
    \       divisors += 329\n        divisors += 331\n        divisors += 337\n  \
    \      divisors += 341\n        divisors += 347\n        divisors += 353\n   \
    \     divisors += 359\n        divisors += 363\n        divisors += 369\n    \
    \    divisors += 373\n        divisors += 379\n        divisors += 383\n     \
    \   divisors += 389\n        divisors += 397\n        divisors += 401\n      \
    \  divisors += 409\n        divisors += 419\n        divisors += 429\n       \
    \ divisors += 431\n        divisors += 437\n        divisors += 443\n        divisors\
    \ += 449\n        divisors += 457\n        divisors += 461\n        divisors +=\
    \ 463\n        divisors += 4\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxxc6zokz.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmmwoqozl.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmmwoqozl.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        divisors += 2l\n        divisors +=\
    \ 3l\n        divisors += 5l\n        divisors += 7l\n        divisors += 11l\n\
    \        divisors += 13l\n        divisors += 17l\n        divisors += 19l\n \
    \       divisors += 23l\n        divisors += 29l\n        divisors += 31l\n  \
    \      divisors += 37l\n        divisors += 41l\n        divisors += 43l\n   \
    \     divisors += 47l\n        divisors += 53l\n        divisors += 59l\n    \
    \    divisors += 61l\n        divisors += 67l\n        divisors += 71l\n     \
    \   divisors += 73l\n        divisors += 79l\n        divisors += 83l\n      \
    \  divisors += 89l\n        divisors += 97l\n        divisors += 101l\n      \
    \  divisors += 103l\n        divisors += 107l\n        divisors += 109l\n    \
    \    divisors += 113l\n        divisors += 117l\n        divisors += 121l\n  \
    \      divisors += 123l\n        divisors += 127l\n        divisors += 129l\n\
    \        divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 141l\n        divisors += 143l\n        divisors += 147l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 153l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 171l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 183l\n\
    \        divisors += 187l\n        divisors += 189l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 231l\n\
    \        divisors += 233l\n        divisors += 237l\n        divisors += 239l\n\
    \        divisors += 241l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuw2gcjqv.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuw2gcjqv.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659792573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for(i <- 1 to n by 2){\n            val d = i\n\
    \            if(divisors.contains(d)){\n                maxDivisor = i\n     \
    \       }\n            divisors += d\n        }\n        maxDivisor\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuc_h672p.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpuc_h672p.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792574
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = math.max(math.floor(n / 2), math.ceil(n\
    \ / 2))\n        val divisors = mutable.ArrayBuffer.empty[Long]\n        for (d\
    \ <- 2 to maxDivisor) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo1dhubfz.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpo1dhubfz.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to maxDivisor)\
    \ {\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (maxDivisor : Double)\n\e[31m   |\e[0m   \
    \                    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792574
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.HashSet[Long]()\n\
    \        while (maxDivisor != 1) {\n            if (n % maxDivisor == 0) {\n \
    \               divisors += maxDivisor\n            }\n            maxDivisor\
    \ = maxDivisor / 2\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7a5v5qdt.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp7a5v5qdt.scala:14:23 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            maxDivisor = maxDivisor / \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792573
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n           \
    \     divisors += d\n            }\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp97adk66l.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp97adk66l.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792574
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors += 5l\n\
    \        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n    \
    \    divisors += 9l\n        divisors += 10l\n        divisors += 11l\n      \
    \  divisors += 12l\n        divisors += 13l\n        divisors += 14l\n       \
    \ divisors += 15l\n        divisors += 16l\n        divisors += 17l\n        divisors\
    \ += 18l\n        divisors += 19l\n        divisors += 20l\n        divisors +=\
    \ 21l\n        divisors += 22l\n        divisors += 23l\n        divisors += 24l\n\
    \        divisors += 25l\n        divisors += 26l\n        divisors += 27l\n \
    \       divisors += 28l\n        divisors += 29l\n        divisors += 30l\n  \
    \      divisors += 31l\n        divisors += 32l\n        divisors += 33l\n   \
    \     divisors += 34l\n        divisors += 35l\n        divisors += 36l\n    \
    \    divisors += 37l\n        divisors += 38l\n        divisors += 39l\n     \
    \   divisors += 40l\n        divisors += 41l\n        divisors += 42l\n      \
    \  divisors += 43l\n        divisors += 44l\n        divisors += 45l\n       \
    \ divisors += 46l\n        divisors += 47l\n        divisors += 48l\n        divisors\
    \ += 49l\n        divisors += 50l\n        divisors += 51l\n        divisors +=\
    \ 52l\n        divisors += 53l\n        divisors += 54l\n        divisors += 55l\n\
    \        divisors += 56l\n        divisors += 57l\n        divisors += 58l\n \
    \       divisors += 59l\n        divisors += 60l\n        divisors += 61l\n  \
    \      divisors += 62l\n        divisors += 63l\n        divisors += 64l\n   \
    \     divisors += 65l\n        divisors += 66l\n        divisors += 67l\n    \
    \    divisors += 68l\n        divisors += 69l\n        divisors += 70l\n     \
    \   divisors += 71l\n        divisors += 72l\n        divisors += 73l\n      \
    \  divisors += 74l\n        divisors += 75l\n        divisors += 76l\n       \
    \ divisors += 77l\n        divisors += 78l\n        divisors += 79l\n        divisors\
    \ += 80l\n        divisors += 81l\n        divisors += 82l\n        divisors +=\
    \ 83l\n        divisors += 84l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for(i <- 1 to n){\n            val divisor = i\n\
    \            while(divisor > 0){\n                if(divisors.contains(divisor)){\n\
    \                    divisor = divisor - 1\n                }else{\n         \
    \           divisors.add(divisor)\n                    maxDivisor = divisor\n\
    \                }\n            }\n        }\n        maxDivisor\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt8p129tm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpt8p129tm.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpt8p129tm.scala:14:28 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                    divisor = divisor - \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                    Reassignment to val divisor\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659792574
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkl93lxd_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkl93lxd_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcj7lx9k3.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n.toInt\n        val divisors =\
    \ mutable.Set[Long]()\n        for(i <- 1 to maxDivisor) {\n            val currentDivisor\
    \ = i\n            val currentDivisorRemainder = n % currentDivisor\n        \
    \    divisors += currentDivisor\n            if(currentDivisorRemainder == 0)\
    \ {\n                divisors.last\n            }\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0sjv3hv.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpt0sjv3hv.scala:10:8 ---------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to maxDivisor)\
    \ {\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0m        Found:    Unit\n\
    \e[31m   |\e[0m        Required: Long\n\e[31m11 |\e[0m            \e[33mval\e\
    [0m \e[36mcurrentDivisor\e[0m = i\n\e[31m12 |\e[0m            \e[33mval\e[0m \e\
    [36mcurrentDivisorRemainder\e[0m = n % currentDivisor\n\e[31m13 |\e[0m       \
    \     divisors += currentDivisor\n\e[31m14 |\e[0m            \e[33mif\e[0m(currentDivisorRemainder\
    \ == \e[31m0\e[0m) {\n\e[31m15 |\e[0m                divisors.last\n\e[31m16 |\e\
    [0m            }\n\e[31m17 |\e[0m        }\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010385
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = Long.MaxValue\n        for(i <- 1 to n){\n            val currentDivisor\
    \ = i\n            while(currentDivisor > 0){\n                if(currentDivisor\
    \ % 2 == 0){\n                    divisors += currentDivisor\n               \
    \     currentDivisor /= 2\n                }\n                else{\n        \
    \            currentDivisor /= 2\n                }\n            }\n        }\n\
    \        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphg3ofe4q.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphg3ofe4q.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphg3ofe4q.scala:15:35\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                    currentDivisor\
    \ /= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m       value /= is not a member of Int - did you mean currentDivisor.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphg3ofe4q.scala:18:35 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                    currentDivisor /= \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \       value /= is not a member of Int - did you mean currentDivisor.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        var maxDivisorIndex = 0\n        for(i <- 1 to n){\n\
    \            val div = i / 2\n            if(divisors.contains(div)){\n      \
    \          divisors.remove(div)\n            }\n            else{\n          \
    \      divisors.add(div)\n                if(div > maxDivisor){\n            \
    \        maxDivisor = div\n                    maxDivisorIndex = i\n         \
    \       }\n            }\n        }\n        divisors.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpscgy8wgi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpscgy8wgi.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010385
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(d\
    \ <- 1 to n){\n            val remainder = n % d\n            if(remainder ==\
    \ 0){\n                divisors += d\n            }\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvlw6psog.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvlw6psog.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(d <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      divisors -= d\n            if(n % d == 0) {\n                return d\n\
    \            }\n        }\n        return n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5mnxaqcq.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n.toInt\n        val divisors =\
    \ mutable.Set[Long]()\n        val maxDivisors = mutable.Set[Long]()\n       \
    \ for(i <- 0 until maxDivisor) {\n            val divisor = i / maxDivisor\n \
    \           if(divisors.contains(divisor)) {\n                divisors += divisor\n\
    \            } else {\n                divisors += divisor\n                maxDivisors\
    \ += divisor\n            }\n        }\n        val largestDivisor = divisors.max\n\
    \        val largestDivisors = maxDivisors.max\n        if(largestDivisors ==\
    \ largestDivisor) {\n            largestDivisor\n        } else {\n          \
    \  largestDivisor\n        }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplx42ie2r.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplx42ie2r.scala:10:26 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 273l\n\
    \        divisors += 277l\n        divisors += 279l\n        divisors += 281l\n\
    \        divisors += 283l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmporrcj6ds.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 287l\n        divisors += 289l\n        divisors += 293l\n\
    \        divisors += 297l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn0q8xyrq.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 183l\n\
    \        divisors += 187l\n        divisors += 189l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 231l\n\
    \        divisors += 233l\n        divisors += 237l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplluqnpdu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplluqnpdu.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        val maxDivisor = mutable.Long.MaxValue\n        for(i <- 0 until n){\n\
    \            val divisor = i\n            while(divisor > 0){\n              \
    \  if(n % divisor == 0){\n                    divisors += divisor\n          \
    \          divisors -= divisor\n                }\n                divisor -=\
    \ 1\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc3cjbz62.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpc3cjbz62.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpc3cjbz62.scala:10:25 --------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e[31m\e\
    [31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m                \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                         Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc3cjbz62.scala:17:24\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                divisor -=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m              value -= is not a member of Int - did you mean divisor.!=?\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 141l\n        divisors += 143l\n        divisors += 147l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 153l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 183l\n        divisors += 187l\n\
    \        divisors += 189l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 261l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpflgm59kg.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpflgm59kg.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var currentDivisor = 0\n\
    \        var currentDivisorFactor = 0\n        var currentDivisorFactorIndex =\
    \ 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex = 0\n        var currentDivisorFactorIndex\
    \ = 0\n        var currentDivisorFactorIndex\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxa3zzcsj.scala:73:4 ----------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxa3zzcsj.scala:14:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mcurrentDivisorFactorIndex\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mcurrentDivisorFactorIndex\
    \ is already defined as \e[33mvariable\e[0m \e[35mcurrentDivisorFactorIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpxa3zzcsj.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorFactorIndex\e[0m = \e\
    [31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mcurrentDivisorFactorIndex is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorFactorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxa3zzcsj.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorFactorIndex\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorFactorIndex is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorFactorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxa3zzcsj.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorFactorIndex\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorFactorIndex is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorFactorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be"
  stdout: ''
  timestamp: 1660010387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var largest = 0l\n        var current = 0l\n        while (current < n) {\n\
    \            divisors += current\n            current += 1l\n        }\n     \
    \   divisors.foreach(n => {\n            if (n % 2 == 0) {\n                largest\
    \ = n\n            }\n        })\n        largest\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_f2lni1_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(4l)\n        divisors.add(5l)\n        divisors.add(6l)\n   \
    \     divisors.add(7l)\n        divisors.add(8l)\n        divisors.add(9l)\n \
    \       divisors.add(10l)\n        divisors.add(11l)\n        divisors.add(12l)\n\
    \        divisors.add(13l)\n        divisors.add(14l)\n        divisors.add(15l)\n\
    \        divisors.add(16l)\n        divisors.add(17l)\n        divisors.add(18l)\n\
    \        divisors.add(19l)\n        divisors.add(20l)\n        divisors.add(21l)\n\
    \        divisors.add(22l)\n        divisors.add(23l)\n        divisors.add(24l)\n\
    \        divisors.add(25l)\n        divisors.add(26l)\n        divisors.add(27l)\n\
    \        divisors.add(28l)\n        divisors.add(29l)\n        divisors.add(30l)\n\
    \        divisors.add(31l)\n        divisors.add(32l)\n        divisors.add(33l)\n\
    \        divisors.add(34l)\n        divisors.add(35l)\n        divisors.add(36l)\n\
    \        divisors.add(37l)\n        divisors.add(38l)\n        divisors.add(39l)\n\
    \        divisors.add(40l)\n        divisors.add(41l)\n        divisors.add(42l)\n\
    \        divisors.add(43l)\n        divisors.add(44l)\n        divisors.add(45l)\n\
    \        divisors.add(46l)\n        divisors.add(47l)\n        divisors.add(48l)\n\
    \        divisors.add(49l)\n        divisors.add(50l)\n        divisors.add(51l)\n\
    \        divisors.add(52l)\n        divisors.add(53l)\n        divisors.add(54l)\n\
    \        divisors.add(55l)\n        divisors.add(56l)\n        divisors.add(57l)\n\
    \        divisors.add(58l)\n        divisors.add(59l)\n        divisors.add(60l)\n\
    \        divisors.add(61l)\n        divisors.add(62l)\n        divisors.add(63l)\n\
    \        divisors.add(64l)\n        divisors.add(65l)\n        divisors.add(66l)\n\
    \        divisors.add(67l)\n        divisors.add(68l)\n        divisors.add(69l)\n\
    \        divisors.add(70l)\n        divisors.add(71l)\n        divisors.add(72l)\n\
    \        divisors.add(73l)\n        divisors.add(74l)\n        divisors.add(75l)\n\
    \        divisors.add(76l)\n        divisors.add(77l)\n        divisors.add(78l)\n\
    \        divisors.add(79l)\n        divisors.add(80l)\n        divisors.add(81l)\n\
    \        divisors.add(82l)\n        divisors.add(83l)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqfa6xeqr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptg2n_an6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptg2n_an6.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 297\n        divisors += 301\n  \
    \      divisors += 303\n        divisors += 307\n        divisors += 311\n   \
    \     divisors += 313\n        divisors += 317\n        divisors += 319\n    \
    \    divisors += 323\n        divisors += 329\n        divisors += 331\n     \
    \   divisors += 337\n        divisors += 341\n        divisors += 343\n      \
    \  divisors += 347\n        divisors += 353\n        divisors += 359\n       \
    \ divisors += 363\n        divisors += 369\n        divisors += 373\n        divisors\
    \ += 379\n        divisors += 383\n        divisors += 389\n        divisors +=\
    \ 393\n        divisors += 397\n        divisors += 401\n        divisors += 403\n\
    \        divisors += 407\n        divisors += 411\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt4t5ykq6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 253\n        divisors += 257\n        divisors += 263\n  \
    \      divisors += 269\n        divisors += 271\n        divisors += 277\n   \
    \     divisors += 281\n        divisors += 283\n        divisors += 293\n    \
    \    divisors += 307\n        divisors += 311\n        divisors += 313\n     \
    \   divisors += 317\n        divisors += 319\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 341\n        divisors += 343\n        divisors += 347\n        divisors\
    \ += 353\n        divisors += 359\n        divisors += 363\n        divisors +=\
    \ 369\n        divisors += 373\n        divisors += 379\n        divisors += 383\n\
    \        divisors += 389\n        divisors += 397\n        divisors += 401\n \
    \       divisors += 407\n        divisors += 411\n        divisors += 413\n  \
    \      divisors += 417\n        divisors += 419\n        divisors += 421\n   \
    \     divisors += 423\n        divisors += 427\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5wljz4ne.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = math.max(n / 2, 1)\n        val\
    \ divisors = mutable.Set[Long]()\n        for (d <- 2 to maxDivisor) {\n     \
    \       if (n % d == 0) {\n                divisors += d\n            }\n    \
    \    }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7fby38au.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp7fby38au.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to maxDivisor)\
    \ {\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (maxDivisor : Long)\n\e[31m   |\e[0m     \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val maxDivisor = divisors.max\n\
    \            divisors.remove(maxDivisor)\n            divisors.add(maxDivisor\
    \ + 1)\n        }\n        divisors.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp44utsdeu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2vuzgqn.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpc2vuzgqn.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2)\n            if (n % d == 0) divisors += d\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppbiez41k.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppbiez41k.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var currentDivisor = 0\n        var currentDivisorFactor = 0\n\
    \        var currentDivisorFactor2 = 0\n        var currentDivisorFactor3 = 0\n\
    \        var currentDivisorFactor4 = 0\n        var currentDivisorFactor5 = 0\n\
    \        var currentDivisorFactor6 = 0\n        var currentDivisorFactor7 = 0\n\
    \        var currentDivisorFactor8 = 0\n        var currentDivisorFactor9 = 0\n\
    \        var currentDivisorFactor10 = 0\n        var currentDivisorFactor11 =\
    \ 0\n        var currentDivisorFactor12 = 0\n        var currentDivisorFactor13\
    \ = 0\n        var currentDivisorFactor14 = 0\n        var currentDivisorFactor15\
    \ = 0\n        var currentDivisorFactor16 = 0\n        var currentDivisorFactor17\
    \ = 0\n        var currentDivisorFactor18 = 0\n        var currentDivisorFactor19\
    \ = 0\n        var currentDivisorFactor20 = 0\n        var currentDivisorFactor21\
    \ = 0\n        var currentDivisorFactor22 = 0\n        var currentDivisorFactor23\
    \ = 0\n        var currentDivisorFactor24 = 0\n        var currentDivisorFactor25\
    \ = 0\n        var currentDivisorFactor26 = 0\n        var currentDivisorFactor27\
    \ = 0\n        var currentDivisorFactor28 = 0\n        var currentDivisorFactor29\
    \ = 0\n        var currentDivisorFactor30 = 0\n        var currentDivisorFactor31\
    \ = 0\n        var currentDivisorFactor32 = 0\n        var currentDivisorFactor33\
    \ = 0\n        var currentDivisorFactor34 = 0\n        var currentDivisorFactor35\
    \ = 0\n        var currentDivisorFactor36 = 0\n        var currentDivisorFactor37\
    \ = 0\n        var currentDivisorFactor38 = 0\n        var currentDivisorFactor39\
    \ = 0\n        var currentDivisorFactor40 = 0\n        var currentDivisorFactor41\
    \ = 0\n        var currentDivisorFactor42 = 0\n        var currentDivisorFactor43\
    \ = 0\n        var currentDivisorFactor44 = 0\n        var currentDivisorFactor45\
    \ = 0\n        var currentDivisorFactor46 = 0\n        var currentDivisorFactor47\
    \ = 0\n        var currentDivisorFactor48 = 0\n        var currentDivisorFactor49\
    \ = 0\n        var currentDivisorFactor50 = 0\n        var currentDivisorFactor51\
    \ = 0\n        var currentDivisorFactor52 = 0\n        var currentDivisorFactor53\
    \ = 0\n        var currentDivisorFactor54 = 0\n        var currentDivisorFactor55\
    \ = 0\n        var currentDivisorFactor56 = 0\n        var currentDivisorFactor57\
    \ = 0\n        var currentDivisorFactor58 = 0\n        var currentDivisorFactor59\
    \ = 0\n        var currentDivisorFactor60 = 0\n        var currentDivisorFactor61\
    \ = 0\n        var currentDivisorFactor62\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzjlsbe82.scala:73:4 ----------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpzjlsbe82.scala:73:5 ---------------------\e[0m\e[0m\n\e[31m73 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdyz_ykj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val maxDivisor\
    \ = divisors.max\n            divisors.remove(maxDivisor)\n            if(maxDivisor\
    \ % 2 == 0) {\n                return maxDivisor\n            }\n            divisors.add(maxDivisor\
    \ + 1)\n        }\n        return 0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsi2_w5bq.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcj7lx9k3.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = math.max(n / 2, 1)\n        val\
    \ divisors = mutable.HashSet[Long]()\n        divisors.add(1)\n        divisors.add(maxDivisor)\n\
    \        divisors.foreach { divisor =>\n            val remainder = n % divisor\n\
    \            if (remainder == 0) {\n                divisor\n            } else\
    \ if (divisor < maxDivisor) {\n                divisors.add(divisor)\n       \
    \     }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf0cixy58.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 107l\n        divisors += 113l\n   \
    \     divisors += 119l\n        divisors += 121l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 141l\n        divisors += 143l\n        divisors += 147l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 173l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 207l\n        divisors += 211l\n\
    \        divisors += 217l\n        divisors += 223l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 247l\n        divisors += 251l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 317l\n        divisors += 323l\n        divisors += 329l\n\
    \        divisors += 331l\n        divisors += 337l\n        divisors += 341l\n\
    \        divisors += 347l\n        divisors += 351l\n        divisors += 359l\n\
    \        divisors += 36\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8668sdag.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010390
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        var maxDivisorRemainder\
    \ = n % 2\n        var maxDivisorDivisor = maxDivisor\n        while (maxDivisorRemainder\
    \ != 0) {\n            maxDivisorDivisor = maxDivisorDivisor / 2\n           \
    \ maxDivisorRemainder = maxDivisorRemainder % 2\n        }\n        maxDivisorDivisor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010397
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj6k23jq1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpj6k23jq1.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010393
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkl93lxd_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkl93lxd_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp222mpdir.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(4l)\n        divisors.add(5l)\n        divisors.add(6l)\n   \
    \     divisors.add(7l)\n        divisors.add(8l)\n        divisors.add(9l)\n \
    \       divisors.add(10l)\n        divisors.add(11l)\n        divisors.add(12l)\n\
    \        divisors.add(13l)\n        divisors.add(14l)\n        divisors.add(15l)\n\
    \        divisors.add(16l)\n        divisors.add(17l)\n        divisors.add(18l)\n\
    \        divisors.add(19l)\n        divisors.add(20l)\n        divisors.add(21l)\n\
    \        divisors.add(22l)\n        divisors.add(23l)\n        divisors.add(24l)\n\
    \        divisors.add(25l)\n        divisors.add(26l)\n        divisors.add(27l)\n\
    \        divisors.add(28l)\n        divisors.add(29l)\n        divisors.add(30l)\n\
    \        divisors.add(31l)\n        divisors.add(32l)\n        divisors.add(33l)\n\
    \        divisors.add(34l)\n        divisors.add(35l)\n        divisors.add(36l)\n\
    \        divisors.add(37l)\n        divisors.add(38l)\n        divisors.add(39l)\n\
    \        divisors.add(40l)\n        divisors.add(41l)\n        divisors.add(42l)\n\
    \        divisors.add(43l)\n        divisors.add(44l)\n        divisors.add(45l)\n\
    \        divisors.add(46l)\n        divisors.add(47l)\n        divisors.add(48l)\n\
    \        divisors.add(49l)\n        divisors.add(50l)\n        divisors.add(51l)\n\
    \        divisors.add(52l)\n        divisors.add(53l)\n        divisors.add(54l)\n\
    \        divisors.add(55l)\n        divisors.add(56l)\n        divisors.add(57l)\n\
    \        divisors.add(58l)\n        divisors.add(59l)\n        divisors.add(60l)\n\
    \        divisors.add(61l)\n        divisors.add(62l)\n        divisors.add(63l)\n\
    \        divisors.add(64l)\n        divisors.add(65l)\n        divisors.add(66l)\n\
    \        divisors.add(67l)\n        divisors.add(68l)\n        divisors.add(69l)\n\
    \        divisors.add(70l)\n        divisors.add(71l)\n        divisors.add(72l)\n\
    \        divisors.add(73l)\n        divisors.add(74l)\n        divisors.add(75l)\n\
    \        divisors.add(76l)\n        divisors.add(77l)\n        divisors.add(78l)\n\
    \        divisors.add(79l)\n        divisors.add(80l)\n        divisors.add(81l)\n\
    \        divisors.add(82l)\n        divisors.add(83l)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqfa6xeqr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp222mpdir.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 297l\n        divisors += 301l\n\
    \        divisors += 303l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 321l\n\
    \        divisors += 323l\n        divisors += 327l\n        divisors += 331l\n\
    \        divisors += 333l\n        divisors += 337l\n        divisors += 341l\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphcnnqpux.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for (d <- 2 to n) divisors += d\n        for (d\
    \ <- divisors) {\n            if (n % d == 0) {\n                maxDivisor =\
    \ d\n                break\n            }\n        }\n        maxDivisor\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp1exmb7b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpp1exmb7b.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) divisors\
    \ += d\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m  \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010393
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbdyz_ykj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpscvnuvbr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpscvnuvbr.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 287l\n        divisors += 289l\n        divisors += 293l\n\
    \        divisors += 297l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnhyaugeo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var maxDivisorFactorIndex2\
    \ = 0\n        var maxDivisorFactorIndex3 = 0\n        var maxDivisorFactorIndex4\
    \ = 0\n        var maxDivisorFactorIndex5 = 0\n        var maxDivisorFactorIndex6\
    \ = 0\n        var maxDivisorFactorIndex7 = 0\n        var maxDivisorFactorIndex8\
    \ = 0\n        var maxDivisorFactorIndex9 = 0\n        var maxDivisorFactorIndex10\
    \ = 0\n        var maxDivisorFactorIndex11 = 0\n        var maxDivisorFactorIndex12\
    \ = 0\n        var maxDivisorFactorIndex13 = 0\n        var maxDivisorFactorIndex14\
    \ = 0\n        var maxDivisorFactorIndex15 = 0\n        var maxDivisorFactorIndex16\
    \ = 0\n        var maxDivisorFactorIndex17 = 0\n        var maxDivisorFactorIndex18\
    \ = 0\n        var maxDivisorFactorIndex19 = 0\n        var maxDivisorFactorIndex20\
    \ = 0\n        var maxDivisorFactorIndex21 = 0\n        var maxDivisorFactorIndex22\
    \ = 0\n        var maxDivisorFactorIndex23 = 0\n        var maxDivisorFactorIndex24\
    \ = 0\n        var maxDivisorFactorIndex25 = 0\n        var maxDivisorFactorIndex26\
    \ = 0\n        var maxDivisorFactorIndex27 = 0\n        var maxDivisorFactorIndex28\
    \ = 0\n        var maxDivisorFactorIndex29 = 0\n        var maxDivisorFactorIndex30\
    \ = 0\n        var maxDivisorFactorIndex31 = 0\n        var maxDivisorFactorIndex32\
    \ = 0\n        var maxDivisorFactorIndex33 = 0\n        var maxDivisorFactorIndex34\
    \ = 0\n        var maxDivisorFactorIndex35 = 0\n        var maxDivisorFactorIndex36\
    \ = 0\n        var maxDivisorFactorIndex37 = 0\n        var maxDivisorFactorIndex38\
    \ = 0\n        var maxDivisorFactorIndex39 = 0\n        var maxDivisorFactorIndex40\
    \ = 0\n        var maxDivisorFactorIndex41 = 0\n        var maxDivisorFactorIndex42\
    \ = 0\n        var maxDivisorFactorIndex43 = 0\n        var maxDivisorFactorIndex44\
    \ = 0\n        var maxDivisorFactorIndex45 = 0\n        var maxDivisorFactorIndex46\
    \ = 0\n        var maxDivisorFactorIndex47 = 0\n        var maxDivisorFactorIndex48\
    \ = 0\n        var maxDivisorFactorIndex49 = 0\n        var maxDivisorFactorIndex50\
    \ = 0\n        var maxDivisorFactorIndex51 = 0\n        var maxDivisorFactorIndex52\
    \ = 0\n        var maxDivisorFactorIndex53 = 0\n        var maxDivisorFactorIndex54\
    \ = 0\n        var maxDivisorFactorIndex55 = 0\n        var maxDivisorFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmafmjtbb.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpmafmjtbb.scala:66:5 ---------------------\e[0m\e[0m\n\e[31m66 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010393
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpscvnuvbr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpscvnuvbr.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 253\n        divisors += 257\n        divisors += 263\n  \
    \      divisors += 269\n        divisors += 271\n        divisors += 277\n   \
    \     divisors += 281\n        divisors += 283\n        divisors += 293\n    \
    \    divisors += 307\n        divisors += 311\n        divisors += 313\n     \
    \   divisors += 317\n        divisors += 323\n        divisors += 329\n      \
    \  divisors += 331\n        divisors += 337\n        divisors += 341\n       \
    \ divisors += 343\n        divisors += 347\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 413\n        divisors += 421\n        divisors += 423\n  \
    \      divisors += 429\n        divisors += 431\n        divisors += 437\n   \
    \     divisors += 443\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpemb7dvvd.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpemb7dvvd.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(4l)\n        divisors.add(5l)\n        divisors.add(6l)\n   \
    \     divisors.add(7l)\n        divisors.add(8l)\n        divisors.add(9l)\n \
    \       divisors.add(10l)\n        divisors.add(11l)\n        divisors.add(12l)\n\
    \        divisors.add(13l)\n        divisors.add(14l)\n        divisors.add(15l)\n\
    \        divisors.add(16l)\n        divisors.add(17l)\n        divisors.add(18l)\n\
    \        divisors.add(19l)\n        divisors.add(20l)\n        divisors.add(21l)\n\
    \        divisors.add(22l)\n        divisors.add(23l)\n        divisors.add(24l)\n\
    \        divisors.add(25l)\n        divisors.add(26l)\n        divisors.add(27l)\n\
    \        divisors.add(28l)\n        divisors.add(29l)\n        divisors.add(30l)\n\
    \        divisors.add(31l)\n        divisors.add(32l)\n        divisors.add(33l)\n\
    \        divisors.add(34l)\n        divisors.add(35l)\n        divisors.add(36l)\n\
    \        divisors.add(37l)\n        divisors.add(38l)\n        divisors.add(39l)\n\
    \        divisors.add(40l)\n        divisors.add(41l)\n        divisors.add(42l)\n\
    \        divisors.add(43l)\n        divisors.add(44l)\n        divisors.add(45l)\n\
    \        divisors.add(46l)\n        divisors.add(47l)\n        divisors.add(48l)\n\
    \        divisors.add(49l)\n        divisors.add(50l)\n        divisors.add(51l)\n\
    \        divisors.add(52l)\n        divisors.add(53l)\n        divisors.add(54l)\n\
    \        divisors.add(55l)\n        divisors.add(56l)\n        divisors.add(57l)\n\
    \        divisors.add(58l)\n        divisors.add(59l)\n        divisors.add(60l)\n\
    \        divisors.add(61l)\n        divisors.add(62l)\n        divisors.add(63l)\n\
    \        divisors.add(64l)\n        divisors.add(65l)\n        divisors.add(66l)\n\
    \        divisors.add(67l)\n        divisors.add(68l)\n        divisors.add(69l)\n\
    \        divisors.add(70l)\n        divisors.add(71l)\n        divisors.add(72l)\n\
    \        divisors.add(73l)\n        divisors.add(74l)\n        divisors.add(75l)\n\
    \        divisors.add(76l)\n        divisors.add(77l)\n        divisors.add(78l)\n\
    \        divisors.add(79l)\n        divisors.add(80l)\n        divisors.add(81l)\n\
    \        divisors.add(82l)\n        divisors.add(83l)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqfa6xeqr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 289l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 317l\n        divisors += 321l\n        divisors += 327l\n\
    \        divisors += 333l\n        divisors += 339l\n        divisors += 343l\n\
    \        divisors += 347l\n        divisors += 351l\n        divisors += 357l\n\
    \        divisors += 363l\n        divisors += 369l\n        divisors += 373l\n\
    \        divisors += 379l\n        divisors += 383l\n        divisors += 389l\n\
    \        divisors += 39\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbfd3fp6c.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 293l\n\
    \        divisors += 307l\n        divisors += 311l\n        divisors += 317l\n\
    \        divisors += 321l\n        divisors += 327l\n        divisors += 333l\n\
    \        divisors += 339l\n        divisors += 347l\n        divisors += 351l\n\
    \        divisors += 359l\n        divisors += 367l\n        divisors += 373l\n\
    \        divisors += 379l\n        divisors += 383l\n        divisors += 389l\n\
    \        divisors += 397l\n        divisors += 401l\n        divisors += 409l\n\
    \        divisors += 419l\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp62nrbo1d.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010392
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 205l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 215l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9bbklvs9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp9bbklvs9.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010392
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = Long.MinValue\n        for(i <- 1 to n){\n            val currentDivisor\
    \ = i / n\n            if(currentDivisor % 2 == 0){\n                divisors\
    \ += currentDivisor\n            }\n            if(currentDivisor > maxDivisor){\n\
    \                maxDivisor = currentDivisor\n            }\n        }\n     \
    \   maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq7a8lj7u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpq7a8lj7u.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpq7a8lj7u.scala:16:27 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                maxDivisor = currentDivisor\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010395
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        var currentDivisor = 0\n        for(i <- 1 to n) {\n\
    \            currentDivisor = i\n            while(currentDivisor != 0) {\n  \
    \              if(currentDivisor % 2 == 0) {\n                    divisors.add(currentDivisor)\n\
    \                    currentDivisor = currentDivisor / 2\n                } else\
    \ {\n                    currentDivisor = currentDivisor / 2\n               \
    \ }\n            }\n        }\n        divisors.toList.sortWith(_ < _).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpherc1orq.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpherc1orq.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010396
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 293l\n\
    \        divisors += 307l\n        divisors += 311l\n        divisors += 317l\n\
    \        divisors += 323l\n        divisors += 329l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 347l\n        divisors += 353l\n\
    \        divisors += 359l\n        divisors += 363l\n        divisors += 369l\n\
    \        divisors += 371l\n        divisors += 377l\n        divisors += 383l\n\
    \        divisors += 389l\n        divisors += 391l\n        divisors += 397l\n\
    \        divisors += 401\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdwvuhssm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010393
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n.toInt\n        val divisors =\
    \ mutable.Set[Long]()\n        for(i <- 1 to maxDivisor) {\n            val remainder\
    \ = n % i\n            if(remainder == 0) {\n                divisors += i\n \
    \           }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7v4y9q90.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010393
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      if(d % 2 == 0) {\n                divisors.remove(d)\n            } else\
    \ {\n                divisors.add(d)\n            }\n        }\n        divisors.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy999cg9u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010394
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcvt_81s4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010394
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpzadwxx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnpzadwxx.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ largestDivisor = 0L\n        for(i <- 2 to n){\n            if(n%i == 0){\n\
    \                divisors += i\n                if(divisors.size > largestDivisor){\n\
    \                    largestDivisor = divisors.head\n                }\n     \
    \       }\n        }\n        largestDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw2c5s1q_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpw2c5s1q_.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010396
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n) divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph4ekkut7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmph4ekkut7.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) divisors\
    \ += d\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010397
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = BigInt(n)\n        val divisors\
    \ = mutable.Set[BigInt]()\n        divisors.add(BigInt(1))\n        while(divisors.nonEmpty)\
    \ {\n            val divisor = divisors.min\n            divisors.remove(divisor)\n\
    \            if(divisor % 2 == 0) {\n                divisors.add(BigInt(divisor)\
    \ + BigInt(divisor))\n            }\n        }\n        divisors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1j8v37hw.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mBigInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010395
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var largestDivisor = 0l\n        for (i <- 1 to n){\n            if (n % i ==\
    \ 0){\n                divisors += i\n                if (divisors.max > largestDivisor){\n\
    \                    largestDivisor = divisors.max\n                }\n      \
    \      }\n        }\n        largestDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpetrte2ry.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpetrte2ry.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n){\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010399
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0\n        var currentDivisor\
    \ = 1\n        var currentDivisorRemainder = 0\n        var currentDivisorRemainderCount\
    \ = 0\n        var currentDivisorRemainderCountMax = 0\n        var currentDivisorRemainderCountMin\
    \ = 0\n        var currentDivisorRemainderCountMaxMin = 0\n        var currentDivisorRemainderCountMinMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMax = 0\n        var currentDivisorRemainderCountMinMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n        var currentDivisorRemainderCountMaxMinMaxMax = 0\n        var currentDivisorRemainderCountMinMaxMaxMax\
    \ = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpc6r63eem.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorRemainderCountMaxMinMaxMax\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorRemainderCountMaxMinMaxMax is already defined\
    \ as \e[33mvariable\e[0m \e[35mcurrentDivisorRemainderCountMaxMinMaxMax\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpc6r63eem.scala:21:12 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorRemainderCountMinMaxMaxMax\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorRemainderCountMinMaxMaxMax is already defined\
    \ as \e[33mvariable\e[0m \e[35mcurrentDivisorRemainderCountMinMaxMaxMax\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpc6r63eem.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorRemainderCountMaxMinMaxMax\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorRemainderCountMaxMinMaxMax is already defined\
    \ as \e[33mvariable\e[0m \e[35mcurrentDivisorRemainderCountMaxMinMaxMax\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpc6r63eem.scala:23:12 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m        \e[33mvar\e[0m \e[36mcurrentDivisorRemainderCountMinMaxMaxMax\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentDivisorRemainderCountMinMaxMaxMax is already defined\
    \ as \e[33mvariable\e[0m \e[35mcurrentDivisorRemainderCountMinMaxMaxMax\e[0m\n\
    \e[31m   |\e[0m\n\e[31"
  stdout: ''
  timestamp: 1660010399
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptg2n_an6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptg2n_an6.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for(i <- 0 until n){\n            val d = i\n  \
    \          while(d > 0){\n                if(divisors.contains(d)){\n        \
    \            maxDivisor = i\n                    break\n                }\n  \
    \              divisors += d\n                d -= 1\n            }\n        }\n\
    \        maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiuvyizzl.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpiuvyizzl.scala:10:25 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiuvyizzl.scala:15:20\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                    break\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^\e[0m\n\e[31m   |\e[0m         \
    \           Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpiuvyizzl.scala:18:18 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m                d -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^\e\
    [0m\n\e[31m   |\e[0m                value -= is not a member of Int - did you\
    \ mean d.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010400
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(4l)\n\
    \        divisors.add(5l)\n        divisors.add(6l)\n        divisors.add(7l)\n\
    \        divisors.add(8l)\n        divisors.add(9l)\n        divisors.add(10l)\n\
    \        divisors.add(11l)\n        divisors.add(12l)\n        divisors.add(13l)\n\
    \        divisors.add(14l)\n        divisors.add(15l)\n        divisors.add(16l)\n\
    \        divisors.add(17l)\n        divisors.add(18l)\n        divisors.add(19l)\n\
    \        divisors.add(20l)\n        divisors.add(21l)\n        divisors.add(22l)\n\
    \        divisors.add(23l)\n        divisors.add(24l)\n        divisors.add(25l)\n\
    \        divisors.add(26l)\n        divisors.add(27l)\n        divisors.add(28l)\n\
    \        divisors.add(29l)\n        divisors.add(30l)\n        divisors.add(31l)\n\
    \        divisors.add(32l)\n        divisors.add(33l)\n        divisors.add(34l)\n\
    \        divisors.add(35l)\n        divisors.add(36l)\n        divisors.add(37l)\n\
    \        divisors.add(38l)\n        divisors.add(39l)\n        divisors.add(40l)\n\
    \        divisors.add(41l)\n        divisors.add(42l)\n        divisors.add(43l)\n\
    \        divisors.add(44l)\n        divisors.add(45l)\n        divisors.add(46l)\n\
    \        divisors.add(47l)\n        divisors.add(48l)\n        divisors.add(49l)\n\
    \        divisors.add(50l)\n        divisors.add(51l)\n        divisors.add(52l)\n\
    \        divisors.add(53l)\n        divisors.add(54l)\n        divisors.add(55l)\n\
    \        divisors.add(56l)\n        divisors.add(57l)\n        divisors.add(58l)\n\
    \        divisors.add(59l)\n        divisors.add(60l)\n        divisors.add(61l)\n\
    \        divisors.add(62l)\n        divisors.add(63l)\n        divisors.add(64l)\n\
    \        divisors.add(65l)\n        divisors.add(66l)\n        divisors.add(67l)\n\
    \        divisors.add(68l)\n        divisors.add(69l)\n        divisors.add(70l)\n\
    \        divisors.add(71l)\n        divisors.add(72l)\n        divisors.add(73l)\n\
    \        divisors.add(74l)\n        divisors.add(75l)\n        divisors.add(76l)\n\
    \        divisors.add(77l)\n        divisors.add(78l)\n        divisors.add(79l)\n\
    \        divisors.add(80l)\n        divisors.add(81l)\n        divisors.add(82l)\n\
    \        divisors.add(83l)\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv5bjulwe.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv5bjulwe.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010396
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val nextDivisor\
    \ = divisors.min\n            if(nextDivisor % 2 == 0) {\n                divisors.remove(nextDivisor)\n\
    \            } else {\n                divisors.add(nextDivisor)\n           \
    \ }\n        }\n        divisors.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_ksylk62.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010396
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val nextDivisor\
    \ = divisors.min\n            divisors -= nextDivisor\n            if(nextDivisor\
    \ % 2 == 0) {\n                return nextDivisor\n            }\n        }\n\
    \        return -1\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplen9feou.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010396
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2l\n        divisors += 3l\n        divisors += 5l\n    \
    \    divisors += 7l\n        divisors += 11l\n        divisors += 13l\n      \
    \  divisors += 17l\n        divisors += 19l\n        divisors += 23l\n       \
    \ divisors += 29l\n        divisors += 31l\n        divisors += 37l\n        divisors\
    \ += 41l\n        divisors += 43l\n        divisors += 47l\n        divisors +=\
    \ 53l\n        divisors += 59l\n        divisors += 61l\n        divisors += 67l\n\
    \        divisors += 71l\n        divisors += 73l\n        divisors += 79l\n \
    \       divisors += 83l\n        divisors += 89l\n        divisors += 97l\n  \
    \      divisors += 101l\n        divisors += 103l\n        divisors += 107l\n\
    \        divisors += 109l\n        divisors += 113l\n        divisors += 117l\n\
    \        divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 259l\n        divisors += 263l\n\
    \        divisors += 267l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkm43h0in.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpkm43h0in.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010396
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 259l\n        divisors += 263l\n\
    \        divisors += 267l\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpg7qvsq76.scala:89:19 ---------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg7qvsq76.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010396
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 287l\n        divisors += 289l\n        divisors += 293l\n\
    \        divisors += 297l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn0q8xyrq.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptg2n_an6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptg2n_an6.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 149\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 159\n        divisors += 161\n   \
    \     divisors += 163\n        divisors += 167\n        divisors += 173\n    \
    \    divisors += 179\n        divisors += 181\n        divisors += 191\n     \
    \   divisors += 197\n        divisors += 199\n        divisors += 211\n      \
    \  divisors += 223\n        divisors += 227\n        divisors += 229\n       \
    \ divisors += 233\n        divisors += 239\n        divisors += 241\n        divisors\
    \ += 243\n        divisors += 247\n        divisors += 249\n        divisors +=\
    \ 251\n        divisors += 253\n        divisors += 257\n        divisors += 263\n\
    \        divisors += 269\n        divisors += 271\n        divisors += 277\n \
    \       divisors += 281\n        divisors += 283\n        divisors += 293\n  \
    \      divisors += 307\n        divisors += 311\n        divisors += 313\n   \
    \     divisors += 317\n        divisors += 319\n        divisors += 323\n    \
    \    divisors += 329\n        divisors += 331\n        divisors += 337\n     \
    \   divisors += 341\n        divisors += 343\n        divisors += 347\n      \
    \  divisors += 349\n        divisors += 353\n        divisors += 359\n       \
    \ divisors += 363\n        divisors += 369\n        divisors += 373\n        divisors\
    \ += 379\n        divisors += 383\n        divisors += 389\n        divisors +=\
    \ 393\n        divisors += 397\n        divisors += 401\n        divisors += 407\n\
    \        divisors += 411\n        divisors += 413\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_14585z2.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010399
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0\n        var maxDivisor =\
    \ 0\n        var currentDivisor = 0\n        for(i <- 1 to n) {\n            currentDivisor\
    \ = i\n            while(currentDivisor != 1) {\n                if(currentDivisor\
    \ % 2 == 0) {\n                    currentDivisor = currentDivisor / 2\n     \
    \           } else {\n                    currentDivisor = currentDivisor / 2\n\
    \                    if(currentDivisor > maxDivisor) {\n                     \
    \   maxDivisor = currentDivisor\n                    }\n                }\n  \
    \          }\n        }\n        largestDivisor = maxDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwzepeifg.scala:11:22\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpwzepeifg.scala:24:23 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m        largestDivisor = maxDivisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    Unit\n\e[31m   |\e[0m        Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010402
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n                divisors\
    \ += i\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4gwrbda8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4gwrbda8.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(5l)\n        divisors.add(7l)\n        divisors.add(11l)\n  \
    \      divisors.add(13l)\n        divisors.add(17l)\n        divisors.add(19l)\n\
    \        divisors.add(23l)\n        divisors.add(29l)\n        divisors.add(31l)\n\
    \        divisors.add(37l)\n        divisors.add(41l)\n        divisors.add(43l)\n\
    \        divisors.add(47l)\n        divisors.add(53l)\n        divisors.add(59l)\n\
    \        divisors.add(61l)\n        divisors.add(67l)\n        divisors.add(71l)\n\
    \        divisors.add(73l)\n        divisors.add(79l)\n        divisors.add(83l)\n\
    \        divisors.add(89l)\n        divisors.add(97l)\n        divisors.add(101l)\n\
    \        divisors.add(107l)\n        divisors.add(109l)\n        divisors.add(113l)\n\
    \        divisors.add(127l)\n        divisors.add(131l)\n        divisors.add(137l)\n\
    \        divisors.add(139l)\n        divisors.add(149l)\n        divisors.add(151l)\n\
    \        divisors.add(157l)\n        divisors.add(159l)\n        divisors.add(161l)\n\
    \        divisors.add(163l)\n        divisors.add(167l)\n        divisors.add(173l)\n\
    \        divisors.add(179l)\n        divisors.add(181l)\n        divisors.add(191l)\n\
    \        divisors.add(193l)\n        divisors.add(197l)\n        divisors.add(199l)\n\
    \        divisors.add(211l)\n        divisors.add(223l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(251l)\n        divisors.add(257l)\n        divisors.add(263l)\n\
    \        divisors.add(269l)\n        divisors.add(271l)\n        divisors.add(277l)\n\
    \        divisors.add(283l)\n        divisors.add(289l)\n        divisors.add(293l)\n\
    \        divisors.add(307l)\n        divisors.add(311l)\n        divisors.add(313l)\n\
    \        divisors.add(317l)\n        divisors.add(323l)\n        divisors.add(329l)\n\
    \        divisors.add(331l)\n        divisors.add(337l)\n        divisors.add(347l)\n\
    \        divisors.add(349l)\n        divisors.add(353l)\n        divisors.add(359l)\n\
    \        divisors.add(367l)\n        divisors.add(373l)\n        divisors.add(379l)\n\
    \        divisors.add(383l)\n        divisors.add(389l)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmped5smojp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010399
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.HashSet[Long]()\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 147\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 197\n        divisors += 199\n   \
    \     divisors += 211\n        divisors += 223\n        divisors += 227\n    \
    \    divisors += 229\n        divisors += 233\n        divisors += 239\n     \
    \   divisors += 241\n        divisors += 247\n        divisors += 251\n      \
    \  divisors += 257\n        divisors += 263\n        divisors += 269\n       \
    \ divisors += 271\n        divisors += 277\n        divisors += 281\n        divisors\
    \ += 283\n        divisors += 293\n        divisors += 307\n        divisors +=\
    \ 311\n        divisors += 313\n        divisors += 317\n        divisors += 323\n\
    \        divisors += 329\n        divisors += 331\n        divisors += 337\n \
    \       divisors += 341\n        divisors += 347\n        divisors += 351\n  \
    \      divisors += 359\n        divisors += 363\n        divisors += 369\n   \
    \     divisors += 373\n        divisors += 379\n        divisors += 383\n    \
    \    divisors += 389\n        divisors += 393\n        divisors += 397\n     \
    \   divisors += 401\n        divisors += 407\n        divisors += 411\n      \
    \  divisors += 413\n        divisors += 417\n        divisors += 419\n       \
    \ divisors += 421\n        divisors += 423\n        divisors += 427\n        divisors\
    \ += 429\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa3o8kxor.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010399
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors += 5l\n\
    \        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n    \
    \    divisors += 9l\n        divisors += 10l\n        divisors += 11l\n      \
    \  divisors += 12l\n        divisors += 13l\n        divisors += 14l\n       \
    \ divisors += 15l\n        divisors += 16l\n        divisors += 17l\n        divisors\
    \ += 18l\n        divisors += 19l\n        divisors += 20l\n        divisors +=\
    \ 21l\n        divisors += 22l\n        divisors += 23l\n        divisors += 24l\n\
    \        divisors += 25l\n        divisors += 26l\n        divisors += 27l\n \
    \       divisors += 28l\n        divisors += 29l\n        divisors += 30l\n  \
    \      divisors += 31l\n        divisors += 32l\n        divisors += 33l\n   \
    \     divisors += 34l\n        divisors += 35l\n        divisors += 36l\n    \
    \    divisors += 37l\n        divisors += 38l\n        divisors += 39l\n     \
    \   divisors += 40l\n        divisors += 41l\n        divisors += 42l\n      \
    \  divisors += 43l\n        divisors += 44l\n        divisors += 45l\n       \
    \ divisors += 46l\n        divisors += 47l\n        divisors += 48l\n        divisors\
    \ += 49l\n        divisors += 50l\n        divisors += 51l\n        divisors +=\
    \ 52l\n        divisors += 53l\n        divisors += 54l\n        divisors += 55l\n\
    \        divisors += 56l\n        divisors += 57l\n        divisors += 58l\n \
    \       divisors += 59l\n        divisors += 60l\n        divisors += 61l\n  \
    \      divisors += 62l\n        divisors += 63l\n        divisors += 64l\n   \
    \     divisors += 65l\n        divisors += 66l\n        divisors += 67l\n    \
    \    divisors += 68l\n        divisors += 69l\n        divisors += 70l\n     \
    \   divisors += 71l\n        divisors += 72l\n        divisors += 73l\n      \
    \  divisors += 74l\n        divisors += 75l\n        divisors += 76l\n       \
    \ divisors += 77l\n        divisors += 78l\n        divisors += 79l\n        divisors\
    \ += 80l\n        divisors += 81l\n        divisors += 82l\n        divisors +=\
    \ 83l\n        divisors += 84l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmce8ujug.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmce8ujug.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 347\n        divisors += 349\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 393\n        divisors += 397\n        divisors += 401\n \
    \       divisors += 407\n        divisors += 411\n        divisors += 413\n  \
    \      divisors += 417\n        divisors += 419\n        divisors += 421\n   \
    \     divisors += 423\n        divisors += 427\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplcb1fhiv.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010400
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_cc0ra_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpz_cc0ra_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 321l\n\
    \        divisors += 323l\n        divisors += 327l\n        divisors += 331l\n\
    \        divisors += 333l\n        divisors += 337l\n        divisors += 343l\n\
    \        divisors += 347l\n        divisors += 351l\n        divisors += 353l\n\
    \        divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwyk1rhcd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwyk1rhcd.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010401
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 287l\n        divisors += 289l\n        divisors += 293l\n\
    \        divisors += 297l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr4pn_ec4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010401
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(5l)\n        divisors.add(10l)\n        divisors.add(15l)\n \
    \       divisors.add(20l)\n        divisors.add(25l)\n        divisors.add(30l)\n\
    \        divisors.add(35l)\n        divisors.add(40l)\n        divisors.add(45l)\n\
    \        divisors.add(50l)\n        divisors.add(55l)\n        divisors.add(60l)\n\
    \        divisors.add(65l)\n        divisors.add(70l)\n        divisors.add(75l)\n\
    \        divisors.add(80l)\n        divisors.add(85l)\n        divisors.add(90l)\n\
    \        divisors.add(95l)\n        divisors.add(100l)\n        divisors.add(105l)\n\
    \        divisors.add(110l)\n        divisors.add(115l)\n        divisors.add(120l)\n\
    \        divisors.add(125l)\n        divisors.add(130l)\n        divisors.add(135l)\n\
    \        divisors.add(140l)\n        divisors.add(145l)\n        divisors.add(150l)\n\
    \        divisors.add(155l)\n        divisors.add(160l)\n        divisors.add(165l)\n\
    \        divisors.add(170l)\n        divisors.add(175l)\n        divisors.add(180l)\n\
    \        divisors.add(185l)\n        divisors.add(190l)\n        divisors.add(195l)\n\
    \        divisors.add(200l)\n        divisors.add(205l)\n        divisors.add(210l)\n\
    \        divisors.add(215l)\n        divisors.add(220l)\n        divisors.add(225l)\n\
    \        divisors.add(230l)\n        divisors.add(235l)\n        divisors.add(240l)\n\
    \        divisors.add(245l)\n        divisors.add(250l)\n        divisors.add(255l)\n\
    \        divisors.add(260l)\n        divisors.add(265l)\n        divisors.add(270l)\n\
    \        divisors.add(275l)\n        divisors.add(280l)\n        divisors.add(285l)\n\
    \        divisors.add(290l)\n        divisors.add(295l)\n        divisors.add(300l)\n\
    \        divisors.add(305l)\n        divisors.add(310l)\n        divisors.add(315l)\n\
    \        divisors.add(320l)\n        divisors.add(325l)\n        divisors.add(330l)\n\
    \        divisors.add(335l)\n        divisors.add(340l)\n        divisors.add(345l)\n\
    \        divisors.add(350l)\n        divisors.add(355l)\n        divisors.add(360l)\n\
    \        divisors.add(365l)\n        divisors.add(370l)\n        divisors.add(375l)\n\
    \        divisors.add(380l)\n        divisors.add(385l)\n        divisors.add(390l)\n\
    \        divisors.add(395l)\n        divisors.add(400\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsqitdbpz.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsqitdbpz.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010402
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var maxDivisorFactorIndex2\
    \ = 0\n        var maxDivisorFactorIndex3 = 0\n        var maxDivisorFactorIndex4\
    \ = 0\n        var maxDivisorFactorIndex5 = 0\n        var maxDivisorFactorIndex6\
    \ = 0\n        var maxDivisorFactorIndex7 = 0\n        var maxDivisorFactorIndex8\
    \ = 0\n        var maxDivisorFactorIndex9 = 0\n        var maxDivisorFactorIndex10\
    \ = 0\n        var maxDivisorFactorIndex11 = 0\n        var maxDivisorFactorIndex12\
    \ = 0\n        var maxDivisorFactorIndex13 = 0\n        var maxDivisorFactorIndex14\
    \ = 0\n        var maxDivisorFactorIndex15 = 0\n        var maxDivisorFactorIndex16\
    \ = 0\n        var maxDivisorFactorIndex17 = 0\n        var maxDivisorFactorIndex18\
    \ = 0\n        var maxDivisorFactorIndex19 = 0\n        var maxDivisorFactorIndex20\
    \ = 0\n        var maxDivisorFactorIndex21 = 0\n        var maxDivisorFactorIndex22\
    \ = 0\n        var maxDivisorFactorIndex23 = 0\n        var maxDivisorFactorIndex24\
    \ = 0\n        var maxDivisorFactorIndex25 = 0\n        var maxDivisorFactorIndex26\
    \ = 0\n        var maxDivisorFactorIndex27 = 0\n        var maxDivisorFactorIndex28\
    \ = 0\n        var maxDivisorFactorIndex29 = 0\n        var maxDivisorFactorIndex30\
    \ = 0\n        var maxDivisorFactorIndex31 = 0\n        var maxDivisorFactorIndex32\
    \ = 0\n        var maxDivisorFactorIndex33 = 0\n        var maxDivisorFactorIndex34\
    \ = 0\n        var maxDivisorFactorIndex35 = 0\n        var maxDivisorFactorIndex36\
    \ = 0\n        var maxDivisorFactorIndex37 = 0\n        var maxDivisorFactorIndex38\
    \ = 0\n        var maxDivisorFactorIndex39 = 0\n        var maxDivisorFactorIndex40\
    \ = 0\n        var maxDivisorFactorIndex41 = 0\n        var maxDivisorFactorIndex42\
    \ = 0\n        var maxDivisorFactorIndex43 = 0\n        var maxDivisorFactorIndex44\
    \ = 0\n        var maxDivisorFactorIndex45 = 0\n        var maxDivisorFactorIndex46\
    \ = 0\n        var maxDivisorFactorIndex47 = 0\n        var maxDivisorFactorIndex48\
    \ = 0\n        var maxDivisorFactorIndex49 = 0\n        var maxDivisorFactorIndex50\
    \ = 0\n        var maxDivisorFactorIndex51 = 0\n        var maxDivisorFactorIndex52\
    \ = 0\n        var maxDivisorFactorIndex53 = 0\n        var maxDivisorFactorIndex54\
    \ = 0\n        var maxDivisorFactorIndex55 = 0\n        var maxDivisorFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmafmjtbb.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpmafmjtbb.scala:66:5 ---------------------\e[0m\e[0m\n\e[31m66 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010393
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 107l\n        divisors += 113l\n   \
    \     divisors += 119l\n        divisors += 121l\n        divisors += 123l\n \
    \       divisors += 127l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9i1aw0dj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010402
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpscvnuvbr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpscvnuvbr.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010390
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        for (d <- 2 to n by 2) {\n       \
    \     if (n % d == 0) {\n                divisors += d\n                if (divisors.size\
    \ >= maxDivisor.size) {\n                    maxDivisor += divisors.toList\n \
    \               }\n            }\n        }\n        if (divisors.size == maxDivisor.size)\
    \ {\n            divisors.toList(0)(0)\n        } else {\n            divisors.toList(0)(0)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5woji38r.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5woji38r.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp5woji38r.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010406
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n by 2){\n            divisors += i\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp17x0zmle.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp17x0zmle.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010407
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 293l\n\
    \        divisors += 307l\n        divisors += 311l\n        divisors += 313l\n\
    \        divisors += 317l\n        divisors += 323l\n        divisors += 329l\n\
    \        divisors += 331l\n        divisors += 337l\n        divisors += 341l\n\
    \        divisors += 343l\n        divisors += 347l\n        divisors += 353l\n\
    \        divisors += 359l\n        divisors += 361l\n        divisors += 363l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp_po2kc4a.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_po2kc4a.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010403
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var largestDivisor = 0l\n        for (i <- 1 to n by 2) {\n            if (n\
    \ % i == 0) {\n                divisors += i\n                if (divisors.max()\
    \ < largestDivisor) {\n                    largestDivisor = divisors.max\n   \
    \             }\n            }\n        }\n        largestDivisor\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmfvia25b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmfvia25b.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010407
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (i <- 1 to n by 2)\n            if (n % i == 0)\n                divisors +=\
    \ i\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt7lqn0u1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpt7lqn0u1.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010407
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 127l\n        divisors += 131l\n\
    \        divisors += 137l\n        divisors += 139l\n        divisors += 141l\n\
    \        divisors += 143l\n        divisors += 147l\n        divisors += 149l\n\
    \        divisors += 151l\n        divisors += 153l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 261l\n        divisors += 263l\n\
    \        divisors += 267l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv83vrsew.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010403
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 343l\n        divisors += 347l\n\
    \        divisors += 351l\n        divisors += 353l\n        divisors += 359l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpf0g7nw5m.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf0g7nw5m.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010403
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        for (d <- 2 to n by 2) {\n       \
    \     if (n % d == 0) {\n                divisors += d\n                if (d\
    \ > maxDivisor.max) {\n                    maxDivisor += d\n                }\n\
    \            }\n        }\n        if (divisors.size == 0) {\n            throw\
    \ new RuntimeException(\"No divisors found for \" + n)\n        }\n        if\
    \ (maxDivisor.size == 0) {\n            throw new RuntimeException(\"No divisors\
    \ found for \" + n)\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb_sj5ra1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpb_sj5ra1.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpb_sj5ra1.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010408
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.Set[Long]()\n\
    \        while(maxDivisor != 1) {\n            divisors += maxDivisor\n      \
    \      maxDivisor = maxDivisor / 2\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa9cfb9zb.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpa9cfb9zb.scala:12:23 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            maxDivisor = maxDivisor / \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010406
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n   \
    \     val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex =\
    \ mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n     \
    \   val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        val maxDivisorIndex\
    \ = mutable.Set[\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdf9swdgw.scala:45:4 ----------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpdf9swdgw.scala:11:12 ---------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e[35mInt\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpdf9swdgw.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpdf9swdgw.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpdf9swdgw.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 135l\n\
    \        divisors += 137l\n        divisors += 139l\n        divisors += 141l\n\
    \        divisors += 143l\n        divisors += 147l\n        divisors += 149l\n\
    \        divisors += 151l\n        divisors += 153l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmphejesx9b.scala:89:19 ---------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphejesx9b.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010405
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkl93lxd_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkl93lxd_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp222mpdir.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(10)\n        divisors.add(25)\n        divisors.add(50)\n\
    \        divisors.add(100)\n        divisors.add(1000)\n        divisors.add(10000)\n\
    \        divisors.add(100000)\n        divisors.add(1000000)\n        divisors.add(10000000)\n\
    \        divisors.add(100000000)\n        divisors.add(1000000000)\n        divisors.add(10000000000)\n\
    \        divisors.add(100000000000)\n        divisors.add(1000000000000)\n   \
    \     divisors.add(10000000000000)\n        divisors.add(100000000000000)\n  \
    \      divisors.add(1000000000000000)\n        divisors.add(10000000000000000)\n\
    \        divisors.add(100000000000000000)\n        divisors.add(1000000000000000000)\n\
    \        divisors.add(10000000000000000000)\n        divisors.add(100000000000000000000)\n\
    \        divisors.add(1000000000000000000000)\n        divisors.add(10000000000000000000000)\n\
    \        divisors.add(100000000000000000000000)\n        divisors.add(1000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000)\n        divisors.add(100000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000)\n        divisors.add(10000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000000000000)\n      \
    \  divisors.add(10000000000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000000000000000)\n   \
    \     divisors.add(10000000000000000000000000000000000000000000000000)\n     \
    \   divisors.add(100000000000000000000000000000000000000000000000000)\n      \
    \  divisors.add(1000000000000000000000000000000000000000000000000000)\n      \
    \  divisors.add(10000000000000000000000000000000000000000000000000000)\n     \
    \   divisors.add(100000000000000000000000000000000000000000000000000000)\n   \
    \     divisors.add(1000000000000000000000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000000000000000000000)\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpip_jf8t4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010406
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for (i <- 1 to n) {\n            if (n % i == 0)\
    \ {\n                divisors += i\n            }\n        }\n        divisors.foreach\
    \ { divisor =>\n            if (divisor > maxDivisor) {\n                maxDivisor\
    \ = divisor\n            }\n        }\n        maxDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdxsc1_lv.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdxsc1_lv.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010409
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(103)\n        divisors.add(109)\n        divisors.add(113)\n\
    \        divisors.add(127)\n        divisors.add(131)\n        divisors.add(137)\n\
    \        divisors.add(139)\n        divisors.add(149)\n        divisors.add(151)\n\
    \        divisors.add(157)\n        divisors.add(163)\n        divisors.add(167)\n\
    \        divisors.add(173)\n        divisors.add(179)\n        divisors.add(181)\n\
    \        divisors.add(191)\n        divisors.add(193)\n        divisors.add(197)\n\
    \        divisors.add(199)\n        divisors.add(211)\n        divisors.add(223)\n\
    \        divisors.add(227)\n        divisors.add(229)\n        divisors.add(233)\n\
    \        divisors.add(239)\n        divisors.add(241)\n        divisors.add(243)\n\
    \        divisors.add(247)\n        divisors.add(251)\n        divisors.add(253)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(273)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(287)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(365)\n\
    \        divisors.add(367)\n        divisors.add(373)\n        divisors.add(379)\n\
    \        divisors.add(381)\n        divisors.add(383)\n        divisors.add(383)\n\
    \        divisors.add(383)\n        divisors.add(383)\n        divisors.add(383)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmbvaapu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010407
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      if(n % d == 0) {\n                divisors.remove(d)\n            } else\
    \ {\n                divisors.add(d)\n            }\n        }\n        divisors.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprxt4fuoi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010407
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            val d = i\n            while(d > 1){\n            \
    \    if(d % 2 == 0){\n                    divisors += d\n                    d\
    \ /= 2\n                }\n                else{\n                    d /= 2\n\
    \                }\n            }\n        }\n        divisors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjfpw5nwj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjfpw5nwj.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjfpw5nwj.scala:14:22\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                    d /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value /= is not a member of Int - did you mean d.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpjfpw5nwj.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                    d /= \e[31m2\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ /= is not a member of Int - did you mean d.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010413
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors += 5l\n\
    \        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n    \
    \    divisors += 9l\n        divisors += 10l\n        divisors += 11l\n      \
    \  divisors += 12l\n        divisors += 13l\n        divisors += 14l\n       \
    \ divisors += 15l\n        divisors += 16l\n        divisors += 17l\n        divisors\
    \ += 18l\n        divisors += 19l\n        divisors += 20l\n        divisors +=\
    \ 21l\n        divisors += 22l\n        divisors += 23l\n        divisors += 24l\n\
    \        divisors += 25l\n        divisors += 26l\n        divisors += 27l\n \
    \       divisors += 28l\n        divisors += 29l\n        divisors += 30l\n  \
    \      divisors += 31l\n        divisors += 32l\n        divisors += 33l\n   \
    \     divisors += 34l\n        divisors += 35l\n        divisors += 36l\n    \
    \    divisors += 37l\n        divisors += 38l\n        divisors += 39l\n     \
    \   divisors += 40l\n        divisors += 41l\n        divisors += 42l\n      \
    \  divisors += 43l\n        divisors += 44l\n        divisors += 45l\n       \
    \ divisors += 46l\n        divisors += 47l\n        divisors += 48l\n        divisors\
    \ += 49l\n        divisors += 50l\n        divisors += 51l\n        divisors +=\
    \ 52l\n        divisors += 53l\n        divisors += 54l\n        divisors += 55l\n\
    \        divisors += 56l\n        divisors += 57l\n        divisors += 58l\n \
    \       divisors += 59l\n        divisors += 60l\n        divisors += 61l\n  \
    \      divisors += 62l\n        divisors += 63l\n        divisors += 64l\n   \
    \     divisors += 65l\n        divisors += 66l\n        divisors += 67l\n    \
    \    divisors += 68l\n        divisors += 69l\n        divisors += 70l\n     \
    \   divisors += 71l\n        divisors += 72l\n        divisors += 73l\n      \
    \  divisors += 74l\n        divisors += 75l\n        divisors += 76l\n       \
    \ divisors += 77l\n        divisors += 78l\n        divisors += 79l\n        divisors\
    \ += 80l\n        divisors += 81l\n        divisors += 82l\n        divisors +=\
    \ 83l\n        divisors += 84l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      divisors -= d\n            if(d % 2 == 0) return d\n        }\n       \
    \ return n\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcqcld04b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010408
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplbx1tp1g.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmplbx1tp1g.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010412
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (i <- 2 to n) divisors += i\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpht2eafzm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpht2eafzm.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010412
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 321l\n\
    \        divisors += 323l\n        divisors += 327l\n        divisors += 331l\n\
    \        divisors += 333l\n        divisors += 337l\n        divisors += 341l\n\
    \        divisors += 343l\n        divisors += 347l\n        divisors += 351l\n\
    \        divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_l8bvecp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_l8bvecp.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDividend = 0\n\
    \        var maxDividendIndex = 0\n        var divisor = 0\n        var dividend\
    \ = 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n        var dividendIndex = 0\n        var divisorIndex =\
    \ 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n        var dividendIndex = 0\n        var divisorIndex =\
    \ 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n        var dividendIndex = 0\n        var divisorIndex =\
    \ 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n        var dividendIndex = 0\n        var divisorIndex =\
    \ 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n        var dividendIndex = 0\n        var divisorIndex =\
    \ 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n        var dividendIndex = 0\n        var divisorIndex =\
    \ 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n        var dividendIndex = 0\n        var divisorIndex =\
    \ 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n        var dividendIndex = 0\n        var divisorIndex =\
    \ 0\n        var dividendIndex = 0\n        var divisorIndex = 0\n        var\
    \ dividendIndex = 0\n        var divisorIndex = 0\n        var dividendIndex =\
    \ 0\n        var divisorIndex = 0\n        var dividendIndex = 0\n        var\
    \ divisorIndex = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpw0yg7f98.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mdividendIndex\e[0m = \e\
    [31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mdividendIndex is already defined as \e[33mvariable\e[0m \e[35mdividendIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpw0yg7f98.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mvar\e[0m \e[36mdivisorIndex\e[0m = \e[31m0\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mdivisorIndex\
    \ is already defined as \e[33mvariable\e[0m \e[35mdivisorIndex\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpw0yg7f98.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mdividendIndex\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdividendIndex is already defined as \e[33mvariable\e[0m \e\
    [35mdividendIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpw0yg7f98.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e[36mdivisorIndex\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mdivisorIndex\
    \ is already defined as \e[33mvariable\e[0m \e[35mdivisorIndex\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpw0yg7f98.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mdividendIndex\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdividendIndex is already defined as \e[33mvariable\e[0m \e\
    [35mdividendIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNo"
  stdout: ''
  timestamp: 1660010414
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.HashSet[Long]()\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 147\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 197\n        divisors += 199\n   \
    \     divisors += 211\n        divisors += 223\n        divisors += 227\n    \
    \    divisors += 229\n        divisors += 233\n        divisors += 239\n     \
    \   divisors += 241\n        divisors += 243\n        divisors += 247\n      \
    \  divisors += 251\n        divisors += 253\n        divisors += 257\n       \
    \ divisors += 263\n        divisors += 269\n        divisors += 271\n        divisors\
    \ += 277\n        divisors += 281\n        divisors += 283\n        divisors +=\
    \ 293\n        divisors += 307\n        divisors += 311\n        divisors += 313\n\
    \        divisors += 317\n        divisors += 323\n        divisors += 329\n \
    \       divisors += 331\n        divisors += 337\n        divisors += 343\n  \
    \      divisors += 347\n        divisors += 353\n        divisors += 359\n   \
    \     divisors += 363\n        divisors += 369\n        divisors += 373\n    \
    \    divisors += 379\n        divisors += 383\n        divisors += 389\n     \
    \   divisors += 397\n        divisors += 401\n        divisors += 407\n      \
    \  divisors += 413\n        divisors += 417\n        divisors += 423\n       \
    \ divisors += 429\n        divisors += 433\n        divisors += 439\n        divisors\
    \ += 443\n\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp85p4zrfg.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(10)\n        divisors.add(15)\n        divisors.add(20)\n\
    \        divisors.add(25)\n        divisors.add(30)\n        divisors.add(35)\n\
    \        divisors.add(40)\n        divisors.add(45)\n        divisors.add(50)\n\
    \        divisors.add(55)\n        divisors.add(60)\n        divisors.add(65)\n\
    \        divisors.add(70)\n        divisors.add(75)\n        divisors.add(80)\n\
    \        divisors.add(85)\n        divisors.add(90)\n        divisors.add(95)\n\
    \        divisors.add(100)\n        divisors.add(105)\n        divisors.add(110)\n\
    \        divisors.add(115)\n        divisors.add(120)\n        divisors.add(125)\n\
    \        divisors.add(130)\n        divisors.add(135)\n        divisors.add(140)\n\
    \        divisors.add(145)\n        divisors.add(150)\n        divisors.add(155)\n\
    \        divisors.add(160)\n        divisors.add(165)\n        divisors.add(170)\n\
    \        divisors.add(175)\n        divisors.add(180)\n        divisors.add(185)\n\
    \        divisors.add(190)\n        divisors.add(195)\n        divisors.add(200)\n\
    \        divisors.add(205)\n        divisors.add(210)\n        divisors.add(215)\n\
    \        divisors.add(220)\n        divisors.add(225)\n        divisors.add(230)\n\
    \        divisors.add(235)\n        divisors.add(240)\n        divisors.add(245)\n\
    \        divisors.add(250)\n        divisors.add(255)\n        divisors.add(260)\n\
    \        divisors.add(265)\n        divisors.add(270)\n        divisors.add(275)\n\
    \        divisors.add(280)\n        divisors.add(285)\n        divisors.add(290)\n\
    \        divisors.add(295)\n        divisors.add(300)\n        divisors.add(305)\n\
    \        divisors.add(310)\n        divisors.add(315)\n        divisors.add(320)\n\
    \        divisors.add(325)\n        divisors.add(330)\n        divisors.add(335)\n\
    \        divisors.add(340)\n        divisors.add(345)\n        divisors.add(350)\n\
    \        divisors.add(355)\n        divisors.add(360)\n        divisors.add(365)\n\
    \        divisors.add(370)\n        divisors.add(375)\n        divisors.add(380)\n\
    \        divisors.add(385)\n        divisors.add(390)\n        divisors.add(395)\n\
    \        divisors.add(400)\n        divisors.add(405)\n        divisors.add(410)\n\
    \        divisors.add(415)\n        divisors.add(4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp631n43jq.scala:96:4 ----------------------------\e\
    [0m\e[0m\n\e[31m96 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp631n43jq.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010410
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ largestDivisor = 0l\n        var currentDivisor = 0l\n        while(currentDivisor\
    \ < n) {\n            currentDivisor = n / currentDivisor\n            divisors\
    \ += currentDivisor\n            if(currentDivisor > largestDivisor) {\n     \
    \           largestDivisor = currentDivisor\n            }\n        }\n      \
    \  largestDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpif8a1w1p.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010411
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcvt_81s4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010394
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 343l\n        divisors += 347l\n\
    \        divisors += 351l\n        divisors += 353l\n        divisors += 359l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpf0g7nw5m.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf0g7nw5m.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010403
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1)\n\
    \        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n \
    \       divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(103)\n        divisors.add(107)\n\
    \        divisors.add(109)\n        divisors.add(111)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(139)\n\
    \        divisors.add(149)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(213)\n        divisors.add(217)\n\
    \        divisors.add(219)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(333)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuci75ig5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010411
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp222mpdir.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 183l\n\
    \        divisors += 187l\n        divisors += 189l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 231l\n\
    \        divisors += 233l\n        divisors += 237l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplluqnpdu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplluqnpdu.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(5l)\n\
    \        divisors.add(7l)\n        divisors.add(11l)\n        divisors.add(13l)\n\
    \        divisors.add(17l)\n        divisors.add(19l)\n        divisors.add(23l)\n\
    \        divisors.add(29l)\n        divisors.add(31l)\n        divisors.add(37l)\n\
    \        divisors.add(41l)\n        divisors.add(43l)\n        divisors.add(47l)\n\
    \        divisors.add(53l)\n        divisors.add(59l)\n        divisors.add(61l)\n\
    \        divisors.add(67l)\n        divisors.add(71l)\n        divisors.add(73l)\n\
    \        divisors.add(79l)\n        divisors.add(83l)\n        divisors.add(89l)\n\
    \        divisors.add(97l)\n        divisors.add(101l)\n        divisors.add(103l)\n\
    \        divisors.add(107l)\n        divisors.add(109l)\n        divisors.add(113l)\n\
    \        divisors.add(127l)\n        divisors.add(131l)\n        divisors.add(137l)\n\
    \        divisors.add(139l)\n        divisors.add(149l)\n        divisors.add(151l)\n\
    \        divisors.add(157l)\n        divisors.add(159l)\n        divisors.add(161l)\n\
    \        divisors.add(163l)\n        divisors.add(167l)\n        divisors.add(169l)\n\
    \        divisors.add(173l)\n        divisors.add(177l)\n        divisors.add(179l)\n\
    \        divisors.add(181l)\n        divisors.add(191l)\n        divisors.add(193l)\n\
    \        divisors.add(197l)\n        divisors.add(199l)\n        divisors.add(211l)\n\
    \        divisors.add(223l)\n        divisors.add(227l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(243l)\n        divisors.add(247l)\n        divisors.add(251l)\n\
    \        divisors.add(253l)\n        divisors.add(257l)\n        divisors.add(263l)\n\
    \        divisors.add(269l)\n        divisors.add(271l)\n        divisors.add(277l)\n\
    \        divisors.add(281l)\n        divisors.add(283l)\n        divisors.add(293l)\n\
    \        divisors.add(307l)\n        divisors.add(311l)\n        divisors.add(313l)\n\
    \        divisors.add(317l)\n        divisors.add(331l)\n        divisors.add(337l)\n\
    \        divisors.add(347l)\n        divisors.add(349l)\n        divisors.add(353l)\n\
    \        divisors.add(359l)\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpayo3mllm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010411
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 341\n        divisors += 343\n    \
    \    divisors += 347\n        divisors += 353\n        divisors += 359\n     \
    \   divisors += 363\n        divisors += 369\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 393\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 419\n        divisors += 421\n        divisors += 423\n\
    \        divisors += 427\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp8qfk74zi.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8qfk74zi.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010411
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            val d = i\n            while(d % 2 == 0){\n       \
    \         d /= 2\n            }\n            divisors += d\n        }\n      \
    \  divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpttyeadrg.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpttyeadrg.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpttyeadrg.scala:12:18\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010417
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = math.max(n / 2, 1)\n        val\
    \ divisors = mutable.Set[Long]()\n        for (i <- 2 to maxDivisor) {\n     \
    \       if (n % i == 0) {\n                divisors += i\n            }\n    \
    \    }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8x4vfdf6.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8x4vfdf6.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to maxDivisor)\
    \ {\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (maxDivisor : Long)\n\e[31m   |\e[0m     \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010416
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDividend = 0\n\
    \        for (divisor <- 1 to n){\n            val dividend = divisor\n      \
    \      if (dividend % 2 == 0){\n                maxDividend = dividend\n     \
    \       }\n            if (dividend > maxDivisor){\n                maxDivisor\
    \ = dividend\n            }\n        }\n        maxDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvraygkys.scala:10:29\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (divisor\
    \ <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                             ^\e\
    [0m\n\e[31m   |\e[0m                             Found:    (n : Long)\n\e[31m\
    \   |\e[0m                             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010417
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ val largestDivisor = mutable.Long.MinValue\n        for(i <- 1 to n){\n    \
    \        divisors += i\n            if(divisors.contains(n%i)){\n            \
    \    largestDivisor = i\n            }\n        }\n        largestDivisor\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph68ycxuj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmph68ycxuj.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Long.MinValue\n\
    \e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                             Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmph68ycxuj.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmph68ycxuj.scala:13:31 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                largestDivisor = i\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val largestDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010418
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ val maxDivisor = mutable.Long.MaxValue\n        divisors.clear()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors += 5l\n\
    \        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n    \
    \    divisors += 9l\n        divisors += 10l\n        divisors += 11l\n      \
    \  divisors += 12l\n        divisors += 13l\n        divisors += 14l\n       \
    \ divisors += 15l\n        divisors += 16l\n        divisors += 17l\n        divisors\
    \ += 18l\n        divisors += 19l\n        divisors += 20l\n        divisors +=\
    \ 21l\n        divisors += 22l\n        divisors += 23l\n        divisors += 24l\n\
    \        divisors += 25l\n        divisors += 26l\n        divisors += 27l\n \
    \       divisors += 28l\n        divisors += 29l\n        divisors += 30l\n  \
    \      divisors += 31l\n        divisors += 32l\n        divisors += 33l\n   \
    \     divisors += 34l\n        divisors += 35l\n        divisors += 36l\n    \
    \    divisors += 37l\n        divisors += 38l\n        divisors += 39l\n     \
    \   divisors += 40l\n        divisors += 41l\n        divisors += 42l\n      \
    \  divisors += 43l\n        divisors += 44l\n        divisors += 45l\n       \
    \ divisors += 46l\n        divisors += 47l\n        divisors += 48l\n        divisors\
    \ += 49l\n        divisors += 50l\n        divisors += 51l\n        divisors +=\
    \ 52l\n        divisors += 53l\n        divisors += 54l\n        divisors += 55l\n\
    \        divisors += 56l\n        divisors += 57l\n        divisors += 58l\n \
    \       divisors += 59l\n        divisors += 60l\n        divisors += 61l\n  \
    \      divisors += 62l\n        divisors += 63l\n        divisors += 64l\n   \
    \     divisors += 65l\n        divisors += 66l\n        divisors += 67l\n    \
    \    divisors += 68l\n        divisors += 69l\n        divisors += 70l\n     \
    \   divisors += 71l\n        divisors += 72l\n        divisors += 73l\n      \
    \  divisors += 74l\n        divisors += 75l\n        divisors += 76l\n       \
    \ divisors += 77l\n        divisors += 78l\n        divisors += 79l\n        divisors\
    \ += 80l\n        divisors += 81l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzeo9h95w.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzeo9h95w.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010414
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        var maxDivisorDivisor\
    \ = maxDivisor\n        var maxDivisorDivisor2 = maxDivisor\n        var maxDivisorDivisor3\
    \ = maxDivisor\n        var maxDivisorDivisor4 = maxDivisor\n        var maxDivisorDivisor5\
    \ = maxDivisor\n        var maxDivisorDivisor6 = maxDivisor\n        var maxDivisorDivisor7\
    \ = maxDivisor\n        var maxDivisorDivisor8 = maxDivisor\n        var maxDivisorDivisor9\
    \ = maxDivisor\n        var maxDivisorDivisor10 = maxDivisor\n        var maxDivisorDivisor11\
    \ = maxDivisor\n        var maxDivisorDivisor12 = maxDivisor\n        var maxDivisorDivisor13\
    \ = maxDivisor\n        var maxDivisorDivisor14 = maxDivisor\n        var maxDivisorDivisor15\
    \ = maxDivisor\n        var maxDivisorDivisor16 = maxDivisor\n        var maxDivisorDivisor17\
    \ = maxDivisor\n        var maxDivisorDivisor18 = maxDivisor\n        var maxDivisorDivisor19\
    \ = maxDivisor\n        var maxDivisorDivisor20 = maxDivisor\n        var maxDivisorDivisor21\
    \ = maxDivisor\n        var maxDivisorDivisor22 = maxDivisor\n        var maxDivisorDivisor23\
    \ = maxDivisor\n        var maxDivisorDivisor24 = maxDivisor\n        var maxDivisorDivisor25\
    \ = maxDivisor\n        var maxDivisorDivisor26 = maxDivisor\n        var maxDivisorDivisor27\
    \ = maxDivisor\n        var maxDivisorDivisor28 = maxDivisor\n        var maxDivisorDivisor29\
    \ = maxDivisor\n        var maxDivisorDivisor30 = maxDivisor\n        var maxDivisorDivisor31\
    \ = maxDivisor\n        var maxDivisorDivisor32 = maxDivisor\n        var maxDivisorDivisor33\
    \ = maxDivisor\n        var maxDivisorDivisor34 = maxDivisor\n        var maxDivisorDivisor35\
    \ = maxDivisor\n        var maxDivisorDivisor36 = maxDivisor\n        var maxDivisorDivisor37\
    \ = maxDivisor\n        var maxDivisorDivisor38 = maxDivisor\n        var maxDivisorDivisor39\
    \ = maxDivisor\n        var maxDivisorDivisor40 = maxDivisor\n        var maxDivisorDivisor41\
    \ = maxDivisor\n        var maxDivisorDivisor42 = maxDivisor\n        var maxDivisorDivisor43\
    \ = maxDi\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjvg1twqj.scala:51:34 ------------------------\e\
    [0m\e[0m\n\e[31m51 |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorDivisor43\e[0m\
    \ = maxDi\n\e[31m\e[31m   |\e[0m                                  ^^^^^\e[0m\n\
    \e[31m   |\e[0m                                  Not found: maxDi\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjvg1twqj.scala:52:5 ---------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010418
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 0 until n) {\n            val currentDivisor = i / maxDivisor\n\
    \            if(currentDivisor % 2 == 0) {\n                divisors += currentDivisor\n\
    \            }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp69i8f8ep.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp69i8f8ep.scala:10:25 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010418
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(5l)\n\
    \        divisors.add(7l)\n        divisors.add(11l)\n        divisors.add(13l)\n\
    \        divisors.add(17l)\n        divisors.add(19l)\n        divisors.add(23l)\n\
    \        divisors.add(29l)\n        divisors.add(31l)\n        divisors.add(37l)\n\
    \        divisors.add(41l)\n        divisors.add(43l)\n        divisors.add(47l)\n\
    \        divisors.add(53l)\n        divisors.add(59l)\n        divisors.add(61l)\n\
    \        divisors.add(67l)\n        divisors.add(71l)\n        divisors.add(73l)\n\
    \        divisors.add(79l)\n        divisors.add(83l)\n        divisors.add(89l)\n\
    \        divisors.add(97l)\n        divisors.add(101l)\n        divisors.add(103l)\n\
    \        divisors.add(107l)\n        divisors.add(109l)\n        divisors.add(113l)\n\
    \        divisors.add(127l)\n        divisors.add(131l)\n        divisors.add(137l)\n\
    \        divisors.add(139l)\n        divisors.add(149l)\n        divisors.add(151l)\n\
    \        divisors.add(157l)\n        divisors.add(159l)\n        divisors.add(161l)\n\
    \        divisors.add(163l)\n        divisors.add(167l)\n        divisors.add(169l)\n\
    \        divisors.add(173l)\n        divisors.add(177l)\n        divisors.add(179l)\n\
    \        divisors.add(181l)\n        divisors.add(191l)\n        divisors.add(193l)\n\
    \        divisors.add(197l)\n        divisors.add(199l)\n        divisors.add(211l)\n\
    \        divisors.add(223l)\n        divisors.add(227l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(243l)\n        divisors.add(247l)\n        divisors.add(251l)\n\
    \        divisors.add(253l)\n        divisors.add(257l)\n        divisors.add(263l)\n\
    \        divisors.add(269l)\n        divisors.add(271l)\n        divisors.add(277l)\n\
    \        divisors.add(281l)\n        divisors.add(283l)\n        divisors.add(293l)\n\
    \        divisors.add(307l)\n        divisors.add(311l)\n        divisors.add(313l)\n\
    \        divisors.add(317l)\n        divisors.add(331l)\n        divisors.add(337l)\n\
    \        divisors.add(347l)\n        divisors.add(349l)\n        divisors.add(353l)\n\
    \        divisors.add(359l)\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpayo3mllm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010411
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val divisor\
    \ = divisors.min\n            divisors -= divisor\n            if(divisor % 2\
    \ == 0) {\n                return divisor\n            }\n            divisors.add(divisor)\n\
    \        }\n        -1\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5q0hc6k7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010414
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0) divisors += d\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr5n1o6z5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpr5n1o6z5.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 297\n        divisors += 303\n  \
    \      divisors += 307\n        divisors += 311\n        divisors += 313\n   \
    \     divisors += 317\n        divisors += 323\n        divisors += 329\n    \
    \    divisors += 331\n        divisors += 337\n        divisors += 343\n     \
    \   divisors += 347\n        divisors += 353\n        divisors += 359\n      \
    \  divisors += 363\n        divisors += 369\n        divisors += 373\n       \
    \ divisors += 379\n        divisors += 383\n        divisors += 389\n        divisors\
    \ += 393\n        divisors += 397\n        divisors += 401\n        divisors +=\
    \ 407\n        divisors += 411\n        divisors += 413\n        divisors += 417\n\
    \        divisors += 423\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj54qez_w.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010415
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpzadwxx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnpzadwxx.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(5l)\n\
    \        divisors.add(10l)\n        divisors.add(15l)\n        divisors.add(20l)\n\
    \        divisors.add(25l)\n        divisors.add(30l)\n        divisors.add(35l)\n\
    \        divisors.add(40l)\n        divisors.add(45l)\n        divisors.add(50l)\n\
    \        divisors.add(55l)\n        divisors.add(60l)\n        divisors.add(65l)\n\
    \        divisors.add(70l)\n        divisors.add(75l)\n        divisors.add(80l)\n\
    \        divisors.add(85l)\n        divisors.add(90l)\n        divisors.add(95l)\n\
    \        divisors.add(100l)\n        divisors.add(105l)\n        divisors.add(110l)\n\
    \        divisors.add(115l)\n        divisors.add(120l)\n        divisors.add(125l)\n\
    \        divisors.add(130l)\n        divisors.add(135l)\n        divisors.add(140l)\n\
    \        divisors.add(145l)\n        divisors.add(150l)\n        divisors.add(155l)\n\
    \        divisors.add(160l)\n        divisors.add(165l)\n        divisors.add(170l)\n\
    \        divisors.add(175l)\n        divisors.add(180l)\n        divisors.add(185l)\n\
    \        divisors.add(190l)\n        divisors.add(195l)\n        divisors.add(200l)\n\
    \        divisors.add(205l)\n        divisors.add(210l)\n        divisors.add(215l)\n\
    \        divisors.add(220l)\n        divisors.add(225l)\n        divisors.add(230l)\n\
    \        divisors.add(235l)\n        divisors.add(240l)\n        divisors.add(245l)\n\
    \        divisors.add(250l)\n        divisors.add(255l)\n        divisors.add(260l)\n\
    \        divisors.add(265l)\n        divisors.add(270l)\n        divisors.add(275l)\n\
    \        divisors.add(280l)\n        divisors.add(285l)\n        divisors.add(290l)\n\
    \        divisors.add(295l)\n        divisors.add(300l)\n        divisors.add(305l)\n\
    \        divisors.add(310l)\n        divisors.add(315l)\n        divisors.add(320l)\n\
    \        divisors.add(325l)\n        divisors.add(330l)\n        divisors.add(335l)\n\
    \        divisors.add(340l)\n        divisors.add(345l)\n        divisors.add(350l)\n\
    \        divisors.add(355l)\n        divisors.add(360l)\n        divisors.add(365l)\n\
    \        divisors.add(370l)\n        divisors.add(375l)\n        divisors.add(380l)\n\
    \        divisors.add(385l)\n        divisors.add(390l)\n        divisors.add(395l)\n\
    \        divisors.add(400l)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx6yv1o7b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010416
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(4l)\n\
    \        divisors.add(5l)\n        divisors.add(6l)\n        divisors.add(7l)\n\
    \        divisors.add(8l)\n        divisors.add(9l)\n        divisors.add(10l)\n\
    \        divisors.add(11l)\n        divisors.add(12l)\n        divisors.add(13l)\n\
    \        divisors.add(14l)\n        divisors.add(15l)\n        divisors.add(16l)\n\
    \        divisors.add(17l)\n        divisors.add(18l)\n        divisors.add(19l)\n\
    \        divisors.add(20l)\n        divisors.add(21l)\n        divisors.add(22l)\n\
    \        divisors.add(23l)\n        divisors.add(24l)\n        divisors.add(25l)\n\
    \        divisors.add(26l)\n        divisors.add(27l)\n        divisors.add(28l)\n\
    \        divisors.add(29l)\n        divisors.add(30l)\n        divisors.add(31l)\n\
    \        divisors.add(32l)\n        divisors.add(33l)\n        divisors.add(34l)\n\
    \        divisors.add(35l)\n        divisors.add(36l)\n        divisors.add(37l)\n\
    \        divisors.add(38l)\n        divisors.add(39l)\n        divisors.add(40l)\n\
    \        divisors.add(41l)\n        divisors.add(42l)\n        divisors.add(43l)\n\
    \        divisors.add(44l)\n        divisors.add(45l)\n        divisors.add(46l)\n\
    \        divisors.add(47l)\n        divisors.add(48l)\n        divisors.add(49l)\n\
    \        divisors.add(50l)\n        divisors.add(51l)\n        divisors.add(52l)\n\
    \        divisors.add(53l)\n        divisors.add(54l)\n        divisors.add(55l)\n\
    \        divisors.add(56l)\n        divisors.add(57l)\n        divisors.add(58l)\n\
    \        divisors.add(59l)\n        divisors.add(60l)\n        divisors.add(61l)\n\
    \        divisors.add(62l)\n        divisors.add(63l)\n        divisors.add(64l)\n\
    \        divisors.add(65l)\n        divisors.add(66l)\n        divisors.add(67l)\n\
    \        divisors.add(68l)\n        divisors.add(69l)\n        divisors.add(70l)\n\
    \        divisors.add(71l)\n        divisors.add(72l)\n        divisors.add(73l)\n\
    \        divisors.add(74l)\n        divisors.add(75l)\n        divisors.add(76l)\n\
    \        divisors.add(77l)\n        divisors.add(78l)\n        divisors.add(79l)\n\
    \        divisors.add(80l)\n        divisors.add(81l)\n        divisors.add(82l)\n\
    \        divisors.add(83l)\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv5bjulwe.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv5bjulwe.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010396
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = math.max(n / 2, 1)\n        val\
    \ divisors = mutable.Set[Long]()\n        for (d <- 2 until maxDivisor) {\n  \
    \          if (n % d == 0) {\n                divisors += d\n            }\n \
    \       }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzblh3v83.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzblh3v83.scala:10:26 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m until maxDivisor)\
    \ {\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                          Found:    (maxDivisor : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors\
    \ += 5l\n        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n\
    \        divisors += 9l\n        divisors += 10l\n        divisors += 11l\n  \
    \      divisors += 12l\n        divisors += 13l\n        divisors += 14l\n   \
    \     divisors += 15l\n        divisors += 16l\n        divisors += 17l\n    \
    \    divisors += 18l\n        divisors += 19l\n        divisors += 20l\n     \
    \   divisors += 21l\n        divisors += 22l\n        divisors += 23l\n      \
    \  divisors += 24l\n        divisors += 25l\n        divisors += 26l\n       \
    \ divisors += 27l\n        divisors += 28l\n        divisors += 29l\n        divisors\
    \ += 30l\n        divisors += 31l\n        divisors += 32l\n        divisors +=\
    \ 33l\n        divisors += 34l\n        divisors += 35l\n        divisors += 36l\n\
    \        divisors += 37l\n        divisors += 38l\n        divisors += 39l\n \
    \       divisors += 40l\n        divisors += 41l\n        divisors += 42l\n  \
    \      divisors += 43l\n        divisors += 44l\n        divisors += 45l\n   \
    \     divisors += 46l\n        divisors += 47l\n        divisors += 48l\n    \
    \    divisors += 49l\n        divisors += 50l\n        divisors += 51l\n     \
    \   divisors += 52l\n        divisors += 53l\n        divisors += 54l\n      \
    \  divisors += 55l\n        divisors += 56l\n        divisors += 57l\n       \
    \ divisors += 58l\n        divisors += 59l\n        divisors += 60l\n        divisors\
    \ += 61l\n        divisors += 62l\n        divisors += 63l\n        divisors +=\
    \ 64l\n        divisors += 65l\n        divisors += 66l\n        divisors += 67l\n\
    \        divisors += 68l\n        divisors += 69l\n        divisors += 70l\n \
    \       divisors += 71l\n        divisors += 72l\n        divisors += 73l\n  \
    \      divisors += 74l\n        divisors += 75l\n        divisors += 76l\n   \
    \     divisors += 77l\n        divisors += 78l\n        divisors += 79l\n    \
    \    divisors += 80l\n        divisors += 81l\n        divisors += 82l\n     \
    \   divisors += 83l\n        divisors += 84l\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnlmg6gal.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010417
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcj7lx9k3.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 2 to n) divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0y219bkc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0y219bkc.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ largestDivisor = mutable.Set[Long]()\n        divisors += 2l\n        divisors\
    \ += 3l\n        divisors += 5l\n        divisors += 7l\n        divisors += 11l\n\
    \        divisors += 13l\n        divisors += 17l\n        divisors += 19l\n \
    \       divisors += 23l\n        divisors += 29l\n        divisors += 31l\n  \
    \      divisors += 37l\n        divisors += 41l\n        divisors += 43l\n   \
    \     divisors += 47l\n        divisors += 53l\n        divisors += 59l\n    \
    \    divisors += 61l\n        divisors += 67l\n        divisors += 71l\n     \
    \   divisors += 73l\n        divisors += 79l\n        divisors += 83l\n      \
    \  divisors += 89l\n        divisors += 97l\n        divisors += 101l\n      \
    \  divisors += 103l\n        divisors += 107l\n        divisors += 109l\n    \
    \    divisors += 113l\n        divisors += 127l\n        divisors += 131l\n  \
    \      divisors += 137l\n        divisors += 139l\n        divisors += 149l\n\
    \        divisors += 151l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp02sk_3mz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp02sk_3mz.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n2\
    \ errors found\n"
  stdout: ''
  timestamp: 1660010418
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpzadwxx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnpzadwxx.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 289l\n\
    \        divisors += 293l\n        divisors += 299l\n        divisors += 303l\n\
    \        divisors += 307l\n        divisors += 311l\n        divisors += 317l\n\
    \        divisors += 321l\n        divisors += 327l\n        divisors += 331l\n\
    \        divisors += 337l\n        divisors += 341l\n        divisors += 347l\n\
    \        divisors += 351l\n        divisors += 357l\n        divisors += 363l\n\
    \        divisors += 369l\n        divisors += 371l\n        divisors += 377l\n\
    \        divisors += 381\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpampl5soq.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010418
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptg2n_an6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptg2n_an6.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 257\n        divisors += 263\n        divisors += 269\n  \
    \      divisors += 271\n        divisors += 277\n        divisors += 281\n   \
    \     divisors += 283\n        divisors += 293\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 323\n        divisors += 329\n        divisors += 331\n      \
    \  divisors += 337\n        divisors += 343\n        divisors += 347\n       \
    \ divisors += 353\n        divisors += 359\n        divisors += 363\n        divisors\
    \ += 369\n        divisors += 373\n        divisors += 379\n        divisors +=\
    \ 383\n        divisors += 389\n        divisors += 395\n        divisors += 401\n\
    \        divisors += 407\n        divisors += 411\n        divisors += 413\n \
    \       divisors += 417\n        divisors += 423\n        divisors += 429\n  \
    \      divisors += 433\n        divisors += 439\n        divisors += 443\n   \
    \     divisors += 449\n        divisors += 457\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6lhqm01f.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010419
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors\
    \ += 5l\n        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n\
    \        divisors += 9l\n        divisors += 10l\n        divisors += 11l\n  \
    \      divisors += 12l\n        divisors += 13l\n        divisors += 14l\n   \
    \     divisors += 15l\n        divisors += 16l\n        divisors += 17l\n    \
    \    divisors += 18l\n        divisors += 19l\n        divisors += 20l\n     \
    \   divisors += 21l\n        divisors += 22l\n        divisors += 23l\n      \
    \  divisors += 24l\n        divisors += 25l\n        divisors += 26l\n       \
    \ divisors += 27l\n        divisors += 28l\n        divisors += 29l\n        divisors\
    \ += 30l\n        divisors += 31l\n        divisors += 32l\n        divisors +=\
    \ 33l\n        divisors += 34l\n        divisors += 35l\n        divisors += 36l\n\
    \        divisors += 37l\n        divisors += 38l\n        divisors += 39l\n \
    \       divisors += 40l\n        divisors += 41l\n        divisors += 42l\n  \
    \      divisors += 43l\n        divisors += 44l\n        divisors += 45l\n   \
    \     divisors += 46l\n        divisors += 47l\n        divisors += 48l\n    \
    \    divisors += 49l\n        divisors += 50l\n        divisors += 51l\n     \
    \   divisors += 52l\n        divisors += 53l\n        divisors += 54l\n      \
    \  divisors += 55l\n        divisors += 56l\n        divisors += 57l\n       \
    \ divisors += 58l\n        divisors += 59l\n        divisors += 60l\n        divisors\
    \ += 61l\n        divisors += 62l\n        divisors += 63l\n        divisors +=\
    \ 64l\n        divisors += 65l\n        divisors += 66l\n        divisors += 67l\n\
    \        divisors += 68l\n        divisors += 69l\n        divisors += 70l\n \
    \       divisors += 71l\n        divisors += 72l\n        divisors += 73l\n  \
    \      divisors += 74l\n        divisors += 75l\n        divisors += 76l\n   \
    \     divisors += 77l\n        divisors += 78l\n        divisors += 79l\n    \
    \    divisors += 80l\n        divisors += 81l\n        divisors += 82l\n     \
    \   divisors += 83l\n        divisors += 84l\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnlmg6gal.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010417
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = math.max(n / 2, 1)\n        val\
    \ divisors = mutable.ArrayBuffer.empty[Long]\n        for (d <- 2 until maxDivisor)\
    \ {\n            if (n % d == 0) {\n                divisors += d\n          \
    \  }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4ahemwkd.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp4ahemwkd.scala:10:26 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m until maxDivisor)\
    \ {\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                          Found:    (maxDivisor : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010422
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 343l\n        divisors += 347l\n\
    \        divisors += 351l\n        divisors += 353l\n        divisors += 359l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpf0g7nw5m.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf0g7nw5m.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010403
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for (i <- 1 to n) {\n            if (n % i == 0)\
    \ {\n                divisors += i\n                if (divisors.size > maxDivisor)\
    \ {\n                    maxDivisor = divisors.size\n                }\n     \
    \       }\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpprzxw21y.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpprzxw21y.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010422
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 253\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 341\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 423\n        divisors += 429\n        divisors += 433\n\
    \        divisors += 439\n        divisors += 44\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwh7nmmif.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(101)\n\
    \        divisors.add(103)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(113)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(143)\n\
    \        divisors.add(147)\n        divisors.add(151)\n        divisors.add(157)\n\
    \        divisors.add(163)\n        divisors.add(167)\n        divisors.add(173)\n\
    \        divisors.add(179)\n        divisors.add(181)\n        divisors.add(191)\n\
    \        divisors.add(193)\n        divisors.add(197)\n        divisors.add(199)\n\
    \        divisors.add(211)\n        divisors.add(223)\n        divisors.add(227)\n\
    \        divisors.add(229)\n        divisors.add(233)\n        divisors.add(239)\n\
    \        divisors.add(241)\n        divisors.add(243)\n        divisors.add(247)\n\
    \        divisors.add(251)\n        divisors.add(253)\n        divisors.add(257)\n\
    \        divisors.add(263)\n        divisors.add(269)\n        divisors.add(271)\n\
    \        divisors.add(277)\n        divisors.add(281)\n        divisors.add(283)\n\
    \        divisors.add(293)\n        divisors.add(307)\n        divisors.add(311)\n\
    \        divisors.add(313)\n        divisors.add(317)\n        divisors.add(331)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \        divisors.add(397)\n        divisors.add(401)\n        divisors.add(40\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4y3n68bn.scala:94:4 ----------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4y3n68bn.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010420
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_cc0ra_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpz_cc0ra_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 135l\n\
    \        divisors += 137l\n        divisors += 139l\n        divisors += 141l\n\
    \        divisors += 143l\n        divisors += 147l\n        divisors += 149l\n\
    \        divisors += 151l\n        divisors += 153l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 231l\n\
    \        divisors += 233l\n        divisors += 237l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 25\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgolidypy.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorValue\
    \ = 0\n        var currentDivisor = 0\n        var currentDivisorValue = 0\n \
    \       var currentDivisorValue2 = 0\n        var currentDivisorValue3 = 0\n \
    \       var currentDivisorValue4 = 0\n        var currentDivisorValue5 = 0\n \
    \       var currentDivisorValue6 = 0\n        var currentDivisorValue7 = 0\n \
    \       var currentDivisorValue8 = 0\n        var currentDivisorValue9 = 0\n \
    \       var currentDivisorValue10 = 0\n        var currentDivisorValue11 = 0\n\
    \        var currentDivisorValue12 = 0\n        var currentDivisorValue13 = 0\n\
    \        var currentDivisorValue14 = 0\n        var currentDivisorValue15 = 0\n\
    \        var currentDivisorValue16 = 0\n        var currentDivisorValue17 = 0\n\
    \        var currentDivisorValue18 = 0\n        var currentDivisorValue19 = 0\n\
    \        var currentDivisorValue20 = 0\n        var currentDivisorValue21 = 0\n\
    \        var currentDivisorValue22 = 0\n        var currentDivisorValue23 = 0\n\
    \        var currentDivisorValue24 = 0\n        var currentDivisorValue25 = 0\n\
    \        var currentDivisorValue26 = 0\n        var currentDivisorValue27 = 0\n\
    \        var currentDivisorValue28 = 0\n        var currentDivisorValue29 = 0\n\
    \        var currentDivisorValue30 = 0\n        var currentDivisorValue31 = 0\n\
    \        var currentDivisorValue32 = 0\n        var currentDivisorValue33 = 0\n\
    \        var currentDivisorValue34 = 0\n        var currentDivisorValue35 = 0\n\
    \        var currentDivisorValue36 = 0\n        var currentDivisorValue37 = 0\n\
    \        var currentDivisorValue38 = 0\n        var currentDivisorValue39 = 0\n\
    \        var currentDivisorValue40 = 0\n        var currentDivisorValue41 = 0\n\
    \        var currentDivisorValue42 = 0\n        var currentDivisorValue43 = 0\n\
    \        var currentDivisorValue44 = 0\n        var currentDivisorValue45 = 0\n\
    \        var currentDivisorValue46 = 0\n        var currentDivisorValue47 = 0\n\
    \        var currentDivisorValue48 = 0\n        var currentDivisorValue49 = 0\n\
    \        var currentDivisorValue50 = 0\n        var currentDivisorValue51 = 0\n\
    \        var currentDivisorValue52 = 0\n        var currentDivisorValue53 = 0\n\
    \        var currentDivisorValue54 = 0\n        var currentDivisorValue55 = 0\n\
    \        var currentDivisorValue56 = 0\n        var currentDivisorValue57 = 0\n\
    \        var currentDivisorValue58 = 0\n        var currentDivisorValue59 = 0\n\
    \        var currentDivisorValue60 = 0\n        var currentDivisorValue61 = 0\n\
    \        var currentDivisorValue62\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaaezui1w.scala:73:4 ----------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpaaezui1w.scala:73:5 ---------------------\e[0m\e[0m\n\e[31m73 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010424
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_cc0ra_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpz_cc0ra_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp57y6bg6p.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.HashSet[Long]()\n\
    \        divisors.add(maxDivisor)\n        while (divisors.nonEmpty) {\n     \
    \       val divisor = divisors.last\n            if (n % divisor == 0) {\n   \
    \             divisors += divisor\n            } else {\n                divisors.remove(divisor)\n\
    \            }\n        }\n        divisors.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdzfokw5a.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010421
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmce8ujug.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmce8ujug.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010404
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            val div = i / 2\n            divisors += div\n    \
    \        if(div % 2 == 0){\n                divisors += div + 1\n            }\n\
    \        }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx5z6rvlk.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpx5z6rvlk.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010425
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpzadwxx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnpzadwxx.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.Set[Long]()\n\
    \        while(maxDivisor != 1) {\n            divisors += maxDivisor\n      \
    \      maxDivisor = maxDivisor / 2\n        }\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa9cfb9zb.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpa9cfb9zb.scala:12:23 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            maxDivisor = maxDivisor / \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010406
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ largestDivisor = mutable.Set[Long]()\n        for (i <- 1 to n) {\n        \
    \    if (n % i == 0) {\n                divisors += i\n                if (divisors.size\
    \ > largestDivisor.size) {\n                    largestDivisor += divisors.toSet\n\
    \                }\n            }\n        }\n        largestDivisor.max\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkjsw1e8x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkjsw1e8x.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkjsw1e8x.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010425
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.min\n\
    \            divisors -= d\n            if(d % 2 == 0) return d\n            divisors.add(d)\n\
    \        }\n        return n\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx86ry12i.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010423
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 205l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 215l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpv88xhowe.scala:89:19 ---------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv88xhowe.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010423
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2vuzgqn.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpc2vuzgqn.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        for(i <- 1 to n){\n            val divisor = i\n            while(divisor\
    \ > 1){\n                if(divisors.contains(divisor)){\n                   \
    \ divisors.remove(divisor)\n                }\n                divisor = divisor\
    \ / 2\n            }\n            divisors += divisor\n            if(divisor\
    \ > maxDivisor){\n                maxDivisor = divisor\n                maxDivisorIndex\
    \ += i\n            }\n        }\n        if(maxDivisor.size == 1){\n        \
    \    return maxDivisor\n        }\n        val maxDivisorIndex = maxDivisorIndex.toList\n\
    \        val maxDivisorIndex = maxDivisorIndex.sortWith(_ > _)\n        val maxDivisorIndex\
    \ = maxDivisorIndex.last\n        val maxDivisor = maxDivisor(maxDivisorIndex)\n\
    \        val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisorIndex = maxDivisorIndex - 1\n \
    \       val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisorIndex = maxDivisorIndex - 1\n \
    \       val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisorIndex = maxDivisorIndex - 1\n \
    \       val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisorIndex = maxDivisorIndex - 1\n \
    \       val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisorIndex = maxDivisorIndex - 1\n \
    \       val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisorIndex = maxDivisorIndex - 1\n \
    \       val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisorIndex = maxDivisorIndex - 1\n \
    \       val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisorIndex = maxDivisorIndex - 1\n \
    \       val maxDivisorIndex = maxDivisorIndex - 1\n        val maxDivisorIndex\
    \ = maxDivisorIndex - 1\n        val maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpjydmg2uf.scala:59:4 ----------------------------\e\
    [0m\e[0m\n\e[31m59 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjydmg2uf.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxDivisorIndex\e[0m = maxDivisorIndex.toList\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmaxDivisorIndex\
    \ is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjydmg2uf.scala:29:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxDivisorIndex\e[0m = maxDivisorIndex.sortWith(_ > _)\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjydmg2uf.scala:30:12 ---------------------------\e[0m\e[0m\n\e\
    [31m30 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = maxDivisorIndex.last\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpjydmg2uf.scala:31:12 ---------------------------\e[0m\e[0m\n\e\
    [31m31 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = maxDivisor(maxDivisorIndex)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mmaxDivisor is already defined as \e[33mvalue\e[0m \e[35mmaxDivisor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplev"
  stdout: ''
  timestamp: 1660010426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 257\n        divisors += 263\n        divisors += 269\n        divisors +=\
    \ 271\n        divisors += 277\n        divisors += 281\n        divisors += 283\n\
    \        divisors += 293\n        divisors += 307\n        divisors += 311\n \
    \       divisors += 313\n        divisors += 317\n        divisors += 323\n  \
    \      divisors += 329\n        divisors += 331\n        divisors += 337\n   \
    \     divisors += 341\n        divisors += 347\n        divisors += 351\n    \
    \    divisors += 359\n        divisors += 363\n        divisors += 369\n     \
    \   divisors += 373\n        divisors += 379\n        divisors += 383\n      \
    \  divisors += 389\n        divisors += 397\n        divisors += 401\n       \
    \ divisors += 407\n        divisors += 411\n        divisors += 413\n        divisors\
    \ += 417\n        divisors += 419\n        divisors += 421\n        divisors +=\
    \ 423\n        divisors += 427\n        divisors += 429\n        divisors += 431\n\
    \        divisors += 433\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8oga3lcp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010424
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcj7lx9k3.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkl93lxd_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkl93lxd_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for (i <- 1 to n) {\n            if (n % i == 0)\
    \ {\n                divisors += i\n                if (divisors.size > maxDivisor)\
    \ {\n                    maxDivisor = divisors.size \n                }\n    \
    \        }\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprj22l7vk.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprj22l7vk.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 135l\n\
    \        divisors += 137l\n        divisors += 139l\n        divisors += 141l\n\
    \        divisors += 143l\n        divisors += 147l\n        divisors += 149l\n\
    \        divisors += 151l\n        divisors += 153l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 171l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 183l\n        divisors += 187l\n\
    \        divisors += 189l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 221l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 231l\n\
    \        divisors += 233l\n        divisors += 235l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm3xsbtik.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpm3xsbtik.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010424
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8d2v98z_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010424
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        var maxDivisorDivisor\
    \ = maxDivisor\n        while (maxDivisorDivisor > 1) {\n            if (n % maxDivisorDivisor\
    \ == 0) {\n                maxDivisor = maxDivisorDivisor\n            } else\
    \ {\n                maxDivisorDivisor = maxDivisor / 2\n            }\n     \
    \   }\n        maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpcwptzv59.scala:12:27 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                maxDivisor = maxDivisorDivisor\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010424
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) divisors += i\n        divisors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn208g5xn.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpn208g5xn.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010426
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 413\n        divisors += 421\n        divisors +=\
    \ 427\n        divisors += 439\n        divisors += 443\n        divisors += 449\n\
    \        divisors += 457\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpdm6pluzx.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpdm6pluzx.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010425
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.Set[Long]()\n\
    \        while(maxDivisor != 0) {\n            divisors.add(maxDivisor)\n    \
    \        maxDivisor = maxDivisor / 2\n        }\n        divisors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpejdxula2.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpejdxula2.scala:12:23 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            maxDivisor = maxDivisor / \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010425
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 297l\n        divisors += 301l\n\
    \        divisors += 303l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 321l\n\
    \        divisors += 323l\n        divisors += 327l\n        divisors += 331l\n\
    \        divisors += 333l\n        divisors += 337l\n        divisors += 341l\n\
    \        \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphcnnqpux.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpby7p_hmf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpby7p_hmf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010427
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ largest = mutable.Set[Long]()\n        for(i <- 1 to n){\n            val remainder\
    \ = n % i\n            if(remainder == 0){\n                divisors += i\n  \
    \              largest += i\n            }\n        }\n        largest.max\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_cctx2g.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv_cctx2g.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mlargest\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpv_cctx2g.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010427
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var maxDivisorFactorIndex2\
    \ = 0\n        var maxDivisorFactorIndex3 = 0\n        var maxDivisorFactorIndex4\
    \ = 0\n        var maxDivisorFactorIndex5 = 0\n        var maxDivisorFactorIndex6\
    \ = 0\n        var maxDivisorFactorIndex7 = 0\n        var maxDivisorFactorIndex8\
    \ = 0\n        var maxDivisorFactorIndex9 = 0\n        var maxDivisorFactorIndex10\
    \ = 0\n        var maxDivisorFactorIndex11 = 0\n        var maxDivisorFactorIndex12\
    \ = 0\n        var maxDivisorFactorIndex13 = 0\n        var maxDivisorFactorIndex14\
    \ = 0\n        var maxDivisorFactorIndex15 = 0\n        var maxDivisorFactorIndex16\
    \ = 0\n        var maxDivisorFactorIndex17 = 0\n        var maxDivisorFactorIndex18\
    \ = 0\n        var maxDivisorFactorIndex19 = 0\n        var maxDivisorFactorIndex20\
    \ = 0\n        var maxDivisorFactorIndex21 = 0\n        var maxDivisorFactorIndex22\
    \ = 0\n        var maxDivisorFactorIndex23 = 0\n        var maxDivisorFactorIndex24\
    \ = 0\n        var maxDivisorFactorIndex25 = 0\n        var maxDivisorFactorIndex26\
    \ = 0\n        var maxDivisorFactorIndex27 = 0\n        var maxDivisorFactorIndex28\
    \ = 0\n        var maxDivisorFactorIndex29 = 0\n        var maxDivisorFactorIndex30\
    \ = 0\n        var maxDivisorFactorIndex31 = 0\n        var maxDivisorFactorIndex32\
    \ = 0\n        var maxDivisorFactorIndex33 = 0\n        var maxDivisorFactorIndex34\
    \ = 0\n        var maxDivisorFactorIndex35 = 0\n        var maxDivisorFactorIndex36\
    \ = 0\n        var maxDivisorFactorIndex37 = 0\n        var maxDivisorFactorIndex38\
    \ = 0\n        var maxDivisorFactorIndex39 = 0\n        var maxDivisorFactorIndex40\
    \ = 0\n        var maxDivisorFactorIndex41 = 0\n        var maxDivisorFactorIndex42\
    \ = 0\n        var maxDivisorFactorIndex43 = 0\n        var maxDivisorFactorIndex44\
    \ = 0\n        var maxDivisorFactorIndex45 = 0\n        var maxDivisorFactorIndex46\
    \ = 0\n        var maxDivisorFactorIndex47 = 0\n        var maxDivisorFactorIndex48\
    \ = 0\n        var maxDivisorFactorIndex49 = 0\n        var maxDivisorFactorIndex50\
    \ = 0\n        var maxDivisorFactorIndex51 = 0\n        var maxDivisorFactorIndex52\
    \ = 0\n        var maxDivisorFactorIndex53 = 0\n        var maxDivisorFactorIndex54\
    \ = 0\n        var maxDivisorFactorIndex55 = 0\n        var maxDivisorFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmafmjtbb.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpmafmjtbb.scala:66:5 ---------------------\e[0m\e[0m\n\e[31m66 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010393
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpby7p_hmf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpby7p_hmf.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010427
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (i <- 2 to n) divisors += i\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1x06m11e.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1x06m11e.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010427

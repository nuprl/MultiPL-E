name: HumanEval_56_correct_bracketing
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // brackets is a string of \"<\" and \">\".\n    // return True if every opening\
  \ bracket has a corresponding closing bracket.\n    // >>> correctBracketing((\"\
  <\"))\n    // (false)\n    // >>> correctBracketing((\"<>\"))\n    // (true)\n \
  \   // >>> correctBracketing((\"<<><>>\"))\n    // (true)\n    // >>> correctBracketing((\"\
  ><<>\"))\n    // (false)\n    def correctBracketing(brackets : String) : Boolean\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(correctBracketing((\"\
  <>\")) == (true));\n    assert(correctBracketing((\"<<><>>\")) == (true));\n   \
  \ assert(correctBracketing((\"<><><<><>><>\")) == (true));\n    assert(correctBracketing((\"\
  <><><<<><><>><>><<><><<>>>\")) == (true));\n    assert(correctBracketing((\"<<<><>>>>\"\
  )) == (false));\n    assert(correctBracketing((\"><<>\")) == (false));\n    assert(correctBracketing((\"\
  <\")) == (false));\n    assert(correctBracketing((\"<<<<\")) == (false));\n    assert(correctBracketing((\"\
  >\")) == (false));\n    assert(correctBracketing((\"<<>\")) == (false));\n    assert(correctBracketing((\"\
  <><><<><>><>><<>\")) == (false));\n    assert(correctBracketing((\"<><><<><>><>>><>\"\
  )) == (false));\n    }\n\n}\n"
completions: ["        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n\
    \        val closingBrackets = brackets.split(\">\").map(_.toInt)\n        val\
    \ openingBracketsCount = openingBrackets.foldLeft(0)(_ + _)\n        val closingBracketsCount\
    \ = closingBrackets.foldLeft(0)(_ + _)\n        openingBracketsCount == closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var closingBracketsCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex2\
    \ = 0\n        var closingBracketsCountArrayIndex2 = 0\n        var openingBracketsCountArrayIndex3\
    \ = 0\n        var closingBracketsCountArrayIndex3 = 0\n        var openingBracketsCountArrayIndex4\
    \ = 0\n        var closingBracketsCountArrayIndex4 = 0\n        var openingBracketsCountArrayIndex5\
    \ = 0\n        var closingBracketsCountArrayIndex5 = 0\n        var openingBracketsCountArrayIndex6\
    \ = 0\n        var closingBracketsCountArrayIndex6 = 0\n        var openingBracketsCountArrayIndex7\
    \ = 0\n        var closingBracketsCountArrayIndex7 = 0\n        var openingBracketsCountArrayIndex8\
    \ = 0\n        var closingBracketsCountArrayIndex8 = 0\n        var openingBracketsCountArrayIndex9\
    \ = 0\n        var closingBracketsCountArrayIndex9 = 0\n        var openingBracketsCountArrayIndex10\
    \ = 0\n        var closingBracketsCountArrayIndex10 = 0\n        var openingBracketsCountArrayIndex11\
    \ = 0\n        var closingBracketsCountArrayIndex11 = 0\n        var openingBracketsCountArrayIndex12\
    \ = 0\n        var closingBracketsCountArrayIndex12 = 0\n        var openingBracketsCountArrayIndex13\
    \ = 0\n        var closingBracketsCountArrayIndex13 = 0\n        var openingBracketsCountArrayIndex14\
    \ = 0\n        var closingBracketsCountArrayIndex14 = 0\n        var openingBracketsCountArrayIndex15\
    \ = 0\n        var closingBracketsCountArrayIndex15 = 0\n        var openingBracketsCountArrayIndex16\
    \ = 0\n        var closingBracketsCountArrayIndex16 = 0\n        var openingBracketsCountArrayIndex17\
    \ = 0\n        var closingBracketsCountArrayIndex17 = 0\n        var openingBracketsCountArrayIndex18\
    \ = 0\n        var closingBracketsCountArrayIndex18 = 0\n        var openingBracketsCountArrayIndex19\
    \ = 0\n        var closingBracketsCountArray", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(_ == '<')\n        val\
    \ closingBracketsCount = bracketsArray.count(_ == '>')\n        openingBracketsCount\
    \ != closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var currentChar = 0\n   \
    \     var currentCharValue = 0\n        var currentCharValue2 = 0\n        var\
    \ currentCharValue3 = 0\n        var currentCharValue4 = 0\n        var currentCharValue5\
    \ = 0\n        var currentCharValue6 = 0\n        var currentCharValue7 = 0\n\
    \        var currentCharValue8 = 0\n        var currentCharValue9 = 0\n      \
    \  var currentCharValue10 = 0\n        var currentCharValue11 = 0\n        var\
    \ currentCharValue12 = 0\n        var currentCharValue13 = 0\n        var currentCharValue14\
    \ = 0\n        var currentCharValue15 = 0\n        var currentCharValue16 = 0\n\
    \        var currentCharValue17 = 0\n        var currentCharValue18 = 0\n    \
    \    var currentCharValue19 = 0\n        var currentCharValue20 = 0\n        var\
    \ currentCharValue21 = 0\n        var currentCharValue22 = 0\n        var currentCharValue23\
    \ = 0\n        var currentCharValue24 = 0\n        var currentCharValue25 = 0\n\
    \        var currentCharValue26 = 0\n        var currentCharValue27 = 0\n    \
    \    var currentCharValue28 = 0\n        var currentCharValue29 = 0\n        var\
    \ currentCharValue30 = 0\n        var currentCharValue31 = 0\n        var currentCharValue32\
    \ = 0\n        var currentCharValue33 = 0\n        var currentCharValue34 = 0\n\
    \        var currentCharValue35 = 0\n        var currentCharValue36 = 0\n    \
    \    var currentCharValue37 = 0\n        var currentCharValue38 = 0\n        var\
    \ currentCharValue39 = 0\n        var currentCharValue40 = 0\n        var currentCharValue41\
    \ = 0\n        var currentCharValue42 = 0\n        var currentCharValue43 = 0\n\
    \        var currentCharValue44 = 0\n        var currentCharValue45 = 0\n    \
    \    var currentCharValue46 = 0\n        var currentCharValue47 = 0\n        var\
    \ currentCharValue48 = 0\n        var currentCharValue49 = 0\n        var currentCharValue50\
    \ = 0\n        var currentCharValue51 = 0\n        var currentCharValue52 = 0\n\
    \        var currentCharValue53 = 0\n        var currentCharValue54 = 0\n    \
    \    var currentCharValue55 = 0\n        var currentCharValue56 = 0\n        var\
    \ currentCharValue57 = 0\n        var currentCharValue58 = 0\n        var currentCharValue59\
    \ = 0\n        var currentCharValue60 = 0\n        var currentCharValue61 = 0\n\
    \        var currentCharValue62 = 0\n        var currentCharValue63 = 0\n    \
    \    var currentCharValue64 = 0\n        var currentCharValue65 = 0\n        var\
    \ currentCharValue66 = 0\n        var currentCharValue67 = 0", "        val bracketsArray\
    \ = brackets.toCharArray\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCountArray = Array.fill(bracketsArray.length)(0)\n\
    \        var closingBracketsCountArray = Array.fill(bracketsArray.length)(0)\n\
    \        for (i <- 0 until bracketsArray.length) {\n            if (bracketsArray(i)\
    \ == '<') {\n                openingBracketsCountArray(i) += 1\n            }\
    \ else if (bracketsArray(i) == '>') {\n                closingBracketsCountArray(i)\
    \ += 1\n            }\n        }\n        for (i <- 0 until bracketsArray.length)\
    \ {\n            if (openingBracketsCountArray(i) == closingBracketsCountArray(i))\
    \ {\n                openingBracketsCount += 1\n            }\n        }\n   \
    \     return openingBracketsCount == bracketsArray.length", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsArray = bracketsArray.filter(_\
    \ == '<')\n        val closingBracketsArray = bracketsArray.filter(_ == '>')\n\
    \        openingBracketsArray.forall(closingBracketsArray.contains)", "      \
    \  val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.count(_\
    \ > 0)\n        val closingBracketsCount = closingBrackets.count(_ > 0)\n    \
    \    openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(x => closingBrackets.contains(x))", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCount2 = 0\n        var closingBracketsCount2 = 0\n\
    \        var openingBracketsCount3 = 0\n        var closingBracketsCount3 = 0\n\
    \        var openingBracketsCount4 = 0\n        var closingBracketsCount4 = 0\n\
    \        var openingBracketsCount5 = 0\n        var closingBracketsCount5 = 0\n\
    \        var openingBracketsCount6 = 0\n        var closingBracketsCount6 = 0\n\
    \        var openingBracketsCount7 = 0\n        var closingBracketsCount7 = 0\n\
    \        var openingBracketsCount8 = 0\n        var closingBracketsCount8 = 0\n\
    \        var openingBracketsCount9 = 0\n        var closingBracketsCount9 = 0\n\
    \        var openingBracketsCount10 = 0\n        var closingBracketsCount10 =\
    \ 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.count(_\
    \ > 0)\n        val closingBracketsCount = closingBrackets.count(_ > 0)\n    \
    \    openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\
    \ // O(n)\n        val closingBracketsCount = closingBrackets.toSet.size // O(n)\n\
    \        openingBracketsCount == closingBracketsCount // O(1)", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsArray = Array(\"<\", \">\"\
    , \"(\", \")\")\n        val closingBracketsArray = Array(\"<\", \">\", \">\"\
    , \"(\", \")\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = Array.fill(openingBracketsArrayLength)(0)\n\
    \        val closingBracketsArray = Array.fill(closingBracketsArrayLength)(0)\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var ", "     \
    \   val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n        val\
    \ closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array.fill(\n   \
    \         bracketsArrayLength\n        ){\n            false\n        }\n    \
    \    val closingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayIterator = openingBracketsArray.iterator\n  \
    \      val closingBracketsArrayIterator = closingBracketsArray.iterator\n    \
    \    val openingBracketsArrayIteratorLength = openingBracketsArrayIterator.length\n\
    \        val closingBracketsArrayIteratorLength = closingBracketsArrayIterator.length\n\
    \        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayIteratorIndex = 0\n        var closingBracketsArrayIteratorIndex\
    \ = 0\n        var openingBracketsArrayIndexLength = 0\n        var closingBracketsArrayIndexLength\
    \ = 0\n        var openingBracketsArrayIteratorIndexLength = 0\n        var closingBracketsArrayIteratorIndexLength\
    \ = 0\n        while (openingBracketsArrayIndex < openingBracketsArrayLength)\
    \ {\n            while (closingBracketsArrayIndex < closingBracketsArrayLength)\
    \ {\n                if (\n                    openingBracketsArrayArrayIndex\
    \ < openingBracketsArrayLength &&\n                    closingBracketsArrayArrayIndex\
    \ < closingBracketsArrayLength &&\n                    openingBracketsArrayArrayIndex\
    \ < openingBracketsArrayIteratorLength &&\n                    closingBracketsArrayArrayIndex\
    \ < closingBracketsArrayIteratorLength &&\n                    openingBracketsArrayArrayIndex\
    \ < openingBracketsArrayIteratorIteratorLength &&\n                    closingBracketsArrayArrayIndex\
    \ < closingBracketsArrayIteratorIteratorLength\n                ) {\n        \
    \            if (\n                        openingBracketsArrayArrayIndex == openingBracketsArrayIndex\
    \ &&\n                        closingBracketsArrayArrayIndex == closingBracketsArrayIndex\
    \ &&\n                        openingBracketsArrayArrayIndex == openingBracketsArrayIteratorIndex\
    \ &&\n                        closingBracketsArrayArrayIndex == closingBracketsArrayIteratorIndex\
    \ &&\n                        openingBracketsArrayArrayIndex == openingBracketsArrayIteratorIterator",
  "        val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n       \
    \ val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.forall(closingBrackets.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount != closingBracketsCount", "        val\
    \ openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\
    \ // O(n)\n        val closingBracketsCount = closingBrackets.toSet.size // O(n)\n\
    \        openingBracketsCount == closingBracketsCount // O(1)", "        val bracketsArray\
    \ = brackets.toCharArray\n        var openingBrackets = 0 // number of opening\
    \ brackets\n        var closingBrackets = 0 // number of closing brackets\n  \
    \      var openingBracketsArray = new Array[Char](bracketsArray.length)\n    \
    \    var closingBracketsArray = new Array[Char](bracketsArray.length)\n      \
    \  var i = 0\n        while (i < bracketsArray.length) {\n            openingBracketsArray(i)\
    \ = bracketsArray(i)\n            closingBracketsArray(i) = bracketsArray(i +\
    \ 1)\n            i += 1\n        }\n        var openingBracketsArrayIndex = 0\n\
    \        var closingBracketsArrayIndex = 0\n        var openingBracketsArrayIndex2\
    \ = 0\n        var closingBracketsArrayIndex2 = 0\n        var openingBracketsArrayIndex3\
    \ = 0\n        var closingBracketsArrayIndex3 = 0\n        var openingBracketsArrayIndex4\
    \ = 0\n        var closingBracketsArrayIndex4 = 0\n        var openingBracketsArrayIndex5\
    \ = 0\n        var closingBracketsArrayIndex5 = 0\n        var openingBracketsArrayIndex6\
    \ = 0\n        var closingBracketsArrayIndex6 = 0\n        var openingBracketsArrayIndex7\
    \ = 0\n        var closingBracketsArrayIndex7 = 0\n        var openingBracketsArrayIndex8\
    \ = 0\n        var closingBracketsArrayIndex8 = 0\n        var openingBracketsArrayIndex9\
    \ = 0\n        var closingBracketsArrayIndex9 = 0\n        var openingBracketsArrayIndex10\
    \ = 0\n        var closingBracketsArrayIndex10 = 0\n        var openingBracketsArrayIndex11\
    \ = 0\n        var closingBracketsArrayIndex11 = 0\n        var openingBracketsArrayIndex12\
    \ = 0\n        var closingBracketsArrayIndex12 = 0\n        var openingBracketsArrayIndex13\
    \ = 0\n        var closingBracketsArrayIndex13 = 0\n        var openingBracketsArrayIndex14\
    \ = 0\n        var closingBracketsArrayIndex14 = 0\n        var openingBracketsArrayIndex15\
    \ = 0\n        var closingBracketsArrayIndex15 = 0\n        var openingBracketsArrayIndex16\
    \ = 0\n        var closingBracketsArrayIndex16 = 0\n        var openingBracketsArrayIndex17\
    \ = 0\n        var closingBracketsArrayIndex17 = 0\n        var openingBracketsArrayIndex18\
    \ = 0\n        var closingBracketsArrayIndex18 = 0\n        var openingBracketsArrayIndex19\
    \ = 0\n        var closingBracketsArray", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBrackets = mutable.HashSet[Char]()\n        val closingBrackets\
    \ = mutable.HashSet[Char]()\n        val openingBracketsArray = mutable.ArrayBuffer.empty[Char]\n\
    \        val closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n        var\
    \ openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n        var\
    \ currentOpeningBracketsIndex = 0\n        var currentClosingBracketsIndex = 0\n\
    \        for(i <- 0 until bracketsArray.length){\n            if(bracketsArray(i)\
    \ == '<'){\n                openingBracketsIndex += 1\n                openingBracketsArray\
    \ += bracketsArray(i)\n            }\n            if(bracketsArray(i) == '>'){\n\
    \                closingBracketsIndex += 1\n                closingBracketsArray\
    \ += bracketsArray(i)\n            }\n            if(bracketsArray(i) == '<' &&\
    \ closingBracketsIndex > 0){\n                openingBracketsIndex += 1\n    \
    \            openingBracketsArray += bracketsArray(i)\n                closingBracketsIndex\
    \ -= 1\n                closingBracketsArray += bracketsArray(i)\n           \
    \ }\n            if(bracketsArray(i) == '>' && openingBracketsIndex > 0){\n  \
    \              closingBracketsIndex += 1\n                closingBracketsArray\
    \ += bracketsArray(i)\n                openingBracketsIndex -= 1\n           \
    \     openingBracketsArray += bracketsArray(i)\n            }\n        }\n   \
    \     if(openingBracketsIndex == closingBracketsIndex){\n            false\n \
    \       }else{\n            openingBrackets.subsetOf(closingBrackets)\n      \
    \  }", "        val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n\
    \        val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n     \
    \   openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets =\
    \ 0\n        var closingBrackets = 0\n        var openingBracketsArray = new Array[Char](bracketsArray.length)\n\
    \        var closingBracketsArray = new Array[Char](bracketsArray.length)\n  \
    \      var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n  \
    \      for(i <- 0 until bracketsArray.length){\n            openingBracketsArray(i)\
    \ = bracketsArray(i)\n            closingBracketsArray(i) = bracketsArray(i)\n\
    \        }\n        while(openingBracketsIndex < openingBracketsArray.length){\n\
    \            openingBracketsIndex += 1\n            openingBrackets += 1\n   \
    \         while(openingBracketsIndex < openingBracketsArray.length){\n       \
    \         closingBracketsIndex += 1\n                closingBrackets += 1\n  \
    \              while(closingBracketsIndex < closingBracketsArray.length){\n  \
    \                  if(openingBracketsArray(openingBracketsIndex) == closingBracketsArray(closingBracketsIndex)){\n\
    \                        openingBracketsIndex += 1\n                        closingBracketsIndex\
    \ += 1\n                    }else{\n                        if(openingBracketsArray(openingBracketsIndex)\
    \ == \">\"){\n                            openingBracketsIndex += 1\n        \
    \                }else{\n                            if(closingBracketsArray(closingBracketsIndex)\
    \ == \"<\"){\n                                closingBracketsIndex += 1\n    \
    \                        }else{\n                                if(openingBracketsArray(openingBracketsIndex)\
    \ == \">\"){\n                                    openingBracketsIndex += 1\n\
    \                                }else{\n                                    if(closingBracketsArray(closingBracketsIndex)\
    \ == \"<\"){\n                                        closingBracketsIndex +=\
    \ 1\n                                    }else{\n                            \
    \            if(openingBracketsArray(openingBracketsIndex) == \">\"){\n      \
    \                                      openingBracketsIndex += 1\n           \
    \                             }else{\n                                       \
    \     if(closingBracketsArray(closingBracketsIndex) == \"<\"){\n             \
    \                                   closingBracketsIndex += 1\n              \
    \                              }else{\n                                      \
    \          if(openingBracketsArray(openingBracketsIndex) == \">\"){\n        \
    \                                            openingBracketsIndex += 1\n     \
    \                                           }else{\n                         \
    \                           if(closingBracketsArray(closingBracketsIndex) == \"\
    <\"){\n                                                        closingBracketsIndex\
    \ += 1\n                                                    }else{\n         \
    \                                               if(openingBracketsArray(openingBracketsIndex)\
    \ == \">\"){\n", "        val openingBrackets = brackets.split(\"<\")\n      \
    \  val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsArray\
    \ = Array.empty[Int]\n        var closingBracketsArray = Array.empty[Int]\n  \
    \      var openingBracketsArrayLength = openingBracketsArray.length\n        var\
    \ closingBracketsArrayLength = closingBracketsArray.length\n        var openingBracketsArrayIndex\
    \ = 0\n        var closingBracketsArrayIndex = 0\n        var openingBracketsArrayElement\
    \ = 0\n        var closingBracketsArrayElement = 0\n        var openingBracketsArrayElementIndex\
    \ = 0\n        var closingBracketsArrayElementIndex = 0\n        var openingBracketsArrayElementValue\
    \ = 0\n        var closingBracketsArrayElementValue = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var closingBracketsArrayElementValueIndex = 0\n        var openingBracketsArrayElementValueIndex\
    \ = 0\n        var ", "        val bracketsArray = brackets.toCharArray\n    \
    \    val bracketsArrayLength = bracketsArray.length\n        val openingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        ){\n            false\n\
    \        }\n        val closingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        var i = 0\n        while (i\
    \ < bracketsArrayLength) {\n            val openingBracket = bracketsArray(i)\n\
    \            val closingBracket = bracketsArray(i + 1)\n            if (openingBracket\
    \ == '<') {\n                openingBracketsArray(i) = true\n                closingBracketsArray(i)\
    \ = false\n            } else if (openingBracket == '>') {\n                openingBracketsArray(i)\
    \ = false\n                closingBracketsArray(i) = true\n            } else\
    \ if (openingBracket == '(') {\n                openingBracketsArray(i) = true\n\
    \                closingBracketsArray(i) = false\n            } else if (openingBracket\
    \ == ')') {\n                openingBracketsArray(i) = false\n               \
    \ closingBracketsArray(i) = true\n            } else if (openingBracket == '[')\
    \ {\n                openingBracketsArray(i) = true\n                closingBracketsArray(i)\
    \ = false\n            } else if (openingBracket == ']') {\n                openingBracketsArray(i)\
    \ = false\n                closingBracketsArray(i) = true\n            } else\
    \ if (openingBracket == '{') {\n                openingBracketsArray(i) = true\n\
    \                closingBracketsArray(i) = false\n            } else if (openingBracket\
    \ == '}') {\n                openingBracketsArray(i) = false\n               \
    \ closingBracketsArray(i) = true\n            } else if (openingBracket == '\\\
    \\') {\n                openingBracketsArray(i) = true\n                closingBracketsArray(i)\
    \ = false\n            } else if (openingBracket == '\"') {\n                openingBracketsArray(i)\
    \ = true\n                closingBracketsArray(i) = false\n            } else\
    \ if (openingBracket == '\\'') {\n                openingBracketsArray(i) = true\n\
    \                closingBracketsArray(i) = false\n            } else if (openingBracket\
    \ == '\\`') {\n                openingBracketsArray(i) = true\n              \
    \  closingBracketsArray(i) = false\n            } else if (openingBracket == '`')\
    \ {\n                openingBracketsArray(i) = true\n                closingBracketsArray(i)\
    \ = false\n            } else {\n                openingBracketsArray(i) = ",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        var openingBrackets = 0\n        var closingBrackets\
    \ = 0\n        var currentChar = 0\n        var currentCharIsOpeningBracket =\
    \ false\n        var currentCharIsClosingBracket = false\n        var currentCharIsOpeningBracketOrClosingBracket\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBoth = false\n\
    \        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBoth = false\n\
    \        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBoth = false\n\
    \        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth\
    \ = false\n        var currentCharIsOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBothOr",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount != closingBracketsCount", "        val\
    \ openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.forall(closingBrackets.contains)",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets =\
    \ 0\n        var closingBrackets = 0\n        var openingBracketsArray = Array.empty[Char]\n\
    \        var closingBracketsArray = Array.empty[Char]\n        var currentChar\
    \ = bracketsArray(0)\n        var currentCharArray = Array.empty[Char]\n     \
    \   var currentCharArrayIndex = -1\n        var currentCharArrayIndexMax = bracketsArray.length\
    \ - 1\n        var currentCharArrayIndexMin = 0\n        var currentCharArrayIndexMaxMin\
    \ = 0\n        var currentCharArrayIndexMinMax = 0\n        var currentCharArrayIndexMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMin = 0\n        var currentCharArrayIndexMinMaxMaxMin\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArrayIndexMinMaxMinMaxMax = 0\n        var currentCharArrayIndexMinMaxMinMaxMax\
    \ = 0\n        var currentCharArray", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\")\n        val closingBracketsArray\
    \ = Array(\">\")\n        val openingBracketsSet = openingBracketsArray.toSet\n\
    \        val closingBracketsSet = closingBracketsArray.toSet\n        val openingBracketsArraySize\
    \ = openingBracketsArray.length\n        val closingBracketsArraySize = closingBracketsArray.length\n\
    \        val openingBracketsSetSize = openingBracketsSet.size\n        val closingBracketsSetSize\
    \ = closingBracketsSet.size\n        val openingBracketsArrayIterator = openingBracketsArray.iterator\n\
    \        val closingBracketsArrayIterator = closingBracketsArray.iterator\n  \
    \      val openingBracketsSetIterator = openingBracketsSet.iterator\n        val\
    \ closingBracketsSetIterator = closingBracketsSet.iterator\n        val openingBracketsArrayIteratorSize\
    \ = openingBracketsArrayIterator.size\n        val closingBracketsArrayIteratorSize\
    \ = closingBracketsArrayIterator.size\n        val openingBracketsSetIteratorSize\
    \ = openingBracketsSetIterator.size\n        val closingBracketsSetIteratorSize\
    \ = closingBracketsSetIterator.size\n        val openingBracketsArrayIteratorNext\
    \ = openingBracketsArrayIterator.next\n        val closingBracketsArrayIteratorNext\
    \ = closingBracketsArrayIterator.next\n        val openingBracketsSetIteratorNext\
    \ = openingBracketsSetIterator.next\n        val closingBracketsSetIteratorNext\
    \ = closingBracketsSetIterator.next\n        val openingBracketsArrayIteratorHasNext\
    \ = openingBracketsArrayIterator.hasNext\n        val closingBracketsArrayIteratorHasNext\
    \ = closingBracketsArrayIterator.hasNext\n        val openingBracketsSetIteratorHasNext\
    \ = openingBracketsSetIterator.hasNext\n        val closingBracketsSetIteratorHasNext\
    \ = closingBracketsSetIterator.hasNext\n        val openingBracketsArrayIteratorNext\
    \ = openingBracketsArrayIterator.next\n        val closingBracketsArrayIteratorNext\
    \ = closingBracketsArrayIterator.next\n        val openingBracketsSetIteratorNext\
    \ = openingBracketsSetIterator.next\n        val closingBra", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBrackets = mutable.HashSet[Char]()\n\
    \        val closingBrackets = mutable.HashSet[Char]()\n        val openingBracketsArray\
    \ = mutable.ArrayBuffer.empty[Char]\n        val closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n\
    \        for (i <- 0 until bracketsArray.length) {\n            val currentChar\
    \ = bracketsArray(i)\n            if (currentChar == '<') {\n                openingBrackets\
    \ += currentChar\n                openingBracketsArray += currentChar\n      \
    \      }\n            else if (currentChar == '>') {\n                closingBrackets\
    \ += currentChar\n                closingBracketsArray += currentChar\n      \
    \      }\n        }\n        if (openingBrackets.size == closingBrackets.size)\
    \ {\n            for (i <- 0 until openingBrackets.size) {\n                val\
    \ currentChar = openingBrackets.toArray(i)\n                if (currentChar ==\
    \ closingBrackets.toArray(i)) {\n                    return true\n           \
    \     }\n            }\n        }\n        return false", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBrackets = mutable.HashSet[Char]()\n\
    \        val closingBrackets = mutable.HashSet[Char]()\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var currentChar: Char = '\
    \ '\n        var currentBracket: Char = ' '\n        var isOpeningBracket: Boolean\
    \ = false\n        var isClosingBracket: Boolean = false\n        var isInsideBracket:\
    \ Boolean = false\n        var isInsideOpeningBracket: Boolean = false\n     \
    \   var isInsideClosingBracket: Boolean = false\n        var isInsideOpeningOrClosingBracket:\
    \ Boolean = false\n        var isInsideOpeningOrClosingBracketOrOpeningOrClosingBracket:\
    \ Boolean = false\n        var isInsideOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracket:\
    \ Boolean = false\n        var isInsideOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracket:\
    \ Boolean = false\n        var isInsideOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracket:\
    \ Boolean = false\n        var isInsideOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBracketOrOpeningOrClosingBra",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsCount = bracketsArray.count(_\
    \ == '<')\n        val closingBracketsCount = bracketsArray.count(_ == '>')\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.count(_\
    \ > 0)\n        val closingBracketsCount = closingBrackets.count(_ > 0)\n    \
    \    openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\"\
    >\").map(_.trim).toSet\n        openingBrackets.forall(closingBrackets.contains)",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBrackets.zip(closingBrackets).forall\
    \ { case (opening, closing) => opening == closing }", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\", \"(\", \")\")\n        val closingBracketsArray = Array(\"\
    <\", \">\", \">\", \">\")\n        val openingBracketsSet = openingBracketsArray.map(_.toInt).toSet\n\
    \        val closingBracketsSet = closingBracketsArray.map(_.toInt).toSet\n  \
    \      val openingBracketsArrayLength = openingBracketsArray.length\n        val\
    \ closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsSetLength\
    \ = openingBracketsSet.length\n        val closingBracketsSetLength = closingBracketsSet.length\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength * closingBracketsArrayLength\n\
    \        val closingBracketsArrayLength = openingBracketsArrayLength * closingBracketsArrayLength\n\
    \        val openingBracketsSetLength = openingBracketsSetLength * closingBracketsSetLength\n\
    \        val closingBracketsSetLength = openingBracketsSetLength * closingBracketsSetLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength + openingBracketsSetLength\n\
    \        val closingBracketsArrayLength = openingBracketsArrayLength + openingBracketsSetLength\n\
    \        val openingBracketsSetLength = openingBracketsSetLength + openingBracketsSetLength\n\
    \        val closingBracketsSetLength = openingBracketsSetLength + openingBracketsSetLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength + openingBracketsSetLength\n\
    \        val closingBracketsArrayLength = openingBracketsArrayLength + openingBracketsSetLength\n\
    \        val openingBracketsSetLength = openingBracketsSetLength + openingBracketsSetLength\n\
    \        val closingBracketsSetLength = openingBracketsSetLength + openingBracketsSetLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength + openingBracketsSetLength\n\
    \        val closingBracketsArrayLength = openingBracketsArrayLength + openingBracketsSetLength\n\
    \        val openingBracketsSetLength = openingBracketsSetLength + open", "  \
    \      val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val bracketsArrayCopy = Array(bracketsArrayLength)\n\
    \        System.arraycopy(bracketsArray, 0, bracketsArrayCopy, 0, bracketsArrayLength)\n\
    \        val bracketsArrayCopyLength = bracketsArrayCopy.length\n        val bracketsArrayCopy2\
    \ = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArrayCopy, 0,\
    \ bracketsArrayCopy2, 0, bracketsArrayCopyLength)\n        val bracketsArrayCopy2Length\
    \ = bracketsArrayCopy2.length\n        val bracketsArrayCopy3 = Array(bracketsArrayLength)\n\
    \        System.arraycopy(bracketsArrayCopy2, 0, bracketsArrayCopy3, 0, bracketsArrayCopy2Length)\n\
    \        val bracketsArrayCopy3Length = bracketsArrayCopy3.length\n        val\
    \ bracketsArrayCopy4 = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArrayCopy3,\
    \ 0, bracketsArrayCopy4, 0, bracketsArrayCopy3Length)\n        val bracketsArrayCopy4Length\
    \ = bracketsArrayCopy4.length\n        val bracketsArrayCopy5 = Array(bracketsArrayLength)\n\
    \        System.arraycopy(bracketsArrayCopy4, 0, bracketsArrayCopy5, 0, bracketsArrayCopy4Length)\n\
    \        val bracketsArrayCopy5Length = bracketsArrayCopy5.length\n        val\
    \ bracketsArrayCopy6 = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArrayCopy5,\
    \ 0, bracketsArrayCopy6, 0, bracketsArrayCopy5Length)\n        val bracketsArrayCopy6Length\
    \ = bracketsArrayCopy6.length\n        val bracketsArrayCopy7 = Array(bracketsArrayLength)\n\
    \        System.arraycopy(bracketsArrayCopy6, 0, bracketsArrayCopy7, 0, bracketsArrayCopy6Length)\n\
    \        val bracketsArrayCopy7Length = bracketsArrayCopy7.length\n        val\
    \ bracketsArrayCopy8 = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArrayCopy7,\
    \ 0, bracketsArrayCopy8, 0, bracketsArrayCopy7Length)\n        val bracketsArrayCopy8Length\
    \ = bracketsArrayCopy8.length\n        val bracketsArrayCopy9 = Array(bracketsArrayLength)\n\
    \        System.arraycopy(bracketsArrayCopy8, 0, bracketsArrayCopy9, 0, bracketsArrayCopy8Length)\n\
    \        val bracketsArrayCopy", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount != closingBracketsCount", "        val\
    \ openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBrackets = mutable.HashSet[Char]()\n\
    \        val closingBrackets = mutable.HashSet[Char]()\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        bracketsArray.foreach { c\
    \ =>\n            c match {\n                case '<' =>\n                   \
    \ openingBrackets += c\n                    openingBracketsCount += 1\n      \
    \          case '>' =>\n                    closingBrackets += c\n           \
    \         closingBracketsCount += 1\n                case _ =>\n            }\n\
    \        }\n        openingBracketsCount != closingBracketsCount", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var currentBracketsCount = 0\n        var currentOpeningBracketsCount\
    \ = 0\n        var currentClosingBracketsCount = 0\n        var currentOpeningBracket\
    \ = ' '\n        var currentClosingBracket = ' '\n        var currentBracket =\
    \ ' '\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '\n\
    \        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentBracketsCount = 0\n        var currentBracket = ' '",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets =\
    \ 0\n        var closingBrackets = 0\n        var openingBracketsArray = Array[Char]()\n\
    \        var closingBracketsArray = Array[Char]()\n        var currentChar = 0\n\
    \        var currentCharArray = Array[Char]()\n        var currentCharArrayLength\
    \ = currentCharArray.length\n        var currentCharArrayIndex = 0\n        var\
    \ currentCharArrayIndexLength = currentCharArrayIndex.length\n        var currentCharArrayIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var currentCharArrayIndexIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var currentCharArrayIndexIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var currentCharArrayIndexIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var currentCharArrayIndexIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var currentCharArrayIndexIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var currentCharArrayIndexIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var currentCharArrayIndexIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var currentCharArrayIndexIndexIndex\
    \ = 0\n        var currentCharArrayIndexIndexLength = currentCharArrayIndexIndex.length\n\
    \        var currentCharArrayIndexIndexIndex = 0\n        var currentCharArrayIndexIndexLength\
    \ = currentCharArrayIndexIndex.length\n        var current", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\"\
    >\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)", " \
    \       val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"</\", \"/>\"\
    )\n        val openingBracketsSet = openingBracketsArray.toSet\n        val closingBracketsSet\
    \ = closingBracketsArray.toSet\n        val openingBracketsArraySize = openingBracketsArray.length\n\
    \        val closingBracketsArraySize = closingBracketsArray.length\n        val\
    \ openingBracketsArrayIterator = openingBracketsArray.iterator\n        val closingBracketsArrayIterator\
    \ = closingBracketsArray.iterator\n        val openingBracketsSetIterator = openingBracketsSet.iterator\n\
    \        val closingBracketsSetIterator = closingBracketsSet.iterator\n      \
    \  val openingBracketsArrayIteratorSize = openingBracketsArrayIterator.size\n\
    \        val closingBracketsArrayIteratorSize = closingBracketsArrayIterator.size\n\
    \        val openingBracketsSetIteratorSize = openingBracketsSetIterator.size\n\
    \        val closingBracketsSetIteratorSize = closingBracketsSetIterator.size\n\
    \        val openingBracketsArrayIteratorSize = openingBracketsArrayIterator.size\n\
    \        val closingBracketsArrayIteratorSize = closingBracketsArrayIterator.size\n\
    \        val openingBracketsSetIteratorSize = openingBracketsSetIterator.size\n\
    \        val closingBracketsSetIteratorSize = closingBracketsSetIterator.size\n\
    \        val openingBracketsArrayIteratorSize = openingBracketsArrayIterator.size\n\
    \        val closingBracketsArrayIteratorSize = closingBracketsArrayIterator.size\n\
    \        val openingBracketsSetIteratorSize = openingBracketsSetIterator.size\n\
    \        val closingBracketsSetIteratorSize = closingBracketsSetIterator.size\n\
    \        val openingBracketsArrayIteratorSize = openingBracketsArrayIterator.size\n\
    \        val closingBracketsArrayIteratorSize = closingBracketsArrayIterator.size\n\
    \        val openingBracketsSetIteratorSize = openingBracketsSetIterator.size\n\
    \        val closingBracketsSetIteratorSize = closingBracketsSetIterator.size\n\
    \        val openingBracketsArrayIteratorSize = openingBracketsArrayIterator.size\n\
    \        val closingBracketsArrayIteratorSize = closingBracket", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCount2 = 0\n        var closingBracketsCount2 = 0\n\
    \        var openingBracketsCount3 = 0\n        var closingBracketsCount3 = 0\n\
    \        var openingBracketsCount4 = 0\n        var closingBracketsCount4 = 0\n\
    \        var openingBracketsCount5 = 0\n        var closingBracketsCount5 = 0\n\
    \        var openingBracketsCount6 = 0\n        var closingBracketsCount6 = 0\n\
    \        var openingBracketsCount7 = 0\n        var closingBracketsCount7 = 0\n\
    \        var openingBracketsCount8 = 0\n        var closingBracketsCount8 = 0\n\
    \        var openingBracketsCount9 = 0\n        var closingBracketsCount9 = 0\n\
    \        var openingBracketsCount10 = 0\n        var closingBracketsCount10 =\
    \ 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(x => closingBrackets.contains(x))",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array.fill(\n   \
    \         bracketsArrayLength\n        ){\n            false\n        }\n    \
    \    val closingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        var index = 0\n        while (index < bracketsArrayLength) {\n      \
    \      if (bracketsArray(index) == '<') {\n                openingBracketsArray(index)\
    \ = true\n                index++\n            } else if (bracketsArray(index)\
    \ == '>') {\n                closingBracketsArray(index) = true\n            \
    \    index++\n            }\n            index++\n        }\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        while (openingBracketsIndex\
    \ < openingBracketsArrayLength) {\n            if (!openingBracketsArray(openingBracketsIndex))\
    \ {\n                return false\n            }\n            openingBracketsIndex++\n\
    \        }\n        while (closingBracketsIndex < closingBracketsArrayLength)\
    \ {\n            if (!closingBracketsArray(closingBracketsIndex)) {\n        \
    \        return false\n            }\n            closingBracketsIndex++\n   \
    \     }\n        return true", "        val openingBrackets = brackets.split(\"\
    <\").map(_.toInt)\n        val closingBrackets = brackets.split(\">\").map(_.toInt)\n\
    \        val openingBracketsCount = openingBrackets.foldLeft(0)(_ + _)\n     \
    \   val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val openingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        ){\n            false\n\
    \        }\n        val closingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracket", "        val bracketsArray = brackets.toCharArray\n   \
    \     val bracketsArrayLength = bracketsArray.length\n        val openingBracketsArray\
    \ = Array[Int](bracketsArrayLength)\n        val closingBracketsArray = Array[Int](bracketsArrayLength)\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCount2 = 0\n        var closingBracketsCount2 = 0\n\
    \        var openingBracketsCount3 = 0\n        var closingBracketsCount3 = 0\n\
    \        var openingBracketsCount4 = 0\n        var closingBracketsCount4 = 0\n\
    \        var openingBracketsCount5 = 0\n        var closingBracketsCount5 = 0\n\
    \        var openingBracketsCount6 = 0\n        var closingBracketsCount6 = 0\n\
    \        var openingBracketsCount7 = 0\n        var closingBracketsCount7 = 0\n\
    \        var openingBracketsCount8 = 0\n        var closingBracketsCount8 = 0\n\
    \        var openingBracketsCount9 = 0\n        var closingBracketsCount9 = 0\n\
    \        var openingBracketsCount10 = 0\n        var closingBracketsCount10 =\
    \ 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBrackets", " \
    \       val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        if (openingBracketsCount\
    \ != closingBracketsCount) {\n            return false\n        }\n        val\
    \ openingBracketsMap = openingBrackets.toMap\n        val closingBracketsMap =\
    \ closingBrackets.toMap\n        val openingBracketsKeys = openingBracketsMap.keys\n\
    \        val closingBracketsKeys = closingBracketsMap.keys\n        val openingBracketsValues\
    \ = openingBracketsMap.values.toList\n        val closingBracketsValues = closingBracketsMap.values.toList\n\
    \        val openingBracketsKeysCount = openingBracketsKeys.size\n        val\
    \ closingBracketsKeysCount = closingBracketsKeys.size\n        val openingBracketsValuesCount\
    \ = openingBracketsValues.size\n        val closingBracketsValuesCount = closingBracketsValues.size\n\
    \        val openingBracketsValuesCountEqual = openingBracketsValuesCount == openingBracketsKeysCount\n\
    \        val closingBracketsValuesCountEqual = closingBracketsValuesCount == closingBracketsKeysCount\n\
    \        val openingBracketsValuesCountEqualOrMore = openingBracketsValuesCountEqual\
    \ || openingBracketsValuesCount > 1\n        val closingBracketsValuesCountEqualOrMore\
    \ = closingBracketsValuesCountEqual || closingBracketsValuesCount > 1\n      \
    \  val openingBracketsValuesCountLessOrEqual = openingBracketsValuesCount <= openingBracketsKeysCount\n\
    \        val closingBracketsValuesCountLessOrEqual = closingBracketsValuesCount\
    \ <= closingBracketsKeysCount\n        val openingBracketsValuesCountLessOrEqualOrMore\
    \ = openingBracketsValuesCountLessOrEqual || openingBracketsValuesCount > 1\n\
    \        val closingBracketsValuesCountLessOrEqualOrMore = closingBracketsValuesCountLessOrEqual\
    \ || closingBracketsValuesCount > 1\n        val openingBracketsValuesCountLessOrEqualOrMoreMore\
    \ = openingBracketsValuesCountLessOrEqualOrMore || opening", "        val bracketsArray\
    \ = brackets.toCharArray\n        var openingBrackets = 0\n        var closingBrackets\
    \ = 0\n        var openingBracketsArray = new Array[Int](bracketsArray.length)\n\
    \        var closingBracketsArray = new Array[Int](bracketsArray.length)\n   \
    \     var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayIndex2 = 0\n        var closingBracketsArrayIndex2\
    \ = 0\n        var openingBracketsArrayIndex3 = 0\n        var closingBracketsArrayIndex3\
    \ = 0\n        var openingBracketsArrayIndex4 = 0\n        var closingBracketsArrayIndex4\
    \ = 0\n        var openingBracketsArrayIndex5 = 0\n        var closingBracketsArrayIndex5\
    \ = 0\n        var openingBracketsArrayIndex6 = 0\n        var closingBracketsArrayIndex6\
    \ = 0\n        var openingBracketsArrayIndex7 = 0\n        var closingBracketsArrayIndex7\
    \ = 0\n        var openingBracketsArrayIndex8 = 0\n        var closingBracketsArrayIndex8\
    \ = 0\n        var openingBracketsArrayIndex9 = 0\n        var closingBracketsArrayIndex9\
    \ = 0\n        var openingBracketsArrayIndex10 = 0\n        var closingBracketsArrayIndex10\
    \ = 0\n        var openingBracketsArrayIndex11 = 0\n        var closingBracketsArrayIndex11\
    \ = 0\n        var openingBracketsArrayIndex12 = 0\n        var closingBracketsArrayIndex12\
    \ = 0\n        var openingBracketsArrayIndex13 = 0\n        var closingBracketsArrayIndex13\
    \ = 0\n        var openingBracketsArrayIndex14 = 0\n        var closingBracketsArrayIndex14\
    \ = 0\n        var openingBracketsArrayIndex15 = 0\n        var closingBracketsArrayIndex15\
    \ = 0\n        var openingBracketsArrayIndex16 = 0\n        var closingBracketsArrayIndex16\
    \ = 0\n        var openingBracketsArrayIndex17 = 0\n        var closingBracketsArrayIndex17\
    \ = 0\n        var openingBracketsArrayIndex18 = 0\n        var closingBracketsArrayIndex18\
    \ = 0\n        var openingBracketsArrayIndex19 = 0\n        var closingBracketsArrayIndex19\
    \ = 0\n        var openingBracketsArrayIndex20 = 0\n        var closingBracketsArrayIndex20\
    \ = 0\n        var openingBracketsArrayIndex21 = 0\n        var closingBracketsArrayIndex21\
    \ = 0\n        var openingBracketsArrayIndex22", "        val bracketsArray =\
    \ brackets.toCharArray\n        val openingBrackets = bracketsArray.filter(_ ==\
    \ '<')\n        val closingBrackets = bracketsArray.filter(_ == '>')\n       \
    \ openingBrackets.size == closingBrackets.size", "        val bracketsArray =\
    \ brackets.toCharArray\n        val openingBrackets = mutable.HashSet[Char]()\n\
    \        val closingBrackets = mutable.HashSet[Char]()\n        val openingBracketsArray\
    \ = mutable.ArrayBuffer.empty[Char]\n        val closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n\
    \        for (i <- 0 until bracketsArray.length) {\n            val c = bracketsArray(i)\n\
    \            if (c == '<') {\n                openingBrackets += c\n         \
    \       openingBracketsArray += c\n            } else if (c == '>') {\n      \
    \          closingBrackets += c\n                closingBracketsArray += c\n \
    \           }\n        }\n        if (openingBrackets.size == closingBrackets.size)\
    \ {\n            openingBracketsArray.zip(closingBracketsArray).forall {\n   \
    \             (a, b) => a == b\n            }\n        } else {\n            false\n\
    \        }", "        val bracketsArray = brackets.toCharArray\n        val openingBrackets\
    \ = bracketsArray.filter(_ == '<')\n        val closingBrackets = bracketsArray.filter(_\
    \ == '>')\n        openingBrackets.size == closingBrackets.size", "        val\
    \ bracketsArray = brackets.toCharArray\n        val openingBracketsCount = bracketsArray.count(_\
    \ == '<')\n        val closingBracketsCount = bracketsArray.count(_ == '>')\n\
    \        openingBracketsCount != closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBrackets = bracketsArray.filter(x\
    \ => x == '<')\n        val closingBrackets = bracketsArray.filter(x => x == '>')\n\
    \        openingBrackets.size == closingBrackets.size", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val bracketsArrayIterator = bracketsArray.iterator\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        while (bracketsArrayIterator.hasNext)\
    \ {\n            val currentChar = bracketsArrayIterator.next()\n            if\
    \ (currentChar == '<') {\n                openingBracketsCount += 1\n        \
    \    } else if (currentChar == '>') {\n                closingBracketsCount +=\
    \ 1\n            }\n        }\n        if (openingBracketsCount != closingBracketsCount)\
    \ {\n            return false\n        }\n        return true", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(x => closingBrackets.contains(x))", "        val bracketsArray\
    \ = brackets.toCharArray\n        var openingBrackets = 0\n        var closingBrackets\
    \ = 0\n        var openingBracketsArray = Array.empty[Int]\n        var closingBracketsArray\
    \ = Array.empty[Int]\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArraySize = bracketsArray.length\n        var\
    \ closingBracketsArraySize = bracketsArray.length\n        while (openingBracketsArrayIndex\
    \ < openingBracketsArraySize) {\n            openingBracketsArrayIndex = openingBracketsArrayIndex\
    \ + 1\n            openingBracketsArray = openingBracketsArray :+ bracketsArray(openingBracketsArrayIndex).toInt\n\
    \        }\n        while (closingBracketsArrayIndex < closingBracketsArraySize)\
    \ {\n            closingBracketsArrayIndex = closingBracketsArrayIndex + 1\n \
    \           closingBracketsArray = closingBracketsArray :+ bracketsArray(closingBracketsArrayIndex).toInt\n\
    \        }\n        while (openingBracketsArrayIndex < openingBracketsArraySize)\
    \ {\n            openingBracketsArrayIndex = openingBracketsArrayIndex + 1\n \
    \           openingBracketsArray = openingBracketsArray :+ bracketsArray(openingBracketsArrayIndex).toInt\n\
    \        }\n        while (closingBracketsArrayIndex < closingBracketsArraySize)\
    \ {\n            closingBracketsArrayIndex = closingBracketsArrayIndex + 1\n \
    \           closingBracketsArray = closingBracketsArray :+ bracketsArray(closingBracketsArrayIndex).toInt\n\
    \        }\n        if (openingBracketsArrayIndex == openingBracketsArraySize)\
    \ {\n            return true\n        }\n        if (closingBracketsArrayIndex\
    \ == closingBracketsArraySize) {\n            return false\n        }\n      \
    \  if (openingBracketsArrayIndex < closingBracketsArrayIndex) {\n            while\
    \ (openingBracketsArrayIndex < openingBracketsArraySize) {\n                openingBracketsArrayIndex\
    \ = openingBracketsArrayIndex + 1\n                openingBracketsArray = openingBracketsArray\
    \ :+ bracketsArray(openingBracketsArrayIndex).toInt\n            }\n         \
    \   while (closingBracketsArrayIndex < closingBracketsArraySize) {\n         \
    \       closingBracketsArrayIndex = closingBracketsArrayIndex + 1\n          \
    \      closingBracketsArray = ", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        val openingBracketsMap = mutable.Map[String, Int]()\n        val closingBracketsMap\
    \ = mutable.Map[String, Int]()\n        openingBrackets.foreach(x => {\n     \
    \       val y = x.trim\n            val z = y.split(\"(\")\n            val a\
    \ = z.length\n            val b = z(a).split(\")\")\n            val c = b(0).trim\n\
    \            val d = b(1)\n            openingBracketsMap += (x -> a)\n      \
    \      closingBracketsMap += (x -> c)\n        })\n        val openingBracketsCount\
    \ = openingBracketsMap.size\n        val closingBracketsCount = closingBracketsMap.size\n\
    \        openingBracketsMap.forall { case (k, v) => closingBracketsMap.get(k)\
    \ == v }", "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsCount = bracketsArray.count(_\
    \ == '<')\n        val closingBracketsCount = bracketsArray.count(_ == '>')\n\
    \        openingBracketsCount != closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val openingBrackets = brackets.split(\"<\"\
    )\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(openingBracket\
    \ => closingBrackets.contains(openingBracket))", "        val bracketsArray =\
    \ brackets.toCharArray\n        var openingBrackets = 0\n        var closingBrackets\
    \ = 0\n        var openingBracketsArray = new Array[Char](bracketsArray.length)\n\
    \        var closingBracketsArray = new Array[Char](bracketsArray.length)\n  \
    \      var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayIndex2 = 0\n        var closingBracketsArrayIndex2\
    \ = 0\n        var openingBracketsArrayIndex3 = 0\n        var closingBracketsArrayIndex3\
    \ = 0\n        var openingBracketsArrayIndex4 = 0\n        var closingBracketsArrayIndex4\
    \ = 0\n        var openingBracketsArrayIndex5 = 0\n        var closingBracketsArrayIndex5\
    \ = 0\n        var openingBracketsArrayIndex6 = 0\n        var closingBracketsArrayIndex6\
    \ = 0\n        var openingBracketsArrayIndex7 = 0\n        var closingBracketsArrayIndex7\
    \ = 0\n        var openingBracketsArrayIndex8 = 0\n        var closingBracketsArrayIndex8\
    \ = 0\n        var openingBracketsArrayIndex9 = 0\n        var closingBracketsArrayIndex9\
    \ = 0\n        var openingBracketsArrayIndex10 = 0\n        var closingBracketsArrayIndex10\
    \ = 0\n        var openingBracketsArrayIndex11 = 0\n        var closingBracketsArrayIndex11\
    \ = 0\n        var openingBracketsArrayIndex12 = 0\n        var closingBracketsArrayIndex12\
    \ = 0\n        var openingBracketsArrayIndex13 = 0\n        var closingBracketsArrayIndex13\
    \ = 0\n        var openingBracketsArrayIndex14 = 0\n        var closingBracketsArrayIndex14\
    \ = 0\n        var openingBracketsArrayIndex15 = 0\n        var closingBracketsArrayIndex15\
    \ = 0\n        var openingBracketsArrayIndex16 = 0\n        var closingBracketsArrayIndex16\
    \ = 0\n        var openingBracketsArrayIndex17 = 0\n        var closingBracketsArrayIndex17\
    \ = 0\n        var openingBracketsArrayIndex18 = 0\n        var closingBracketsArrayIndex18\
    \ = 0\n        var openingBracketsArrayIndex19 = 0\n        var closingBracketsArrayIndex19\
    \ = 0\n        var openingBracketsArrayIndex20 = 0\n        var closingBracketsArrayIndex20\
    \ = 0\n        var openingBracketsArrayIndex21 = 0\n        var closingBracketsArrayIndex21\
    \ = 0\n        var openingBracketsArrayIndex22", "        val bracketsArray =\
    \ brackets.toCharArray\n        val openingBracketsArray = Array(\"<\", \">\"\
    , \"(\", \")\")\n        val closingBracketsArray = Array(\")\", \"(\", \">\"\
    , \"<\")\n        val openingBracketsCount = openingBracketsArray.length\n   \
    \     val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArray = openingBracketsArray.iterator\n        val\
    \ closingBracketsArray = closingBracketsArray.iterator\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength", "     \
    \   val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\")\n        val closingBracketsArray = Array(\">\")\n        val\
    \ openingBracketsSet = openingBracketsArray.toSet\n        val closingBracketsSet\
    \ = closingBracketsArray.toSet\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  val openingBracketsSetLength = openingBracketsSet.length\n        val closingBracketsSetLength\
    \ = closingBracketsSet.length\n        val openingBracketsArrayLength = openingBracketsArrayLength\
    \ * closingBracketsArrayLength\n        val closingBracketsArrayLength = openingBracketsArrayLength\
    \ * closingBracketsArrayLength\n        val openingBracketsSetLength = openingBracketsSetLength\
    \ * closingBracketsSetLength\n        val closingBracketsSetLength = openingBracketsSetLength\
    \ * closingBracketsSetLength\n        val openingBracketsArrayLength = openingBracketsArrayLength\
    \ * closingBracketsArrayLength\n        val closingBracketsArrayLength = openingBracketsArrayLength\
    \ * closingBracketsArrayLength\n        val openingBracketsSetLength = openingBracketsSetLength\
    \ * closingBracketsSetLength\n        val closingBracketsSetLength = openingBracketsSetLength\
    \ * closingBracketsSetLength\n        val openingBracketsArrayLength = openingBracketsArrayLength\
    \ * closingBracketsArrayLength\n        val closingBracketsArrayLength = openingBracketsArrayLength\
    \ * closingBracketsArrayLength\n        val openingBracketsSetLength = openingBracketsSetLength\
    \ * closingBracketsSetLength\n        val closingBracketsSetLength = openingBracketsSetLength\
    \ * closingBracketsSetLength\n        val openingBracketsArrayLength = openingBracketsArrayLength\
    \ * closingBracketsArrayLength\n        val closingBracketsArrayLength = openingBracketsArrayLength\
    \ * closingBracketsArrayLength\n        val openingBracketsSetLength = openingBracketsSetLength\
    \ * closingBracketsSetLength\n        val closingBracketsSetLength = openingBracketsSetLength\
    \ * closingBracketsSetLength\n        ", "        val openingBrackets = brackets.split(\"\
    <\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n\
    \        openingBrackets.subsetOf(closingBrackets)", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsCount = bracketsArray.count(_\
    \ == '<')\n        val closingBracketsCount = bracketsArray.count(_ == '>')\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsArray = Array(\"<\", \">\"\
    )\n        val closingBracketsArray = Array(\"<\", \">\")\n        val openingBracketsSet\
    \ = openingBracketsArray.toSet\n        val closingBracketsSet = closingBracketsArray.toSet\n\
    \        val openingBracketsArraySize = openingBracketsArray.length\n        val\
    \ closingBracketsArraySize = closingBracketsArray.length\n        val openingBracketsSetSize\
    \ = openingBracketsSet.size\n        val closingBracketsSetSize = closingBracketsSet.size\n\
    \        val openingBracketsArrayIterator = openingBracketsArray.iterator\n  \
    \      val closingBracketsArrayIterator = closingBracketsArray.iterator\n    \
    \    val openingBracketsSetIterator = openingBracketsSet.iterator\n        val\
    \ closingBracketsSetIterator = closingBracketsSet.iterator\n        val openingBracketsArrayIteratorSize\
    \ = openingBracketsArrayIterator.size\n        val closingBracketsArrayIteratorSize\
    \ = closingBracketsArrayIterator.size\n        val openingBracketsSetIteratorSize\
    \ = openingBracketsSetIterator.size\n        val closingBracketsSetIteratorSize\
    \ = closingBracketsSetIterator.size\n        val openingBracketsArrayIteratorIndex\
    \ = 0\n        val closingBracketsArrayIteratorIndex = 0\n        val openingBracketsSetIteratorIndex\
    \ = 0\n        val closingBracketsSetIteratorIndex = 0\n        val openingBracketsArrayIteratorIndexSize\
    \ = 0\n        val closingBracketsArrayIteratorIndexSize = 0\n        val openingBracketsSetIteratorIndexSize\
    \ = 0\n        val closingBracketsSetIteratorIndexSize = 0\n        val openingBracketsArrayIteratorIndexSizeSize\
    \ = 0\n        val closingBracketsArrayIteratorIndexSizeSize = 0\n        val\
    \ openingBracketsSetIteratorIndexSizeSize = 0\n        val closingBracketsSetIteratorIndexSizeSize\
    \ = 0\n        val openingBracketsArrayIteratorIndexSizeSize = 0\n        val\
    \ closingBracketsArrayIteratorIndexSizeSize = 0\n        val openingBracketsSetIteratorIndexSizeSize\
    \ = 0\n        val closingBracketsSetIteratorIndexSizeSize = 0\n        val openingBracketsArrayIteratorIndexSizeSize\
    \ = 0\n        val closingBracketsArrayIteratorIndexSizeSize", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        if (openingBracketsCount != closingBracketsCount)\
    \ {\n            return false\n        }\n        var openingBracketsIndex = 0\n\
    \        var closingBracketsIndex = 0\n        while (openingBracketsIndex < openingBracketsCount\
    \ && closingBracketsIndex < closingBracketsCount) {\n            if (openingBrackets(openingBracketsIndex)\
    \ != closingBrackets(closingBracketsIndex)) {\n                return false\n\
    \            }\n            openingBracketsIndex += 1\n            closingBracketsIndex\
    \ += 1\n        }\n        if (openingBracketsIndex != openingBracketsCount) {\n\
    \            return false\n        }\n        if (closingBracketsIndex != closingBracketsCount)\
    \ {\n            return false\n        }\n        true", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBrackets = bracketsArray.filter(c\
    \ => c == '<')\n        val closingBrackets = bracketsArray.filter(c => c == '>')\n\
    \        openingBrackets.size == closingBrackets.size", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount != closingBracketsCount", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val openingBracketsCount = bracketsArray.filter(c => c == '<').length\n\
    \        val closingBracketsCount = bracketsArray.filter(c => c == '>').length\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsArray = Array(\"<\")\n  \
    \      val closingBracketsArray = Array(\">\")\n        val openingBracketsCount\
    \ = openingBracketsArray.length\n        val closingBracketsCount = closingBracketsArray.length\n\
    \        val openingBracketsMap = mutable.HashMap[Char, Int]()\n        val closingBracketsMap\
    \ = mutable.HashMap[Char, Int]()\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsMap\
    \ = mutable.HashMap[Char, Int]()\n        val closingBracketsMap = mutable.HashMap[Char,\
    \ Int]()\n        val openingBracketsCount = openingBracketsArray.length\n   \
    \     val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsMap\
    \ = mutable.HashMap[Char, Int]()\n        val closingBracketsMap = mutable.HashMap[Char,\
    \ Int]()\n        val openingBracketsCount = openingBracketsArray.length\n   \
    \     val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsMap\
    \ = mutable.HashMap[Char, Int]()\n        val closingBracketsMap = mutable.HashMap[Char,\
    \ Int]()\n        val openingBracketsCount = openingBracketsArray.length\n   \
    \     val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsMap\
    \ = mutable.HashMap[Char, Int]()\n        val closingBracketsMap = mutable.HashMap[Char,\
    \ Int]()\n        val openingBracketsCount = openingBracketsArray.length\n   \
    \     val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsMap\
    \ = mutable.HashMap[Char, Int]()\n        val closingBracketsMap = mutable.HashMap[Char,\
    \ Int]()\n        val openingBracketsCount = openingBracketsArray.length\n   \
    \     val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsMap\
    \ = mutable.HashMap[Char, Int]()\n        val closingBracketsMap = mutable.HashMap[Char,\
    \ Int]()\n        val openingBracketsCount = openingBracketsArray.length\n   \
    \     val closingBra", "        val openingBrackets = brackets.split(\"<\")\n\
    \        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        val openingBracketsSet = openingBrackets.toSet\n        val closingBracketsSet\
    \ = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"</\", \"/>\"\
    )\n        val openingBracketsSet = openingBracketsArray.toSet\n        val closingBracketsSet\
    \ = closingBracketsArray.toSet\n        val openingBracketsArraySize = openingBracketsArray.length\n\
    \        val closingBracketsArraySize = closingBracketsArray.length\n        val\
    \ openingBracketsSetSize = openingBracketsSet.size\n        val closingBracketsSetSize\
    \ = closingBracketsSet.size\n        val openingBracketsArrayIterator = openingBracketsArray.iterator\n\
    \        val closingBracketsArrayIterator = closingBracketsArray.iterator\n  \
    \      val openingBracketsSetIterator = openingBracketsSet.iterator\n        val\
    \ closingBracketsSetIterator = closingBracketsSet.iterator\n        val openingBracketsArrayIteratorSize\
    \ = openingBracketsArrayIterator.size\n        val closingBracketsArrayIteratorSize\
    \ = closingBracketsArrayIterator.size\n        val openingBracketsSetIteratorSize\
    \ = openingBracketsSetIterator.size\n        val closingBracketsSetIteratorSize\
    \ = closingBracketsSetIterator.size\n        val openingBracketsArrayIteratorNext\
    \ = openingBracketsArrayIterator.next\n        val closingBracketsArrayIteratorNext\
    \ = closingBracketsArrayIterator.next\n        val openingBracketsSetIteratorNext\
    \ = openingBracketsSetIterator.next\n        val closingBracketsSetIteratorNext\
    \ = closingBracketsSetIterator.next\n        val openingBracketsArrayIteratorHasNext\
    \ = openingBracketsArrayIterator.hasNext\n        val closingBracketsArrayIteratorHasNext\
    \ = closingBracketsArrayIterator.hasNext\n        val openingBracketsSetIteratorHasNext\
    \ = openingBracketsSetIterator.hasNext\n        val closingBracketsSetIteratorHasNext\
    \ = closingBracketsSetIterator.hasNext\n        val openingBracketsArrayIteratorNext\
    \ = openingBracketsArrayIterator.next\n        val closingBracketsArrayIteratorNext\
    \ = closingBracketsArrayIterator.next\n        val openingBracketsSetIteratorNext\
    \ = openingBracketsSetIterator.next", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var closingBracketsCountArray\
    \ = new Array[Int](bracketsArrayLength)\n        var openingBracketsCountArrayIndex\
    \ = 0\n        var closingBracketsCountArrayIndex = 0\n        var openingBracketsCountArrayIndex2\
    \ = 0\n        var closingBracketsCountArrayIndex2 = 0\n        var openingBracketsCountArrayIndex3\
    \ = 0\n        var closingBracketsCountArrayIndex3 = 0\n        var openingBracketsCountArrayIndex4\
    \ = 0\n        var closingBracketsCountArrayIndex4 = 0\n        var openingBracketsCountArrayIndex5\
    \ = 0\n        var closingBracketsCountArrayIndex5 = 0\n        var openingBracketsCountArrayIndex6\
    \ = 0\n        var closingBracketsCountArrayIndex6 = 0\n        var openingBracketsCountArrayIndex7\
    \ = 0\n        var closingBracketsCountArrayIndex7 = 0\n        var openingBracketsCountArrayIndex8\
    \ = 0\n        var closingBracketsCountArrayIndex8 = 0\n        var openingBracketsCountArrayIndex9\
    \ = 0\n        var closingBracketsCountArrayIndex9 = 0\n        var openingBracketsCountArrayIndex10\
    \ = 0\n        var closingBracketsCountArrayIndex10 = 0\n        var openingBracketsCountArrayIndex11\
    \ = 0\n        var closingBracketsCountArrayIndex11 = 0\n        var openingBracketsCountArrayIndex12\
    \ = 0\n        var closingBracketsCountArrayIndex12 = 0\n        var openingBracketsCountArrayIndex13\
    \ = 0\n        var closingBracketsCountArrayIndex13 = 0\n        var openingBracketsCountArrayIndex14\
    \ = 0\n        var closingBracketsCountArrayIndex14 = 0\n        var openingBracketsCountArrayIndex15\
    \ = 0\n        var closingBracketsCountArrayIndex15 = 0\n        var openingBracketsCountArrayIndex16\
    \ = 0\n        var closingBracketsCountArrayIndex16 = 0\n        var openingBracketsCountArrayIndex17\
    \ = 0\n        var closingBracketsCountArrayIndex17 = 0\n        var openingBracketsCountArrayIndex18\
    \ = 0\n        var closingBracketsCountArrayIndex18 = 0\n        var openingBracketsCountArrayIndex19\
    \ = 0\n        var closingBracketsCountArray", "        val openingBrackets =\
    \ brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\")\n\
    \        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        if (openingBracketsCount == closingBracketsCount)\
    \ {\n            true\n        } else {\n            false\n        }", "    \
    \    val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount != closingBracketsCount", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val bracketsArrayCopy = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArray,\
    \ 0, bracketsArrayCopy, 0, bracketsArrayLength)\n        val openingBracketsArray\
    \ = Array(bracketsArrayCopy.size)\n        val closingBracketsArray = Array(bracketsArrayCopy.size)\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        val openingBracketsArrayCopy = Array(openingBracketsArray.length)\n \
    \       val closingBracketsArrayCopy = Array(closingBracketsArray.length)\n  \
    \      var openingBracketsIndexCopy = 0\n        var closingBracketsIndexCopy\
    \ = 0\n        var openingBracketsCountCopy = 0\n        var closingBracketsCountCopy\
    \ = 0\n        val openingBracketsArrayCopy2 = Array(openingBracketsArrayCopy.length)\n\
    \        val closingBracketsArrayCopy2 = Array(closingBracketsArrayCopy.length)\n\
    \        var openingBracketsIndexCopy2 = 0\n        var closingBracketsIndexCopy2\
    \ = 0\n        var openingBracketsCountCopy2 = 0\n        var closingBracketsCountCopy2\
    \ = 0\n        var openingBracketsArrayCopy3 = Array(openingBracketsArrayCopy.length)\n\
    \        val closingBracketsArrayCopy3 = Array(closingBracketsArrayCopy.length)\n\
    \        var openingBracketsIndexCopy3 = 0\n        var closingBracketsIndexCopy3\
    \ = 0\n        var openingBracketsCountCopy3 = 0\n        var closingBracketsCountCopy3\
    \ = 0\n        var openingBracketsArrayCopy4 = Array(openingBracketsArrayCopy.length)\n\
    \        val closingBracketsArrayCopy4 = Array(closingBracketsArrayCopy.length)\n\
    \        var openingBracketsIndexCopy4 = 0\n        var closingBracketsIndexCopy4\
    \ = 0\n        var openingBracketsCountCopy4 = 0\n        var closingBracketsCountCopy4\
    \ = 0\n        var openingBracketsArrayCopy5 = Array(openingBracketsArrayCopy.length)\n\
    \        val closingBracketsArrayCopy5 = Array(closingBracketsArrayCopy.length)\n\
    \        var openingBracketsIndexCopy5 = 0\n        var closingBracketsIndexCopy5\
    \ = 0\n        var ", "        val bracketsArray = brackets.toCharArray\n    \
    \    var openingBracketsCount = 0\n        var closingBracketsCount = 0\n    \
    \    for(i <- 0 until bracketsArray.length){\n            if(bracketsArray(i)\
    \ == '<'){\n                openingBracketsCount += 1\n            }\n       \
    \     if(bracketsArray(i) == '>'){\n                closingBracketsCount += 1\n\
    \            }\n        }\n        if(openingBracketsCount == closingBracketsCount){\n\
    \            false\n        }else{\n            true\n        }", "        val\
    \ bracketsArray = brackets.toCharArray\n        val openingBrackets = mutable.HashSet[Char]()\n\
    \        val closingBrackets = mutable.HashSet[Char]()\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var openingBracketsCount25\
    \ = 0\n        var closingBrackets", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        val openingBracketsMap = mutable.Map[String, Int]()\n        val closingBracketsMap\
    \ = mutable.Map[String, Int]()\n        openingBrackets.foreach(x => {\n     \
    \       val y = x.split(\"<\")\n            val z = y.length\n            val\
    \ key = x.substring(0, z)\n            val value = y.length\n            openingBracketsMap\
    \ += (key -> value)\n        })\n        closingBrackets.foreach(x => {\n    \
    \        val y = x.split(\">\")\n            val z = y.length\n            val\
    \ key = x.substring(0, z)\n            val value = y.length\n            closingBracketsMap\
    \ += (key -> value)\n        })\n        openingBracketsMap.forall(_._2 == closingBracketsMap)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentBracket = bracketsArray(0)\n        var currentBracketCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpeningCount = 0\n        var currentBracketClosingCount\
    \ = 0\n        var currentBracketOpen", "        val openingBrackets = brackets.split(\"\
    <\").map(_.toInt)\n        val closingBrackets = brackets.split(\">\").map(_.toInt)\n\
    \        val openingBracketsCount = openingBrackets.toSet.size\n        val closingBracketsCount\
    \ = closingBrackets.toSet.size\n        openingBracketsCount == closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.count(_\
    \ > 0)\n        val closingBracketsCount = closingBrackets.count(_ > 0)\n    \
    \    openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsArray = Array(\"<\")\n  \
    \      val closingBracketsArray = Array(\">\")\n        val openingBracketsCount\
    \ = openingBracketsArray.length\n        val closingBracketsCount = closingBracketsArray.length\n\
    \        val openingBracketsIndex = 0\n        val closingBracketsIndex = 0\n\
    \        val openingBracketsArrayLength = openingBracketsArray.length\n      \
    \  val closingBracketsArrayLength = closingBracketsArray.length\n        val openingBracketsArrayIterator\
    \ = openingBracketsArray.iterator\n        val closingBracketsArrayIterator =\
    \ closingBracketsArray.iterator\n        val openingBracketsArrayIteratorNext\
    \ = openingBracketsArrayIterator.next\n        val closingBracketsArrayIteratorNext\
    \ = closingBracketsArrayIterator.next\n        while (openingBracketsIndex < openingBracketsArrayLength\
    \ && closingBracketsIndex < closingBracketsArrayLength) {\n            if (openingBracketsArrayIteratorNext.equals(closingBracketsArrayIteratorNext))\
    \ {\n                openingBracketsIndex += 1\n                closingBracketsIndex\
    \ += 1\n            } else {\n                return false\n            }\n  \
    \      }\n        return true", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(_ == '<')\n        val\
    \ closingBracketsCount = bracketsArray.count(_ == '>')\n        openingBracketsCount\
    \ != closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBrackets = mutable.HashSet[Char]()\n        val closingBrackets\
    \ = mutable.HashSet[Char]()\n        val openingBracketsArray = mutable.ArrayBuffer.empty[Char]\n\
    \        val closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n        var\
    \ openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n        var\
    \ currentOpeningBracketsIndex = 0\n        var currentClosingBracketsIndex = 0\n\
    \        var currentOpeningBracketsChar = ' '\n        var currentClosingBracketsChar\
    \ = ' '\n        var currentOpeningBracketsCharIndex = 0\n        var currentClosingBracketsCharIndex\
    \ = 0\n        var currentOpeningBracketsCharArray = mutable.ArrayBuffer.empty[Char]\n\
    \        var currentClosingBracketsCharArray = mutable.ArrayBuffer.empty[Char]\n\
    \        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpeningBracketsCharArrayIndex = 0\n        var currentClosingBracketsCharArrayIndex\
    \ = 0\n        var currentOpen", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = bracketsArray.filter(c => c == '<')\n    \
    \    val closingBracketsArray = bracketsArray.filter(c => c == '>')\n        openingBracketsArray.forall(c\
    \ => closingBracketsArray.contains(c))", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(openingBracket\
    \ => closingBrackets.contains(openingBracket))", "        val bracketsArray =\
    \ brackets.toCharArray\n        val openingBrackets = mutable.ListBuffer[Char]()\n\
    \        val closingBrackets = mutable.ListBuffer[Char]()\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var currentChar: Char = '\
    \ '\n        var nextChar: Char = ' '\n        var isOpeningBracket: Boolean =\
    \ false\n        var isClosingBracket: Boolean = false\n        var isInsideBracket:\
    \ Boolean = false\n        var isInsideOpeningBracket: Boolean = false\n     \
    \   var isInsideClosingBracket: Boolean = false\n        var isInsideOpeningBracketOrClosingBracket:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBoth: Boolean\
    \ = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBoth: Boolean\
    \ = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpeningBracketOrClosingBracketOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBothOrBoth:\
    \ Boolean = false\n        var isInsideOpening", "        val bracketsArray =\
    \ brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val openingBracketsArray = Array[Int](bracketsArrayLength)\n        var\
    \ openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex = 0\n \
    \       var openingBracketsArrayValue = 0\n        var closingBracketsArrayValue\
    \ = 0\n        var openingBracketsArrayValueIndex = 0\n        var closingBracketsArrayValueIndex\
    \ = 0\n        var openingBracketsArrayValueIndex2 = 0\n        var closingBracketsArrayValueIndex2\
    \ = 0\n        var openingBracketsArrayValueIndex3 = 0\n        var closingBracketsArrayValueIndex3\
    \ = 0\n        var openingBracketsArrayValueIndex4 = 0\n        var closingBracketsArrayValueIndex4\
    \ = 0\n        var openingBracketsArrayValueIndex5 = 0\n        var closingBracketsArrayValueIndex5\
    \ = 0\n        var openingBracketsArrayValueIndex6 = 0\n        var closingBracketsArrayValueIndex6\
    \ = 0\n        var openingBracketsArrayValueIndex7 = 0\n        var closingBracketsArrayValueIndex7\
    \ = 0\n        var openingBracketsArrayValueIndex8 = 0\n        var closingBracketsArrayValueIndex8\
    \ = 0\n        var openingBracketsArrayValueIndex9 = 0\n        var closingBracketsArrayValueIndex9\
    \ = 0\n        var openingBracketsArrayValueIndex10 = 0\n        var closingBracketsArrayValueIndex10\
    \ = 0\n        var openingBracketsArrayValueIndex11 = 0\n        var closingBracketsArrayValueIndex11\
    \ = 0\n        var openingBracketsArrayValueIndex12 = 0\n        var closingBracketsArrayValueIndex12\
    \ = 0\n        var openingBracketsArrayValueIndex13 = 0\n        var closingBracketsArrayValueIndex13\
    \ = 0\n        var openingBracketsArrayValueIndex14 = 0\n        var closingBracketsArrayValueIndex14\
    \ = 0\n        var openingBracketsArrayValueIndex15 = 0\n        var closingBracketsArrayValueIndex15\
    \ = 0\n        var openingBracketsArrayValueIndex16 = 0\n        var closingBracketsArrayValueIndex16\
    \ = 0\n        var openingBracketsArrayValueIndex17 = 0\n        var closingBracketsArrayValueIndex17\
    \ = 0\n        var openingBracketsArrayValueIndex18 = 0\n        var closingBracketsArrayValueIndex18\
    \ = 0\n        var openingBracketsArrayValueIndex19 = 0\n        var closingBracketsArray",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.count(_\
    \ > 0)\n        val closingBracketsCount = closingBrackets.count(_ > 0)\n    \
    \    openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        var openingBrackets = 0\n        var closingBrackets\
    \ = 0\n        var openingBracketsArray = Array[Char]()\n        var closingBracketsArray\
    \ = Array[Char]()\n        var currentChar = 0\n        var currentBracket = 0\n\
    \        var currentBracketArray = Array[Char]()\n        var currentBracketIndex\
    \ = 0\n        var currentBracketArrayIndex = 0\n        var currentBracketArrayIndex2\
    \ = 0\n        var currentBracketArrayIndex3 = 0\n        var currentBracketArrayIndex4\
    \ = 0\n        var currentBracketArrayIndex5 = 0\n        var currentBracketArrayIndex6\
    \ = 0\n        var currentBracketArrayIndex7 = 0\n        var currentBracketArrayIndex8\
    \ = 0\n        var currentBracketArrayIndex9 = 0\n        var currentBracketArrayIndex10\
    \ = 0\n        var currentBracketArrayIndex11 = 0\n        var currentBracketArrayIndex12\
    \ = 0\n        var currentBracketArrayIndex13 = 0\n        var currentBracketArrayIndex14\
    \ = 0\n        var currentBracketArrayIndex15 = 0\n        var currentBracketArrayIndex16\
    \ = 0\n        var currentBracketArrayIndex17 = 0\n        var currentBracketArrayIndex18\
    \ = 0\n        var currentBracketArrayIndex19 = 0\n        var currentBracketArrayIndex20\
    \ = 0\n        var currentBracketArrayIndex21 = 0\n        var currentBracketArrayIndex22\
    \ = 0\n        var currentBracketArrayIndex23 = 0\n        var currentBracketArrayIndex24\
    \ = 0\n        var currentBracketArrayIndex25 = 0\n        var currentBracketArrayIndex26\
    \ = 0\n        var currentBracketArrayIndex27 = 0\n        var currentBracketArrayIndex28\
    \ = 0\n        var currentBracketArrayIndex29 = 0\n        var currentBracketArrayIndex30\
    \ = 0\n        var currentBracketArrayIndex31 = 0\n        var currentBracketArrayIndex32\
    \ = 0\n        var currentBracketArrayIndex33 = 0\n        var currentBracketArrayIndex34\
    \ = 0\n        var currentBracketArrayIndex35 = 0\n        var currentBracketArrayIndex36\
    \ = 0\n        var currentBracketArrayIndex37 = 0\n        var currentBracketArrayIndex38\
    \ = 0\n        var currentBracketArrayIndex39 = 0\n        var currentBracketArrayIndex40\
    \ = 0\n        var currentBracketArrayIndex41 = 0\n        var currentBracketArrayIndex42\
    \ = 0\n        var currentBracketArrayIndex43 = 0\n        var currentBracketArrayIndex44\
    \ = 0\n        var currentBracketArrayIndex45 = 0\n        var currentBracketArrayIndex46\
    \ = 0\n        var currentBracketArrayIndex47 = 0\n        var currentBracketArrayIndex48\
    \ = 0", "        val bracketsArray = brackets.toCharArray\n        val openingBrackets\
    \ = mutable.HashSet[Char]()\n        val closingBrackets = mutable.HashSet[Char]()\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        for (i <- 0 until bracketsArray.length) {\n            val c = bracketsArray(i)\n\
    \            if (c == '<') {\n                openingBracketsCount += 1\n    \
    \            openingBrackets += c\n            } else if (c == '>') {\n      \
    \          closingBracketsCount += 1\n                closingBrackets += c\n \
    \           }\n        }\n        if (openingBracketsCount != closingBracketsCount)\
    \ {\n            return false\n        }\n        for (i <- 0 until openingBrackets.size)\
    \ {\n            val c = openingBrackets(i)\n            if (!closingBrackets.contains(c))\
    \ {\n                return false\n            }\n        }\n        true", " \
    \       val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n      \
    \  val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets =\
    \ 0\n        var closingBrackets = 0\n        var currentChar = 0\n        var\
    \ currentCharValue = 0\n        var currentCharValue2 = 0\n        var currentCharValue3\
    \ = 0\n        var currentCharValue4 = 0\n        var currentCharValue5 = 0\n\
    \        var currentCharValue6 = 0\n        var currentCharValue7 = 0\n      \
    \  var currentCharValue8 = 0\n        var currentCharValue9 = 0\n        var currentCharValue10\
    \ = 0\n        var currentCharValue11 = 0\n        var currentCharValue12 = 0\n\
    \        var currentCharValue13 = 0\n        var currentCharValue14 = 0\n    \
    \    var currentCharValue15 = 0\n        var currentCharValue16 = 0\n        var\
    \ currentCharValue17 = 0\n        var currentCharValue18 = 0\n        var currentCharValue19\
    \ = 0\n        var currentCharValue20 = 0\n        var currentCharValue21 = 0\n\
    \        var currentCharValue22 = 0\n        var currentCharValue23 = 0\n    \
    \    var currentCharValue24 = 0\n        var currentCharValue25 = 0\n        var\
    \ currentCharValue26 = 0\n        var currentCharValue27 = 0\n        var currentCharValue28\
    \ = 0\n        var currentCharValue29 = 0\n        var currentCharValue30 = 0\n\
    \        var currentCharValue31 = 0\n        var currentCharValue32 = 0\n    \
    \    var currentCharValue33 = 0\n        var currentCharValue34 = 0\n        var\
    \ currentCharValue35 = 0\n        var currentCharValue36 = 0\n        var currentCharValue37\
    \ = 0\n        var currentCharValue38 = 0\n        var currentCharValue39 = 0\n\
    \        var currentCharValue40 = 0\n        var currentCharValue41 = 0\n    \
    \    var currentCharValue42 = 0\n        var currentCharValue43 = 0\n        var\
    \ currentCharValue44 = 0\n        var currentCharValue45 = 0\n        var currentCharValue46\
    \ = 0\n        var currentCharValue47 = 0\n        var currentCharValue48 = 0\n\
    \        var currentCharValue49 = 0\n        var currentCharValue50 = 0\n    \
    \    var currentCharValue51 = 0\n        var currentCharValue52 = 0\n        var\
    \ currentCharValue53 = 0\n        var currentCharValue54 = 0\n        var currentCharValue55\
    \ = 0\n        var currentCharValue56 = 0\n        var currentCharValue57 = 0\n\
    \        var currentCharValue58 = 0\n        var currentCharValue59 = 0\n    \
    \    var currentCharValue60 = 0\n        var currentCharValue61 = 0\n        var\
    \ currentCharValue62 = 0\n        var currentCharValue63 = 0\n        var currentCharValue64\
    \ = 0\n        var currentCharValue65 = 0\n        var currentCharValue66 = 0\n\
    \        var currentCharValue67 = 0\n        var currentCharValue68 = 0\n    \
    \    var currentCharValue69 = 0\n", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(_ == '<')\n        val\
    \ closingBracketsCount = bracketsArray.count(_ == '>')\n        openingBracketsCount\
    \ != closingBracketsCount", "        val bracketsArray = brackets.toList\n   \
    \     val openingBrackets = bracketsArray.filter(x => x == \"<\")\n        val\
    \ closingBrackets = bracketsArray.filter(x => x == \">\")\n        openingBrackets.size\
    \ == closingBrackets.size", "        val openingBrackets = brackets.split(\"<\"\
    )\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\")\n        val closingBracketsArray\
    \ = Array(\">\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayLength = 0\n        var closingBracketsArrayLength\
    \ = 0\n        var openingBracketsArrayIndex = 0\n        var closingBracketsArray",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.filter(c => c == '<').length\n\
    \        val closingBracketsCount = bracketsArray.filter(c => c == '>').length\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCount2 = 0\n        var closingBracketsCount2\
    \ = 0\n        var openingBracketsCount3 = 0\n        var closingBracketsCount3\
    \ = 0\n        var openingBracketsCount4 = 0\n        var closingBracketsCount4\
    \ = 0\n        var openingBracketsCount5 = 0\n        var closingBracketsCount5\
    \ = 0\n        var openingBracketsCount6 = 0\n        var closingBracketsCount6\
    \ = 0\n        var openingBracketsCount7 = 0\n        var closingBracketsCount7\
    \ = 0\n        var openingBracketsCount8 = 0\n        var closingBracketsCount8\
    \ = 0\n        var openingBracketsCount9 = 0\n        var closingBracketsCount9\
    \ = 0\n        var openingBracketsCount10 = 0\n        var closingBracketsCount10\
    \ = 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount26\
    \ = 0\n        var openingBracketsCount27", "        val openingBrackets = brackets.split(\"\
    <\").map(_.toInt)\n        val closingBrackets = brackets.split(\">\").map(_.toInt)\n\
    \        val openingBracketsCount = openingBrackets.foldLeft(0)(_ + _)\n     \
    \   val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n        openingBracketsCount\
    \ == closingBracketsCount", "        val openingBrackets = brackets.split(\"<\"\
    )\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsSet = openingBrackets.toSet\n\
    \        val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var closingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var openingBracketsCountArrayIndex = 0\n        var closingBracketsCountArrayIndex\
    \ = 0\n        var openingBracketsCountArrayIndex2 = 0\n        var closingBracketsCountArrayIndex2\
    \ = 0\n        var openingBracketsCountArrayIndex3 = 0\n        var closingBracketsCountArrayIndex3\
    \ = 0\n        var openingBracketsCountArrayIndex4 = 0\n        var closingBracketsCountArrayIndex4\
    \ = 0\n        var openingBracketsCountArrayIndex5 = 0\n        var closingBracketsCountArrayIndex5\
    \ = 0\n        var openingBracketsCountArrayIndex6 = 0\n        var closingBracketsCountArrayIndex6\
    \ = 0\n        var openingBracketsCountArrayIndex7 = 0\n        var closingBracketsCountArrayIndex7\
    \ = 0\n        var openingBracketsCountArrayIndex8 = 0\n        var closingBracketsCountArrayIndex8\
    \ = 0\n        var openingBracketsCountArrayIndex9 = 0\n        var closingBracketsCountArrayIndex9\
    \ = 0\n        var openingBracketsCountArrayIndex10 = 0\n        var closingBracketsCountArrayIndex10\
    \ = 0\n        var openingBracketsCountArrayIndex11 = 0\n        var closingBracketsCountArrayIndex11\
    \ = 0\n        var openingBracketsCountArrayIndex12 = 0\n        var closingBracketsCountArrayIndex12\
    \ = 0\n        var openingBracketsCountArrayIndex13 = 0\n        var closingBracketsCountArrayIndex13\
    \ = 0\n        var openingBracketsCountArrayIndex14 = 0\n        var closingBracketsCountArrayIndex14\
    \ = 0\n        var openingBracketsCountArrayIndex15 = 0\n        var closingBracketsCountArrayIndex15\
    \ = 0\n        var openingBracketsCountArrayIndex16 = 0\n        var closingBracketsCountArrayIndex16\
    \ = 0\n        var openingBracketsCountArrayIndex17 = 0\n        var closingBracketsCountArrayIndex17\
    \ = 0\n        var openingBracketsCountArrayIndex18 = 0\n        var closingBracketsCountArrayIndex18\
    \ = 0\n        var openingBracketsCountArrayIndex19 = 0\n        var closingBracketsCountArray",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val bracketsArrayCopy = Array(bracketsArrayLength)\n\
    \        System.arraycopy(bracketsArray, 0, bracketsArrayCopy, 0, bracketsArrayLength)\n\
    \        val openingBracketsArray = Array(bracketsArrayCopy.size)\n        val\
    \ closingBracketsArray = Array(bracketsArrayCopy.size)\n        val openingBracketsArrayCopy\
    \ = Array(openingBracketsArray.size)\n        val closingBracketsArrayCopy = Array(closingBracketsArray.size)\n\
    \        var openingBracketsArrayIndex = 0\n        var closingBracketsArrayIndex\
    \ = 0\n        var openingBracketsArrayCopyIndex = 0\n        var closingBracketsArrayCopyIndex\
    \ = 0\n        var openingBracketsArrayCopyIndex2 = 0\n        var closingBracketsArrayCopyIndex2\
    \ = 0\n        var openingBracketsArrayCopyIndex3 = 0\n        var closingBracketsArrayCopyIndex3\
    \ = 0\n        var openingBracketsArrayCopyIndex4 = 0\n        var closingBracketsArrayCopyIndex4\
    \ = 0\n        var openingBracketsArrayCopyIndex5 = 0\n        var closingBracketsArrayCopyIndex5\
    \ = 0\n        var openingBracketsArrayCopyIndex6 = 0\n        var closingBracketsArrayCopyIndex6\
    \ = 0\n        var openingBracketsArrayCopyIndex7 = 0\n        var closingBracketsArrayCopyIndex7\
    \ = 0\n        var openingBracketsArrayCopyIndex8 = 0\n        var closingBracketsArrayCopyIndex8\
    \ = 0\n        var openingBracketsArrayCopyIndex9 = 0\n        var closingBracketsArrayCopyIndex9\
    \ = 0\n        var openingBracketsArrayCopyIndex10 = 0\n        var closingBracketsArrayCopyIndex10\
    \ = 0\n        var openingBracketsArrayCopyIndex11 = 0\n        var closingBracketsArrayCopyIndex11\
    \ = 0\n        var openingBracketsArrayCopyIndex12 = 0\n        var closingBracketsArrayCopyIndex12\
    \ = 0\n        var openingBracketsArrayCopyIndex13 = 0\n        var closingBracketsArrayCopyIndex13\
    \ = 0\n        var openingBracketsArrayCopyIndex14 = 0\n        var closingBracketsArrayCopyIndex14\
    \ = 0\n        var openingBracketsArrayCopyIndex15 = 0\n        var closingBracketsArrayCopyIndex15\
    \ = 0\n        var openingBracketsArrayCopyIndex16 = 0\n        var closingBrackets",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var currentChar = bracketsArray(0)\n        var currentCharCount = 0\n\
    \        var currentCharPosition = 0\n        var currentCharPositionInBrackets\
    \ = 0\n        var currentCharPositionInBracketsArray = 0\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1\n        var currentCharPositionInBracketsArrayLength\
    \ = bracketsArrayLength - 1", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = bracketsArray.filter(c => c == '<')\n    \
    \    val closingBracketsArray = bracketsArray.filter(c => c == '>')\n        openingBracketsArray.forall(c\
    \ => closingBracketsArray.contains(c))", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(c => c == '<')\n     \
    \   val closingBracketsCount = bracketsArray.count(c => c == '>')\n        openingBracketsCount\
    \ == closingBracketsCount", "        val openingBrackets = brackets.split(\"<\"\
    ).map(_.trim).toSet\n        val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n\
    \        openingBrackets.subsetOf(closingBrackets)", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\"\
    >\").map(_.trim).toSet\n        openingBrackets.forall(closingBrackets.contains)",
  "        val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n       \
    \ val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array.fill(\n   \
    \         bracketsArrayLength\n        ){\n            false\n        }\n    \
    \    val closingBracketsArray = Array.fill(\n            bracketsArrayLength\n\
    \        ){\n            false\n        }\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracketsArrayLength = closingBracketsArrayLength\n        val openingBracketsArrayLength\
    \ = openingBracketsArrayLength\n        val closingBracketsArrayLength = closingBracketsArrayLength\n\
    \        val openingBracketsArrayLength = openingBracketsArrayLength\n       \
    \ val closingBracket", "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n\
    \        val closingBrackets = brackets.split(\">\").map(_.toInt)\n        val\
    \ openingBracketsCount = openingBrackets.toSet.size\n        val closingBracketsCount\
    \ = closingBrackets.toSet.size\n        openingBracketsCount == closingBracketsCount",
  "        val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n       \
    \ val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val bracketsArrayCopy = Array(bracketsArrayLength)\n\
    \        System.arraycopy(bracketsArray, 0, bracketsArrayCopy, 0, bracketsArrayLength)\n\
    \        val openingBracketsArray = Array(bracketsArrayLength)\n        val closingBracketsArray\
    \ = Array(bracketsArrayLength)\n        var openingBracketsIndex = 0\n       \
    \ var closingBracketsIndex = 0\n        var openingBracketsCount = 0\n       \
    \ var closingBracketsCount = 0\n        var openingBracketsCount2 = 0\n      \
    \  var closingBracketsCount2 = 0\n        var openingBracketsCount3 = 0\n    \
    \    var closingBracketsCount3 = 0\n        var openingBracketsCount4 = 0\n  \
    \      var closingBracketsCount4 = 0\n        var openingBracketsCount5 = 0\n\
    \        var closingBracketsCount5 = 0\n        var openingBracketsCount6 = 0\n\
    \        var closingBracketsCount6 = 0\n        var openingBracketsCount7 = 0\n\
    \        var closingBracketsCount7 = 0\n        var openingBracketsCount8 = 0\n\
    \        var closingBracketsCount8 = 0\n        var openingBracketsCount9 = 0\n\
    \        var closingBracketsCount9 = 0\n        var openingBracketsCount10 = 0\n\
    \        var closingBracketsCount10 = 0\n        var openingBracketsCount11 =\
    \ 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var opening", "       \
    \ val openingBrackets = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\"\
    >\")\n        val openingBracketsSet = openingBrackets.toSet\n        val closingBracketsSet\
    \ = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\", \"(\", \")\")\n        val closingBracketsArray = Array(\"\
    <\", \">\", \">\", \">\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsIndex\
    \ = 0\n        val closingBracketsIndex = 0\n        var openingBracketsCountInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracket = 0\n        var currentBracket\
    \ = openingBracketsArray(0)\n        var currentBracketCount = 0\n        var\
    \ currentBracketCountInCurrentBracket = 0\n        var currentBracketIndex = openingBracketsIndex\n\
    \        var currentBracketIndexInCurrentBracket = 0\n        var currentBracketCountInCurrentBracketIndex\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracket =\
    \ 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketIndexInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBra", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\")\n        val closingBracketsArray\
    \ = Array(\">\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val openingBracketsIndex\
    \ = 0\n        val closingBracketsIndex = 0\n        val openingBracketsArrayLength\
    \ = openingBracketsArray.length\n        val closingBracketsArrayLength = closingBracketsArray.length\n\
    \        val openingBracketsArrayIterator = openingBracketsArray.iterator\n  \
    \      val closingBracketsArrayIterator = closingBracketsArray.iterator\n    \
    \    val openingBracketsArrayIteratorIndex = openingBracketsArrayIterator\n  \
    \      val closingBracketsArrayIteratorIndex = closingBracketsArrayIterator\n\
    \        while (openingBracketsIndex < openingBracketsArrayLength) {\n       \
    \     val currentOpeningBracket = openingBracketsArrayIterator(openingBracketsIndex)\n\
    \            val currentClosingBracket = closingBracketsArrayIterator(closingBracketsIndex)\n\
    \            if (currentOpeningBracket == currentClosingBracket) {\n         \
    \       openingBracketsIndex += 1\n                closingBracketsIndex += 1\n\
    \            } else {\n                return false\n            }\n        }\n\
    \        return true", "        val bracketsArray = brackets.toCharArray\n   \
    \     val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCountInCurrentBracket\
    \ = 0\n        var closingBracketsCountInCurrentBracket = 0\n        var currentBracket\
    \ = bracketsArray(0)\n        var currentBracketIndex = 0\n        var currentBracketCount\
    \ = 0\n        var currentBracketCountInCurrentBracket = 0\n        var currentBracketCountInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracket", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\")\n        val closingBracketsArray\
    \ = Array(\">\")\n        val openingBracketsCount = openingBracketsArray.length\n\
    \        val closingBracketsCount = closingBracketsArray.length\n        val bracketsCount\
    \ = bracketsArray.length\n        val openingBracketsIndex = 0\n        val closingBracketsIndex\
    \ = 0\n        var openingBracketsFound = false\n        var closingBracketsFound\
    \ = false\n        var bracketsFound = false\n        var bracketsFoundIndex =\
    \ -1\n        var bracketsFoundFound = false\n        var openingBracketsFoundIndex\
    \ = -1\n        var closingBracketsFoundIndex = -1\n        var openingBracketsFoundFound\
    \ = false\n        var closingBracketsFoundFound = false\n        var openingBracketsFoundIndex\
    \ = -1\n        var closingBracketsFoundIndex = -1\n        var openingBracketsFoundFoundIndex\
    \ = -1\n        var closingBracketsFoundFoundIndex = -1\n        var openingBracketsFoundFoundFound\
    \ = false\n        var closingBracketsFoundFoundFound = false\n        var openingBracketsFoundFoundIndex\
    \ = -1\n        var closingBracketsFoundFoundIndex = -1\n        var openingBracketsFoundFoundFound\
    \ = false\n        var closingBracketsFoundFoundFound = false\n        var openingBracketsFoundFoundFoundIndex\
    \ = -1\n        var closingBracketsFoundFoundFoundIndex = -1\n        var openingBracketsFoundFoundFoundFound\
    \ = false\n        var closingBracketsFoundFoundFoundFound = false\n        var\
    \ openingBracketsFoundFoundFoundFoundIndex = -1\n        var closingBracketsFoundFoundFoundFoundIndex\
    \ = -1\n        var openingBracketsFoundFoundFoundFoundFound = false\n       \
    \ var closingBracketsFoundFoundFoundFoundFound = false\n        var openingBracketsFoundFoundFoundFoundFoundFoundIndex\
    \ = -1\n        var closingBracketsFoundFoundFoundFoundFoundIndex = -1\n     \
    \   var openingBracketsFoundFoundFoundFoundFoundFound = false\n        var closingBracketsFoundFoundFoundFoundFoundFound\
    \ = false\n        var openingBracketsFoundFoundFoundFoundFoundFoundFoundIndex\
    \ = -1\n        var closingBracketsFoundFoundFoundFoundFoundFoundFoundIndex =\
    \ -1\n        var openingBracketsFoundFoundFoundFoundFoundFoundFoundFound = false\n\
    \        var closingBracketsFoundFoundFoundFoundFoundFoundFoundFound = false\n\
    \        var openingBracketsFoundFoundFoundFoundFoundFoundFoundFoundFoundIndex\
    \ = -1\n        var closingBracketsFoundFound", "        val openingBrackets =\
    \ brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsSet = openingBrackets.toSet\n  \
    \      val closingBracketsSet = closingBrackets.toSet\n        openingBracketsSet.forall(closingBracketsSet.contains)",
  "        val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n       \
    \ val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.forall(closingBrackets.contains)",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        if (openingBracketsCount\
    \ != closingBracketsCount) {\n            return false\n        }\n        var\
    \ openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n        while\
    \ (openingBracketsIndex < openingBracketsCount && closingBracketsIndex < closingBracketsCount)\
    \ {\n            val openingBracket = openingBrackets(openingBracketsIndex)\n\
    \            val closingBracket = closingBrackets(closingBracketsIndex)\n    \
    \        if (openingBracket != closingBracket) {\n                return false\n\
    \            }\n            openingBracketsIndex += 1\n            closingBracketsIndex\
    \ += 1\n        }\n        return true", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsArray = Array(\"<\", \">\")\n        val closingBracketsArray\
    \ = Array(\"<\", \">\")\n        val openingBracketsArrayLength = openingBracketsArray.length\n\
    \        val closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  val openingBracketsArrayLength = bracketsArray.length\n        val closingBracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsArrayIndex = 0\n        var\
    \ closingBracketsArrayIndex = 0\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArrayLength = openingBracketsArray.length\n        var closingBracketsArrayLength\
    \ = closingBracketsArray.length\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArrayLength = openingBracketsArray.length\n        var closingBracketsArrayLength\
    \ = closingBracketsArray.length\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArrayLength = openingBracketsArray.length\n        var closingBracketsArrayLength\
    \ = closingBracketsArray.length\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArrayLength = openingBracketsArray.length\n        var closingBracketsArrayLength\
    \ = closingBracketsArray.length\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArrayLength = openingBracketsArray.length\n        var closingBracketsArrayLength\
    \ = closingBracketsArray.length\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var openingBracketsArrayLength = openingBracketsArray.length\n        var closingBracketsArrayLength\
    \ = closingBracketsArray.length\n        var openingBracketsArrayLength = openingBracketsArray.length\n\
    \        var closingBracketsArrayLength = closingBracketsArray.length\n      \
    \  var opening", "        val bracketsArray = brackets.toList\n        val openingBracketsArray\
    \ = bracketsArray.filter(x => x == \"<\")\n        val closingBracketsArray =\
    \ bracketsArray.filter(x => x == \">\")\n        openingBracketsArray.forall(x\
    \ => closingBracketsArray.contains(x))", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var currentChar = 0\n   \
    \     var currentBracket = 0\n        var currentBracketCount = 0\n        var\
    \ currentBracketCountArray = new Array[Int](bracketsArrayLength)\n        var\
    \ currentBracketCountArrayIndex = 0\n        var currentBracketCountArrayIndexIndex\
    \ = 0\n        var currentBracketCountArrayIndexLength = bracketsArrayLength\n\
    \        var currentBracketCountArrayIndexLength = bracketsArrayLength\n     \
    \   var currentBracketCountArrayIndexLength = bracketsArrayLength\n        var\
    \ currentBracketCountArrayIndexLength = bracketsArrayLength\n        var currentBracketCountArrayIndexLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndexLength = bracketsArrayLength\n\
    \        var currentBracketCountArrayIndexLength = bracketsArrayLength\n     \
    \   var currentBracketCountArrayIndexLength = bracketsArrayLength\n        var\
    \ currentBracketCountArrayIndexLength = bracketsArrayLength\n        var currentBracketCountArrayIndexLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndexLength = bracketsArrayLength\n\
    \        var currentBracketCountArrayIndexLength = bracketsArrayLength\n     \
    \   var currentBracketCountArrayIndexLength = bracketsArrayLength\n        var\
    \ currentBracketCountArrayIndexLength = bracketsArrayLength\n        var currentBracketCountArrayIndexLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndexLength = bracketsArrayLength\n\
    \        var currentBracketCountArrayIndexLength = bracketsArrayLength\n     \
    \   var currentBracketCountArrayIndexLength = bracketsArrayLength\n        var\
    \ currentBracketCountArrayIndexLength = bracketsArrayLength\n        var currentBracketCountArrayIndexLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndexLength = bracketsArrayLength\n\
    \        var currentBracketCountArrayIndexLength = bracketsArrayLength\n     \
    \   var currentBracketCountArrayIndexLength = bracketsArrayLength\n        var\
    \ currentBracketCountArrayIndexLength = bracketsArrayLength\n        var currentBracketCountArrayIndexLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndexLength = bracketsArrayLength\n\
    \        var currentBracketCountArrayIndexLength = bracketsArrayLength\n     \
    \   var currentBracketCountArrayIndexLength = bracketsArrayLength\n        var\
    \ currentBracketCountArrayIndexLength = bracketsArrayLength\n        var currentBracketCountArrayIndexLength\
    \ = bracketsArrayLength\n        var currentBracketCountArrayIndexLength = bracketsArrayLength\n\
    \        var currentBracketCountArrayIndexLength = bracketsArrayLength\n", " \
    \       val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n      \
    \  val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.forall(openingBracket\
    \ => closingBrackets.contains(openingBracket))", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\"\
    >\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)", " \
    \       val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var closingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var openingBracketsCountArrayIndex = 0\n        var closingBracketsCountArrayIndex\
    \ = 0\n        var openingBracketsCountArrayIndex2 = 0\n        var closingBracketsCountArrayIndex2\
    \ = 0\n        var openingBracketsCountArrayIndex3 = 0\n        var closingBracketsCountArrayIndex3\
    \ = 0\n        var openingBracketsCountArrayIndex4 = 0\n        var closingBracketsCountArrayIndex4\
    \ = 0\n        var openingBracketsCountArrayIndex5 = 0\n        var closingBracketsCountArrayIndex5\
    \ = 0\n        var openingBracketsCountArrayIndex6 = 0\n        var closingBracketsCountArrayIndex6\
    \ = 0\n        var openingBracketsCountArrayIndex7 = 0\n        var closingBracketsCountArrayIndex7\
    \ = 0\n        var openingBracketsCountArrayIndex8 = 0\n        var closingBracketsCountArrayIndex8\
    \ = 0\n        var openingBracketsCountArrayIndex9 = 0\n        var closingBracketsCountArrayIndex9\
    \ = 0\n        var openingBracketsCountArrayIndex10 = 0\n        var closingBracketsCountArrayIndex10\
    \ = 0\n        var openingBracketsCountArrayIndex11 = 0\n        var closingBracketsCountArrayIndex11\
    \ = 0\n        var openingBracketsCountArrayIndex12 = 0\n        var closingBracketsCountArrayIndex12\
    \ = 0\n        var openingBracketsCountArrayIndex13 = 0\n        var closingBracketsCountArrayIndex13\
    \ = 0\n        var openingBracketsCountArrayIndex14 = 0\n        var closingBracketsCountArrayIndex14\
    \ = 0\n        var openingBracketsCountArrayIndex15 = 0\n        var closingBracketsCountArrayIndex15\
    \ = 0\n        var openingBracketsCountArrayIndex16 = 0\n        var closingBracketsCountArrayIndex16\
    \ = 0\n        var openingBracketsCountArrayIndex17 = 0\n        var closingBracketsCountArrayIndex17\
    \ = 0\n        var openingBracketsCountArrayIndex18 = 0\n        var closingBracketsCountArrayIndex18\
    \ = 0\n        var openingBracketsCountArrayIndex19 = 0\n        var closingBracketsCountArray",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(x => closingBrackets.contains(x))",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = bracketsArray.filter(c => c == '<')\n        val closingBracketsArray = bracketsArray.filter(c\
    \ => c == '>')\n        openingBracketsArray.forall(c => closingBracketsArray.contains(c))",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        openingBracketsCount\
    \ == closingBracketsCount && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsArray = Array[Int](bracketsArrayLength)\n\
    \        val closingBracketsArray = Array[Int](bracketsArrayLength)\n        var\
    \ openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n        var\
    \ openingBracketsCount = 0\n        var closingBracketsCount = 0\n        var\
    \ openingBracketsCount2 = 0\n        var closingBracketsCount2 = 0\n        var\
    \ openingBracketsCount3 = 0\n        var closingBracketsCount3 = 0\n        var\
    \ openingBracketsCount4 = 0\n        var closingBracketsCount4 = 0\n        var\
    \ openingBracketsCount5 = 0\n        var closingBracketsCount5 = 0\n        var\
    \ openingBracketsCount6 = 0\n        var closingBracketsCount6 = 0\n        var\
    \ openingBracketsCount7 = 0\n        var closingBracketsCount7 = 0\n        var\
    \ openingBracketsCount8 = 0\n        var closingBracketsCount8 = 0\n        var\
    \ openingBracketsCount9 = 0\n        var closingBracketsCount9 = 0\n        var\
    \ openingBracketsCount10 = 0\n        var closingBracketsCount10 = 0\n       \
    \ var openingBracketsCount11 = 0\n        var closingBracketsCount11 = 0\n   \
    \     var openingBracketsCount12 = 0\n        var closingBracketsCount12 = 0\n\
    \        var openingBracketsCount13 = 0\n        var closingBracketsCount13 =\
    \ 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBrackets", " \
    \       val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentChar = 0\n        var currentCharValue = 0\n       \
    \ var currentCharValue2 = 0\n        var currentCharValue3 = 0\n        var currentCharValue4\
    \ = 0\n        var currentCharValue5 = 0\n        var currentCharValue6 = 0\n\
    \        var currentCharValue7 = 0\n        var currentCharValue8 = 0\n      \
    \  var currentCharValue9 = 0\n        var currentCharValue10 = 0\n        var\
    \ currentCharValue11 = 0\n        var currentCharValue12 = 0\n        var currentCharValue13\
    \ = 0\n        var currentCharValue14 = 0\n        var currentCharValue15 = 0\n\
    \        var currentCharValue16 = 0\n        var currentCharValue17 = 0\n    \
    \    var currentCharValue18 = 0\n        var currentCharValue19 = 0\n        var\
    \ currentCharValue20 = 0\n        var currentCharValue21 = 0\n        var currentCharValue22\
    \ = 0\n        var currentCharValue23 = 0\n        var currentCharValue24 = 0\n\
    \        var currentCharValue25 = 0\n        var currentCharValue26 = 0\n    \
    \    var currentCharValue27 = 0\n        var currentCharValue28 = 0\n        var\
    \ currentCharValue29 = 0\n        var currentCharValue30 = 0\n        var currentCharValue31\
    \ = 0\n        var currentCharValue32 = 0\n        var currentCharValue33 = 0\n\
    \        var currentCharValue34 = 0\n        var currentCharValue35 = 0\n    \
    \    var currentCharValue36 = 0\n        var currentCharValue37 = 0\n        var\
    \ currentCharValue38 = 0\n        var currentCharValue39 = 0\n        var currentCharValue40\
    \ = 0\n        var currentCharValue41 = 0\n        var currentCharValue42 = 0\n\
    \        var currentCharValue43 = 0\n        var currentCharValue44 = 0\n    \
    \    var currentCharValue45 = 0\n        var currentCharValue46 = 0\n        var\
    \ currentCharValue47 = 0\n        var currentCharValue48 = 0\n        var currentCharValue49\
    \ = 0\n        var currentCharValue50 = 0\n        var currentCharValue51 = 0\n\
    \        var currentCharValue52 = 0\n        var currentCharValue53 = 0\n    \
    \    var currentCharValue54 = 0\n        var currentCharValue55 = 0\n        var\
    \ currentCharValue56 = 0\n        var currentCharValue57 = 0\n        var currentCharValue58\
    \ = 0\n        var currentCharValue59 = 0\n        var currentCharValue60 = 0\n\
    \        var currentCharValue61 = 0\n        var currentCharValue62 = 0\n    \
    \    var currentCharValue63 = 0\n        var currentCharValue64 = 0\n        var\
    \ currentCharValue65 = 0\n        var currentCharValue66 = 0\n        var currentCharValue67\
    \ = 0", "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n  \
    \      val closingBrackets = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount\
    \ = openingBrackets.foldLeft(0)(_ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_\
    \ + _)\n        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBrackets = bracketsArray.filter(c\
    \ => c == '<')\n        val closingBrackets = bracketsArray.filter(c => c == '>')\n\
    \        openingBrackets.size == closingBrackets.size", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val bracketsArrayCopy = Array(bracketsArrayLength)\n        System.arraycopy(bracketsArray,\
    \ 0, bracketsArrayCopy, 0, bracketsArrayLength)\n        val openingBracketsArray\
    \ = Array(bracketsArrayCopy.size)\n        val closingBracketsArray = Array(bracketsArrayCopy.size)\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var openingBracketsCount2 = 0\n        var closingBracketsCount2 = 0\n\
    \        var openingBracketsCount3 = 0\n        var closingBracketsCount3 = 0\n\
    \        var openingBracketsCount4 = 0\n        var closingBracketsCount4 = 0\n\
    \        var openingBracketsCount5 = 0\n        var closingBracketsCount5 = 0\n\
    \        var openingBracketsCount6 = 0\n        var closingBracketsCount6 = 0\n\
    \        var openingBracketsCount7 = 0\n        var closingBracketsCount7 = 0\n\
    \        var openingBracketsCount8 = 0\n        var closingBracketsCount8 = 0\n\
    \        var openingBracketsCount9 = 0\n        var closingBracketsCount9 = 0\n\
    \        var openingBracketsCount10 = 0\n        var closingBracketsCount10 =\
    \ 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var ", "        val openingBrackets = brackets.split(\"<\")\n \
    \       val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val openingBrackets = brackets.split(\"\
    <\").map(_.toInt)\n        val closingBrackets = brackets.split(\">\").map(_.toInt)\n\
    \        val openingBracketsCount = openingBrackets.count(_ > 0)\n        val\
    \ closingBracketsCount = closingBrackets.count(_ > 0)\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        val openingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        )(0)\n        val closingBracketsArray\
    \ = Array.fill(\n            bracketsArrayLength\n        )(0)\n        var openingBracketsIndex\
    \ = 0\n        var closingBracketsIndex = 0\n        var currentBracketsIndex\
    \ = 0\n        var currentOpeningBracketsIndex = 0\n        var currentClosingBracketsIndex\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var currentOpeningBracketsCount = 0\n        var currentClosingBracketsCount\
    \ = 0\n        var ", "        val openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n\
    \        val closingBrackets = brackets.split(\">\").map(_.trim).toSet\n     \
    \   openingBrackets.forall(closingBrackets.contains)", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBracketsCount = bracketsArray.count(_\
    \ == '<')\n        val closingBracketsCount = bracketsArray.count(_ == '>')\n\
    \        openingBracketsCount == closingBracketsCount", "        val bracketsArray\
    \ = brackets.toCharArray\n        val openingBrackets = mutable.HashSet[Char]()\n\
    \        val closingBrackets = mutable.HashSet[Char]()\n        val openingBracketsArray\
    \ = mutable.ArrayBuffer.empty[Char]\n        val closingBracketsArray = mutable.ArrayBuffer.empty[Char]\n\
    \        var openingBracketsIndex = 0\n        var closingBracketsIndex = 0\n\
    \        var currentOpeningBracketIndex = 0\n        var currentClosingBracketIndex\
    \ = 0\n        for(i <- 0 until bracketsArray.length){\n            if(bracketsArray(i)\
    \ == '<'){\n                openingBracketsIndex += 1\n                openingBracketsArray\
    \ += bracketsArray(i)\n            }\n            if(bracketsArray(i) == '>'){\n\
    \                closingBracketsIndex += 1\n                closingBracketsArray\
    \ += bracketsArray(i)\n            }\n            if(bracketsArray(i) == '<' &&\
    \ closingBracketsIndex > 0){\n                openingBrackets += openingBracketsArray(currentOpeningBracketIndex)\n\
    \                closingBrackets += closingBracketsArray(currentClosingBracketIndex)\n\
    \                currentOpeningBracketIndex += 1\n                currentClosingBracketIndex\
    \ += 1\n            }\n            if(bracketsArray(i) == '>' && openingBracketsIndex\
    \ > 0){\n                openingBrackets += openingBracketsArray(currentOpeningBracketIndex)\n\
    \                closingBrackets += closingBracketsArray(currentClosingBracketIndex)\n\
    \                currentOpeningBracketIndex += 1\n            }\n        }\n \
    \       openingBrackets.size == closingBrackets.size", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets = brackets.split(\"\
    >\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)", " \
    \       val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val\
    \ closingBrackets = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount\
    \ = openingBrackets.toSet.size // O(n)\n        val closingBracketsCount = closingBrackets.toSet.size\
    \ // O(n)\n        openingBracketsCount == closingBracketsCount // O(1)", "  \
    \      val bracketsArray = brackets.toCharArray\n        val openingBracketsCount\
    \ = bracketsArray.count(_ == '<')\n        val closingBracketsCount = bracketsArray.count(_\
    \ == '>')\n        openingBracketsCount == closingBracketsCount", "        val\
    \ openingBrackets = brackets.split(\"<\").map(_.trim).toSet\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.trim).toSet\n        openingBrackets.subsetOf(closingBrackets)",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCountInCurrentBracket = 0\n        var closingBracketsCountInCurrentBracket\
    \ = 0\n        var currentBracket = bracketsArray(0)\n        var currentBracketCount\
    \ = 0\n        var currentBracketCountInCurrentBracket = 0\n        var currentBracketCountInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentBracketCountInCurrentBracketInCurrent", "        val\
    \ openingBrackets = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\"\
    >\")\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(x => closingBrackets.contains(x))", "        val bracketsArray\
    \ = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var isCorrect = true\n        for (bracketsIndex <- 0 until bracketsArrayLength)\
    \ {\n            val currentChar = bracketsArray(bracketsIndex)\n            if\
    \ (currentChar == '<') {\n                openingBracketsCount += 1\n        \
    \    } else if (currentChar == '>') {\n                closingBracketsCount +=\
    \ 1\n            }\n            if (openingBracketsCount > closingBracketsCount)\
    \ {\n                isCorrect = false\n                break\n            }\n\
    \        }\n        isCorrect", "        val openingBrackets = brackets.split(\"\
    <\").map(_.toInt)\n        val closingBrackets = brackets.split(\">\").map(_.toInt)\n\
    \        val openingBracketsCount = openingBrackets.toSet.size\n        val closingBracketsCount\
    \ = closingBrackets.toSet.size\n        openingBracketsCount == closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        var openingBrackets =\
    \ 0 // number of opening brackets\n        var closingBrackets = 0 // number of\
    \ closing brackets\n        var openingBracketsArray = Array.empty[Char]\n   \
    \     var closingBracketsArray = Array.empty[Char]\n        var currentChar =\
    \ ' '\n        var currentCharArray = Array.empty[Char]\n        var currentCharArrayIndex\
    \ = -1\n        var currentCharArrayIndexMax = -1\n        var currentCharArrayIndexMin\
    \ = -1\n        var currentCharArrayIndexMaxMin = -1\n        var currentCharArrayIndexMinMax\
    \ = -1\n        var currentCharArrayIndexMinMaxMin = -1\n        var currentCharArrayIndexMinMaxMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var\
    \ currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var\
    \ currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var\
    \ currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var\
    \ currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var\
    \ currentCharArrayIndexMinMaxMinMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMinMinMin = -1\n        var\
    \ currentCharArrayIndexMinMaxMinMinMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMinMinMin = -1\n        var\
    \ currentCharArrayIndexMinMaxMinMinMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMinMin\
    \ = -1\n        var currentCharArrayIndexMinMaxMinMinMinMinMin = -1\n        var\
    \ currentCharArrayIndexMinMaxMinMinMinMinMinMin = -1\n        var currentCharArrayIndexMinMaxMinMinMinMinMin",
  "        val openingBrackets = brackets.split(\"<\")\n        val closingBrackets\
    \ = brackets.split(\">\")\n        val openingBracketsCount = openingBrackets.length\n\
    \        val closingBracketsCount = closingBrackets.length\n        val openingBracketsSet\
    \ = openingBrackets.toSet\n        val closingBracketsSet = closingBrackets.toSet\n\
    \        openingBracketsSet.forall(closingBracketsSet.contains)", "        val\
    \ bracketsArray = brackets.toCharArray\n        val bracketsArrayLength = bracketsArray.length\n\
    \        val bracketsArrayIndex = 0\n        var bracketsArrayIndexCount = 0\n\
    \        var bracketsArrayIndexCount2 = 0\n        var bracketsArrayIndexCount3\
    \ = 0\n        var bracketsArrayIndexCount4 = 0\n        var bracketsArrayIndexCount5\
    \ = 0\n        var bracketsArrayIndexCount6 = 0\n        var bracketsArrayIndexCount7\
    \ = 0\n        var bracketsArrayIndexCount8 = 0\n        var bracketsArrayIndexCount9\
    \ = 0\n        var bracketsArrayIndexCount10 = 0\n        var bracketsArrayIndexCount11\
    \ = 0\n        var bracketsArrayIndexCount12 = 0\n        var bracketsArrayIndexCount13\
    \ = 0\n        var bracketsArrayIndexCount14 = 0\n        var bracketsArrayIndexCount15\
    \ = 0\n        var bracketsArrayIndexCount16 = 0\n        var bracketsArrayIndexCount17\
    \ = 0\n        var bracketsArrayIndexCount18 = 0\n        var bracketsArrayIndexCount19\
    \ = 0\n        var bracketsArrayIndexCount20 = 0\n        var bracketsArrayIndexCount21\
    \ = 0\n        var bracketsArrayIndexCount22 = 0\n        var bracketsArrayIndexCount23\
    \ = 0\n        var bracketsArrayIndexCount24 = 0\n        var bracketsArrayIndexCount25\
    \ = 0\n        var bracketsArrayIndexCount26 = 0\n        var bracketsArrayIndexCount27\
    \ = 0\n        var bracketsArrayIndexCount28 = 0\n        var bracketsArrayIndexCount29\
    \ = 0\n        var bracketsArrayIndexCount30 = 0\n        var bracketsArrayIndexCount31\
    \ = 0\n        var bracketsArrayIndexCount32 = 0\n        var bracketsArrayIndexCount33\
    \ = 0\n        var bracketsArrayIndexCount34 = 0\n        var bracketsArrayIndexCount35\
    \ = 0\n        var bracketsArrayIndexCount36 = 0\n        var bracketsArrayIndexCount37\
    \ = 0\n        var bracketsArrayIndexCount38 = 0\n        var bracketsArrayIndexCount39\
    \ = 0\n        var bracketsArrayIndexCount40 = 0\n        var bracketsArrayIndexCount41\
    \ = 0\n        var bracketsArrayIndexCount42 = 0\n        var bracketsArrayIndexCount43\
    \ = 0\n        var bracketsArrayIndexCount44 = 0\n        var bracketsArrayIndexCount45\
    \ = 0\n        var bracketsArrayIndexCount46 = 0\n        var bracketsArrayIndexCount47\
    \ = 0\n        var bracketsArrayIndexCount48 = 0\n        var bracketsArrayIndexCount49\
    \ = 0\n        var bracketsArrayIndexCount50 = 0\n        var bracketsArrayIndexCount51\
    \ = 0\n        var bracketsArrayIndexCount52 = 0\n        var bracketsArrayIndexCount53\
    \ = 0\n        var bracketsArrayIndex", "        val openingBrackets = brackets.split(\"\
    <\")\n        val closingBrackets = brackets.split(\">\")\n        val openingBracketsCount\
    \ = openingBrackets.length\n        val closingBracketsCount = closingBrackets.length\n\
    \        openingBracketsCount == closingBracketsCount && openingBrackets.forall(x\
    \ => closingBrackets.contains(x))", "        val bracketsArray = brackets.toCharArray\n\
    \        val bracketsArrayLength = bracketsArray.length\n        var openingBracketsCount\
    \ = 0\n        var closingBracketsCount = 0\n        var openingBracketsCount2\
    \ = 0\n        var closingBracketsCount2 = 0\n        var openingBracketsCount3\
    \ = 0\n        var closingBracketsCount3 = 0\n        var openingBracketsCount4\
    \ = 0\n        var closingBracketsCount4 = 0\n        var openingBracketsCount5\
    \ = 0\n        var closingBracketsCount5 = 0\n        var openingBracketsCount6\
    \ = 0\n        var closingBracketsCount6 = 0\n        var openingBracketsCount7\
    \ = 0\n        var closingBracketsCount7 = 0\n        var openingBracketsCount8\
    \ = 0\n        var closingBracketsCount8 = 0\n        var openingBracketsCount9\
    \ = 0\n        var closingBracketsCount9 = 0\n        var openingBracketsCount10\
    \ = 0\n        var closingBracketsCount10 = 0\n        var openingBracketsCount11\
    \ = 0\n        var closingBracketsCount11 = 0\n        var openingBracketsCount12\
    \ = 0\n        var closingBracketsCount12 = 0\n        var openingBracketsCount13\
    \ = 0\n        var closingBracketsCount13 = 0\n        var openingBracketsCount14\
    \ = 0\n        var closingBracketsCount14 = 0\n        var openingBracketsCount15\
    \ = 0\n        var closingBracketsCount15 = 0\n        var openingBracketsCount16\
    \ = 0\n        var closingBracketsCount16 = 0\n        var openingBracketsCount17\
    \ = 0\n        var closingBracketsCount17 = 0\n        var openingBracketsCount18\
    \ = 0\n        var closingBracketsCount18 = 0\n        var openingBracketsCount19\
    \ = 0\n        var closingBracketsCount19 = 0\n        var openingBracketsCount20\
    \ = 0\n        var closingBracketsCount20 = 0\n        var openingBracketsCount21\
    \ = 0\n        var closingBracketsCount21 = 0\n        var openingBracketsCount22\
    \ = 0\n        var closingBracketsCount22 = 0\n        var openingBracketsCount23\
    \ = 0\n        var closingBracketsCount23 = 0\n        var openingBracketsCount24\
    \ = 0\n        var closingBracketsCount24 = 0\n        var openingBracketsCount25\
    \ = 0\n        var closingBracketsCount25 = 0\n        var openingBracketsCount26\
    \ = 0\n        var closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        var openingBrackets : List[Char] = Nil\n        var closingBrackets :\
    \ List[Char] = Nil\n        var openingBracketsCount : Int = 0\n        var closingBracketsCount\
    \ : Int = 0\n        for (i <- 0 until bracketsArray.length) {\n            val\
    \ currentChar = bracketsArray(i)\n            if (currentChar == '<') {\n    \
    \            openingBrackets = openingBrackets :+ currentChar\n              \
    \  openingBracketsCount += 1\n            } else if (currentChar == '>') {\n \
    \               closingBrackets = closingBrackets :+ currentChar\n           \
    \     closingBracketsCount += 1\n            }\n        }\n        if (openingBracketsCount\
    \ == closingBracketsCount) {\n            true\n        } else {\n           \
    \ false\n        }", "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n\
    \        val closingBrackets = brackets.split(\">\").map(_.toInt)\n        val\
    \ openingBracketsCount = openingBrackets.toSet.size // number of opening brackets\n\
    \        val closingBracketsCount = closingBrackets.toSet.size // number of closing\
    \ brackets\n        openingBracketsCount == closingBracketsCount // number of\
    \ opening brackets == number of closing brackets", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.toSet.size\n\
    \        val closingBracketsCount = closingBrackets.toSet.size\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBrackets = bracketsArray.filter(c => c == '<')\n        val\
    \ closingBrackets = bracketsArray.filter(c => c == '>')\n        openingBrackets.forall(c\
    \ => closingBrackets.contains(c))", "        val bracketsArray = brackets.toCharArray\n\
    \        val openingBracketsCount = bracketsArray.count(_ == '<')\n        val\
    \ closingBracketsCount = bracketsArray.count(_ == '>')\n        openingBracketsCount\
    \ == closingBracketsCount", "        val bracketsArray = brackets.toCharArray\n\
    \        var openingBracketsCount = 0\n        var closingBracketsCount = 0\n\
    \        var currentChar = bracketsArray(0)\n        var currentCharCount = 0\n\
    \        var currentCharCountInCurrentBracket = 0\n        var currentCharCountInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket\
    \ = 0\n        var currentCharCountInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracketInCurrentBracket",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        val openingBracketsCount = bracketsArray.filter(c\
    \ => c == '<').length\n        val closingBracketsCount = bracketsArray.filter(c\
    \ => c == '>').length\n        openingBracketsCount == closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var currentChar: Char = ' '\n        var currentBracket: Char =\
    \ ' '\n        var currentBracketCount = 0\n        var currentBracketCount2 =\
    \ 0\n        var currentBracketCount3 = 0\n        var currentBracketCount4 =\
    \ 0\n        var currentBracketCount5 = 0\n        var currentBracketCount6 =\
    \ 0\n        var currentBracketCount7 = 0\n        var currentBracketCount8 =\
    \ 0\n        var currentBracketCount9 = 0\n        var currentBracketCount10 =\
    \ 0\n        var currentBracketCount11 = 0\n        var currentBracketCount12\
    \ = 0\n        var currentBracketCount13 = 0\n        var currentBracketCount14\
    \ = 0\n        var currentBracketCount15 = 0\n        var currentBracketCount16\
    \ = 0\n        var currentBracketCount17 = 0\n        var currentBracketCount18\
    \ = 0\n        var currentBracketCount19 = 0\n        var currentBracketCount20\
    \ = 0\n        var currentBracketCount21 = 0\n        var currentBracketCount22\
    \ = 0\n        var currentBracketCount23 = 0\n        var currentBracketCount24\
    \ = 0\n        var currentBracketCount25 = 0\n        var currentBracketCount26\
    \ = 0\n        var currentBracketCount27 = 0\n        var currentBracketCount28\
    \ = 0\n        var currentBracketCount29 = 0\n        var currentBracketCount30\
    \ = 0\n        var currentBracketCount31 = 0\n        var currentBracketCount32\
    \ = 0\n        var currentBracketCount33 = 0\n        var currentBracketCount34\
    \ = 0\n        var currentBracketCount35 = 0\n        var currentBracketCount36\
    \ = 0\n        var currentBracketCount37 = 0\n        var currentBracketCount38\
    \ = 0\n        var currentBracketCount39 = 0\n        var currentBracketCount40\
    \ = 0\n        var currentBracketCount41 = 0\n        var currentBracketCount42\
    \ = 0\n        var currentBracketCount43 = 0\n        var currentBracketCount44\
    \ = 0\n        var currentBracketCount45 = 0\n        var currentBracketCount46\
    \ = 0\n        var currentBracketCount47 = 0\n        var currentBracketCount48\
    \ = 0\n        var currentBracketCount49 = 0\n        var currentBracketCount50\
    \ = 0\n        var currentBracketCount51 = 0\n        var currentBracketCount52\
    \ = 0\n        var currentBracketCount53 = 0\n        var currentBracketCount54\
    \ = 0\n        var currentBracketCount55 = 0\n        var currentBracketCount56\
    \ = 0\n        var currentBracketCount57 = 0\n", "        val bracketsArray =\
    \ brackets.toList\n        val openingBracketsCount = bracketsArray.count(_ ==\
    \ '<')\n        val closingBracketsCount = bracketsArray.count(_ == '>')\n   \
    \     openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val openingBrackets = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets\
    \ = brackets.split(\">\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(x => closingBrackets.contains(x))", "        val openingBrackets\
    \ = brackets.split(\"<\").map(_.toInt)\n        val closingBrackets = brackets.split(\"\
    >\").map(_.toInt)\n        val openingBracketsCount = openingBrackets.foldLeft(0)(_\
    \ + _)\n        val closingBracketsCount = closingBrackets.foldLeft(0)(_ + _)\n\
    \        openingBracketsCount == closingBracketsCount", "        val openingBrackets\
    \ = brackets.split(\"<\")\n        val closingBrackets = brackets.split(\">\"\
    )\n        val openingBracketsCount = openingBrackets.length\n        val closingBracketsCount\
    \ = closingBrackets.length\n        openingBracketsCount == closingBracketsCount\
    \ && openingBrackets.forall(openingBracket => closingBrackets.contains(openingBracket))",
  "        val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCount2 = 0\n        var closingBracketsCount2\
    \ = 0\n        var openingBracketsCount3 = 0\n        var closingBracketsCount3\
    \ = 0\n        var openingBracketsCount4 = 0\n        var closingBracketsCount4\
    \ = 0\n        var openingBracketsCount5 = 0\n        var closingBracketsCount5\
    \ = 0\n        var openingBracketsCount6 = 0\n        var closingBracketsCount6\
    \ = 0\n        var openingBracketsCount7 = 0\n        var closingBracketsCount7\
    \ = 0\n        var openingBracketsCount8 = 0\n        var closingBracketsCount8\
    \ = 0\n        var openingBracketsCount9 = 0\n        var closingBracketsCount9\
    \ = 0\n        var openingBracketsCount10 = 0\n        var closingBracketsCount10\
    \ = 0\n        var openingBracketsCount11 = 0\n        var closingBracketsCount11\
    \ = 0\n        var openingBracketsCount12 = 0\n        var closingBracketsCount12\
    \ = 0\n        var openingBracketsCount13 = 0\n        var closingBracketsCount13\
    \ = 0\n        var openingBracketsCount14 = 0\n        var closingBracketsCount14\
    \ = 0\n        var openingBracketsCount15 = 0\n        var closingBracketsCount15\
    \ = 0\n        var openingBracketsCount16 = 0\n        var closingBracketsCount16\
    \ = 0\n        var openingBracketsCount17 = 0\n        var closingBracketsCount17\
    \ = 0\n        var openingBracketsCount18 = 0\n        var closingBracketsCount18\
    \ = 0\n        var openingBracketsCount19 = 0\n        var closingBracketsCount19\
    \ = 0\n        var openingBracketsCount20 = 0\n        var closingBracketsCount20\
    \ = 0\n        var openingBracketsCount21 = 0\n        var closingBracketsCount21\
    \ = 0\n        var openingBracketsCount22 = 0\n        var closingBracketsCount22\
    \ = 0\n        var openingBracketsCount23 = 0\n        var closingBracketsCount23\
    \ = 0\n        var openingBracketsCount24 = 0\n        var closingBracketsCount24\
    \ = 0\n        var openingBracketsCount25 = 0\n        var closingBracketsCount25\
    \ = 0\n        var openingBracketsCount26 = 0\n        var closingBracketsCount",
  "        val bracketsArray = brackets.toCharArray\n        val openingBracketsArray\
    \ = Array(\"<\", \">\")\n        val closingBracketsArray = Array(\"<\", \">\"\
    )\n        val openingBracketsSet = openingBracketsArray.toSet\n        val closingBracketsSet\
    \ = closingBracketsArray.toSet\n        val openingBracketsArraySize = openingBracketsArray.length\n\
    \        val closingBracketsArraySize = closingBracketsArray.length\n        val\
    \ openingBracketsArrayIterator = openingBracketsArray.iterator\n        val closingBracketsArrayIterator\
    \ = closingBracketsArray.iterator\n        val openingBracketsArrayIteratorSize\
    \ = openingBracketsArrayIterator.length\n        val closingBracketsArrayIteratorSize\
    \ = closingBracketsArrayIterator.length\n        val openingBracketsSetIterator\
    \ = openingBracketsSet.iterator\n        val closingBracketsSetIterator = closingBracketsSet.iterator\n\
    \        val openingBracketsSetIteratorSize = openingBracketsSetIterator.length\n\
    \        val closingBracketsSetIteratorSize = closingBracketsSetIterator.length\n\
    \        val openingBracketsArrayIteratorSize = openingBracketsArrayIterator.length\n\
    \        val closingBracketsArrayIteratorSize = closingBracketsArrayIterator.length\n\
    \        val openingBracketsSetIteratorSize = openingBracketsSetIterator.length\n\
    \        val closingBracketsSetIteratorSize = closingBracketsSetIterator.length\n\
    \        val openingBracketsArraySize = openingBracketsArray.length\n        val\
    \ closingBracketsArraySize = closingBracketsArray.length\n        val openingBracketsSetSize\
    \ = openingBracketsSet.length\n        val closingBracketsSetSize = closingBracketsSet.length\n\
    \        val openingBracketsArrayIteratorSize = openingBracketsArrayIterator.length\n\
    \        val closingBracketsArrayIteratorSize = closingBracketsArrayIterator.length\n\
    \        val openingBracketsSetIteratorSize = openingBracketsSetIterator.length\n\
    \        val closingBracketsSetIteratorSize = closingBracketsSetIterator.length\n\
    \        val openingBracketsArraySize = openingBracketsArray.length\n        val\
    \ closingBracketsArraySize = closingBracketsArray.length\n        val openingBracketsSetSize\
    \ = openingBracketsSet.length\n        val closingBracketsSetSize = ", "     \
    \   val bracketsArray = brackets.toCharArray\n        val bracketsArrayLength\
    \ = bracketsArray.length\n        var openingBracketsCount = 0\n        var closingBracketsCount\
    \ = 0\n        var openingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var closingBracketsCountArray = new Array[Int](bracketsArrayLength)\n\
    \        var openingBracketsCountArrayIndex = 0\n        var closingBracketsCountArrayIndex\
    \ = 0\n        var openingBracketsCountArrayIndex2 = 0\n        var closingBracketsCountArrayIndex2\
    \ = 0\n        var openingBracketsCountArrayIndex3 = 0\n        var closingBracketsCountArrayIndex3\
    \ = 0\n        var openingBracketsCountArrayIndex4 = 0\n        var closingBracketsCountArrayIndex4\
    \ = 0\n        var openingBracketsCountArrayIndex5 = 0\n        var closingBracketsCountArrayIndex5\
    \ = 0\n        var openingBracketsCountArrayIndex6 = 0\n        var closingBracketsCountArrayIndex6\
    \ = 0\n        var openingBracketsCountArrayIndex7 = 0\n        var closingBracketsCountArrayIndex7\
    \ = 0\n        var openingBracketsCountArrayIndex8 = 0\n        var closingBracketsCountArrayIndex8\
    \ = 0\n        var openingBracketsCountArrayIndex9 = 0\n        var closingBracketsCountArrayIndex9\
    \ = 0\n        var openingBracketsCountArrayIndex10 = 0\n        var closingBracketsCountArrayIndex10\
    \ = 0\n        var openingBracketsCountArrayIndex11 = 0\n        var closingBracketsCountArrayIndex11\
    \ = 0\n        var openingBracketsCountArrayIndex12 = 0\n        var closingBracketsCountArrayIndex12\
    \ = 0\n        var openingBracketsCountArrayIndex13 = 0\n        var closingBracketsCountArrayIndex13\
    \ = 0\n        var openingBracketsCountArrayIndex14 = 0\n        var closingBracketsCountArrayIndex14\
    \ = 0\n        var openingBracketsCountArrayIndex15 = 0\n        var closingBracketsCountArrayIndex15\
    \ = 0\n        var openingBracketsCountArrayIndex16 = 0\n        var closingBracketsCountArrayIndex16\
    \ = 0\n        var openingBracketsCountArrayIndex17 = 0\n        var closingBracketsCountArrayIndex17\
    \ = 0\n        var openingBracketsCountArrayIndex18 = 0\n        var closingBracketsCountArrayIndex18\
    \ = 0\n        var openingBracketsCountArrayIndex19 = 0\n        var closingBracketsCountArray"]
stop_tokens:
- "\n    }\n"

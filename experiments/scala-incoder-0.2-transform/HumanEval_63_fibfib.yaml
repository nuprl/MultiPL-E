name: HumanEval_63_fibfib
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) == 0\n   \
  \ // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    // Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n    // >>> fibfib((5l))\n\
  \    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n    def fibfib(n : Long) :\
  \ Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fibfib((2l)) == (1l));\n\
  \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
  \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n\
  \    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
completions: ["        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                val fibfib2 = new mutable.MutableList[Long]()\n\
    \                fibfib2.append(0)\n                fibfib2.append(0)\n      \
    \          fibfib2.append(1)\n                fibfib2.append(2)\n            \
    \    fibfib2.append(3)\n                fibfib2.append(4)\n                fibfib2.append(5)\n\
    \                fibfib2.append(6)\n                fibfib2.append(7)\n      \
    \          fibfib2.append(8)\n                fibfib2.append(9)\n            \
    \    fibfib2.append(10)\n                fibfib2.append(11)\n                fibfib2.append(12)\n\
    \                fibfib2.append(13)\n                fibfib2.append(14)\n    \
    \            fibfib2.append(15)\n                fibfib2.append(16)\n        \
    \        fibfib2.append(17)\n                fibfib2.append(18)\n            \
    \    fibfib2.append(19)\n                fibfib2.append(20)\n                fibfib2.append(21)\n\
    \                fibfib2.append(22)\n                fibfib2.append(23)\n    \
    \            fibfib2.append(24)\n                fibfib2.append(25)\n        \
    \        fibfib2.append(26)\n                fibfib2.append(27)\n            \
    \    fibfib2.append(28)\n                fibfib2.append(29)\n                fibfib2.append(30)\n\
    \                fibfib2.append(31)\n                fibfib2.append(32)\n    \
    \            fibfib2.append(33)\n                fibfib2.append(34)\n        \
    \        fibfib2.append(35)\n                fibfib2.append(36)\n            \
    \    fibfib2.append(37)\n                fibfib2.append(38)\n                fibfib2.append(39)\n\
    \                fibfib2.append(40)\n                fibfib2.append(41)\n    \
    \            fibfib2.append(42)\n                fibfib2.append(43)\n        \
    \        fibfib2.append(44)\n                fibfib2.append(45)\n            \
    \    fibfib2.append(46)\n                fibfib2.append(47)\n                fibfib2.append(48)\n\
    \                fibfib2.append(49)\n                fibfib2.append(50)\n    \
    \            fibfib2.append(51)\n                fibfib2.append(52)\n        \
    \        fibfib2.append(53)\n                fibfib2.append(54)\n            \
    \    fibfib2.append(55)\n                fibfib2.append(56)\n                fibfib",
  "        val fibfib = new mutable.HashSet[Long]\n        fibfib.add(0)\n       \
    \ fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) match {\n          \
    \  case 0 => 0\n            case 1 => 0\n            case 2 => 1\n           \
    \ case _ => {\n                fibfib(n-1) match {\n                    case 0\
    \ => 0\n                    case 1 => 0\n                    case 2 => 1\n   \
    \                 case _ => {\n                        fibfib(n-2) match {\n \
    \                           case 0 => 0\n                            case 1 =>\
    \ 0\n                            case 2 => 1\n                            case\
    \ _ => {\n                                fibfib(n-3) match {\n              \
    \                      case 0 => 0\n                                    case 1\
    \ => 0\n                                    case 2 => 1\n                    \
    \                case _ => {\n                                        fibfib(n-4)\
    \ match {\n                                            case 0 => 0\n         \
    \                                   case 1 => 0\n                            \
    \                case 2 => 1\n                                            case\
    \ _ => {\n                                                fibfib(n-5) match {\n\
    \                                                    case 0 => 0\n           \
    \                                         case 1 => 0\n                      \
    \                              case 2 => 1\n                                 \
    \                   case _ => {\n                                            \
    \            fibfib(n-6) match {\n                                           \
    \                 case 0 => 0\n                                              \
    \              case 1 => 0\n                                                 \
    \           case 2 => 1\n                                                    \
    \        case _ => {\n                                                       \
    \         fibfib(n-7) match {\n                                              \
    \                      case 0 => 0\n                                         \
    \                           case 1 => 0\n                                    \
    \                                case 2 => 1\n                               \
    \                                     case _ => {\n                          \
    \                                              fibfib(n-8) match {\n         \
    \                                                                   case 0 =>\
    \ 0\n                                                                        \
    \    case 1 => 0\n                                                           \
    \                 case 2 => 1\n                                              \
    \                              case _ => {\n                                 \
    \                                               fibfib(n-9) match {\n        \
    \                                                                            case\
    \ 0 => 0\n                                                                   \
    \                 case 1 => 0\n                                              \
    \                                      case 2 => 1\n                         \
    \                                                           case _ => {\n    \
    \                                                                            \
    \        fibfib(n-10) match {\n                                              \
    \                                              case 0 => 0\n                 \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                         case 2 => 1\n                                      \
    \                                                      case _ => {\n         \
    \                                                                            \
    \           fibfib(n-11) match {\n                                           \
    \                                                         case 0 => 0\n      \
    \                                                                            \
    \                  case 1 => 0\n                                             \
    \                                                       case 2 => 1\n        \
    \                                                                            \
    \                case _ => {\n                                               \
    \                                                         fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {\n                \
    \                                                                            \
    \                                case 0 ", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib0 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib1 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib2 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib3 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib4 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib5 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib6 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib7 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib8 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib9 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib10 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib11 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib12 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib13 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib14 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib15 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib16 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib17 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib18 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib19 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib20 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib21 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib22 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib23 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib24 : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib25 : mut", "        val fibfibArray\
    \ = mutable.ArrayBuffer.empty[Long]\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n).foreach(fibfib(n)\
    \ += fibfib(n-1))\n        fibfib(n).foreach(fibfib(n) += fibfib(n-2))\n     \
    \   fibfib(n).foreach(fibfib(n) += fibfib(n-3))\n        fibfib(n)", "       \
    \ val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0) =\
    \ 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs(n)", " \
    \       var fib : mutable.MutableList[Long] = mutable.MutableList(0)\n       \
    \ var fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fibfib2 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib3\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib4 :\
    \ mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib5 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fibfib6 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0)\n        var fibfib7 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib8 : mutable.MutableList[Long] = mutable.MutableList(0)\n  \
    \      var fibfib9 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fibfib10 : mutable.MutableList[Long] = mutable.MutableList(0)\n     \
    \   var fibfib11 : mutable.MutableList[Long] = mutable.MutableList(0)\n      \
    \  var fibfib12 : mutable.MutableList[Long] = mutable.MutableList(0)\n       \
    \ var fibfib13 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fibfib14 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib15\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib16 :\
    \ mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib17 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fibfib18 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0)\n        var fibfib19 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib20 : mutable.MutableList[Long] = mutable.MutableList(0)\n \
    \       var fibfib21 : mutable.MutableList[Long] = mutable.MutableList(0)\n  \
    \      var fibfib22 : mutable.MutableList[Long] = mutable.MutableList(0)\n   \
    \     var fibfib23 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fibfib24 : mutable.MutableList[Long] = mutable.MutableList(0)\n     \
    \   var fibfib25 : mutable.MutableList[Long] = mutable.MutableList(0)\n      \
    \  var fibfib26 : mutable.MutableList[Long] = mutable.MutableList(0)\n       \
    \ var fibfib27 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fibfib28 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib29\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib30 :\
    \ mutable.", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        fibfib.add(0l)\n        fibfib.add(0l)\n        fibfib.add(1l)\n    \
    \    fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(0) += 1\n        fibfibs(1) += 1\n        fibfibs(2)\
    \ += 1\n        fibfibs(n) += fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n   \
    \     fibfibs(n)", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n  \
    \      fibfibs += 0\n        fibfibs += 1\n        fibfibs += 2\n        fibfibs\
    \ += fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "      \
    \  val fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n        fibfib(0)\
    \ = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        fibfib.get(n)",
  "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                fibfib(n-1) match {\n               \
    \     case 0 => 0\n                    case 1 => 0\n                    case 2\
    \ => 1\n                    case _ => {\n                        fibfib(n-2) match\
    \ {\n                            case 0 => 0\n                            case\
    \ 1 => 0\n                            case 2 => 1\n                          \
    \  case _ => {\n                                fibfib(n-3) match {\n        \
    \                            case 0 => 0\n                                   \
    \ case 1 => 0\n                                    case 2 => 1\n             \
    \                       case _ => {\n                                        fibfib(n-4)\
    \ match {\n                                            case 0 => 0\n         \
    \                                   case 1 => 0\n                            \
    \                case 2 => 1\n                                            case\
    \ _ => {\n                                                fibfib(n-5) match {\n\
    \                                                    case 0 => 0\n           \
    \                                         case 1 => 0\n                      \
    \                              case 2 => 1\n                                 \
    \                   case _ => {\n                                            \
    \            fibfib(n-6) match {\n                                           \
    \                 case 0 => 0\n                                              \
    \              case 1 => 0\n                                                 \
    \           case 2 => 1\n                                                    \
    \        case _ => {\n                                                       \
    \         fibfib(n-7) match {\n                                              \
    \                      case 0 => 0\n                                         \
    \                           case 1 => 0\n                                    \
    \                                case 2 => 1\n                               \
    \                                     case _ => {\n                          \
    \                                              fibfib(n-8) match {\n         \
    \                                                                   case 0 =>\
    \ 0\n                                                                        \
    \    case 1 => 0\n                                                           \
    \                 case 2 => 1\n                                              \
    \                              case _ => {\n                                 \
    \                                               fibfib(n-9) match {\n        \
    \                                                                            case\
    \ 0 => 0\n                                                                   \
    \                 case 1 => 0\n                                              \
    \                                      case 2 => 1\n                         \
    \                                                           case _ => {\n    \
    \                                                                            \
    \        fibfib(n-10) match {\n                                              \
    \                                              case 0 => 0\n                 \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                         case 2 => 1\n                                      \
    \                                                      case _ => {\n         \
    \                                                                            \
    \           fibfib(n-11) match {\n                                           \
    \                                                         case 0 => 0\n      \
    \                                                                            \
    \                  case 1 => 0\n                                             \
    \                                                       case 2 => 1\n        \
    \                                                                            \
    \                case _ => {\n                                               \
    \                                                         fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {\n                \
    \                                                                            \
    \                                case 0 ", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n     \
    \   fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n   \
    \     fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n  \
    \          case 2 => 1\n            case _ => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        }", "        val fibfibArray = mutable.ArrayBuffer(0l, 1l, 2l)\n    \
    \    fibfibArray.update(0, 0l)\n        fibfibArray.update(1, 0l)\n        fibfibArray.update(2,\
    \ 1l)\n        fibfibArray.update(n, (fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)))",
  "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0l\n\
    \        fibfibs += 1l\n        fibfibs += 2l\n        fibfibs += 3l\n       \
    \ fibfibs += 4l\n        fibfibs += 5l\n        fibfibs += 6l\n        fibfibs\
    \ += 7l\n        fibfibs += 8l\n        fibfibs += 9l\n        fibfibs += 10l\n\
    \        fibfibs += 11l\n        fibfibs += 12l\n        fibfibs += 13l\n    \
    \    fibfibs += 14l\n        fibfibs += 15l\n        fibfibs += 16l\n        fibfibs\
    \ += 17l\n        fibfibs += 18l\n        fibfibs += 19l\n        fibfibs += 20l\n\
    \        fibfibs += 21l\n        fibfibs += 22l\n        fibfibs += 23l\n    \
    \    fibfibs += 24l\n        fibfibs += 25l\n        fibfibs += 26l\n        fibfibs\
    \ += 27l\n        fibfibs += 28l\n        fibfibs += 29l\n        fibfibs += 30l\n\
    \        fibfibs += 31l\n        fibfibs += 32l\n        fibfibs += 33l\n    \
    \    fibfibs += 34l\n        fibfibs += 35l\n        fibfibs += 36l\n        fibfibs\
    \ += 37l\n        fibfibs += 38l\n        fibfibs += 39l\n        fibfibs += 40l\n\
    \        fibfibs += 41l\n        fibfibs += 42l\n        fibfibs += 43l\n    \
    \    fibfibs += 44l\n        fibfibs += 45l\n        fibfibs += 46l\n        fibfibs\
    \ += 47l\n        fibfibs += 48l\n        fibfibs += 49l\n        fibfibs += 50l\n\
    \        fibfibs += 51l\n        fibfibs += 52l\n        fibfibs += 53l\n    \
    \    fibfibs += 54l\n        fibfibs += 55l\n        fibfibs += 56l\n        fibfibs\
    \ += 57l\n        fibfibs += 58l\n        fibfibs += 59l\n        fibfibs += 60l\n\
    \        fibfibs += 61l\n        fibfibs += 62l\n        fibfibs += 63l\n    \
    \    fibfibs += 64l\n        fibfibs += 65l\n        fibfibs += 66l\n        fibfibs\
    \ += 67l\n        fibfibs += 68l\n        fibfibs += 69l\n        fibfibs += 70l\n\
    \        ", "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.clear()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n).foreach(x => fibfib.append(fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n\
    \        fibfib(n-1)", "        if (n <= 0) 0\n        else if (n <= 2) 1\n  \
    \      else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        if (n == 0) 0\n\
    \        else if (n == 1) 1\n        else if (n == 2) 1\n        else if (n %\
    \ 2 == 0) fibfib(n-1) + fibfib(n-2)\n        else fibfib(n-1) + fibfib(n-2)",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0) =\
    \ 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                fibfib(n-1) match {\n               \
    \     case 0 => 0\n                    case 1 => 0\n                    case 2\
    \ => 1\n                    case _ => {\n                        fibfib(n-2) match\
    \ {\n                            case 0 => 0\n                            case\
    \ 1 => 0\n                            case 2 => 1\n                          \
    \  case _ => {\n                                fibfib(n-3) match {\n        \
    \                            case 0 => 0\n                                   \
    \ case 1 => 0\n                                    case 2 => 1\n             \
    \                       case _ => {\n                                        fibfib(n-4)\
    \ match {\n                                            case 0 => 0\n         \
    \                                   case 1 => 0\n                            \
    \                case 2 => 1\n                                            case\
    \ _ => {\n                                                fibfib(n-5) match {\n\
    \                                                    case 0 => 0\n           \
    \                                         case 1 => 0\n                      \
    \                              case 2 => 1\n                                 \
    \                   case _ => {\n                                            \
    \            fibfib(n-6) match {\n                                           \
    \                 case 0 => 0\n                                              \
    \              case 1 => 0\n                                                 \
    \           case 2 => 1\n                                                    \
    \        case _ => {\n                                                       \
    \         fibfib(n-7) match {\n                                              \
    \                      case 0 => 0\n                                         \
    \                           case 1 => 0\n                                    \
    \                                case 2 => 1\n                               \
    \                                     case _ => {\n                          \
    \                                              fibfib(n-8) match {\n         \
    \                                                                   case 0 =>\
    \ 0\n                                                                        \
    \    case 1 => 0\n                                                           \
    \                 case 2 => 1\n                                              \
    \                              case _ => {\n                                 \
    \                                               fibfib(n-9) match {\n        \
    \                                                                            case\
    \ 0 => 0\n                                                                   \
    \                 case 1 => 0\n                                              \
    \                                      case 2 => 1\n                         \
    \                                                           case _ => {\n    \
    \                                                                            \
    \        fibfib(n-10) match {\n                                              \
    \                                              case 0 => 0\n                 \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                         case 2 => 1\n                                      \
    \                                                      case _ => {\n         \
    \                                                                            \
    \           fibfib(n-11) match {\n                                           \
    \                                                         case 0 => 0\n      \
    \                                                                            \
    \                  case 1 => 0\n                                             \
    \                                                       case 2 => 1\n        \
    \                                                                            \
    \                case _ => {\n                                               \
    \                                                         fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {\n                \
    \                                                                            \
    \                                case 0 ", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs.update(0, 0l)\n        fibfibs.update(1, 1l)\n    \
    \    fibfibs.update(2, 2l)\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)))\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n\
    \        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n   \
    \     fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n      \
    \  fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n        fibfibs.update(n,\
    \ (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n        fibfibs.update(n, (fibfibs(n-1)\
    \ + fibfibs(n-2) + fibfibs(n-3)))\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)))\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n\
    \        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n   \
    \     fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n      \
    \  fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n        fibfibs.update(n,\
    \ (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n        fibfibs.update(n, (fibfibs(n-1)\
    \ + fibfibs(n-2) + fibfibs(n-3)))\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)))\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n\
    \        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n   \
    \     fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))\n      \
    \  ", "        val fibfibList = mutable.ListBuffer[Long]()\n        var fibfibNum\
    \ = 0\n        var fibfibNum2 = 0\n        var fibfibNum3 = 0\n        fibfibNum\
    \ = fibfibNum + n\n        fibfibNum2 = fibfibNum + n\n        fibfibNum3 = fibfibNum2\
    \ + n\n        fibfibList += fibfibNum\n        fibfibList += fibfibNum2\n   \
    \     fibfibList += fibfibNum3\n        fibfibList.last", "        val fibfib\
    \ = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l,\
    \ 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)))\n        fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib.append(2)\n\
    \        fibfib(n) {\n            fibfib.append(fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    \        }\n        fibfib(n-1)", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.Array[Long](1l)\n        fibfib(0) = 0\n    \
    \    fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfibArray = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibArray.update(0, 0l)\n        fibfibArray.update(1, 1l)\n\
    \        fibfibArray.update(2, 2l)\n        fibfibArray.update(3, 3l)\n      \
    \  fibfibArray.update(4, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l))\n\
    \        fibfibArray.update(5, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l))\n        fibfibArray.update(6, fibfibArray.get(0l) +\
    \ fibfibArray.get(1l) + fibfibArray.get(2l) + fibfibArray.get(3l) + fibfibArray.get(4l))\n\
    \        fibfibArray.update(7, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4l) + fibfibArray.get(5l))\n       \
    \ fibfibArray.update(8, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4l) + fibfibArray.get(5l) + fibfibArray.get(6l))\n\
    \        fibfibArray.update(9, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4l) + fibfibArray.get(5l) + fibfibArray.get(6l)\
    \ + fibfibArray.get(7l))\n        fibfibArray.update(10, fibfibArray.get(0l) +\
    \ fibfibArray.get(1l) + fibfibArray.get(2l) + fibfibArray.get(3l) + fibfibArray.get(4l)\
    \ + fibfibArray.get(5l) + fibfibArray.get(6l) + fibfibArray.get(7l) + fibfibArray.get(8l))\n\
    \        fibfibArray.update(11, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4l) + fibfibArray.get(5l) + fibfibArray.get(6l)\
    \ + fibfibArray.get(7l) + fibfibArray.get(8l) + fibfibArray.get(9l))\n       \
    \ fibfibArray.update(12, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4", "        if (n == 0) 0\n       \
    \ else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long, Long]()\n  \
    \      fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib(n) {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    \        }\n        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib.append(1)\n        fibfib.append(2)\n        fibfib.append(2)\n\
    \        fibfib.append(3)\n        fibfib.append(3)\n        fibfib(n)", "   \
    \     val fibfibArray = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibArray.update(0,\
    \ 0l)\n        fibfibArray.update(1, 1l)\n        fibfibArray.update(2, 2l)\n\
    \        fibfibArray.update(n-1, fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3))\n\
    \        fibfibArray(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       var fib : mutable.MutableList[Long] = mutable.MutableList[Long]()\n  \
    \      var i : Long = 1\n        while (i < n) {\n            fib.add(i)\n   \
    \         i = fib(i-1) + fib(i-2) + fib(i-3)\n        }\n        fib.last", " \
    \       val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                fibfib(n-1) match {\n               \
    \     case 0 => 0\n                    case 1 => 0\n                    case 2\
    \ => 1\n                    case _ => {\n                        fibfib(n-2) match\
    \ {\n                            case 0 => 0\n                            case\
    \ 1 => 0\n                            case 2 => 1\n                          \
    \  case _ => {\n                                fibfib(n-3) match {\n        \
    \                            case 0 => 0\n                                   \
    \ case 1 => 0\n                                    case 2 => 1\n             \
    \                       case _ => {\n                                        fibfib(n-4)\
    \ match {\n                                            case 0 => 0\n         \
    \                                   case 1 => 0\n                            \
    \                case 2 => 1\n                                            case\
    \ _ => {\n                                                fibfib(n-5) match {\n\
    \                                                    case 0 => 0\n           \
    \                                         case 1 => 0\n                      \
    \                              case 2 => 1\n                                 \
    \                   case _ => {\n                                            \
    \            fibfib(n-6) match {\n                                           \
    \                 case 0 => 0\n                                              \
    \              case 1 => 0\n                                                 \
    \           case 2 => 1\n                                                    \
    \        case _ => {\n                                                       \
    \         fibfib(n-7) match {\n                                              \
    \                      case 0 => 0\n                                         \
    \                           case 1 => 0\n                                    \
    \                                case 2 => 1\n                               \
    \                                     case _ => {\n                          \
    \                                              fibfib(n-8) match {\n         \
    \                                                                   case 0 =>\
    \ 0\n                                                                        \
    \    case 1 => 0\n                                                           \
    \                 case 2 => 1\n                                              \
    \                              case _ => {\n                                 \
    \                                               fibfib(n-9) match {\n        \
    \                                                                            case\
    \ 0 => 0\n                                                                   \
    \                 case 1 => 0\n                                              \
    \                                      case 2 => 1\n                         \
    \                                                           case _ => {\n    \
    \                                                                            \
    \        fibfib(n-10) match {\n                                              \
    \                                              case 0 => 0\n                 \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                         case 2 => 1\n                                      \
    \                                                      case _ => {\n         \
    \                                                                            \
    \           fibfib(n-11) match {\n                                           \
    \                                                         case 0 => 0\n      \
    \                                                                            \
    \                  case 1 => 0\n                                             \
    \                                                       case 2 => 1\n        \
    \                                                                            \
    \                case _ => {\n                                               \
    \                                                         fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {\n                \
    \                                                                            \
    \                                case 0 ", "        val fibfibs = mutable.ListBuffer[Long]()\n\
    \        fibfibs += 0l\n        fibfibs += 1l\n        fibfibs += 2l\n       \
    \ fibfibs += 3l\n        fibfibs += 4l\n        fibfibs += 5l\n        fibfibs\
    \ += 6l\n        fibfibs += 7l\n        fibfibs += 8l\n        fibfibs += 9l\n\
    \        fibfibs += 10l\n        fibfibs += 11l\n        fibfibs += 12l\n    \
    \    fibfibs += 13l\n        fibfibs += 14l\n        fibfibs += 15l\n        fibfibs\
    \ += 16l\n        fibfibs += 17l\n        fibfibs += 18l\n        fibfibs += 19l\n\
    \        fibfibs += 20l\n        fibfibs += 21l\n        fibfibs += 22l\n    \
    \    fibfibs += 23l\n        fibfibs += 24l\n        fibfibs += 25l\n        fibfibs\
    \ += 26l\n        fibfibs += 27l\n        fibfibs += 28l\n        fibfibs += 29l\n\
    \        fibfibs += 30l\n        fibfibs += 31l\n        fibfibs += 32l\n    \
    \    fibfibs += 33l\n        fibfibs += 34l\n        fibfibs += 35l\n        fibfibs\
    \ += 36l\n        fibfibs += 37l\n        fibfibs += 38l\n        fibfibs += 39l\n\
    \        fibfibs += 40l\n        fibfibs += 41l\n        fibfibs += 42l\n    \
    \    fibfibs += 43l\n        fibfibs += 44l\n        fibfibs += 45l\n        fibfibs\
    \ += 46l\n        fibfibs += 47l\n        fibfibs += 48l\n        fibfibs += 49l\n\
    \        fibfibs += 50l\n        fibfibs += 51l\n        fibfibs += 52l\n    \
    \    fibfibs += 53l\n        fibfibs += 54l\n        fibfibs += 55l\n        fibfibs\
    \ += 56l\n        fibfibs += 57l\n        fibfibs += 58l\n        fibfibs += 59l\n\
    \        fibfibs += 60l\n        fibfibs += 61l\n        fibfibs += 62l\n    \
    \    fibfibs += 63l\n        fibfibs += 64l\n        fibfibs += 65l\n        fibfibs\
    \ += 66l\n        fibfibs += 67l\n        fibfibs += 68l\n        fibfibs += 69l\n\
    \        fibfibs += 70l\n        ", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibArray(0) = 0\n        fibfibArray(1) = 0\n        fibfibArray(2)\
    \ = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        val fibfib = new mutable.Array[Long](n)\n \
    \       fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val\
    \ fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n       \
    \ fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n    \
    \        case 0 => 0\n            case 1 => 0\n            case 2 => 1\n     \
    \       case _ => {\n                val fibfib2 = fibfib.tail\n             \
    \   fibfib2.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail",
  "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n      \
    \  fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfibs = mutable.ListBuffer[Long]()\n     \
    \   fibfibs += 0\n        fibfibs += 1\n        fibfibs += 2\n        fibfibs\
    \ += 3\n        fibfibs += 4\n        fibfibs += 5\n        fibfibs += 6\n   \
    \     fibfibs += 7\n        fibfibs += 8\n        fibfibs += 9\n        fibfibs\
    \ += 10\n        fibfibs += 11\n        fibfibs += 12\n        fibfibs += 13\n\
    \        fibfibs += 14\n        fibfibs += 15\n        fibfibs += 16\n       \
    \ fibfibs += 17\n        fibfibs += 18\n        fibfibs += 19\n        fibfibs\
    \ += 20\n        fibfibs += 21\n        fibfibs += 22\n        fibfibs += 23\n\
    \        fibfibs += 24\n        fibfibs += 25\n        fibfibs += 26\n       \
    \ fibfibs += 27\n        fibfibs += 28\n        fibfibs += 29\n        fibfibs\
    \ += 30\n        fibfibs += 31\n        fibfibs += 32\n        fibfibs += 33\n\
    \        fibfibs += 34\n        fibfibs += 35\n        fibfibs += 36\n       \
    \ fibfibs += 37\n        fibfibs += 38\n        fibfibs += 39\n        fibfibs\
    \ += 40\n        fibfibs += 41\n        fibfibs += 42\n        fibfibs += 43\n\
    \        fibfibs += 44\n        fibfibs += 45\n        fibfibs += 46\n       \
    \ fibfibs += 47\n        fibfibs += 48\n        fibfibs += 49\n        fibfibs\
    \ += 50\n        fibfibs += 51\n        fibfibs += 52\n        fibfibs += 53\n\
    \        fibfibs += 54\n        fibfibs += 55\n        fibfibs += 56\n       \
    \ fibfibs += 57\n        fibfibs += 58\n        fibfibs += 59\n        fibfibs\
    \ += 60\n        fibfibs += 61\n        fibfibs += 62\n        fibfibs += 63\n\
    \        fibfibs += 64\n        fibfibs += 65\n        fibfibs += 66\n       \
    \ fibfibs += 67\n        fibfibs += 68\n        fibfibs += 69\n        fibfibs\
    \ += 70\n        fibfibs += 71\n        fibfibs += 72\n        fibfibs += 73\n\
    \        fibfibs += 74\n        fibfibs += 75\n        fibfibs += 76\n       \
    \ fibfibs += 77\n        fibfibs += 78\n        fibfibs += 79\n        fibfibs\
    \ += 80\n        fibfibs += 81\n        fibfibs += 82\n", "        val fibfibs\
    \ = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs +=\
    \ 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n      \
    \  fibfibs += 0\n", "        if (n == 0) 0\n        else if (n == 1) 1\n     \
    \   else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n \
    \       fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0\n                    case 1 => 0\n\
    \                    case 2 => 1\n                    case _ => {\n          \
    \              fibfib(n-2) match {\n                            case 0 => 0\n\
    \                            case 1 => 0\n                            case 2 =>\
    \ 1\n                            case _ => {\n                               \
    \ fibfib(n-3) match {\n                                    case 0 => 0\n     \
    \                               case 1 => 0\n                                \
    \    case 2 => 1\n                                    case _ => {\n          \
    \                              fibfib(n-4) match {\n                         \
    \                   case 0 => 0\n                                            case\
    \ 1 => 0\n                                            case 2 => 1\n          \
    \                                  case _ => {\n                             \
    \                   fibfib(n-5) match {\n                                    \
    \                case 0 => 0\n                                               \
    \     case 1 => 0\n                                                    case 2\
    \ => 1\n                                                    case _ => {\n    \
    \                                                    fibfib(n-6) match {\n   \
    \                                                         case 0 => 0\n      \
    \                                                      case 1 => 0\n         \
    \                                                   case 2 => 1\n            \
    \                                                case _ => {\n               \
    \                                                 fibfib(n-7) match {\n      \
    \                                                              case 0 => 0\n \
    \                                                                   case 1 =>\
    \ 0\n                                                                    case\
    \ 2 => 1\n                                                                   \
    \ case _ => {\n                                                              \
    \          fibfib(n-8) match {\n                                             \
    \                               case 0 => 0\n                                \
    \                                            case 1 => 0\n                   \
    \                                                         case 2 => 1\n      \
    \                                                                      case _\
    \ => {\n                                                                     \
    \           fibfib(n-9) match {\n                                            \
    \                                        case 0 => 0\n                       \
    \                                                             case 1 => 0\n  \
    \                                                                            \
    \      case 2 => 1\n                                                         \
    \                           case _ => {\n                                    \
    \                                                    fibfib(n-10) match {\n  \
    \                                                                            \
    \              case 0 => 0\n                                                 \
    \                                           case 1 => 0\n                    \
    \                                                                        case\
    \ 2 => 1\n                                                                   \
    \                         case _ => {\n                                      \
    \                                                          fibfib(n-11) match\
    \ {\n                                                                        \
    \                            case 0 => 0\n                                   \
    \                                                                 case 1 => 0\n\
    \                                                                            \
    \                        case 2 => 1\n                                       \
    \                                                             case _ => {\n  \
    \                                                                            \
    \                          fibfib(n-12) match {\n                            \
    \                                                                            \
    \    case 0 => 0\n                                                           \
    \                                                 case 1 => 0\n              \
    \                                                                            \
    \                  case 2 => 1\n                                             \
    \                                                               case _ => {\n\
    \                                                                            \
    \                                    fibfib(n-13) match {\n                  \
    \                                                                            \
    \                      case 0 => 0\n                                         \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                                                 case 2 => 1\n              \
    \                                                                            \
    \                          case _ => {\n                                     \
    \                                                                            \
    \       fibfib(n-14) match {\n                                               \
    \                                                                            \
    \ case 0 ", "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n        fibfib.put(n,\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        fibfib.get(n)", "        val\
    \ fibfib = new mutable.MutableList[Long]()\n        fibfib.add(0l)\n        fibfib.add(0l)\n\
    \        fibfib.add(1l)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n \
    \       fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n).foreach(x => fibfib.append(fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n\
    \        fibfib(n-1)", "        val fibfibList = mutable.ListBuffer[Long]()\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     ", "        val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) {\n         \
    \   fibfib.add(_)\n        }\n        fibfib(n).last", "        val fibfibs =\
    \ mutable.ArrayBuffer.empty[Long]\n        var fibfib = 0\n        var fibfib1\
    \ = 1\n        var fibfib2 = 1\n        var fibfib3 = 1\n        var fibfib4 =\
    \ 2\n        var fibfib5 = 3\n        var fibfib6 = 5\n        var fibfib7 = 8\n\
    \        var fibfib8 = 1\n        var fibfib9 = 1\n        var fibfib10 = 1\n\
    \        var fibfib11 = 1\n        var fibfib12 = 1\n        var fibfib13 = 1\n\
    \        var fibfib14 = 1\n        var fibfib15 = 1\n        var fibfib16 = 1\n\
    \        var fibfib17 = 1\n        var fibfib18 = 1\n        var fibfib19 = 1\n\
    \        var fibfib20 = 1\n        var fibfib21 = 1\n        var fibfib22 = 1\n\
    \        var fibfib23 = 1\n        var fibfib24 = 1\n        var fibfib25 = 1\n\
    \        var fibfib26 = 1\n        var fibfib27 = 1\n        var fibfib28 = 1\n\
    \        var fibfib29 = 1\n        var fibfib30 = 1\n        var fibfib31 = 1\n\
    \        var fibfib32 = 1\n        var fibfib33 = 1\n        var fibfib34 = 1\n\
    \        var fibfib35 = 1\n        var fibfib36 = 1\n        var fibfib37 = 1\n\
    \        var fibfib38 = 1\n        var fibfib39 = 1\n        var fibfib40 = 1\n\
    \        var fibfib41 = 1\n        var fibfib42 = 1\n        var fibfib43 = 1\n\
    \        var fibfib44 = 1\n        var fibfib45 = 1\n        var fibfib46 = 1\n\
    \        var fibfib47 = 1\n        var fibfib48 = 1\n        var fibfib49 = 1\n\
    \        var fibfib50 = 1\n        var fibfib51 = 1\n        var fibfib52 = 1\n\
    \        var fibfib53 = 1\n        var fibfib54 = 1\n        var fibfib55 = 1\n\
    \        var fibfib56 = 1\n        var fibfib57 = 1\n        var fibfib58 = 1\n\
    \        var fibfib59 = 1\n        var fibfib60 = 1\n        var fibfib61 = 1\n\
    \        var fibfib62 = 1\n        var fibfib63 = 1\n        var fibfib64 = 1\n\
    \        var fibfib65 = 1\n        var fibfib66 = 1\n        var fibfib67 = 1\n\
    \        var fibfib68 = 1\n        var fibfib69 = 1\n        var fibfib70 = 1\n\
    \        var fibfib71 = 1\n        var fibfib72 = 1\n        var fibfib73 = 1\n\
    \        var fibfib74 = 1\n        var fibfib75 = 1\n        var fibfib76 = 1\n\
    \        var fibfib77 = 1\n        var fibfib78 = 1\n        var fibfib79 = 1\n\
    \        var fib", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibArray(0) = 0\n        fibfibArray(1) = 0\n        fibfibArray(2)\
    \ = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n) ", "        val\
    \ fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0l\n        fibfibs\
    \ += 1l\n        fibfibs += 2l\n        fibfibs += 3l\n        fibfibs += 4l\n\
    \        fibfibs += 5l\n        fibfibs += 6l\n        fibfibs += 7l\n       \
    \ fibfibs += 8l\n        fibfibs += 9l\n        fibfibs += 10l\n        fibfibs\
    \ += 11l\n        fibfibs += 12l\n        fibfibs += 13l\n        fibfibs += 14l\n\
    \        fibfibs += 15l\n        fibfibs += 16l\n        fibfibs += 17l\n    \
    \    fibfibs += 18l\n        fibfibs += 19l\n        fibfibs += 20l\n        fibfibs\
    \ += 21l\n        fibfibs += 22l\n        fibfibs += 23l\n        fibfibs += 24l\n\
    \        fibfibs += 25l\n        fibfibs += 26l\n        fibfibs += 27l\n    \
    \    fibfibs += 28l\n        fibfibs += 29l\n        fibfibs += 30l\n        fibfibs\
    \ += 31l\n        fibfibs += 32l\n        fibfibs += 33l\n        fibfibs += 34l\n\
    \        fibfibs += 35l\n        fibfibs += 36l\n        fibfibs += 37l\n    \
    \    fibfibs += 38l\n        fibfibs += 39l\n        fibfibs += 40l\n        fibfibs\
    \ += 41l\n        fibfibs += 42l\n        fibfibs += 43l\n        fibfibs += 44l\n\
    \        fibfibs += 45l\n        fibfibs += 46l\n        fibfibs += 47l\n    \
    \    fibfibs += 48l\n        fibfibs += 49l\n        fibfibs += 50l\n        fibfibs\
    \ += 51l\n        fibfibs += 52l\n        fibfibs += 53l\n        fibfibs += 54l\n\
    \        fibfibs += 55l\n        fibfibs += 56l\n        fibfibs += 57l\n    \
    \    fibfibs += 58l\n        fibfibs += 59l\n        fibfibs += 60l\n        fibfibs\
    \ += 61l\n        fibfibs += 62l\n        fibfibs += 63l\n        fibfibs += 64l\n\
    \        fibfibs += 65l\n        fibfibs += 66l\n        fibfibs += 67l\n    \
    \    fibfibs += 68l\n        fibfibs += 69l\n        fibfibs += 70l\n        ",
  "        var fib : mutable.MutableList[Long] = mutable.MutableList(1l)\n       \
    \ var i : Long = 0\n        while (i < n) {\n            fib.append(fib(i) + fib(i-1)\
    \ + fib(i-2))\n            i += 1\n        }\n        fib(0)", "        val fibfib\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList(1l)\n        var i : Long = 0\n        while (i < n) {\n\
    \            fib.add(i); i += 1\n        }\n        fib(0)", "        val fibfib\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n).zip(fibfib(n-1).zip(fibfib(n-2).zip(fibfib(n-3))))\n      \
    \      .find(_._2 == 1)\n            .map(_._1)", "        if (n == 0) 0\n   \
    \     else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.HashSet[Long]()\n\
    \        fibfib.add(0l)\n        fibfib.add(1l)\n        fibfib.add(2l)\n    \
    \    fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n   \
    \         case 2 => 1\n            case _ => {\n                val fibfib2 =\
    \ fibfib.toList\n                fibfib2.remove(fibfib2.last)\n              \
    \  fibfib2.remove(fibfib2.last)\n                fibfib2.remove(fibfib2.last)\n\
    \                fibfib2.last\n            }\n        }", "        val fibfib\
    \ = new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1) = 0\n\
    \        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        fibfib.add(0l)\n        fibfib.add(0l)\n        fibfib.add(1l)\n    \
    \    fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var i : Long = 0\n        while (i < n) {\n\
    \            fib.append(i)\n            i = fib(i) + fib(i-1) + fib(i-2)\n   \
    \     }\n        fib(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        fibfib.append(0l)\n        fibfib.append(0l)\n        fibfib.append(1l)\n\
    \        fibfib.append(1l)\n        fibfib.append(2l)\n        fibfib.append(2l)\n\
    \        fibfib.append(3l)\n        fibfib.append(3l)\n        fibfib(n).asInstanceOf[Long]",
  "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0l\n\
    \        fibfibs += 1l\n        fibfibs += 2l\n        fibfibs += 3l\n       \
    \ fibfibs += 4l\n        fibfibs += 5l\n        fibfibs += 6l\n        fibfibs\
    \ += 7l\n        fibfibs += 8l\n        fibfibs += 9l\n        fibfibs += 10l\n\
    \        fibfibs += 11l\n        fibfibs += 12l\n        fibfibs += 13l\n    \
    \    fibfibs += 14l\n        fibfibs += 15l\n        fibfibs += 16l\n        fibfibs\
    \ += 17l\n        fibfibs += 18l\n        fibfibs += 19l\n        fibfibs += 20l\n\
    \        fibfibs += 21l\n        fibfibs += 22l\n        fibfibs += 23l\n    \
    \    fibfibs += 24l\n        fibfibs += 25l\n        fibfibs += 26l\n        fibfibs\
    \ += 27l\n        fibfibs += 28l\n        fibfibs += 29l\n        fibfibs += 30l\n\
    \        fibfibs += 31l\n        fibfibs += 32l\n        fibfibs += 33l\n    \
    \    fibfibs += 34l\n        fibfibs += 35l\n        fibfibs += 36l\n        fibfibs\
    \ += 37l\n        fibfibs += 38l\n        fibfibs += 39l\n        fibfibs += 40l\n\
    \        fibfibs += 41l\n        fibfibs += 42l\n        fibfibs += 43l\n    \
    \    fibfibs += 44l\n        fibfibs += 45l\n        fibfibs += 46l\n        fibfibs\
    \ += 47l\n        fibfibs += 48l\n        fibfibs += 49l\n        fibfibs += 50l\n\
    \        fibfibs += 51l\n        fibfibs += 52l\n        fibfibs += 53l\n    \
    \    fibfibs += 54l\n        fibfibs += 55l\n        fibfibs += 56l\n        fibfibs\
    \ += 57l\n        fibfibs += 58l\n        fibfibs += 59l\n        fibfibs += 60l\n\
    \        fibfibs += 61l\n        fibfibs += 62l\n        fibfibs += 63l\n    \
    \    fibfibs += 64l\n        fibfibs += 65l\n        fibfibs += 66l\n        fibfibs\
    \ += 67l\n        fibfibs += 68l\n        fibfibs += 69l\n        fibfibs += 70l\n\
    \        ", "        if (n == 0) 0\n        else if (n == 1) 1\n        else if\
    \ (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "       \
    \ val fibfibList = mutable.ListBuffer(0)\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList ", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfibs = mutable.ArrayBuffer(0l)\n        fibfibs(0)\
    \ = 0l\n        fibfibs(1) = 0l\n        fibfibs(2) = 1l\n        fibfibs(n) =\
    \ fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "        val\
    \ fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n   \
    \     fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n)", "        var fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        fibfib.clear()\n        fibfib.push(0l)\n\
    \        fibfib.push(1l)\n        fibfib.push(2l)\n        fibfib(n) {\n     \
    \       fibfib.add(_)\n        }\n        fibfib(n) {\n            fibfib.add(_)\n\
    \        }\n        fibfib(n) {\n            fibfib.add(_)\n        }\n      \
    \  fibfib(n) {\n            fibfib.add(_)\n        }\n        fibfib(n) {\n  \
    \          fibfib.add(_)\n        }\n        fibfib(n) {\n            fibfib.add(_)\n\
    \        }\n        fibfib(n) {\n            fibfib.add(_)\n        }\n      \
    \  fibfib(n) {\n            fibfib.add(_)\n        }\n        fibfib(n) {\n  \
    \          fibfib.add(_)\n        }\n        fibfib(n) {\n            fibfib.add(_)\n\
    \        }\n        fibfib(n) {\n            fibfib.add(_)\n        }\n      \
    \  fibfib(n) {\n            fibfib.add(_)\n        }\n        fibfib(n) {\n  \
    \          fibfib.add(_)\n        }\n        fibfib(n) {\n            fibfib.add(_)\n\
    \        }\n        fibfib(n) {\n            fibfib.add(_)\n        }\n      \
    \  fibfib(n) {\n            fibfib.add(_)\n        }\n        fibfib(n) {\n  \
    \          fibfib.add(_)\n        }\n        fibfib(n) {\n            fibfib.add(_)\n\
    \        }\n        fibfib(n) {\n            fibfib.add(_)\n        }\n      \
    \  fibfib(n) {\n            fibfib.add(_)\n        }\n        fibfib(n) {\n  \
    \          fibfib.add(_)\n        }\n        fibfib(n) {\n            fibfib.add(_)\n\
    \        }\n        fibfib(n) {\n            fibfib.add(_)\n        }\n      \
    \  fibfib(n) {\n            fibfib.add(_)\n        }\n        fibfib(n) {\n  \
    \          fibfib.add(_)\n        }\n        fibfib(n) {\n            fibfib.add(_)\n\
    \        }\n        fibfib(n) {\n            fibfib.add(_)\n        }\n      \
    \  fibfib(n) {\n            fibfib.add(_)\n        }\n        fibfib(n) {\n  \
    \          fibfib.add(_)\n        }\n", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        }", "        if (n == 0) 0\n        else if (n == 1) 1\n        else\
    \ if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    \
    \    val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n\
    \        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n  \
    \      fibfib.append(0)\n        fibfib.append(1)\n        fibfib.append(1)\n\
    \        fibfib(n).foreach(x => fibfib.append(fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n\
    \        fibfib(n).last", "        val fibfibArray = mutable.ArrayBuffer(0l)\n\
    \        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray +=\
    \ 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfib",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0l)\n\
    \        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n        fibfib(n) match\
    \ {\n            case 0 => 0l\n            case 1 => 0l\n            case 2 =>\
    \ 1l\n            case _ => {\n                val fibfib2 = fibfib.toSeq\n  \
    \              val fibfib3 = fibfib2.tail\n                fibfib3.head._1 + fibfib3.head._2\
    \ + fibfib3.head._3\n            }\n        }", "        val fibfibArray = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibArray.update(0, 0l)\n        fibfibArray.update(1, 1l)\n\
    \        fibfibArray.update(2, 2l)\n        fibfibArray.update(n, (fibfibArray(n-1)\
    \ + fibfibArray(n-2) + fibfibArray(n-3)))\n        fibfibArray(n)", "        val\
    \ fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1)\
    \ = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.clear()\n        fibfib(0) = 0\n        fibfib(1) = 0\n      \
    \  fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n \
    \       fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0\n                    case 1 => 0\n\
    \                    case 2 => 1\n                    case _ => {\n          \
    \              fibfib(n-2) match {\n                            case 0 => 0\n\
    \                            case 1 => 0\n                            case 2 =>\
    \ 1\n                            case _ => {\n                               \
    \ fibfib(n-3) match {\n                                    case 0 => 0\n     \
    \                               case 1 => 0\n                                \
    \    case 2 => 1\n                                    case _ => {\n          \
    \                              fibfib(n-4) match {\n                         \
    \                   case 0 => 0\n                                            case\
    \ 1 => 0\n                                            case 2 => 1\n          \
    \                                  case _ => {\n                             \
    \                   fibfib(n-5) match {\n                                    \
    \                case 0 => 0\n                                               \
    \     case 1 => 0\n                                                    case 2\
    \ => 1\n                                                    case _ => {\n    \
    \                                                    fibfib(n-6) match {\n   \
    \                                                         case 0 => 0\n      \
    \                                                      case 1 => 0\n         \
    \                                                   case 2 => 1\n            \
    \                                                case _ => {\n               \
    \                                                 fibfib(n-7) match {\n      \
    \                                                              case 0 => 0\n \
    \                                                                   case 1 =>\
    \ 0\n                                                                    case\
    \ 2 => 1\n                                                                   \
    \ case _ => {\n                                                              \
    \          fibfib(n-8) match {\n                                             \
    \                               case 0 => 0\n                                \
    \                                            case 1 => 0\n                   \
    \                                                         case 2 => 1\n      \
    \                                                                      case _\
    \ => {\n                                                                     \
    \           fibfib(n-9) match {\n                                            \
    \                                        case 0 => 0\n                       \
    \                                                             case 1 => 0\n  \
    \                                                                            \
    \      case 2 => 1\n                                                         \
    \                           case _ => {\n                                    \
    \                                                    fibfib(n-10) match {\n  \
    \                                                                            \
    \              case 0 => 0\n                                                 \
    \                                           case 1 => 0\n                    \
    \                                                                        case\
    \ 2 => 1\n                                                                   \
    \                         case _ => {\n                                      \
    \                                                          fibfib(n-11) match\
    \ {\n                                                                        \
    \                            case 0 => 0\n                                   \
    \                                                                 case 1 => 0\n\
    \                                                                            \
    \                        case 2 => 1\n                                       \
    \                                                             case _ => {\n  \
    \                                                                            \
    \                          fibfib(n-12) match {\n                            \
    \                                                                            \
    \    case 0 => 0\n                                                           \
    \                                                 case 1 => 0\n              \
    \                                                                            \
    \                  case 2 => 1\n                                             \
    \                                                               case _ => {\n\
    \                                                                            \
    \                                    fibfib(n-13) match {\n                  \
    \                                                                            \
    \                      case 0 => 0\n                                         \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                                                 case 2 => 1\n              \
    \                                                                            \
    \                          case _ => {\n                                     \
    \                                                                            \
    \       fibfib(n-14) match {\n                                               \
    \                                                                            \
    \ case 0 ", "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n\
    \        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n   \
    \     else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new\
    \ mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l,\
    \ 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)))\n        fibfib(n)", "        if (n == 0) 0\n        else if\
    \ (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0)\
    \ = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        var fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        fibfib.clear()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n).foreach(fibfib(n)\
    \ += fibfib(n-1))\n        fibfib(n).foreach(fibfib(n) += fibfib(n-2))\n     \
    \   fibfib(n).foreach(fibfib(n) += fibfib(n-3))\n        fibfib(n)", "       \
    \ val fibfibs = mutable.ListBuffer[Long]()\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0\n                    case 1 => 0\n\
    \                    case 2 => 1\n                    case _ => {\n          \
    \              fibfib(n-2) match {\n                            case 0 => 0\n\
    \                            case 1 => 0\n                            case 2 =>\
    \ 1\n                            case _ => {\n                               \
    \ fibfib(n-3) match {\n                                    case 0 => 0\n     \
    \                               case 1 => 0\n                                \
    \    case 2 => 1\n                                    case _ => {\n          \
    \                              fibfib(n-4) match {\n                         \
    \                   case 0 => 0\n                                            case\
    \ 1 => 0\n                                            case 2 => 1\n          \
    \                                  case _ => {\n                             \
    \                   fibfib(n-5) match {\n                                    \
    \                case 0 => 0\n                                               \
    \     case 1 => 0\n                                                    case 2\
    \ => 1\n                                                    case _ => {\n    \
    \                                                    fibfib(n-6) match {\n   \
    \                                                         case 0 => 0\n      \
    \                                                      case 1 => 0\n         \
    \                                                   case 2 => 1\n            \
    \                                                case _ => {\n               \
    \                                                 fibfib(n-7) match {\n      \
    \                                                              case 0 => 0\n \
    \                                                                   case 1 =>\
    \ 0\n                                                                    case\
    \ 2 => 1\n                                                                   \
    \ case _ => {\n                                                              \
    \          fibfib(n-8) match {\n                                             \
    \                               case 0 => 0\n                                \
    \                                            case 1 => 0\n                   \
    \                                                         case 2 => 1\n      \
    \                                                                      case _\
    \ => {\n                                                                     \
    \           fibfib(n-9) match {\n                                            \
    \                                        case 0 => 0\n                       \
    \                                                             case 1 => 0\n  \
    \                                                                            \
    \      case 2 => 1\n                                                         \
    \                           case _ => {\n                                    \
    \                                                    fibfib(n-10) match {\n  \
    \                                                                            \
    \              case 0 => 0\n                                                 \
    \                                           case 1 => 0\n                    \
    \                                                                        case\
    \ 2 => 1\n                                                                   \
    \                         case _ => {\n                                      \
    \                                                          fibfib(n-11) match\
    \ {\n                                                                        \
    \                            case 0 => 0\n                                   \
    \                                                                 case 1 => 0\n\
    \                                                                            \
    \                        case 2 => 1\n                                       \
    \                                                             case _ => {\n  \
    \                                                                            \
    \                          fibfib(n-12) match {\n                            \
    \                                                                            \
    \    case 0 => 0\n                                                           \
    \                                                 case 1 => 0\n              \
    \                                                                            \
    \                  case 2 => 1\n                                             \
    \                                                               case _ => {\n\
    \                                                                            \
    \                                    fibfib(n-13) match {\n                  \
    \                                                                            \
    \                      case 0 => 0\n                                         \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                                                 case 2 => 1\n              \
    \                                                                            \
    \                          case _ => {\n                                     \
    \                                                                            \
    \       fibfib(n-14) match {\n", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib.append(1)\n        fibfib.append(2)\n        fibfib.append(2)\n\
    \        fibfib.append(3)\n        fibfib.append(3)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashSet[Long]()\n     \
    \   fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n)",
  "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n      \
    \  fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n    \
    \    fibfibs(0) = 0\n        fibfibs(1) = 0\n        fibfibs(2) = 1\n        fibfibs(n)\
    \ = fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "       \
    \ val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n\
    \        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib(n)\
    \ match {\n            case 0 => 0l\n            case 1 => 0l\n            case\
    \ 2 => 1l\n            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n   \
    \     }", "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n).foreach(fibfib(n)\
    \ += fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        fibfib(n).last", "    \
    \    val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n\
    \        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n\
    \        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfibArray = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibArray.update(0,\
    \ 0l)\n        fibfibArray.update(1, 1l)\n        fibfibArray.update(2, 2l)\n\
    \        fibfibArray.update(n, n)\n        fibfibArray.update(n-1, fibfibArray(n-1)\
    \ + fibfibArray(n-2) + fibfibArray(n-3))", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(0) = 0l\n        fibfibs(1) = 0l\n        fibfibs(2)\
    \ = 1l\n        fibfibs(n) = fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n    \
    \    fibfibs(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n  \
    \      fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        var fibfibArrayIndex = 0\n        var fibfibArrayIndex2 = 1\n       \
    \ var fibfibArrayIndex3 = 2\n        var fibfibArrayIndex4 = 3\n        var fibfibArrayIndex5\
    \ = 4\n        var fibfibArrayIndex6 = 5\n        var fibfibArrayIndex7 = 6\n\
    \        var fibfibArrayIndex8 = 7\n        var fibfibArrayIndex9 = 8\n      \
    \  var fibfibArrayIndex10 = 9\n        var fibfibArrayIndex11 = 10\n        var\
    \ fibfibArrayIndex12 = 11\n        var fibfibArrayIndex13 = 12\n        var fibfibArrayIndex14\
    \ = 13\n        var fibfibArrayIndex15 = 14\n        var fibfibArrayIndex16 =\
    \ 15\n        var fibfibArrayIndex17 = 16\n        var fibfibArrayIndex18 = 17\n\
    \        var fibfibArrayIndex19 = 18\n        var fibfibArrayIndex20 = 19\n  \
    \      var fibfibArrayIndex21 = 20\n        var fibfibArrayIndex22 = 21\n    \
    \    var fibfibArrayIndex23 = 22\n        var fibfibArrayIndex24 = 23\n      \
    \  var fibfibArrayIndex25 = 24\n        var fibfibArrayIndex26 = 25\n        var\
    \ fibfibArrayIndex27 = 26\n        var fibfibArrayIndex28 = 27\n        var fibfibArrayIndex29\
    \ = 28\n        var fibfibArrayIndex30 = 29\n        var fibfibArrayIndex31 =\
    \ 30\n        var fibfibArrayIndex32 = 31\n        var fibfibArrayIndex33 = 32\n\
    \        var fibfibArrayIndex34 = 33\n        var fibfibArrayIndex35 = 34\n  \
    \      var fibfibArrayIndex36 = 35\n        var fibfibArrayIndex37 = 36\n    \
    \    var fibfibArrayIndex38 = 37\n        var fibfibArrayIndex39 = 38\n      \
    \  var fibfibArrayIndex40 = 39\n        var fibfibArrayIndex41 = 40\n        var\
    \ fibfibArrayIndex42 = 41\n        var fibfibArrayIndex43 = 42\n        var fibfibArrayIndex44\
    \ = 43\n        var fibfibArrayIndex45 = 44\n        var fibfibArrayIndex46 =\
    \ 45\n        var fibfibArrayIndex47 = 46\n        var fibfibArrayIndex48 = 47\n\
    \        var fibfibArrayIndex49 = 48\n        var fibfibArrayIndex50 = 49\n  \
    \      var fibfibArrayIndex51 = 50\n        var fibfibArrayIndex52 = 51\n    \
    \    var fibfibArrayIndex53 = 52\n        var fibfibArrayIndex54 = 53\n      \
    \  var fibfibArrayIndex55 = 54\n        var fibfibArrayIndex56 = 55\n        var\
    \ fibfibArrayIndex57 = 56\n        var fibfibArray", "        val fibfib = new\
    \ mutable.Array[Long](3L)\n        fibfib(0) = 0\n        fibfib(1) = 0\n    \
    \    fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibs += 0l\n        fibfibs += 1l\n        fibfibs += 2l\n       \
    \ fibfibs += 3l\n        fibfibs += 4l\n        fibfibs += 5l\n        fibfibs\
    \ += 6l\n        fibfibs += 7l\n        fibfibs += 8l\n        fibfibs += 9l\n\
    \        fibfibs += 10l\n        fibfibs += 11l\n        fibfibs += 12l\n    \
    \    fibfibs += 13l\n        fibfibs += 14l\n        fibfibs += 15l\n        fibfibs\
    \ += 16l\n        fibfibs += 17l\n        fibfibs += 18l\n        fibfibs += 19l\n\
    \        fibfibs += 20l\n        fibfibs += 21l\n        fibfibs += 22l\n    \
    \    fibfibs += 23l\n        fibfibs += 24l\n        fibfibs += 25l\n        fibfibs\
    \ += 26l\n        fibfibs += 27l\n        fibfibs += 28l\n        fibfibs += 29l\n\
    \        fibfibs += 30l\n        fibfibs += 31l\n        fibfibs += 32l\n    \
    \    fibfibs += 33l\n        fibfibs += 34l\n        fibfibs += 35l\n        fibfibs\
    \ += 36l\n        fibfibs += 37l\n        fibfibs += 38l\n        fibfibs += 39l\n\
    \        fibfibs += 40l\n        fibfibs += 41l\n        fibfibs += 42l\n    \
    \    fibfibs += 43l\n        fibfibs += 44l\n        fibfibs += 45l\n        fibfibs\
    \ += 46l\n        fibfibs += 47l\n        fibfibs += 48l\n        fibfibs += 49l\n\
    \        fibfibs += 50l\n        fibfibs += 51l\n        fibfibs += 52l\n    \
    \    fibfibs += 53l\n        fibfibs += 54l\n        fibfibs += 55l\n        fibfibs\
    \ += 56l\n        fibfibs += 57l\n        fibfibs += 58l\n        fibfibs += 59l\n\
    \        fibfibs += 60l\n        fibfibs += 61l\n        fibfibs += 62l\n    \
    \    fibfibs += 63l\n        fibfibs += 64l\n        fibfibs += 65l\n        fibfibs\
    \ += 66l\n        fibfibs += 67l\n        fibfibs += 68l\n        fibfibs += 69l\n\
    \        fibfibs += 70l\n        ", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n     \
    \   fibfib.clear()\n        fibfib.append(0)\n        fibfib.append(1)\n     \
    \   fibfib.append(2)\n        fibfib(n) match {\n            case 0 => 0\n   \
    \         case 1 => 1\n            case 2 => 2\n            case _ => {\n    \
    \            fibfib(n-1) match {\n                    case 0 => 0\n          \
    \          case 1 => 1\n                    case 2 => 2\n                    case\
    \ _ => {\n                        fibfib(n-2) match {\n                      \
    \      case 0 => 0\n                            case 1 => 1\n                \
    \            case 2 => 2\n                            case _ => {\n          \
    \                      fibfib(n-3) match {\n                                 \
    \   case 0 => 0\n                                    case 1 => 1\n           \
    \                         case 2 => 2\n                                    case\
    \ _ => {\n                                        fibfib(n-4) match {\n      \
    \                                      case 0 => 0\n                         \
    \                   case 1 => 1\n                                            case\
    \ 2 => 2\n                                            case _ => fibfib(n-4)\n\
    \                                        }\n                                 \
    \   }\n                                }\n                            }\n    \
    \                    }\n                    }\n                }\n           \
    \ }\n        }", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        var fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList[Long]()\n        fibfib(0) = 0\n        fibfib(1) = 0\n\
    \        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib(n) {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    \        }\n        fibfib(n)._1", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.clear()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => 0\n\
    \            case 1 => 0\n            case 2 => 1\n            case _ => {\n \
    \               fibfib(n-1) match {\n                    case 0 => 0\n       \
    \             case 1 => 0\n                    case 2 => 1\n                 \
    \   case _ => {\n                        fibfib(n-2) match {\n               \
    \             case 0 => 0\n                            case 1 => 0\n         \
    \                   case 2 => 1\n                            case _ => {\n   \
    \                             fibfib(n-3) match {\n                          \
    \          case 0 => 0\n                                    case 1 => 0\n    \
    \                                case 2 => 1\n                               \
    \     case _ => {\n                                        fibfib(n-4) match {\n\
    \                                            case 0 => 0\n                   \
    \                         case 1 => 0\n                                      \
    \      case 2 => 1\n                                            case _ => {\n\
    \                                                fibfib(n-5) match {\n       \
    \                                             case 0 => 0\n                  \
    \                                  case 1 => 0\n                             \
    \                       case 2 => 1\n                                        \
    \            case _ => {\n                                                   \
    \     fibfib(n-6) match {\n                                                  \
    \          case 0 => 0\n                                                     \
    \       case 1 => 0\n                                                        \
    \    case 2 => 1\n                                                           \
    \ case _ => {\n                                                              \
    \  fibfib(n-7) match {\n                                                     \
    \               case 0 => 0\n                                                \
    \                    case 1 => 0\n                                           \
    \                         case 2 => 1\n                                      \
    \                              case _ => {\n                                 \
    \                                       fibfib(n-8) match {\n                \
    \                                                            case 0 => 0\n   \
    \                                                                         case\
    \ 1 => 0\n                                                                   \
    \         case 2 => 1\n                                                      \
    \                      case _ => {\n                                         \
    \                                       fibfib(n-9) match {\n                \
    \                                                                    case 0 =>\
    \ 0\n                                                                        \
    \            case 1 => 0\n                                                   \
    \                                 case 2 => 1\n                              \
    \                                                      case _ => {\n         \
    \                                                                            \
    \   fibfib(n-10) match {\n                                                   \
    \                                         case 0 => 0\n                      \
    \                                                                      case 1\
    \ => 0\n                                                                     \
    \                       case 2 => 1\n                                        \
    \                                                    case _ => {\n           \
    \                                                                            \
    \         fibfib(n-11) match {\n                                             \
    \                                                       case 0 => 0\n        \
    \                                                                            \
    \                case 1 => 0\n                                               \
    \                                                     case 2 => 1\n          \
    \                                                                            \
    \              case _ => {\n                                                 \
    \                                                       fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match ", "        val fibfib\
    \ = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l,\
    \ 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)))\n        fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.Array[Long](n)\n      \
    \  fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val\
    \ fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray += 0\n  \
    \      fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray += 0\n\
    \        fibfibArray += 0\n", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib(n) match {\n            case 0 => 0l\n            case 1\
    \ => 0l\n            case 2 => 1l\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0l\n                    case 1 => 0l\n\
    \                    case 2 => 1l\n                    case _ => {\n         \
    \               fibfib(n-2) match {\n                            case 0 => 0l\n\
    \                            case 1 => 0l\n                            case 2\
    \ => 1l\n                            case _ => {\n                           \
    \     fibfib(n-3) match {\n                                    case 0 => 0l\n\
    \                                    case 1 => 0l\n                          \
    \          case 2 => 1l\n                                    case _ => {\n   \
    \                                     fibfib(n-4) match {\n                  \
    \                          case 0 => 0l\n                                    \
    \        case 1 => 0l\n                                            case 2 => 1l\n\
    \                                            case _ => {\n                   \
    \                             fibfib(n-5) match {\n                          \
    \                          case 0 => 0l\n                                    \
    \                case 1 => 0l\n                                              \
    \      case 2 => 1l\n                                                    case\
    \ _ => {\n                                                        fibfib(n-6)\
    \ match {\n                                                            case 0\
    \ => 0l\n                                                            case 1 =>\
    \ 0l\n                                                            case 2 => 1l\n\
    \                                                            case _ => {\n   \
    \                                                             fibfib(n-7) match\
    \ {\n                                                                    case\
    \ 0 => 0l\n                                                                  \
    \  case 1 => 0l\n                                                            \
    \        case 2 => 1l\n                                                      \
    \              case _ => {\n                                                 \
    \                       fibfib(n-8) match {\n                                \
    \                                            case 0 => 0l\n                  \
    \                                                          case 1 => 0l\n    \
    \                                                                        case\
    \ 2 => 1l\n                                                                  \
    \          case _ => {\n                                                     \
    \                           fibfib(n-9) match {\n                            \
    \                                                        case 0 => 0l\n      \
    \                                                                            \
    \  case 1 => 0l\n                                                            \
    \                        case 2 => 1l\n                                      \
    \                                              case _ => {\n                 \
    \                                                                       fibfib(n-10)\
    \ match {\n                                                                  \
    \                          case 0 => 0l\n                                    \
    \                                                        case 1 => 0l\n      \
    \                                                                            \
    \          case 2 => 1l\n                                                    \
    \                                        case _ => {\n                       \
    \                                                                         fibfib(n-11)\
    \ match {\n                                                                  \
    \                                  case 0 => 0l\n                            \
    \                                                                        case\
    \ 1 => 0l\n                                                                  \
    \                                  case 2 => 1l\n                            \
    \                                                                        case\
    \ _ => {\n                                                                   \
    \                                     fibfib(n-12) match {\n                 \
    \                                                                            \
    \               case 0 => 0l\n                                               \
    \                                                             case 1 => 0l\n \
    \                                                                            \
    \                               case 2 => 1l\n                               \
    \                                                                            \
    \ case _ => {\n                                                              \
    \  ", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0)\
    \ = 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                fibfib(n-1) match {\n               \
    \     case 0 => 0\n                    case 1 => 0\n                    case 2\
    \ => 1\n                    case _ => {\n                        fibfib(n-2) match\
    \ {\n                            case 0 => 0\n                            case\
    \ 1 => 0\n                            case 2 => 1\n                          \
    \  case _ => {\n                                fibfib(n-3) match {\n        \
    \                            case 0 => 0\n                                   \
    \ case 1 => 0\n                                    case 2 => 1\n             \
    \                       case _ => {\n                                        fibfib(n-4)\
    \ match {\n                                            case 0 => 0\n         \
    \                                   case 1 => 0\n                            \
    \                case 2 => 1\n                                            case\
    \ _ => {\n                                                fibfib(n-5) match {\n\
    \                                                    case 0 => 0\n           \
    \                                         case 1 => 0\n                      \
    \                              case 2 => 1\n                                 \
    \                   case _ => {\n                                            \
    \            fibfib(n-6) match {\n                                           \
    \                 case 0 => 0\n                                              \
    \              case 1 => 0\n                                                 \
    \           case 2 => 1\n                                                    \
    \        case _ => {\n                                                       \
    \         fibfib(n-7) match {\n                                              \
    \                      case 0 => 0\n                                         \
    \                           case 1 => 0\n                                    \
    \                                case 2 => 1\n                               \
    \                                     case _ => {\n                          \
    \                                              fibfib(n-8) match {\n         \
    \                                                                   case 0 =>\
    \ 0\n                                                                        \
    \    case 1 => 0\n                                                           \
    \                 case 2 => 1\n                                              \
    \                              case _ => {\n                                 \
    \                                               fibfib(n-9) match {\n        \
    \                                                                            case\
    \ 0 => 0\n                                                                   \
    \                 case 1 => 0\n                                              \
    \                                      case 2 => 1\n                         \
    \                                                           case _ => {\n    \
    \                                                                            \
    \        fibfib(n-10) match {\n                                              \
    \                                              case 0 => 0\n                 \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                         case 2 => 1\n                                      \
    \                                                      case _ => {\n         \
    \                                                                            \
    \           fibfib(n-11) match {\n                                           \
    \                                                         case 0 => 0\n      \
    \                                                                            \
    \                  case 1 => 0\n                                             \
    \                                                       case 2 => 1\n        \
    \                                                                            \
    \                case _ => {\n                                               \
    \                                                         fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {\n                \
    \                                                                            \
    \                                case 0 ", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        }", "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                fibfib(n-1) match {\n               \
    \     case 0 => 0\n                    case 1 => 0\n                    case 2\
    \ => 1\n                    case _ => {\n                        fibfib(n-2) match\
    \ {\n                            case 0 => 0\n                            case\
    \ 1 => 0\n                            case 2 => 1\n                          \
    \  case _ => {\n                                fibfib(n-3) match {\n        \
    \                            case 0 => 0\n                                   \
    \ case 1 => 0\n                                    case 2 => 1\n             \
    \                       case _ => {\n                                        fibfib(n-4)\
    \ match {\n                                            case 0 => 0\n         \
    \                                   case 1 => 0\n                            \
    \                case 2 => 1\n                                            case\
    \ _ => {\n                                                fibfib(n-5) match {\n\
    \                                                    case 0 => 0\n           \
    \                                         case 1 => 0\n                      \
    \                              case 2 => 1\n                                 \
    \                   case _ => {\n                                            \
    \            fibfib(n-6) match {\n                                           \
    \                 case 0 => 0\n                                              \
    \              case 1 => 0\n                                                 \
    \           case 2 => 1\n                                                    \
    \        case _ => {\n                                                       \
    \         fibfib(n-7) match {\n                                              \
    \                      case 0 => 0\n                                         \
    \                           case 1 => 0\n                                    \
    \                                case 2 => 1\n                               \
    \                                     case _ => {\n                          \
    \                                              fibfib(n-8) match {\n         \
    \                                                                   case 0 =>\
    \ 0\n                                                                        \
    \    case 1 => 0\n                                                           \
    \                 case 2 => 1\n                                              \
    \                              case _ => {\n                                 \
    \                                               fibfib(n-9) match {\n        \
    \                                                                            case\
    \ 0 => 0\n                                                                   \
    \                 case 1 => 0\n                                              \
    \                                      case 2 => 1\n                         \
    \                                                           case _ => {\n    \
    \                                                                            \
    \        fibfib(n-10) match {\n                                              \
    \                                              case 0 => 0\n                 \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                         case 2 => 1\n                                      \
    \                                                      case _ => {\n         \
    \                                                                            \
    \           fibfib(n-11) match {\n                                           \
    \                                                         case 0 => 0\n      \
    \                                                                            \
    \                  case 1 => 0\n                                             \
    \                                                       case 2 => 1\n        \
    \                                                                            \
    \                case _ => {\n                                               \
    \                                                         fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {\n                \
    \                                                                            \
    \                                case 0 ", "        val fibfib = new mutable.MutableList[Long]\n\
    \        fibfib.clear()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => 0\n\
    \            case 1 => 0\n            case 2 => 1\n            case _ => {\n \
    \               fibfib(n-1) match {\n                    case 0 => 0\n       \
    \             case 1 => 0\n                    case 2 => 1\n                 \
    \   case _ => {\n                        fibfib(n-2) match {\n               \
    \             case 0 => 0\n                            case 1 => 0\n         \
    \                   case 2 => 1\n                            case _ => {\n   \
    \                             fibfib(n-3) match {\n                          \
    \          case 0 => 0\n                                    case 1 => 0\n    \
    \                                case 2 => 1\n                               \
    \     case _ => {\n                                        fibfib(n-4) match {\n\
    \                                            case 0 => 0\n                   \
    \                         case 1 => 0\n                                      \
    \      case 2 => 1\n                                            case _ => {\n\
    \                                                fibfib(n-5) match {\n       \
    \                                             case 0 => 0\n                  \
    \                                  case 1 => 0\n                             \
    \                       case 2 => 1\n                                        \
    \            case _ => {\n                                                   \
    \     fibfib(n-6) match {\n                                                  \
    \          case 0 => 0\n                                                     \
    \       case 1 => 0\n                                                        \
    \    case 2 => 1\n                                                           \
    \ case _ => {\n                                                              \
    \  fibfib(n-7) match {\n                                                     \
    \               case 0 => 0\n                                                \
    \                    case 1 => 0\n                                           \
    \                         case 2 => 1\n                                      \
    \                              case _ => {\n                                 \
    \                                       fibfib(n-8) match {\n                \
    \                                                            case 0 => 0\n   \
    \                                                                         case\
    \ 1 => 0\n                                                                   \
    \         case 2 => 1\n                                                      \
    \                      case _ => {\n                                         \
    \                                       fibfib(n-9) match {\n                \
    \                                                                    case 0 =>\
    \ 0\n                                                                        \
    \            case 1 => 0\n                                                   \
    \                                 case 2 => 1\n                              \
    \                                                      case _ => {\n         \
    \                                                                            \
    \   fibfib(n-10) match {\n                                                   \
    \                                         case 0 => 0\n                      \
    \                                                                      case 1\
    \ => 0\n                                                                     \
    \                       case 2 => 1\n                                        \
    \                                                    case _ => {\n           \
    \                                                                            \
    \         fibfib(n-11) match {\n                                             \
    \                                                       case 0 => 0\n        \
    \                                                                            \
    \                case 1 => 0\n                                               \
    \                                                     case 2 => 1\n          \
    \                                                                            \
    \              case _ => {\n                                                 \
    \                                                       fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n        else if\
    \ (n % 2 == 0) fibfib(n-1) + fibfib(n-2)\n        else fibfib(n-1) + fibfib(n-2)",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n)", "        if\
    \ (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n       \
    \ else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        if (n == 0) 0\n    \
    \    else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs.update(0,\
    \ 0l)\n        fibfibs.update(1, 1l)\n        fibfibs.update(2, 2l)\n        fibfibs.update(n-1,\
    \ fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3))", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(n) match {\n            case 0 => 0l\n            case\
    \ 1 => 1l\n            case 2 => 2l\n            case _ => fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)\n        }", "        val fibfibs = mutable.ArrayBuffer(0l, 1l,\
    \ 2l)\n        fibfibs.update(0, 0l)\n        fibfibs.update(1, 1l)\n        fibfibs.update(2,\
    \ 2l)\n        fibfibs.update(n-1, fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3))",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n\
    \        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib(n) match\
    \ {\n            case 0 => 0l\n            case 1 => 0l\n            case 2 =>\
    \ 1l\n            case _ => {\n                val fibfib2 = fibfib.clone()\n\
    \                fibfib2.remove(n-1)\n                fibfib2.remove(n-2)\n  \
    \              fibfib2.remove(n-3)\n                fibfib2.put(n-1, fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3))\n                fibfib2.get(n-1)\n           \
    \ }\n        }", "        val fibfibs = mutable.ArrayBuffer(0l)\n        fibfibs(0)\
    \ = 0\n        fibfibs(1) = 0\n        fibfibs(2) = 1\n        fibfibs(n) = fibfibs(n-1)\
    \ + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "        val fibfib = new\
    \ mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l,\
    \ 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)))\n        fibfib.get(n)", "        var fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var fibfib1 : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        var fibfib2 : mutable.MutableList[Long] = mutable.MutableList()\n   \
    \     var fibfib3 : mutable.MutableList[Long] = mutable.MutableList()\n      \
    \  var fibfib4 : mutable.MutableList[Long] = mutable.MutableList()\n        var\
    \ fibfib5 : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib6\
    \ : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib7 : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var fibfib8 : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        var fibfib9 : mutable.MutableList[Long] = mutable.MutableList()\n   \
    \     var fibfib10 : mutable.MutableList[Long] = mutable.MutableList()\n     \
    \   var fibfib11 : mutable.MutableList[Long] = mutable.MutableList()\n       \
    \ var fibfib12 : mutable.MutableList[Long] = mutable.MutableList()\n        var\
    \ fibfib13 : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib14\
    \ : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib15 :\
    \ mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib16 : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var fibfib17 : mutable.MutableList[Long] =\
    \ mutable.MutableList()\n        var fibfib18 : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        var fibfib19 : mutable.MutableList[Long] = mutable.MutableList()\n  \
    \      var fibfib20 : mutable.MutableList[Long] = mutable.MutableList()\n    \
    \    var fibfib21 : mutable.MutableList[Long] = mutable.MutableList()\n      \
    \  var fibfib22 : mutable.MutableList[Long] = mutable.MutableList()\n        var\
    \ fibfib23 : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib24\
    \ : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib25 :\
    \ mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib26 : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var fibfib27 : mutable.MutableList[Long] =\
    \ mutable.MutableList()\n        var fibfib28 : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        var fibfib29 : mutable.MutableList[Long] = mutable.MutableList()\n  \
    \      var fibfib30 : mutable.MutableList[Long] = mutable.MutableList()\n    \
    \    var fibfib31 : mutable.MutableList[Long] = mutable.MutableList()\n      \
    \  var fibfib32", "        var fib : Long = 0\n        var fib1 : Long = 0\n \
    \       var fib2 : Long = 1\n        var fib3 : Long = 1\n        var fib4 : Long\
    \ = 1\n        var fib5 : Long = 1\n        var fib6 : Long = 1\n        var fib7\
    \ : Long = 1\n        var fib8 : Long = 1\n        var fib9 : Long = 1\n     \
    \   var fib10 : Long = 1\n        var fib11 : Long = 1\n        var fib12 : Long\
    \ = 1\n        var fib13 : Long = 1\n        var fib14 : Long = 1\n        var\
    \ fib15 : Long = 1\n        var fib16 : Long = 1\n        var fib17 : Long = 1\n\
    \        var fib18 : Long = 1\n        var fib19 : Long = 1\n        var fib20\
    \ : Long = 1\n        var fib21 : Long = 1\n        var fib22 : Long = 1\n   \
    \     var fib23 : Long = 1\n        var fib24 : Long = 1\n        var fib25 :\
    \ Long = 1\n        var fib26 : Long = 1\n        var fib27 : Long = 1\n     \
    \   var fib28 : Long = 1\n        var fib29 : Long = 1\n        var fib30 : Long\
    \ = 1\n        var fib31 : Long = 1\n        var fib32 : Long = 1\n        var\
    \ fib33 : Long = 1\n        var fib34 : Long = 1\n        var fib35 : Long = 1\n\
    \        var fib36 : Long = 1\n        var fib37 : Long = 1\n        var fib38\
    \ : Long = 1\n        var fib39 : Long = 1\n        var fib40 : Long = 1\n   \
    \     var fib41 : Long = 1\n        var fib42 : Long = 1\n        var fib43 :\
    \ Long = 1\n        var fib44 : Long = 1\n        var fib45 : Long = 1\n     \
    \   var fib46 : Long = 1\n        var fib47 : Long = 1\n        var fib48 : Long\
    \ = 1\n        var fib49 : Long = 1\n        var fib50 : Long = 1\n        var\
    \ fib51 : Long = 1\n        var fib52 : Long = 1\n        var fib53 : Long = 1\n\
    \        var fib54 : Long = 1\n        var fib55 : Long = 1\n        var fib56\
    \ : Long = 1\n        var fib57 : Long = 1\n        var fib58 : Long = 1\n   \
    \     var fib59 : Long = 1\n        var fib60 : Long = 1\n        var fib61 :\
    \ Long = 1\n        var fib62 : Long = 1\n        var fib63 : Long = 1\n     \
    \   var fib64 : Long = 1\n        var fib65 : Long = 1\n        var fib66 : Long\
    \ = 1\n        var fib67 : Long = 1\n        var fib68 : Long = 1\n        var\
    \ fib69 : Long = 1\n        var fib70 : Long = 1\n        var fib71 : Long = 1\n\
    \        var fib72 : Long = 1\n        var fib", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(0) = 0l\n        fibfibs(1) = 1l\n        fibfibs(2)\
    \ = 2l\n        fibfibs.updated(n, fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3))\n\
    \        fibfibs(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0\n                    case 1 => 0\n\
    \                    case 2 => 1\n                    case _ => {\n          \
    \              fibfib(n-2) match {\n                            case 0 => 0\n\
    \                            case 1 => 0\n                            case 2 =>\
    \ 1\n                            case _ => {\n                               \
    \ fibfib(n-3) match {\n                                    case 0 => 0\n     \
    \                               case 1 => 0\n                                \
    \    case 2 => 1\n                                    case _ => {\n          \
    \                              fibfib(n-4) match {\n                         \
    \                   case 0 => 0\n                                            case\
    \ 1 => 0\n                                            case 2 => 1\n          \
    \                                  case _ => {\n                             \
    \                   fibfib(n-5) match {\n                                    \
    \                case 0 => 0\n                                               \
    \     case 1 => 0\n                                                    case 2\
    \ => 1\n                                                    case _ => {\n    \
    \                                                    fibfib(n-6) match {\n   \
    \                                                         case 0 => 0\n      \
    \                                                      case 1 => 0\n         \
    \                                                   case 2 => 1\n            \
    \                                                case _ => {\n               \
    \                                                 fibfib(n-7) match {\n      \
    \                                                              case 0 => 0\n \
    \                                                                   case 1 =>\
    \ 0\n                                                                    case\
    \ 2 => 1\n                                                                   \
    \ case _ => {\n                                                              \
    \          fibfib(n-8) match {\n                                             \
    \                               case 0 => 0\n                                \
    \                                            case 1 => 0\n                   \
    \                                                         case 2 => 1\n      \
    \                                                                      case _\
    \ => {\n                                                                     \
    \           fibfib(n-9) match {\n                                            \
    \                                        case 0 => 0\n                       \
    \                                                             case 1 => 0\n  \
    \                                                                            \
    \      case 2 => 1\n                                                         \
    \                           case _ => {\n                                    \
    \                                                    fibfib(n-10) match {\n  \
    \                                                                            \
    \              case 0 => 0\n                                                 \
    \                                           case 1 => 0\n                    \
    \                                                                        case\
    \ 2 => 1\n                                                                   \
    \                         case _ => {\n                                      \
    \                                                          fibfib(n-11) match\
    \ {\n                                                                        \
    \                            case 0 => 0\n                                   \
    \                                                                 case 1 => 0\n\
    \                                                                            \
    \                        case 2 => 1\n                                       \
    \                                                             case _ => {\n  \
    \                                                                            \
    \                          fibfib(n-12) match {\n                            \
    \                                                                            \
    \    case 0 => 0\n                                                           \
    \                                                 case 1 => 0\n              \
    \                                                                            \
    \                  case 2 => 1\n                                             \
    \                                                               case _ => {\n\
    \                                                                            \
    \                                    fibfib(n-13) match {\n                  \
    \                                                                            \
    \                      case 0 => 0\n                                         \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                                                 case 2 => 1\n              \
    \                                                                            \
    \                          case _ => {\n                                     \
    \                                                                            \
    \       fibfib(n-14) match {\n", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfibArray = Array[Long](0, 1, 1, 2, 3)\n \
    \       val fibfibArrayLength = fibfibArray.length\n        val fibfibArrayIndex\
    \ = (fibfibArrayLength - 1) - n\n        fibfibArray(fibfibArrayIndex)", "   \
    \     if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib =\
    \ new mutable.MutableList[Long]()\n        fibfib.append(0)\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => 0\n\
    \            case 1 => 0\n            case 2 => 1\n            case _ => {\n \
    \               val fibfib2 = fibfib.toList\n                fibfib2.remove(fibfib2.size\
    \ - 2)\n                fibfib2.remove(fibfib2.size - 1)\n                fibfib2.last\n\
    \            }\n        }", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        var fibfibArrayIndex = 0\n        var fibfibArrayIndex2 = 0\n       \
    \ var fibfibArrayIndex3 = 0\n        var fibfibArrayIndex4 = 0\n        var fibfibArrayIndex5\
    \ = 0\n        var fibfibArrayIndex6 = 0\n        var fibfibArrayIndex7 = 0\n\
    \        var fibfibArrayIndex8 = 0\n        var fibfibArrayIndex9 = 0\n      \
    \  var fibfibArrayIndex10 = 0\n        var fibfibArrayIndex11 = 0\n        var\
    \ fibfibArrayIndex12 = 0\n        var fibfibArrayIndex13 = 0\n        var fibfibArrayIndex14\
    \ = 0\n        var fibfibArrayIndex15 = 0\n        var fibfibArrayIndex16 = 0\n\
    \        var fibfibArrayIndex17 = 0\n        var fibfibArrayIndex18 = 0\n    \
    \    var fibfibArrayIndex19 = 0\n        var fibfibArrayIndex20 = 0\n        var\
    \ fibfibArrayIndex21 = 0\n        var fibfibArrayIndex22 = 0\n        var fibfibArrayIndex23\
    \ = 0\n        var fibfibArrayIndex24 = 0\n        var fibfibArrayIndex25 = 0\n\
    \        var fibfibArrayIndex26 = 0\n        var fibfibArrayIndex27 = 0\n    \
    \    var fibfibArrayIndex28 = 0\n        var fibfibArrayIndex29 = 0\n        var\
    \ fibfibArrayIndex30 = 0\n        var fibfibArrayIndex31 = 0\n        var fibfibArrayIndex32\
    \ = 0\n        var fibfibArrayIndex33 = 0\n        var fibfibArrayIndex34 = 0\n\
    \        var fibfibArrayIndex35 = 0\n        var fibfibArrayIndex36 = 0\n    \
    \    var fibfibArrayIndex37 = 0\n        var fibfibArrayIndex38 = 0\n        var\
    \ fibfibArrayIndex39 = 0\n        var fibfibArrayIndex40 = 0\n        var fibfibArrayIndex41\
    \ = 0\n        var fibfibArrayIndex42 = 0\n        var fibfibArrayIndex43 = 0\n\
    \        var fibfibArrayIndex44 = 0\n        var fibfibArrayIndex45 = 0\n    \
    \    var fibfibArrayIndex46 = 0\n        var fibfibArrayIndex47 = 0\n        var\
    \ fibfibArrayIndex48 = 0\n        var fibfibArrayIndex49 = 0\n        var fibfibArrayIndex50\
    \ = 0\n        var fibfibArrayIndex51 = 0\n        var fibfibArrayIndex52 = 0\n\
    \        var fibfibArrayIndex53 = 0\n        var fibfibArrayIndex54 = 0\n    \
    \    var fibfibArrayIndex55 = 0\n        var fibfibArrayIndex56 = 0\n        var\
    \ fibfibArrayIndex57 = 0\n        var fibfibArrayIndex58 = 0\n        var fibfibArrayIndex59\
    \ = 0\n        var fibfibArrayIndex60 = 0\n        var fibfibArrayIndex61 = 0\n\
    \        var fibfibArrayIndex62 = 0\n        var fib", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList(1)\n        fib += 0\n        fib += 0\n        fib +=\
    \ 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n    \
    \    fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib\
    \ += 0\n        fib += 0\n        fib += 0\n        fib += 0\n        fib += 0\n\
    \        fib += 0\n        fib", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n)", "        var\
    \ fibfib = 0\n        var fibfib2 = 1\n        var fibfib3 = 1\n        var fibfib4\
    \ = 2\n        var fibfib5 = 3\n        var fibfib6 = 5\n        var fibfib7 =\
    \ 8\n        var fibfib8 = 13\n        var fibfib9 = 21\n        var fibfib10\
    \ = 55\n        var fibfib11 = 89\n        var fibfib12 = 120\n        var fibfib13\
    \ = 144\n        var fibfib14 = 169\n        var fibfib15 = 201\n        var fibfib16\
    \ = 229\n        var fibfib17 = 277\n        var fibfib18 = 311\n        var fibfib19\
    \ = 353\n        var fibfib20 = 386\n        var fibfib21 = 430\n        var fibfib22\
    \ = 495\n        var fibfib23 = 546\n        var fibfib24 = 601\n        var fibfib25\
    \ = 662\n        var fibfib26 = 715\n        var fibfib27 = 768\n        var fibfib28\
    \ = 825\n        var fibfib29 = 881\n        var fibfib30 = 932\n        var fibfib31\
    \ = 987\n        var fibfib32 = 1041\n        var fibfib33 = 1091\n        var\
    \ fibfib34 = 1164\n        var fibfib35 = 1221\n        var fibfib36 = 1275\n\
    \        var fibfib37 = 1346\n        var fibfib38 = 1399\n        var fibfib39\
    \ = 1459\n        var fibfib40 = 1521\n        var fibfib41 = 1584\n        var\
    \ fibfib42 = 1647\n        var fibfib43 = 1723\n        var fibfib44 = 1791\n\
    \        var fibfib45 = 1860\n        var fibfib46 = 1927\n        var fibfib47\
    \ = 1989\n        var fibfib48 = 2068\n        var fibfib49 = 2135\n        var\
    \ fibfib50 = 2213\n        var fibfib51 = 2272\n        var fibfib52 = 2341\n\
    \        var fibfib53 = 2402\n        var fibfib54 = 2471\n        var fibfib55\
    \ = 2539\n        var fibfib56 = 2609\n        var fibfib57 = 2698\n        var\
    \ fibfib58 = 2778\n        var fibfib59 = 2867\n        var fibfib60 = 2956\n\
    \        var fibfib61 = 3045\n        var fibfib62 = 3137\n        var fibfib63\
    \ = 3225\n        var fibfib64 = 3321\n        var fibfib65 = 3508\n        var\
    \ fibfib66 = 3597\n        var fibfib67 = 3787\n        var fibfib68 = 3876\n\
    \        var fibfib69 = 3975\n", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  var fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n        fibfib(0)\
    \ = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib(n) match {\n            case 0 => 0l\n            case 1\
    \ => 0l\n            case 2 => 1l\n            case n => fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        }", "        var fib : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        fib += fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fib.last", " \
    \       val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n    \
    \    fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) match {\n       \
    \     case 0 => 0\n            case 1 => 1\n            case 2 => 2\n        \
    \    case _ => {\n                val fibfib2 = fibfib.toList\n              \
    \  fibfib2.remove(fibfib2.last)\n                fibfib2.remove(fibfib2.last)\n\
    \                fibfib2.remove(fibfib2.last)\n                fibfib2.last\n\
    \            }\n        }", "        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfibs =\
    \ mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n        fibfibs += 0\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n", "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n        fibfib(n)\
    \ match {\n            case 0 => 0\n            case 1 => 0\n            case\
    \ 2 => 1\n            case _ => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    \
    \    }", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        fibfib.append(0l)\n        fibfib.append(0l)\n        fibfib.append(1l)\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fib1 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fib2 : mutable.MutableList[Long] = mutable.MutableList(0)\n     \
    \   var fib3 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fib4 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib5\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib6 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fib7 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fib8 : mutable.MutableList[Long] = mutable.MutableList(0)\n     \
    \   var fib9 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fib10 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib11\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib12 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fib13 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fib14 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fib15 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fib16 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib17\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib18 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fib19 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fib20 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fib21 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fib22 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib23\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib24 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fib25 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fib26 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fib27 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fib28 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib29\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fib30 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fib31 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fib32 : ", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.clear()\n        fibfib(0) = 0\n        fibfib(1) = 0\n      \
    \  fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n    \
    \    else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        var fibfibArrayIndex\
    \ = 0\n        var fibfibArrayIndex2 = 0\n        var fibfibArrayIndex3 = 0\n\
    \        var fibfibArrayIndex4 = 0\n        var fibfibArrayIndex5 = 0\n      \
    \  var fibfibArrayIndex6 = 0\n        var fibfibArrayIndex7 = 0\n        var fibfibArrayIndex8\
    \ = 0\n        var fibfibArrayIndex9 = 0\n        var fibfibArrayIndex10 = 0\n\
    \        var fibfibArrayIndex11 = 0\n        var fibfibArrayIndex12 = 0\n    \
    \    var fibfibArrayIndex13 = 0\n        var fibfibArrayIndex14 = 0\n        var\
    \ fibfibArrayIndex15 = 0\n        var fibfibArrayIndex16 = 0\n        var fibfibArrayIndex17\
    \ = 0\n        var fibfibArrayIndex18 = 0\n        var fibfibArrayIndex19 = 0\n\
    \        var fibfibArrayIndex20 = 0\n        var fibfibArrayIndex21 = 0\n    \
    \    var fibfibArrayIndex22 = 0\n        var fibfibArrayIndex23 = 0\n        var\
    \ fibfibArrayIndex24 = 0\n        var fibfibArrayIndex25 = 0\n        var fibfibArrayIndex26\
    \ = 0\n        var fibfibArrayIndex27 = 0\n        var fibfibArrayIndex28 = 0\n\
    \        var fibfibArrayIndex29 = 0\n        var fibfibArrayIndex30 = 0\n    \
    \    var fibfibArrayIndex31 = 0\n        var fibfibArrayIndex32 = 0\n        var\
    \ fibfibArrayIndex33 = 0\n        var fibfibArrayIndex34 = 0\n        var fibfibArrayIndex35\
    \ = 0\n        var fibfibArrayIndex36 = 0\n        var fibfibArrayIndex37 = 0\n\
    \        var fibfibArrayIndex38 = 0\n        var fibfibArrayIndex39 = 0\n    \
    \    var fibfibArrayIndex40 = 0\n        var fibfibArrayIndex41 = 0\n        var\
    \ fibfibArrayIndex42 = 0\n        var fibfibArrayIndex43 = 0\n        var fibfibArrayIndex44\
    \ = 0\n        var fibfibArrayIndex45 = 0\n        var fibfibArrayIndex46 = 0\n\
    \        var fibfibArrayIndex47 = 0\n        var fibfibArrayIndex48 = 0\n    \
    \    var fibfibArrayIndex49 = 0\n        var fibfibArrayIndex50 = 0\n        var\
    \ fibfibArrayIndex51 = 0\n        var fibfibArrayIndex52 = 0\n        var fibfibArrayIndex53\
    \ = 0\n        var fibfibArrayIndex54 = 0\n        var fibfibArrayIndex55 = 0\n\
    \        var fibfibArrayIndex56 = 0\n        var fibfibArrayIndex57 = 0\n    \
    \    var fibfibArrayIndex58 = 0\n        var fibfibArrayIndex59 = 0\n        var\
    \ fibfibArrayIndex60 = 0\n        var fibfibArrayIndex61 = 0\n        var fibfibArrayIndex62\
    \ = 0\n        var fib", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.MutableList[Long]()\n \
    \       fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                val fibfib2\
    \ = fibfib.tail\n                fibfib2.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail",
  "        val fibfib : mutable.MutableList[Long] = mutable.MutableList.empty\n  \
    \      fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n)\
    \ match {\n            case 0 => 0\n            case 1 => 1\n            case\
    \ 2 => 2\n            case _ => {\n                val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList.empty\n                fibfib.add(0)\n               \
    \ fibfib.add(1)\n                fibfib.add(2)\n                fibfib(n) match\
    \ {\n                    case 0 => 0\n                    case 1 => 1\n      \
    \              case 2 => 2\n                    case _ => {\n                \
    \        val fibfib : mutable.MutableList[Long] = mutable.MutableList.empty\n\
    \                        fibfib.add(0)\n                        fibfib.add(1)\n\
    \                        fibfib.add(2)\n                        fibfib(n) match\
    \ {\n                            case 0 => 0\n                            case\
    \ 1 => 1\n                            case 2 => 2\n                          \
    \  case _ => {\n                                val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList.empty\n                                fibfib.add(0)\n\
    \                                fibfib.add(1)\n                             \
    \   fibfib.add(2)\n                                fibfib(n) match {\n       \
    \                             case 0 => 0\n                                  \
    \  case 1 => 1\n                                    case 2 => 2\n            \
    \                        case _ => {\n                                       \
    \ val fibfib : mutable.MutableList[Long] = mutable.MutableList.empty\n       \
    \                                 fibfib.add(0)\n                            \
    \            fibfib.add(1)\n                                        fibfib.add(2)\n\
    \                                        fibfib(n) match {\n                 \
    \                           case 0 => 0\n                                    \
    \        case 1 => 1\n                                            case 2 => 2\n\
    \                                            case _ => {\n                   \
    \                             val fibfib : mutable.MutableList[Long] = mutable.MutableList.empty\n\
    \                                                fibfib.add(0)\n             \
    \                                   fibfib.add(1)\n                          \
    \                      fibfib.add(2)\n                                       \
    \         fibfib(n) match {\n                                                \
    \    case 0 => 0\n                                                    case 1 =>\
    \ 1\n                                                    case 2 => 2\n       \
    \                                             case _ => {\n                  \
    \                                      val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList.empty\n                                              \
    \          fibfib.add(0)\n                                                   \
    \     fibfib.add(1)\n                                                        fibfib.add(2)\n\
    \                                                        fibfib(n) match {\n \
    \                                                           case 0 => 0\n    \
    \                                                        case 1 => 1\n       \
    \                                                     case 2 => 2\n          \
    \                                                  case _ => {\n             \
    \                                                   val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList.empty\n                                              \
    \                  fibfib.add(0)\n                                           \
    \                     fibfib.add(1)\n                                        \
    \                        fibfib.add(2)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n   \
    \     fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n\
    \        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)",
  "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        ", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n).foreach(x => fibfib.append(fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n\
    \        fibfib(n)", "        var fib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var i : Long = 1\n        while (i <= n) {\n            fib.add(i)\n\
    \            i = fib(i) + fib(i-1) + fib(i-2)\n        }\n        fib(n)", " \
    \       val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n        fibfibArray += 0\n        fibfibArray\
    \ += 0\n        fibfibArray += 0\n", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n)",
  "        val fibfibArray = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibArray.update(0,\
    \ 0l)\n        fibfibArray.update(1, 1l)\n        fibfibArray.update(2, 2l)\n\
    \        fibfibArray.update(n, (fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)))\n\
    \        fibfibArray(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfib = new mutable.MutableList[Long]\n        fibfib.clear()\n  \
    \      fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        var fibfib : mutable.MutableList[Long] = mutable.MutableList()\n      \
    \  var fibfib1 : mutable.MutableList[Long] = mutable.MutableList()\n        var\
    \ fibfib2 : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib3\
    \ : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib4 : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var fibfib5 : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        var fibfib6 : mutable.MutableList[Long] = mutable.MutableList()\n   \
    \     var fibfib7 : mutable.MutableList[Long] = mutable.MutableList()\n      \
    \  var fibfib8 : mutable.MutableList[Long] = mutable.MutableList()\n        var\
    \ fibfib9 : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib10\
    \ : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib11 :\
    \ mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib12 : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var fibfib13 : mutable.MutableList[Long] =\
    \ mutable.MutableList()\n        var fibfib14 : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        var fibfib15 : mutable.MutableList[Long] = mutable.MutableList()\n  \
    \      var fibfib16 : mutable.MutableList[Long] = mutable.MutableList()\n    \
    \    var fibfib17 : mutable.MutableList[Long] = mutable.MutableList()\n      \
    \  var fibfib18 : mutable.MutableList[Long] = mutable.MutableList()\n        var\
    \ fibfib19 : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib20\
    \ : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib21 :\
    \ mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib22 : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        var fibfib23 : mutable.MutableList[Long] =\
    \ mutable.MutableList()\n        var fibfib24 : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        var fibfib25 : mutable.MutableList[Long] = mutable.MutableList()\n  \
    \      var fibfib26 : mutable.MutableList[Long] = mutable.MutableList()\n    \
    \    var fibfib27 : mutable.MutableList[Long] = mutable.MutableList()\n      \
    \  var fibfib28 : mutable.MutableList[Long] = mutable.MutableList()\n        var\
    \ fibfib29 : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib30\
    \ : mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib31 :\
    \ mutable.MutableList[Long] = mutable.MutableList()\n        var fibfib32", " \
    \       val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                val fibfib2 = fibfib.tail\n         \
    \       fibfib2.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail",
  "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.clear()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0\n                    case 1 => 0\n\
    \                    case 2 => 1\n                    case _ => {\n          \
    \              fibfib(n-2) match {\n                            case 0 => 0\n\
    \                            case 1 => 0\n                            case 2 =>\
    \ 1\n                            case _ => {\n                               \
    \ fibfib(n-3) match {\n                                    case 0 => 0\n     \
    \                               case 1 => 0\n                                \
    \    case 2 => 1\n                                    case _ => {\n          \
    \                              fibfib.last\n                                 \
    \   }\n                                }\n                            }\n    \
    \                    }\n                    }\n                }\n           \
    \ }\n        }", "        val fibfib = new mutable.HashMap[Long, Long]()\n   \
    \     fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib(n) {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    \        }\n        fibfib(n)._1", "        val fibfib = new mutable.MutableList[Long]\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        }", "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                val fibfib1 = fibfib(n-1)\n         \
    \       val fibfib2 = fibfib(n-2)\n                val fibfib3 = fibfib(n-3)\n\
    \                fibfib(n) = fibfib1 + fibfib2 + fibfib3\n            }\n    \
    \    }", "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n).foreach(x\
    \ => fibfib.append(fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n).last"]
stop_tokens:
- "\n    }\n"

name: HumanEval_141_file_name_check
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function which takes a string representing a file's name, and returns\n\
  \    // 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n   \
  \ // A file's name is considered to be valid if and only if all the following conditions\
  \ \n    // are met:\n    // - There should not be more than three digits ('0'-'9')\
  \ in the file's name.\n    // - The file's name contains exactly one dot '.'\n \
  \   // - The substring before the dot should not be empty, and it starts with a\
  \ letter from \n    // the latin alphapet ('a'-'z' and 'A'-'Z').\n    // - The substring\
  \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    // Examples:\n\
  \    // >>> fileNameCheck((\"example.txt\"))\n    // (\"Yes\")\n    // >>> fileNameCheck((\"\
  1example.dll\"))\n    // (\"No\")\n    def fileNameCheck(file_name : String) : String\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fileNameCheck((\"\
  example.txt\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"1example.dll\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"s1sdf3.asd\")).equals((\"No\"\
  )));\n    assert(fileNameCheck((\"K.dll\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"\
  MY16FILE3.exe\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"His12FILE94.exe\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"_Y.txt\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"?aREYA.exe\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  /this_is_valid.dll\")).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_valid.wow\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_valid.txt\")).equals((\"\
  Yes\")));\n    assert(fileNameCheck((\"this_is_valid.txtexe\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"#this2_i4s_5valid.ten\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  @this1_is6_valid.exe\")).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_12valid.6exe4.txt\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"all.exe.txt\")).equals((\"No\"\
  )));\n    assert(fileNameCheck((\"I563_No.exe\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"\
  Is3youfault.txt\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"no_one#knows.dll\"\
  )).equals((\"Yes\")));\n    assert(fileNameCheck((\"1I563_Yes3.exe\")).equals((\"\
  No\")));\n    assert(fileNameCheck((\"I563_Yes3.txtt\")).equals((\"No\")));\n  \
  \  assert(fileNameCheck((\"final..txt\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  final132\")).equals((\"No\")));\n    assert(fileNameCheck((\"_f4indsartal132.\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\".txt\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"s.\")).equals((\"No\")));\n    }\n\n}\n"
completions: ["        val pattern = \"^[0-9]{3}\\.[a-zA-Z]+$\"\n        val pattern1\
    \ = \"^[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val pattern2 = \"^[a-zA-Z]+$\"\n    \
    \    val pattern3 = \"^[a-zA-Z]+$\"\n        val pattern4 = \"^[a-zA-Z]+$\"\n\
    \        val pattern5 = \"^[a-zA-Z]+$\"\n        val pattern6 = \"^[a-zA-Z]+$\"\
    \n        val pattern7 = \"^[a-zA-Z]+$\"\n        val pattern8 = \"^[a-zA-Z]+$\"\
    \n        val pattern9 = \"^[a-zA-Z]+$\"\n        val pattern10 = \"^[a-zA-Z]+$\"\
    \n        val pattern11 = \"^[a-zA-Z]+$\"\n        val pattern12 = \"^[a-zA-Z]+$\"\
    \n        val pattern13 = \"^[a-zA-Z]+$\"\n        val pattern14 = \"^[a-zA-Z]+$\"\
    \n        val pattern15 = \"^[a-zA-Z]+$\"\n        val pattern16 = \"^[a-zA-Z]+$\"\
    \n        val pattern17 = \"^[a-zA-Z]+$\"\n        val pattern18 = \"^[a-zA-Z]+$\"\
    \n        val pattern19 = \"^[a-zA-Z]+$\"\n        val pattern20 = \"^[a-zA-Z]+$\"\
    \n        val pattern21 = \"^[a-zA-Z]+$\"\n        val pattern22 = \"^[a-zA-Z]+$\"\
    \n        val pattern23 = \"^[a-zA-Z]+$\"\n        val pattern24 = \"^[a-zA-Z]+$\"\
    \n        val pattern25 = \"^[a-zA-Z]+$\"\n        val pattern26 = \"^[a-zA-Z]+$\"\
    \n        val pattern27 = \"^[a-zA-Z]+$\"\n        val pattern28 = \"^[a-zA-Z]+$\"\
    \n        val pattern29 = \"^[a-zA-Z]+$\"\n        val pattern30 = \"^[a-zA-Z]+$\"\
    \n        val pattern31 = \"^[a-zA-Z]+$\"\n        val pattern32 = \"^[a-zA-Z]+$\"\
    \n        val pattern33 = \"^[a-zA-Z]+$\"\n        val pattern34 = \"^[a-zA-Z]+$\"\
    \n        val pattern35 = \"^[a-zA-Z]+$\"\n        val pattern36 = \"^[a-zA-Z]+$\"\
    \n        val pattern37 = \"^[a-zA-Z]+$\"\n        val pattern38 = \"^[a-zA-Z]+$\"\
    \n        val pattern39 = \"^[a-zA-Z]+$\"\n        val pattern40 = \"^[a-zA-Z]+$\"\
    \n        val pattern41 = \"^[a-zA-Z]+$\"\n        val pattern42 = \"^[a-zA-Z]+$\"\
    \n        val pattern43 = \"^[a-zA-Z]+$\"\n        val pattern44 = \"^[a-zA-Z]+$\"\
    \n        val pattern45 = \"^[a-zA-Z]+$\"\n        val pattern46 = \"^[a-zA-Z]+$\"\
    \n        val pattern47 = \"^[a-zA-Z]+$\"\n        val pattern48 = \"^[a-zA-Z]+$\"\
    \n        val pattern49 = \"^[a-zA-Z]+$\"\n        val pattern", "        val\
    \ pattern = \"^[0-9]{1,3}\\.[a-zA-Z]+$\"\n        val pattern1 = \"^[a-zA-Z]+\\\
    .[a-zA-Z]+$\"\n        val pattern2 = \"^[a-zA-Z]+$\"\n        val pattern3 =\
    \ \"^[a-zA-Z]+$\"\n        val pattern4 = \"^[a-zA-Z]+$\"\n        val pattern5\
    \ = \"^[a-zA-Z]+$\"\n        val pattern6 = \"^[a-zA-Z]+$\"\n        val pattern7\
    \ = \"^[a-zA-Z]+$\"\n        val pattern8 = \"^[a-zA-Z]+$\"\n        val pattern9\
    \ = \"^[a-zA-Z]+$\"\n        val pattern10 = \"^[a-zA-Z]+$\"\n        val pattern11\
    \ = \"^[a-zA-Z]+$\"\n        val pattern12 = \"^[a-zA-Z]+$\"\n        val pattern13\
    \ = \"^[a-zA-Z]+$\"\n        val pattern14 = \"^[a-zA-Z]+$\"\n        val pattern15\
    \ = \"^[a-zA-Z]+$\"\n        val pattern16 = \"^[a-zA-Z]+$\"\n        val pattern17\
    \ = \"^[a-zA-Z]+$\"\n        val pattern18 = \"^[a-zA-Z]+$\"\n        val pattern19\
    \ = \"^[a-zA-Z]+$\"\n        val pattern20 = \"^[a-zA-Z]+$\"\n        val pattern21\
    \ = \"^[a-zA-Z]+$\"\n        val pattern22 = \"^[a-zA-Z]+$\"\n        val pattern23\
    \ = \"^[a-zA-Z]+$\"\n        val pattern24 = \"^[a-zA-Z]+$\"\n        val pattern25\
    \ = \"^[a-zA-Z]+$\"\n        val pattern26 = \"^[a-zA-Z]+$\"\n        val pattern27\
    \ = \"^[a-zA-Z]+$\"\n        val pattern28 = \"^[a-zA-Z]+$\"\n        val pattern29\
    \ = \"^[a-zA-Z]+$\"\n        val pattern30 = \"^[a-zA-Z]+$\"\n        val pattern31\
    \ = \"^[a-zA-Z]+$\"\n        val pattern32 = \"^[a-zA-Z]+$\"\n        val pattern33\
    \ = \"^[a-zA-Z]+$\"\n        val pattern34 = \"^[a-zA-Z]+$\"\n        val pattern35\
    \ = \"^[a-zA-Z]+$\"\n        val pattern36 = \"^[a-zA-Z]+$\"\n        val pattern37\
    \ = \"^[a-zA-Z]+$\"\n        val pattern38 = \"^[a-zA-Z]+$\"\n        val pattern39\
    \ = \"^[a-zA-Z]+$\"\n        val pattern40 = \"^[a-zA-Z]+$\"\n        val pattern41\
    \ = \"^[a-zA-Z]+$\"\n        val pattern42 = \"^[a-zA-Z]+$\"\n        val pattern43\
    \ = \"^[a-zA-Z]+$\"\n        val pattern44 = \"^[a-zA-Z]+$\"\n        val pattern45\
    \ = \"^[a-zA-Z]+$\"\n        val pattern46 = \"^[a-zA-Z]+$\"\n        val pattern47\
    \ = \"^[a-zA-Z]+$\"\n        val pattern48 = \"^[a-zA-Z]+$\"\n        val pattern49\
    \ = \"^[a-zA-Z]+$\"\n        val pattern", "        var valid = file_name match\
    \ {\n            case \"\" => \"No\"\n            case _ => {\n              \
    \  val dotIndex = file_name.indexOf(\".\");\n                if (dotIndex == -1)\
    \ \"No\"\n                else {\n                    val firstLetter = file_name.charAt(0);\n\
    \                    val lastLetter = file_name.charAt(file_name.length - 1);\n\
    \                    if (firstLetter < 'a' || firstLetter > 'z') \"No\"\n    \
    \                else if (lastLetter < 'a' || lastLetter > 'z') \"No\"\n     \
    \               else if (firstLetter < 'A' || firstLetter > 'Z') \"No\"\n    \
    \                else if (lastLetter < 'A' || lastLetter > 'Z') \"No\"\n     \
    \               else file_name.substring(0,dotIndex) match {\n               \
    \         case \"txt\" | \"exe\" | \"dll\" => \"Yes\"\n                      \
    \  case _ => \"No\"\n                    }\n                }\n            }\n\
    \        }\n        valid", "        var file_name = file_name\n        var valid\
    \ = \"No\"\n        if (file_name.contains(\".\")) {\n            val file_name\
    \ = file_name.substring(0,file_name.indexOf(\".\"))\n            var i = 0\n \
    \           while (i < file_name.length) {\n                if (file_name(i).isDigit)\
    \ {\n                    val digit = file_name(i)\n                    if (digit\
    \ < '0' || digit > '9') {\n                        valid = \"No\"\n          \
    \              break\n                    }\n                }\n             \
    \   i += 1\n            }\n        }\n        if (valid == \"No\") {\n       \
    \     val file_name = file_name.substring(0,file_name.indexOf(\".\"))\n      \
    \      var i = 0\n            while (i < file_name.length) {\n               \
    \ if (file_name(i).isLetter) {\n                    val letter = file_name(i)\n\
    \                    if (letter != 'a' && letter != 'A' && letter != 'z' && letter\
    \ != 'Z') {\n                        valid = \"No\"\n                        break\n\
    \                    }\n                }\n                i += 1\n          \
    \  }\n        }\n        if (valid == \"No\") {\n            val file_name = file_name.substring(0,file_name.indexOf(\"\
    .\"))\n            var i = 0\n            while (i < file_name.length) {\n   \
    \             if (file_name(i) != '0' && file_name(i) != '1' && file_name(i) !=\
    \ '2' && file_name(i) != '3' && file_name(i) != '4' && file_name(i) != '5' &&\
    \ file_name(i) != '6' && file_name(i) != '7' && file_name(i) != '8' && file_name(i)\
    \ != '9') {\n                    valid = \"No\"\n                    break\n \
    \               }\n                i += 1\n            }\n        }\n        if\
    \ (valid == \"No\") {\n            val file_name = file_name.substring(0,file_name.indexOf(\"\
    .\"))\n            var i = 0\n            while (i < file_name.length) {\n   \
    \             if (file_name(i) != '.') {\n                    valid = \"No\"\n\
    \                    break\n                }\n                i += 1\n      \
    \      }\n        }\n        if (valid == \"No\") {\n            val file_name\
    \ = file_name.substring(0,file_name.indexOf(\".\"))\n            var i = 0\n \
    \           while (i < file_name.length) {\n                if (file_name(i) !=\
    \ 'a' && file_name(i) != 'A' && file_name(i) != 'z' && file_name(i) != 'Z') {\n\
    \                    valid = \"No\"\n                    break\n             \
    \   }\n                i += 1\n            }\n        }\n        if (valid ==\
    \ \"No\") {\n            val file_name = file_name.substring(0,file_name.indexOf(\"\
    .\"))\n            var i = 0\n            while (i < file_name.length) {\n   \
    \             if (file_name(i) != '0' && file_name(i) != '1' && file_name(i) !=\
    \ '2' && file_name(i) != '3' && file_name(i) != '4' && file_name(i) != '5' &&\
    \ file_name(i) != '6' && file_name(i) != '7' && file_name(i) != '8' && file_name(i)\
    \ != '9') {\n                    valid = \"No\"\n                    break\n \
    \               }\n                i += 1\n            }\n        }\n        if\
    \ (valid ", "        val fileName = file_name.split(\"\\\\.\").head\n        val\
    \ fileName = fileName.split(\"\\\\\").last\n        val fileName = fileName.split(\"\
    /\").last\n        val fileName = fileName.split(\"\\\\\").last\n        val fileName\
    \ = fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.split(\".\").last\n        val fileName = fileName.split(\"/\").last\n\
    \        val fileName = fileName.split(\"\\\\\").last\n        val fileName =\
    \ fileName.", "        val fileName = file_name.split(\"\\\\.\")\n        val\
    \ fileName = fileName(0)\n        val fileName = fileName.replaceAll(\"^\\\\D+\"\
    , \"\")\n        val fileName = fileName.replaceAll(\"\\\\D+$\", \"\")\n     \
    \   val fileName = fileName.replaceAll(\"^[a-zA-Z]+\", \"\")\n        val fileName\
    \ = fileName.replaceAll(\"[a-zA-Z]+$\", \"\")\n        if (fileName.matches(\"\
    ^[0-9]{3}$\") && fileName.contains(\".\") && fileName.substring(0, 1).matches(\"\
    ^[a-zA-Z]$\") && fileName.substring(fileName.indexOf(\".\") + 1).matches(\"^[txt|exe|dll]$\"\
    )) {\n            return \"Yes\"\n        }\n        else {\n            return\
    \ \"No\"\n        }", "        var file_name = file_name\n        val file_name\
    \ = file_name.trim\n        val file_name = file_name.replaceAll(\"\\\\s\", \"\
    \")\n        val file_name = file_name.replaceAll(\"\\\\W\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"^[a-zA-Z]\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9]\", \"\")\n        val file_name = file_name.replaceAll(\"[^0-9]\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^.\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z.]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9.]\", \"\")\n        val file_name = file_name.replaceAll(\"[^0-9.]\", \"\
    \")\n        val file_name = file_name.replaceAll(\"^.\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z.]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9.]\", \"\")\n        val file_name = file_name.replaceAll(\"[^0-9.]\", \"\
    \")\n        val file_name = file_name.replaceAll(\"^.\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z.]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9.]\", \"\")\n        val file_name = file_name.replaceAll(\"[^0-9.]\", \"\
    \")\n        val file_name = file_name.replaceAll(\"^.\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z.]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9.]\", \"\")\n        val file_name = file_name.replaceAll(\"[^0-9.]\", \"\
    \")\n        val file_name = file_name.replaceAll(\"^.\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z.]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9.]\", \"\")\n        val file_name = file_name.replaceAll(\"[^0-9.]\", \"\
    \")\n        val file_name = file_name.replaceAll(\"^.\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z.]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9.]\", \"\")\n        val file_name = file_name.replaceAll(\"[^0-9.]\", \"\
    \")\n        val file_name = file_name.replaceAll(\"^.\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z.]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9.]\", \"\")\n        val file_name = file_name.replaceAll(\"[^0-9.]\", \"\
    \")\n        val file_name = file_name.replaceAll(\"^.\", \"\")\n        val file_name\
    \ = file_name.replaceAll(\"[^a-zA-Z.]\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^[0-9.]\", \"\")\n        val file_name = file_name", "        val file_name =\
    \ file_name.trim\n        val dot_index = file_name.indexOf(\".\")\n        if\
    \ (dot_index == -1) {\n            \"No\"\n        } else {\n            val first_letter\
    \ = file_name.substring(0, dot_index)\n            val last_letter = file_name.substring(dot_index\
    \ + 1)\n            if (first_letter != \"a\" && first_letter != \"A\" && first_letter\
    \ != \"b\" && first_letter != \"B\" && first_letter != \"c\" && first_letter !=\
    \ \"C\" && first_letter != \"d\" && first_letter != \"D\" && first_letter != \"\
    e\" && first_letter != \"E\" && first_letter != \"f\" && first_letter != \"F\"\
    \ && first_letter != \"g\" && first_letter != \"G\" && first_letter != \"h\" &&\
    \ first_letter != \"H\" && first_letter != \"i\" && first_letter != \"I\" && first_letter\
    \ != \"j\" && first_letter != \"J\" && first_letter != \"k\" && first_letter !=\
    \ \"K\" && first_letter != \"l\" && first_letter != \"L\" && first_letter != \"\
    m\" && first_letter != \"M\" && first_letter != \"n\" && first_letter != \"N\"\
    \ && first_letter != \"o\" && first_letter != \"O\" && first_letter != \"p\" &&\
    \ first_letter != \"P\" && first_letter != \"q\" && first_letter != \"Q\" && first_letter\
    \ != \"r\" && first_letter != \"R\" && first_letter != \"s\" && first_letter !=\
    \ \"S\" && first_letter != \"t\" && first_letter != \"T\" && first_letter != \"\
    u\" && first_letter != \"U\" && first_letter != \"v\" && first_letter != \"V\"\
    \ && first_letter != \"w\" && first_letter != \"W\" && first_letter != \"x\" &&\
    \ first_letter != \"X\" && first_letter != \"y\" && first_letter != \"Y\" && first_letter\
    \ != \"z\" && first_letter != \"Z\") {\n                \"No\"\n            }\
    \ else {\n                if (last_letter != \"txt\" && last_letter != \"exe\"\
    \ && last_letter != \"dll\") {\n                    \"No\"\n                }\
    \ else {\n                    \"Yes\"\n                }\n            }\n    \
    \    }", "        val file_name = file_name.trim\n        val dotIndex = file_name.indexOf(\"\
    .\")\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val\
    \ firstChar = file_name.charAt(0)\n        val firstChar = if (firstChar == '_')\
    \ 'a' else 'A'\n        val firstChar = if (firstChar == '_') 'a' else 'A'\n \
    \       val firstChar = if (firstChar == '_') 'a' else 'A'\n        val firstChar\
    \ = if (firstChar == '_') 'a' else 'A'\n        val firstChar = if (firstChar\
    \ == '_') 'a' else 'A'\n        val firstChar = if (firstChar == '_') 'a' else\
    \ 'A'\n        val firstChar = if (firstChar == '_') 'a' else 'A'\n        val\
    \ firstChar = if (firstChar == '_') 'a' else 'A'\n        val firstChar = if (firstChar\
    \ == '_') 'a' else 'A'\n        val firstChar = if (firstChar == '_') 'a' else\
    \ 'A'\n        val firstChar = if (firstChar == '_') 'a' else 'A'\n        val\
    \ firstChar = if (firstChar == '_') 'a' else 'A'\n        val firstChar = if (firstChar\
    \ == '_') 'a' else 'A'\n        val firstChar = if (firstChar == '_') 'a' else\
    \ 'A'\n        val firstChar = if (firstChar == '_') 'a' else 'A'\n        val\
    \ firstChar = if (firstChar == '_') 'a' else 'A'\n        val firstChar = if (firstChar\
    \ == '_') 'a' else 'A'\n        val firstChar = if (firstChar == '_') 'a' else\
    \ 'A'\n        val firstChar = if (firstChar == '_') 'a' else 'A'\n        val\
    \ firstChar = if (firstChar == '_') 'a' else 'A'\n        val firstChar = if (firstChar\
    \ == '_') 'a' else 'A'\n        val firstChar = if (firstChar == '_') 'a' else\
    \ 'A'\n        val firstChar = if (firstChar == '_') 'a' else 'A'\n        val\
    \ firstChar = if (firstChar == '_') 'a' else 'A'\n        val firstChar = if (firstChar\
    \ == '_') 'a' else 'A'\n        val firstChar = if (firstChar == '_') 'a' else\
    \ 'A'\n        val ", "        val file_name = file_name.trim\n        val dotIndex\
    \ = file_name.indexOf(\".\")\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = ", "        val file_name =\
    \ file_name.trim\n        val dot_index = file_name.indexOf(\".\")\n        val\
    \ dot_index = dot_index + 1\n        val first_letter = file_name.charAt(0)\n\
    \        val letters = ('A'-'Z') ++ ('a'-'z')\n        if (dot_index == file_name.length\
    \ || first_letter != letters.head || \n            file_name.substring(dot_index).isEmpty)\
    \ {\n            \"No\"\n        } else {\n            \"Yes\"\n        }", " \
    \       val file_name = file_name.trim\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_ == '.').drop(1)\n\
    \        val file_name = file_name.dropWhile(_ == '.').drop(1)\n        val file_name\
    \ = file_name.dropWhile(_ == '.').drop(1)\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_ == '.').drop(1)\n\
    \        val file_name = file_name.dropWhile(_ == '.').drop(1)\n        val file_name\
    \ = file_name.dropWhile(_ == '.').drop(1)\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_ == '.').drop(1)\n\
    \        val file_name = file_name.dropWhile(_ == '.').drop(1)\n        val file_name\
    \ = file_name.dropWhile(_ == '.').drop(1)\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_ == '.').drop(1)\n\
    \        val file_name = file_name.dropWhile(_ == '.').drop(1)\n        val file_name\
    \ = file_name.dropWhile(_ == '.').drop(1)\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_ == '.').drop(1)\n\
    \        val file_name = file_name.dropWhile(_ == '.').drop(1)\n        val file_name\
    \ = file_name.dropWhile(_ == '.').drop(1)\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_ == '.').drop(1)\n\
    \        val file_name = file_name.dropWhile(_ == '.').drop(1)\n        val file_name\
    \ = file_name.dropWhile(_ == '.').drop(1)\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_ == '.').drop(1)\n\
    \        val file_name = file_name.dropWhile(_ == '.').drop(1)\n        val file_name\
    \ = file_name.dropWhile(_ == '.').drop(1)\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_ == '.').drop(1)\n\
    \        val file_name = file_name.dropWhile(_ == '.').drop(1)\n        val file_name\
    \ = file_name.dropWhile(_ == '.').drop(1)\n        val file_name = file_name.dropWhile(_\
    \ == '.').drop(1)\n        val file_name = file_name.dropWhile(_", "        val\
    \ file_name = file_name.trim\n        val file_name = file_name.substring(0, file_name.indexOf(\"\
    .\"))\n        val file_name = file_name.toUpperCase\n        val file_name =\
    \ file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\D\", \"\"\
    )\n        val file_name = file_name.replaceAll(\"^\\\\D\", \"\")\n        val\
    \ file_name = file_name.replaceAll(\"\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\
    ^\\\\D\", \"\")\n        val file_name = file_name.replaceAll(\"\\\\", "     \
    \   val file_name = file_name.trim\n        val dotIndex = file_name.indexOf(\"\
    .\") \n        val firstChar = file_name.charAt(0)\n        val lastChar = file_name.charAt(file_name.length-1)\n\
    \        val firstCharIsLetter = firstChar >= 'a' && firstChar <= 'z'\n      \
    \  val lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val firstCharIsDigit\
    \ = firstChar >= '0' && firstChar <= '9'\n        val lastCharIsDigit = lastChar\
    \ >= '0' && lastChar <= '9'\n        val firstCharIsNotEmpty = firstChar != \"\
    \"\n        val lastCharIsNotEmpty = lastChar != \"\"\n        val firstCharIsNotEmptyAndNotFirstChar\
    \ = firstCharIsNotEmpty && firstChar != firstChar\n        val lastCharIsNotEmptyAndNotLastChar\
    \ = lastCharIsNotEmpty && lastChar != lastChar\n        val firstCharIsNotEmptyAndNotFirstCharAndNotLastChar\
    \ = firstCharIsNotEmpty && firstChar != firstChar && lastChar != lastChar\n  \
    \      val firstCharIsNotEmptyAndNotFirstCharAndNotLastCharAndNotDot = firstCharIsNotEmpty\
    \ && firstChar != firstChar && lastChar != lastChar && dotIndex != -1\n      \
    \  val firstCharIsNotEmptyAndNotFirstCharAndNotLastCharAndNotDotAndNotDot = firstCharIsNotEmpty\
    \ && firstChar != firstChar && lastChar != lastChar && dotIndex != -1 && dotIndex\
    \ != file_name.length-1\n        val firstCharIsNotEmptyAndNotFirstCharAndNotLastCharAndNotDotAndNotDotAndNotDot\
    \ = firstCharIsNotEmpty && firstChar != firstChar && lastChar != lastChar && dotIndex\
    \ != -1 && dotIndex != file_name.length-1 && dotIndex != file_name.length-2\n\
    \        val firstCharIsNotEmptyAndNotFirstCharAndNotLastCharAndNotDotAndNotDotAndNotDotAndNotDot\
    \ = firstCharIsNotEmpty && firstChar != firstChar && lastChar != lastChar && dotIndex\
    \ != -1 && dotIndex != file_name.length-1 && dotIndex != file_name.length-2 &&\
    \ dotIndex != file_name.length-3\n        val firstCharIsNotEmptyAndNotFirstCharAndNotLastCharAndNotDotAndNotDotAndNotDotAnd",
  "        val pattern = \"^[0-9]{3}\\\\.[a-zA-Z]+$\"\n        val pattern2 = \"^[a-zA-Z]+\\\
    \\.[a-zA-Z]+$\"\n        val pattern3 = \"^[a-zA-Z]+$\"\n        val pattern4\
    \ = \"^[a-zA-Z]+$\"\n        val pattern5 = \"^[a-zA-Z]+$\"\n        val pattern6\
    \ = \"^[a-zA-Z]+$\"\n        val pattern7 = \"^[a-zA-Z]+$\"\n        val pattern8\
    \ = \"^[a-zA-Z]+$\"\n        val pattern9 = \"^[a-zA-Z]+$\"\n        val pattern10\
    \ = \"^[a-zA-Z]+$\"\n        val pattern11 = \"^[a-zA-Z]+$\"\n        val pattern12\
    \ = \"^[a-zA-Z]+$\"\n        val pattern13 = \"^[a-zA-Z]+$\"\n        val pattern14\
    \ = \"^[a-zA-Z]+$\"\n        val pattern15 = \"^[a-zA-Z]+$\"\n        val pattern16\
    \ = \"^[a-zA-Z]+$\"\n        val pattern17 = \"^[a-zA-Z]+$\"\n        val pattern18\
    \ = \"^[a-zA-Z]+$\"\n        val pattern19 = \"^[a-zA-Z]+$\"\n        val pattern20\
    \ = \"^[a-zA-Z]+$\"\n        val pattern21 = \"^[a-zA-Z]+$\"\n        val pattern22\
    \ = \"^[a-zA-Z]+$\"\n        val pattern23 = \"^[a-zA-Z]+$\"\n        val pattern24\
    \ = \"^[a-zA-Z]+$\"\n        val pattern25 = \"^[a-zA-Z]+$\"\n        val pattern26\
    \ = \"^[a-zA-Z]+$\"\n        val pattern27 = \"^[a-zA-Z]+$\"\n        val pattern28\
    \ = \"^[a-zA-Z]+$\"\n        val pattern29 = \"^[a-zA-Z]+$\"\n        val pattern30\
    \ = \"^[a-zA-Z]+$\"\n        val pattern31 = \"^[a-zA-Z]+$\"\n        val pattern32\
    \ = \"^[a-zA-Z]+$\"\n        val pattern33 = \"^[a-zA-Z]+$\"\n        val pattern34\
    \ = \"^[a-zA-Z]+$\"\n        val pattern35 = \"^[a-zA-Z]+$\"\n        val pattern36\
    \ = \"^[a-zA-Z]+$\"\n        val pattern37 = \"^[a-zA-Z]+$\"\n        val pattern38\
    \ = \"^[a-zA-Z]+$\"\n        val pattern39 = \"^[a-zA-Z]+$\"\n        val pattern40\
    \ = \"^[a-zA-Z]+$\"\n        val pattern41 = \"^[a-zA-Z]+$\"\n        val pattern42\
    \ = \"^[a-zA-Z]+$\"\n        val pattern43 = \"^[a-zA-Z]+$\"\n        val pattern44\
    \ = \"^[a-zA-Z]+$\"\n        val pattern45 = \"^[a-zA-Z]+$\"\n        val pattern46\
    \ = \"^[a-zA-Z]+$\"\n        val pattern47 = \"^[a-zA-Z]+$\"\n        val pattern48\
    \ = \"^[a-zA-Z]+$\"\n        val pattern49 = \"^[a-zA-Z]+$\"\n        val pattern50\
    \ = \"^[a-zA-Z]+$\"\n        val pattern", "        val file_name = file_name.trim\n\
    \        if (file_name.length() <= 3) {\n            return \"No\"\n        }\n\
    \        if (file_name.indexOf('.') != -1) {\n            if (file_name.substring(0,\
    \ 1).isEmpty) {\n                return \"No\"\n            }\n            if\
    \ (file_name.substring(0, 1) != 'a' && file_name.substring(0, 1) != 'A') {\n \
    \               return \"No\"\n            }\n            if (file_name.substring(file_name.lastIndexOf('.')\
    \ + 1).length() != 4) {\n                return \"No\"\n            }\n      \
    \  }\n        if (file_name.substring(0, 1) != 'a' && file_name.substring(0, 1)\
    \ != 'A') {\n            return \"No\"\n        }\n        if (file_name.substring(file_name.lastIndexOf('.')\
    \ + 1).contains(\"txt\") || \n            file_name.substring(file_name.lastIndexOf('.')\
    \ + 1).contains(\"exe\") || \n            file_name.substring(file_name.lastIndexOf('.')\
    \ + 1).contains(\"dll\")) {\n            return \"Yes\"\n        }\n        return\
    \ \"No\"", "        var flag = false\n        var dotPos = file_name.indexOf(\"\
    .\")\n        var dotPos2 = file_name.indexOf(\".\", dotPos + 1)\n        var\
    \ dotPos3 = file_name.indexOf(\".\", dotPos + 2)\n        var dotPos4 = file_name.indexOf(\"\
    .\", dotPos + 3)\n        var dotPos5 = file_name.indexOf(\".\", dotPos + 4)\n\
    \        var dotPos6 = file_name.indexOf(\".\", dotPos + 5)\n        var dotPos7\
    \ = file_name.indexOf(\".\", dotPos + 6)\n        var dotPos8 = file_name.indexOf(\"\
    .\", dotPos + 7)\n        var dotPos9 = file_name.indexOf(\".\", dotPos + 8)\n\
    \        var dotPos10 = file_name.indexOf(\".\", dotPos + 9)\n        var dotPos11\
    \ = file_name.indexOf(\".\", dotPos + 10)\n        var dotPos12 = file_name.indexOf(\"\
    .\", dotPos + 11)\n        var dotPos13 = file_name.indexOf(\".\", dotPos + 12)\n\
    \        var dotPos14 = file_name.indexOf(\".\", dotPos + 13)\n        var dotPos15\
    \ = file_name.indexOf(\".\", dotPos + 14)\n        var dotPos16 = file_name.indexOf(\"\
    .\", dotPos + 15)\n        var dotPos17 = file_name.indexOf(\".\", dotPos + 16)\n\
    \        var dotPos18 = file_name.indexOf(\".\", dotPos + 17)\n        var dotPos19\
    \ = file_name.indexOf(\".\", dotPos + 18)\n        var dotPos20 = file_name.indexOf(\"\
    .\", dotPos + 19)\n        var dotPos21 = file_name.indexOf(\".\", dotPos + 20)\n\
    \        var dotPos22 = file_name.indexOf(\".\", dotPos + 21)\n        var dotPos23\
    \ = file_name.indexOf(\".\", dotPos + 22)\n        var dotPos24 = file_name.indexOf(\"\
    .\", dotPos + 23)\n        var dotPos25 = file_name.indexOf(\".\", dotPos + 24)\n\
    \        var dotPos26 = file_name.indexOf(\".\", dotPos + 25)\n        var dotPos27\
    \ = file_name.indexOf(\".\", dotPos + 26)\n        var dotPos28 = file_name.indexOf(\"\
    .\", dotPos + 27)\n        var dotPos29 = file_name.indexOf(\".\", dotPos + 28)\n\
    \        var dotPos30 = file_name.indexOf(\".\", dotPos + 29)\n        var dotPos31\
    \ = file_name.indexOf(\".\", dotPos + 30)\n        var dotPos32 = file_name.indexOf(\"\
    .\", dotPos + 31)\n        var dotPos33 = file_name.indexOf(\".\", dotPos + 32)\n\
    \        var dotPos34 = file_name.indexOf(\".\", dotPos + 33)\n        var dotPos35\
    \ = file_name.", "        val pattern = \"^[0-9]{3}\\.[a-zA-Z0-9]+$\"\n      \
    \  val pattern1 = \"^[a-zA-Z][a-zA-Z0-9]+$\"\n        val pattern2 = \"^[a-zA-Z][a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+$\"\n        val pattern3 = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+$\"\n        val pattern4 = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\n        val pattern5 = \"^[a-zA-Z][a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\n        val pattern6\
    \ = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+$\"\n        val pattern7 = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\n\
    \        val pattern8 = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\n\
    \        val pattern9 = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\
    \n        val pattern10 = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+$\"\n        val pattern11 = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\n        val pattern12 = \"^[a-zA-Z][a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\n\
    \        val pattern13 = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\\
    .[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\n        val pattern14\
    \ = \"^[a-zA-Z][a-zA-Z0-9]+\\.[a-zA-Z0-9]+\\.[a-zA-Z", "        val pattern =\
    \ \"^[0-9]{1,3}\\.[a-zA-Z]+$\"\n        val pattern2 = \"^[a-zA-Z]+\\.[a-zA-Z]+$\"\
    \n        val pattern3 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val\
    \ pattern4 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val\
    \ pattern5 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n\
    \        val pattern6 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+$\"\n        val pattern7 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val pattern8 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n  \
    \      val pattern9 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val pattern10 = \"\
    ^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val pattern11 = \"^[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val pattern12 = \"^[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val pattern13 = \"\
    ^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n  \
    \      val pattern14 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+$\"\n        val pattern15 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+$\"\n  \
    \      val pattern16 = \"^[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\.[a-zA-Z]+\\\
    .[a-zA-Z]+", "        var valid = true \n        val file_name = file_name.trim\n\
    \        val dotIndex = file_name.indexOf(\".\")\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex\
    \ == -1) -1 else dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else\
    \ dotIndex\n        val dotIndex = if (dotIndex == -1) -1 else dotIndex\n    \
    \    val dotIndex = if (dotIndex == -1) -1 else dotIndex\n        val dotIndex\
    \ = if (dotIndex == -1) -1 else dotIndex"]
stop_tokens:
- "\n    }\n"
